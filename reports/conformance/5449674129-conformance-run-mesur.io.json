{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b26b126e-ecdd-40a2-bddf-eb5d33460f74",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d8433f20-8ec8-4790-a9f7-2bd655bcc903",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e601534-300b-4a8b-b63c-61f161f91bb3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "74cdfd1f-d9bd-45b5-9b5f-a5fc5c85ab8c"
                }
              }
            ]
          },
          {
            "id": "f3501fc7-a893-427b-a5b3-c50117e550e7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba483e66-c79a-49ca-8ba1-6162a3caaf33",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0cec3262-7dda-447e-96d3-3679de3529a3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0789a236-4968-4578-b798-160ca84ae851",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "84932544-c19b-443f-a184-0eb4538eb886",
            "name": "Positive Testing",
            "item": [
              {
                "id": "062cf98d-9022-48c8-8e94-254937a368d6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ca4a92a-e5a2-49db-8690-404bddaf8a91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94ffe8c7-61c4-4d6d-8dee-75a558201501"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07fb3d8c-b0aa-4067-9153-94492b58f196",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6bac02a-4bd9-4e6c-8033-af9482f0bcab"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "29da556d-f9b4-4157-a36d-b366bca87ed8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0711d97-38b6-42b9-ae7b-6c45c2af24f3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8e77f0b-4b58-46a9-a5f5-33dc3e89217a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3a9c0359-0f34-45e0-8de6-7afc874927f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ab1e6ca-de7a-430c-afd0-a97221da7c68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b2508a7-57ea-4de2-8775-0fc0da64dbb8"
            }
          }
        ]
      },
      {
        "id": "ff214ab7-27f2-4459-bcf4-25b99ff3a84f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8e935ace-7433-48d7-9dce-ab4a381377f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dafb50c8-11c7-4d86-b93a-c1a494f5121b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2c239f41-6c94-4ddc-b315-dab734e60564",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa07195-ce28-4e8d-9d22-5351873f8f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3481f97b-28c6-464d-a193-ce3b8ac4a4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc555f51-aab4-4e7e-8248-5d6ffed6fb0f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3f1412-3def-40c7-8d31-45f076e13533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18342392-edd2-49ba-8cc4-cfbcebf378ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc8e038-9fd6-43ca-ba3f-08521fc3dc2b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4322b1e6-056e-4486-ab35-e0e6a0b5cc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b344fb6-0aeb-495f-a739-d96d65c1a9d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e0df2d41-50ec-4cb0-a544-7d99eebb9373",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3d6db2d-059c-4c5c-98b5-bafe7bfd32a7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5b072d-a4e5-40a0-afb6-6ef67511eed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74a6949b-eaaf-4f23-9bdd-1ccc83b74f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409f47e9-de67-49ac-a740-74561e1a13c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe62bf9-3205-4c2c-963d-614e6c0ad0f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e40a8960-a73e-4265-881b-30cd320e53ff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "09cb8929-bec2-4cc5-b0d9-1b92d3df05e6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b21054d-fa8a-4581-9b92-2a05118805bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bda257b9-3a2f-49be-b24b-f3825e04eca9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b53cb4bf-6838-41aa-88c5-115d955681fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c4b516af-eda5-4543-93aa-0a50b27d68ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12e5306e-4956-498a-8ffd-50f699a995cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21de215d-abf8-4b56-a36c-a21ce03e404a"
            }
          }
        ]
      },
      {
        "id": "64c97a09-5565-46cc-9bf8-848c69f1bb95",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bcdce59f-3abb-4d79-95fc-d61a1ba32f9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ecbb572-af5e-44af-ac37-ee9326f55b08",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "60282171-0062-4830-b60d-3c88533bad8d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11181f28-bed7-4941-93b6-48cd8bbf36a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38bc8d2-30ba-4e77-878a-650774c931dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f079c3-9196-4c9a-8d35-0a937d628051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb0a3c73-92af-4342-ae1a-ee506d46cf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2887e87-4238-4087-be1f-fa20acf36417",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653e58d6-faa8-4a82-8968-c9bdbae1c408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ad3087-7e24-41ff-a6a3-2d29886a157a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637f9fae-32f5-48a7-b243-ee8e04ab462d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed395a44-065b-4b26-a309-bb1f7a0cc594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501cd5b7-57e7-48f1-819b-6384d023b8f5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5530f3db-54e3-4390-a7ba-610c0b1b0c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e34ccc9-9ef0-4fb0-b629-5db5f2f242ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b97d5fa-b3ae-40b4-98cb-1b5bf60a1e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9729d244-2144-4289-ba46-88b6cf8c2fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b247fc-66e6-46e2-9621-34bfeec2610c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3628aa-dfd0-49b8-8632-31acdfcaa5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4699ee8-b3e3-42bd-955c-c1a2c4274fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789b9118-7f5a-423b-872f-f30be61a6f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6083fa43-aaf6-4680-9d7d-71d0a5326c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ed703d-5240-4fc3-ab56-85420422aaba",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3837b5fc-9068-4105-aca7-e5e14eed1c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4219cc73-991f-4d49-9438-d77350b9f44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f38151f-4082-4c3e-8d42-9d6f24168b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8493d106-5187-48b9-a48a-b14d84c18611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a368f979-27f3-4c34-bdd8-83b5bc35f1de",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4e9c75-0a7a-43e8-bd4a-165bb3c94aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679d2c5f-e07c-493d-a5b5-03049b311887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1040c5-4a7c-4029-812c-dba8c2e43b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7e55917-68c0-44ce-b534-b053b3c20fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f4919c-b9f2-48e8-8d07-bf8732dd2dd3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec18393-c450-4a74-bfaa-678ff4998472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f4eea4-9928-46ac-9b86-c4f05802b8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eac7f35-bcdb-46f7-af44-9293ca43ced0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6372717f-9750-4734-a452-f3f8f7625168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6c14da-abde-44fe-9f4c-1ca076d32e7a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86466316-2994-4b7e-9ee1-ab4742c3a24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a84e504-1be3-4170-9e67-56506f7fa094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71f149a-3fea-44b4-bf60-15e515f659f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb53f2ad-9f43-4e7a-ba93-c33565242979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a5085c-5cd6-401c-a6e3-f1a39d70facd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1593f035-8299-4834-855b-eef09fc93bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7392de14-0cd2-454c-bf10-f0b4f153ead5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8a92b2-d80b-400f-91ba-a113a81ac2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc26fa4b-e033-491c-8b7e-eff2f34067fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019e6ffa-78b2-46c9-b4c9-385b9b4c924e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f92979-7fe6-492f-b315-c877918f5474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67659f94-9713-4138-83e6-d3f5e50ea16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4052876d-a45c-4dc2-bf94-f0563af3b7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35df6f28-0657-49d0-b889-44e363e8dbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d572078e-ee7d-4105-9521-dca895a39000",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48676c2b-3f5e-4327-aa37-79152cb5d244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31da0551-52c2-4e3f-8ea9-592c34f162d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a1a565-e201-43c0-8854-f09cf0cfd42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fe1a85d-f30f-4c31-b0f1-9082f29408d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def1c977-1fcf-4134-aacd-743b984a88d0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8f7d64-dda8-4682-a0be-aedc2e75cecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecaa04f-f5d9-4735-985b-fee1e1d6c21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1f32a4-fe4a-481a-a332-508cc01e1027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83d1177b-50a9-41ab-b8d6-ae898f25e6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634d25aa-ee30-4122-8a81-5bc5b05441cb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaceae9-3de9-498f-9857-14398ab65292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8523f7-257c-4c64-a1b8-a40d179fcc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737c217d-1b2c-4513-91b1-5657cb5eb51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "beb46ddb-c9da-4af5-96e3-6c7c1dbbe2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224bf435-3bc2-4e52-a3b0-17346db698b3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006b3f38-d05a-4cbd-93ed-e667c9487284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67f9381-2b28-4de6-a1ce-12716dc6edad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d607ac-a2cd-46da-a6f2-2b385f802970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d1dba0e-e6c9-4c34-9511-fe2c64d9c149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df31bfc7-745c-476a-9c0f-df08b7785892",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6f4618-b63a-436e-87c5-b6fa198d011b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d259b6-8294-4dd0-ab22-6c3b600669f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44c1376-aba6-4422-82b0-4f9f8b49c2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c81e018-e142-4653-a242-b4196550fd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0d63aa-3142-4515-b072-3d32726cc21d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120a436f-4716-4a1d-b21d-c80ea45f6114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05bbe0b-96e6-41c3-9ce3-56112cf51111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe69f91-1061-4b66-8cbf-704b4a69f359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51fca2d1-59c5-4d3b-9699-a95cb49f493a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6572339f-874d-44df-9883-ce60ed7e5439",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d11e2dd-fe63-4bd0-b75c-f73db0326990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e97356-323a-4631-836d-0d70f65d6d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669c5502-e719-47b7-90d8-49dd61d3cad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7a8fb53-95af-44a9-8c90-6cdfe7202d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0f6966-ece3-41d2-895e-15b4dc052014",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619147fd-4cf2-43d8-b477-7f2692bc791a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c731de9-37f5-4b39-bbea-204995feca2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcd8206-e1c4-409d-aa40-18f43361af0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "09fb342e-6246-42d4-82dc-b2b63d44b0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef07c81-53d7-4105-91b7-f76d05e36c64",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16bb360-10c0-4e26-9daa-128f4fdc74d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b30c8d-f175-4edf-8b3f-e5d3b9092d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9253c7ce-bb10-44d7-bf81-f87f8f53438d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee81d05-588e-4fb4-a3c2-d5f8846fa41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e59aac5-b486-4efd-8b42-2e4a4b1db374",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805197df-1fc7-4d2a-a4de-025d3cebc35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7395e502-6b66-4ac9-9820-a788772f35d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5980f2f3-9187-4251-9afa-0a3e3f2a5882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dcef4ed-a91d-4c41-bbab-bb6903641c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc86f21-ea7a-4713-afba-bafd0282f06d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de8b396-8b18-4e34-bbae-e214fa999fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a8dea5-b7fc-4db2-8214-1a868f4e769b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2d37ec-95d6-46c2-b0dc-e7c2af56236a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d861ca5-6ef9-425d-ac3a-c372a262e548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b8b9bc-11d2-45f6-9716-eeea814191bb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f7bbac-64b6-46dd-9702-6061f62697d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80694d3a-8d83-4bc5-9b8a-c11c4bdda23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d7328e-f791-41cc-a904-d81f85aed43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbf76f9-cb21-4fc6-8e81-d115d96b0c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c79415c-c0ec-40a5-8e69-8bf44c188377",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9982606-4975-437a-8807-f65baceb8577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be3a6c8-3bdd-45b6-b092-143242f97eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8fb539-4980-477a-a6b8-d6470ba7e0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "896c4f59-26b8-47c2-95f0-0f9d0e5a7aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b2762d-ef45-4cd1-aa9a-eca09bf214ea",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5674548e-5da1-44bb-a396-8401ba2469c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2bb1fc-f6e4-45b0-bf0c-92bdf1df1035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9960c8e-cab8-4da5-af10-91d9acb3938f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0818fa9-12d5-4230-a23c-a0813807d753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1625f999-2d6d-4aeb-9b96-fce96f5b50b3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ac8cd8-b1d3-436a-abf0-35639b3faa1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a11347-7335-4462-baf9-cfbbdcf6407c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137de287-5535-4c40-a2b1-649dcd28f192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84898a5d-e5e4-4403-8ba0-02d5cd2a0969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef185d16-188b-4318-90a0-9ed9e069a2e3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca733997-2b96-4250-b104-ff187353c405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6f206e-c158-4147-a94d-ff01acebb628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149f9aad-4f0b-4cdb-a190-94a30ca80ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05c0278d-7108-4af4-a156-438afd84b8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6a2221-49b2-4a2a-aa04-33673585e767",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a9e1c6-edb1-46ab-a83a-ba02505797a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152aae32-abe9-4c2f-8b5d-41e19d2b9c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab6c408-6a17-442b-b285-a7486208bffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ce42a3-3c39-475d-a352-83f80bebc207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37df0757-94f7-4c93-9740-e63aa9c400b1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59776fe2-52b6-4aa7-9e7e-a6074a91b085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4d07e4-f43f-4ad3-9427-673099c99048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a336fee-a6b6-4b5d-9375-8c1e83dbbf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38e7b2b2-2da2-482c-9638-945c57e80ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7194e02-6b3e-48fe-b1f9-726b2bcba96d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06640e2-1d07-4997-8ea8-a1d9cc2643bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a614e19-8783-4552-ad71-2e3ef16814f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06998ac-09aa-4e8a-bcb4-7e3949a93205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2debb50c-905e-482e-a544-03d797f314dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e9e00c-609c-426b-af55-6ef3b8e95a17",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bc5890-8f35-448b-a9d0-c8ad0a5413d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964e04f9-e587-4346-9006-13abe6ce56d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0832cfc4-564c-41f4-b00b-99270e59d529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "08f35f45-0546-4669-bd54-f71e8c1c410d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777addc8-a4d8-4336-b810-0f7da7bb4407",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d0f5ad-5320-4bbe-9cf2-e5309566ea54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf0b595-774e-4ce3-bbcf-a18202a8f720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b26a66-a0a3-48e0-a6d7-7619b3f94d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f13f82a-63ad-4487-8faa-dfa1f6525251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daef601c-1158-4e3b-abea-da3ac701b0c8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1322156-3fc9-4037-92bd-b62cfde79d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5032ba9-cb8d-48ed-acc7-46435816734c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5749e6-41c6-4308-9c87-8f2e4b89a640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "817785ef-bfc8-40e0-8552-fbff9455c32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8a1163-4026-4aca-89e5-f1d4e313b8ac",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f48b8c-bd85-4190-b4c8-d2ab6a21e45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb94fbb-4905-4117-9054-1e193815a9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f1d066-08a5-495e-a87a-2fe389d23dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "298fd8be-cc78-4f8e-a25a-e3ac1c9090a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ec5fd4-35e6-49f8-a996-2aa4911487bd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d32e276-c5be-49d6-9694-c6b8e1f479ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c219d43-713b-4531-a161-003f39269c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fbed81-ef89-49d7-82d8-aac17b3185ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76e1278d-5ea0-43ad-8c67-abd220a7bf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b2cf72-fd94-4777-80c0-17250998ea26",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ed06e8-1a3d-4a9f-a919-4bd20210bf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4c33a9-736c-4d62-b41b-a046a0227228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4a4465-cc8d-4e64-b8a1-5cc2f06183e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c5cfafb0-a908-4119-a5a4-c32b9c6e19e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3bf411-fee8-41df-88e7-4003e09f3a63",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1094f3-c77d-4ae0-8a20-6f81e56e9777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72fa6426-9edd-487b-afb0-2309db580484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5b8503-3371-4471-8ffb-d172f5cc1147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0989ecb-2625-42f8-af5e-c2014406f86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924c982e-b6a9-4c6e-8164-169afa807b60",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ae6bac-15b7-4eda-93c2-4851480231b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53122e02-b886-4944-b3eb-e02aff8cddb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43dec5b-bad5-4610-ae7f-22c3af48ca65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc05b538-3882-4fa9-8352-f1d594f4e63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfd6d08-2376-4209-9c78-fe63eca4054c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab8910b-8e59-4c57-89f6-7d15795d61b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4c8c62-3242-42e6-8377-50b1e6c69e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e6b08c-3f84-4104-8cb3-e019efe87163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2043c77b-2202-4fed-832d-fdade60061a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50fbfe8-a710-4d77-85b3-7ec77339484f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c862a8-3077-4e22-8440-07183907d54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e7bd7a-19d4-490a-b98d-0ac4a102aa22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e2c950-9121-4dc5-a4d3-1360bdf4b2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "73ed41d1-b28c-4d43-b89c-5c14845df861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e589f31-a6a7-4572-9a89-2eefe38d98b3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8dc5195-8213-4cdc-8dda-9bfb733d888b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd168dc-e0b2-4d46-a832-ba38eddb7781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9486f315-def8-437f-85c8-8374d9ce7400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc90782-1308-45cc-88f1-1523a1a72bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e00a0a0-90a6-42d3-be4e-32338349c27d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0173d2e9-b26d-46f0-9930-ba66b341c32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733be662-d507-4bba-9ec8-35fda8a666ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddf4bde-7d02-48b8-bf1e-7294529384d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e16b8d45-29ab-4e23-8890-9b7e1bbf89b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e8f071-45b8-4f30-80c4-9e4aedc428a8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa14146-f617-4807-b23b-a98d3d8676d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62efcc0-019e-4b04-90df-f9408d1f74b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59923b10-0ae4-4cf0-92a6-89b79f43babc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "73888afd-967a-4cad-9e22-8e392d66289f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8572508-6884-495b-bdd9-7b848090d1a4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412e268f-e06f-421c-8545-4872356386aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e960ea7-0528-4393-addd-41e9caf16127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a815d2-16fb-47b7-959b-5716f091509f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc076248-5f47-4730-8fa3-33486dd2d738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4127f7-1fc2-40a6-9b9f-71edb24ab9c1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ecf8da-aee5-44c8-a7ff-00260158a140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec66bb45-c5b3-4293-8e7b-85a8eb62c67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d5ef3d-044c-44ea-97cc-c76ba53dcc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b78097-172e-473e-9d36-d85ff7ce6100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c8a6e4-a1b4-48a5-b93f-4a91ff1b7d4d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1adadc-4297-4565-9771-4dc3a99a03bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2153fd-d512-40bd-b677-7ea2b2e4ff6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54974048-7895-4d74-908f-7b81b8bfc2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7a68e2-6a10-46c1-90e5-54e082694b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1efb595-f582-4971-9819-84dbdb543f03",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d531c025-fc7a-410b-8453-3c074b5bd4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab55c86-f0ee-4e6a-b399-527f4e3aa928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db48411-1afd-409c-9b57-2a350eb5df33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "faac04d5-8ac3-4a4e-b31d-a2880fba1677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16100e67-8acb-44ef-96f2-4fda1b046de3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a45c09-8adf-42ea-b18a-fe893bd95d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6961217f-955c-45ee-ba1e-195b06209d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc7ff53-25d6-4672-ba03-e621b163a342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49da4a07-76ac-4aa4-9c1e-77eb16b65a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3532eb63-9f20-4ed7-8edd-f4eae7d508ac",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc71f3e-8b69-4df8-8978-3dbb471b6fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7bc51fd-8686-4f4d-a045-29dfbb72f4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a9bc8d-0fa4-4d94-a2fb-ac386785ba34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a2644d-9280-4947-8887-2cae9572ea80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3566b72-ead9-4a49-8eb5-6caf73d2155e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7de2fe-1ea6-479b-8d25-71b2db886075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b973aace-da8e-4ace-8985-b88bd54edbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2e6658-39dd-49ee-b195-190f61fc9885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e03ef9c-ca28-433c-b0d0-7213ce5affd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17196bc9-3b5c-48c1-8454-549ac043712b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be7b73e-5118-44fb-8405-917d8b7940b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2a65d8-a26d-4cde-b245-449dfd5ff7e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0108d8e-38e9-478e-95a4-0d07127dd897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f42dabf7-1c48-46fa-8da1-3caa7ff4c8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b816cb-3a96-4916-8e70-e249b2261b96",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef007c8c-000d-4aca-9554-f131a57074ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9cb9a9-f93d-4beb-aea0-438418c6f58c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfda777-5553-4fea-8a0b-eb0e65469b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8095d027-f8a8-4155-b849-65d3defe45fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29abbe08-54ee-408f-9911-122a8347fca0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78a0820-eabd-4a60-9ace-f908904169ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb9fc64-bfbc-4f0b-8372-94c8bb1bd126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5f2e10-4b21-49a9-92bc-cdd316a78c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "88595304-52b4-4e98-a963-c6c35d474613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d705205-c3c6-452c-bc41-274ec638384d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111726ce-5e21-4e43-92d0-cb0874702e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9a2c48-ba28-4f03-a790-ffd7a2c8c2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371a6cdb-7c4c-4fb3-83a2-67cef5bfadaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b51d79-7829-425d-9513-bc78e31dbb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51789bc7-50d7-43ea-ac8f-47ba7563ce59",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474e98c8-871f-4e86-81e6-491d7ad64af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f8b8ba-7feb-4a28-9d70-3320a3ae86c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdcb22e-e8e5-42f3-af0a-1d673708548a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "119d6567-9c4b-4f08-a860-e6c9c3e64705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2dd495-29c8-4fed-87bb-41a32fa9ef42",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648e896f-8f38-4ece-920a-4c6244be88c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef6b092-87cb-4acb-aa1a-e9d3d07b2179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f865e9a-3d9e-4c93-a6d7-b9527a69832b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f390ee64-6f42-4dbe-ac46-94a339758f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee7ef59-9731-47d4-8b98-d37117a082ea",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8007c806-691f-41fd-b6aa-a41382acc3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3ed004-3979-4792-b180-8ba1612dafb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca6491e-e851-472b-aa1e-aeb3ff5144a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "298af84b-496c-46c6-9d3d-f39dc9b03a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab288a9-a6e2-4867-b066-5ab10bf6f8f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0aee32e-17d7-47ff-b459-b4d0510a3dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f29c5ec-6d41-43c1-b1c1-1b0dba651778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2512f2a9-e01b-4e46-8b9a-d1986ec8d5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1f1968-070c-455e-9d32-1c4f04f1244c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f5e780-2128-4b40-8427-28ef23de407a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adca56b-2a28-4bbf-a6ad-4fd187930a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec4f9a7-199d-4096-82aa-faffe3c69e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c59b97c-3a97-4f2e-8811-db1de4738ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6b6689-e60b-4457-9e44-d416053a82f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d485bb-370f-415f-a04f-9b250264421b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412a47be-0a43-42cb-8b0d-c8cf0273274b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10557d8c-2daa-466e-b2fb-9d78dbda41a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b2a4ba-4b24-4999-8a28-2df213fc9c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4eff5633-d971-43be-9985-3dc0c32414ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a33f5d3-d9cd-4895-a6e7-1a5cfbea30fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3011787c-9139-4691-927b-70b7236c2ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe07b8a-bbe1-4982-9601-32fecab43c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ce9aae-0a32-41d7-b7e0-dcd95f7f1600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6189cba3-637e-44c3-85e7-93ae1dc1b794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69010633-1b54-407a-8ad4-247be07d9205",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711e5f83-5ed5-4fa5-b8e9-cb6ff9a43eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318bfd9e-d9ab-4655-9926-29af15b4d5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32359ebb-720c-4d73-b1ad-cb445b90d0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0393b91-3387-4fb5-8005-d073eba21c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2dfd0e6-93a3-4fe7-a355-278a9640a187",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e7bb8a-897c-451b-92b1-3bfdc6ceb1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df62bf1-5298-41b8-a7d8-cf77d6cc2af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bdbe60-4a96-465c-a039-0f4c9f52e020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "082f8ce8-984d-4663-8a67-33550a18447f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32ddffe-be66-4218-be11-f2cf50958d98",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d417b1b7-2a9b-444e-8768-e8f2338f258a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d7c4c0-07bd-4b8f-a688-8a49704d4b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808e63ba-bfea-4952-b36a-c9f3b1dc9105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c07d608-2540-4768-919c-92f5e5649e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36a4328-4a6b-4fc4-836e-9d372d3b30bd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d79807d-7e8e-4f50-bb3c-d8134425b682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c19a97-2b22-499b-a31a-accbfbc514f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382b389e-be23-4844-8580-2bf17b4e14cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03b6c7f4-4ba1-4b56-9279-4f92a191d4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7acdbe4-03df-4f58-b696-4644f0b620bb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1715f8-be67-4791-9b84-a9d9344a04a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56af4ab8-af73-4454-bc3f-6a77f246bd22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8507c7d1-d5c7-4016-a44c-bd63d889bcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99d64960-c064-4e1f-a564-25acefb86286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e8f51d-9a6a-4bd0-955e-4f5376ddd326",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096492b5-f090-4eb1-904e-e78ac3442263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b03c22c-795a-422f-86df-d7e05e54d417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5bd77d-ac7d-4e78-9525-61f08610d80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02be5c87-b563-422a-8190-770e143bd9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310d1e32-a904-42cb-9f7f-c7e5deb19559",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0106acf-cb57-4593-a41f-74152baf697e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0e09d3-6011-4bc2-b187-4b1f978c4a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3492e16-765d-4238-922c-8888a3aedb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e42f715-6e60-4e7b-894d-8d4e73f81c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e50925-0504-4c62-850d-942c2f927d56",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f58565-b714-4380-ab0f-acc51ac70741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309b0918-e775-4461-998a-366ffb862c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb76057-2684-4a91-9062-5b0f803b6198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf776ed1-e362-4237-bee1-527cfe365703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea2b35d-24b0-46a9-bd4b-2b355ae31b88",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8230a99-35e4-4476-a9da-5271cd517b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f41afb-a101-4fce-a9bd-0ba50579e3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eddac83-1848-4ce0-acde-952fd48b4169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38909713-6835-47a3-a756-30bcbc99a8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01ea0b9-f54b-4ace-9789-c472dfb2a23e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adbe3e7-2653-4a9d-8dcd-a7d7e13022ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a14855-334b-4d80-b27b-7953890656a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d56a4cb-9e00-482b-b0dc-d63615811608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5f5c91-71f5-472e-ba2b-15f457a1a5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302d5ee9-091d-4ef1-95cf-9204d80b3944",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5e89a9-8ce6-4d52-b586-19858c139ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372f3359-df84-46cd-ad91-97b5b412d667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7144a20e-5dd5-4fbf-ac6f-71066fc1965d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9222d6ef-6113-4fcf-ae1c-8d179b113db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28a3ce5-a45e-495b-9958-dbb77ee87b99",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e80dd96-85d7-48bc-a6c4-5f32fc09616b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00137b48-97be-4ce3-8a77-743742d521c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac98e1b-ef03-40c4-944c-d30026243bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6e3b6a-7b46-4ea4-bb75-23b2c52b9769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa232901-60da-4a14-bb65-3c71a1f579e3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c80838-8833-4789-acfe-b33aa068901e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9a8073-70e9-453f-87aa-db683ea739a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1571c8a2-2f66-46ee-a4ab-333b5aa4385d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81d9576a-9300-4ae6-b4da-07488d16db66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f16f48-a618-41bc-b3e5-3420e35ea451",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8479d4f8-c073-4ffd-89d3-450c394507fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a98c470-c304-4c0d-95a0-ad12666d86e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce27e6a6-4fd8-45ba-be4e-37094c98528d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0c3aa7-dd4d-4422-ba2e-e375e12cc28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c09071-8f96-4f3a-8789-851c8227db6d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705b221b-7746-45cd-a843-5d6dca819cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3498ab36-8d46-445c-b21e-e9b02751bacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdc9ebe-fe1f-4a7c-bbcd-88fbffcdf886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "efde516a-f79e-4e4a-97b3-f3fd6a26a45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8459a264-85e1-4288-bb9a-09a72bab7649",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2350a31-faef-4bda-9169-a663bc447b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5843448f-e4c1-467b-80ee-f094970498c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60698ed0-ae8e-423e-a1d3-af893c8e4849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69746320-5b19-4178-a4e4-b0474e76fb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26dcef4-7d34-4454-b2e1-651eddd19152",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936c51ae-3bf2-4403-95aa-7f1b9f3dada4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798bc8eb-2b8e-4a8d-abf7-5008fc714d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad9d402-52cb-4848-bdfe-1e39f6b23385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e647e20b-99c9-46c2-a58c-47cc894dc0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3472f0cb-681d-4207-a647-a2e5abcaadc4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04efff87-98f7-49fe-a0dd-b97e4d136994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040ec5a9-2a01-4611-b4d2-29c362f64723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971a100e-c553-4716-a4f7-e8365b099997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba10e1ef-9cfd-4c02-ad4d-56493ceebc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbdadf3-dd43-4164-a7cb-43fa3daa5d0f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc53e2c-b2b9-4fb9-8930-27d97385330c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ee9616-c7b7-4c5a-b19c-e51f19191187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69531871-71a3-4a99-845d-eb412f0f54f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe68924-ef18-4eb3-adb5-483bcdcea411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7711054-350d-4340-aaac-75f9163d4b50",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c117d5cd-73a1-4035-8066-a23a3384e92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16b141f-9955-4130-abd2-df62064e7e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8c4e02-4721-43c4-839e-e2b8c116588d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f830842f-29e5-4ac7-93ec-af718552470a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f89b5f6-1dd7-4b95-a123-9eef2c72cff2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d64fde-c612-455b-96ed-79350e77bb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab556ee-f41c-4912-af48-0ed53ff4946e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a52e872-822c-4a47-9387-841d41be9b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "794f3b62-667d-4047-ab52-20cbe4b5e4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e572446-6644-4eb9-8b15-be5ac6e9f20f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933ca0c0-5d34-4afe-968c-85710c85b7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38a6246-be94-4867-ae28-69000aeaccca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244bab0b-fb50-46d9-a67c-47ab7764ae56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "805c36c4-4c82-4eb9-8d6a-1fb3faab4493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8919cf0-56ec-4bbd-b99f-361dd789f9f9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dc80b7-2180-49d5-9ff0-227bbd0923b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862ef3db-1196-4639-8da2-240eb7b181b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfca70e-1704-414e-94b4-c94be5775be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e746f8-1994-4d41-8c0e-fc2c67acf3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb997a3e-4acc-4cfa-9553-4eca8d92bf28",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3b75c2-535e-4605-b26f-224201e1ab5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f8e799-70f5-474e-b57a-5fb5a52b16f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618c7235-5745-40db-8231-7bd61c0579a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5830822-fe2a-45b2-a874-17ad30e83418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031a9013-c772-4545-b6e0-a8673da89e29",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3491246-a59f-4ff0-9e85-334d3d8b2bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f095f505-4ada-4c6d-816f-80f2d167c2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f8b4d8-9c8c-42e8-af85-bfe7da52b788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bacf5c8e-ddcf-4c1c-a731-3c8814b15a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94ae1cb-f1ea-40ba-8493-036691d9cd63",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124a59ee-da92-4d0d-97f4-d8d71f3b0ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e7ac2b-0436-4f38-9e9d-826387e7b582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b43fa8-3d01-4501-9b59-ec10aa961cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02755c79-26fb-43f3-bdb3-c8e8a3a0b27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd27b1a5-4007-41db-8efd-1f0f9e8a147b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a5eb69-16cc-4752-80d1-6ecb9dbab706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e06b6ea-cc01-4b38-8242-4ffde5316133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ad6c3b-2982-47ff-9689-961a410c1852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "29a8de45-e87c-436e-8709-2b3fb6d6feaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1beec862-bd4b-4234-bf8f-9fc592ff53c1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9542b71e-0af0-4f16-8b84-eeffa39ebe61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10d6ae9-0902-4063-8c44-95690993b335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6323a2-c2e0-4abf-bb83-6a4cf9de592e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "91203ced-decb-4746-8b13-a184ed447f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20226e1a-180f-442e-9fe3-956d2311bdeb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45edd7bc-6487-4c9d-a577-7050c8bbe2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6247b4cb-ae52-4f69-ad57-b02442c5a64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac3dd92-944d-4d49-a980-d7898ba60ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "823aa68e-0501-4eed-9cd5-8b26102e2277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ff873a-91da-433a-be0b-38bbc900dccd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7482c2-e4e2-4735-9311-e93a6b5202ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df19b42-3d1d-4351-b355-2fafc5cb94e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a6abb8-6300-4010-a98e-42577fc0d2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae4d7bb-664c-4036-8e87-9705777dc240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0e3605-e171-4b3d-b4ca-9f82e1467a58",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abae47d-88b8-4ea9-9a55-f25d1d04f396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2036aad7-ab68-4929-a7e6-2ccdbfc4c20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51ba4e1-fc14-4adc-9409-d3e33f26b3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbad35ea-0ca0-4acd-9a3c-3e242ad19f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eaed69d-40bb-4dbc-881b-7380806f738f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cf0858-9f96-4ea3-9263-d435944f3ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ef3935b0-4ac5-424f-9f0f-e9ffea3e1a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c190e380-5291-4ca0-a511-d918b1a59a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf2e3d4-6021-4d99-9a7c-091f8348ca2d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8b3df132-45db-498b-869f-cb4949c77056",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8a2354b-c3a1-4852-afeb-b5f02b3d3772",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290f1ff6-b81b-4427-9f57-7516f2655e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6145372-02a4-41ca-a510-c27543e595ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48870e4e-6d22-403e-9179-0603505ddc90",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a71742e-1688-420b-be85-1ee88a673bdd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18dad2e7-297e-4689-91a9-27547c3b581c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "761d2047-4c42-4404-8bd9-3c9231d3bdb0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9c61044-2ccd-430b-bb02-1418d6962e3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c9da255-d31b-422e-a7e9-ed4064da374a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "950ccf12-90e2-4492-a7eb-59587e3efd37",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "99442cce-9000-49dc-9560-d59af364f9a7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d0c0605d-2270-4d0c-bbe8-3aff7159d15f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c755c77-0cb3-4a76-989d-35a3de74ced1"
                }
              }
            ]
          },
          {
            "id": "df339a88-993b-4de3-9220-703ab1ffbff6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad3c1d20-9480-43a3-8b74-1cf836df5cce",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3de1a00-feef-46ef-9f0d-d75cd18b4b4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9938632b-9e21-44dc-b70d-a4690f2bf18b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fdcca91-73ab-4693-8392-95df66d19af5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eca4282d-ad43-4c6a-bd16-0dc4ea400d57"
                    }
                  }
                ]
              },
              {
                "id": "1c6520ac-c1c7-4dcb-9d28-4f5e97667ab3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1dc0c23-7456-413c-88d6-567fbf673a6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a26e552e-88b6-4811-8510-797a021468b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3efbb113-2aae-42a6-a97b-6da3d3d7de74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df19542f-6d91-46a6-8f74-cd733baf2b2e"
                    }
                  }
                ]
              },
              {
                "id": "b1dfdd54-7763-41fc-815a-3dae4e607f58",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b1d333f-e153-4350-b494-02bf2679b23e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9511818c-dc8e-4764-83b0-e905b7cdf81f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "545c86c9-f771-4354-89f7-aa8c4a2d9a77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1b1280b2-bd2a-44b3-a06a-6b1c767c4916"
                    }
                  }
                ]
              },
              {
                "id": "96b39d87-cf59-414a-aa7c-168315c8ad2a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61216e32-ab7b-4e0b-9d7b-82e9b3dec04f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7af327f8-238c-466c-8307-c306fec1fda8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85591031-c69a-4bd3-b908-839ff5371a08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "71c44a1f-ca4d-4711-9a8c-bcb42d82f0f4"
                    }
                  }
                ]
              },
              {
                "id": "5b8525ee-51cc-425e-a3a9-30dbd642fade",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca16ac87-7fdf-44ed-9793-e5b52b8a2fbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "735132c3-05da-47db-81ec-9f392dac217d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7a598c6-60e9-41bf-8069-6684ab7dfc86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7310813d-8433-43cc-acc3-10966d3bdafd"
                    }
                  }
                ]
              },
              {
                "id": "6190409e-b8a7-41cf-b681-fe495f20e57a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5969232e-64f9-457a-8e83-ccf9c42a1076",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ee003b0-a70f-46ca-ba04-03a51c995c40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f81b1e4c-7998-483e-9dbe-90530649ec79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f65d472-46f8-4918-a766-ce86892e137a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d2f69206-3f59-4833-b49e-85010a8e6acb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1ed21da-ffc8-4732-8ee2-2711a5938b24"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dbe1a3cc-5803-4382-a574-c93e1ddb60bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4c6c40d-f872-49ea-a80e-317642077cb2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9503f7e-87d6-41d1-be75-d60463aa1ec5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "461093d3-cd11-456c-91bb-532ef58e5019"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9c80b20-56fb-4dc2-9bba-3c55c6c05feb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe908598-6823-4d08-8cef-ea633f27ec66"
            }
          }
        ]
      },
      {
        "id": "2f049ad0-a841-40d2-9baf-6be872fa7aa2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "97e81565-b07f-448e-9b2c-1199b56eaff8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d438099-9535-4f44-b640-2e5bbe4d5080",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "671916b1-f8a7-484a-bb57-f6a543c30e6d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980e4da6-e609-4c4d-b6da-a4774871fe22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee29c523-22de-4c89-a8e9-feed972dadc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575df55b-bb80-4576-b560-4912e7d5138d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6abf677-71b2-4cfc-a8e0-4a9d2e78c1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b478fda-afb6-41b9-99a3-436808f62427",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2a28e4-3faf-45df-b291-222476268924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c4b55a-464f-4798-8b86-c87300c71ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6123b14e-a11b-4225-a2c1-8168efe574f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b57c5d1-3e63-4493-a40c-94388806e922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a051a952-cb39-42cd-8352-a35031d67ae9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be797ff0-3dc1-4e21-b026-80518c43d8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b28dbb8-6959-4496-8f16-e8ab4123217d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6e0bd2-11f5-4149-99a0-7c79315f92ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9a7327-aded-496c-8a61-4dd8c3785fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e5f36f-5a3c-4953-a79d-5421e89419e7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d46f78-38cf-41a7-8d82-6b3ff6ac0c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780d5c1c-dcaa-4628-b9fb-64d8ca338e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4059cbe2-36c0-4bff-b2cc-952e2f92e84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff5b3de-eada-46ce-b001-f60a926bf651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b60f58-a3a9-40ae-a244-4e54abb7fa07",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d040e1-20c5-48a6-a622-09a9cef17a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2886bf6-ccab-45aa-8b04-9806e567b8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb9bd63-9615-4383-8f15-f52ec6bc6ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a21a27-92c3-4097-bd37-0e80bb959695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3f76f3-b790-4517-b316-cee9cdaa2c46",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a0bdc6-80ef-4b97-b4e0-64430ecf6024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4168af2d-4bc3-437d-bf10-dd6f50942603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4055027b-df56-4a28-a5a2-f1e26bb26d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b80282a9-b6db-478a-b68d-01292d1eebcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d66f15-2089-497c-9eec-ccb27c952b10",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6106c510-0a78-4bea-9391-85040e3dc908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09f8606-3916-418a-b260-e033aa443ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfce108c-e6f4-40e9-abfb-229d511a37d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b877a7e-3597-4550-94c9-ec94d909756f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf6f34b-c94f-41df-b25d-39a9f09dceb4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34068db9-0ed2-495b-8efa-d51999051c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b8c96f-5052-4d6c-8986-69a719e677ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cb58fc-158f-45c4-ae3b-7e6300a19064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cdaa655-b636-41c7-bf31-feca0b02582e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56d8472-64ff-47cc-ac3c-137b2e030257",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2be99a-f31d-4622-b3d2-2091e2a1b58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a81f1e2-13d9-479d-9370-5800f8520f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a02d3fd-12d7-4d4c-a696-138a13530a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fcfc21a-6860-43b6-959d-2129b0508395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba84e88-b030-4769-b1c9-148fcf075a2e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9904b7-13eb-406f-ab8d-8964d5505c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee38e739-7632-49e4-88d5-3ad26376e3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469a7310-d969-4538-825c-323097d87aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd582e3-db80-4ee1-8dab-fbe3eb23504f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b3b5e0-1126-489b-b08e-dd8bff040b5a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b959c3-3488-44c2-a084-65b51c7470e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d555058f-bb9c-4450-ad98-406ae8a59a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1329a87-b6c1-4f1b-ae25-82d30d994207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "177a1ee1-22ea-448f-a43a-03b59b9ccf63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05751398-1ab9-4a6d-a738-0169bd5acadb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e91f793-59c9-47c4-b012-e85d57220c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e826d380-0452-43d9-a39a-a9d4d9b95634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb6c7e4-bfe6-4692-8d0f-4d86e1c187b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53890087-7055-48f4-86f1-04151297bc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86dd47f-9203-4571-98f0-0e0e45a1da89",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c133a9-2a14-4417-8386-d77923dd7b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04592402-627a-4815-b279-a9d560a9ccb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a1e32b-ab11-4494-8662-c00d11a0214a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7544c57-0256-4ce1-89ab-8fc2d9555d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7230cd-f35d-4f8b-b0d3-caed514460a1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178c2085-0dcb-4e88-aeec-6f39e1fd715f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fadefd5-d996-4455-96f2-c796123c3a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dadeb0e-7733-470d-90b3-3ca022a1f6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed2346c-480d-4bd8-9b28-4125ba301453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3611e213-57b2-4cd6-8bc8-abfd47e14f47",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ac6caf-d776-4fc8-b234-44bb6fad0330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75cae19-7bd6-4469-ad78-40e0c7a7cae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375e3675-d6a7-4570-8d76-5ada0fe8ae75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "15a23d62-d88d-46c0-8fa6-4031618b7413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91af0076-457e-4376-b90d-a088985c2d38",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9962a2df-833b-442a-8d69-51cb1ebfdc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8c0636-611d-4cc2-a4de-322defa6e3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c156f6d5-500d-470b-a9d8-85398c47bb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "14397c75-08e1-4cf9-96b2-cd216e105d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6165aa-7c18-4fd4-8a07-deb3a58629bd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9676d00a-99c3-4d60-886d-e5b4f835f9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71a6ec1-fcbe-441a-95b4-dd206c86af24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdbc155-bf40-48f4-abc2-a1582b07ddcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8e4e1d-b201-46ca-be6e-276a2da8919a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f84d3aa-103f-4997-9775-cedceabb925d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dca663e-14af-4df8-8ab1-3057e83bfa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f078eb-ef39-44ab-b565-4e7943cae0a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5e1cc9-2577-452d-81a7-b569af4e6da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fff321b2-21f8-492a-8568-9ed3bfc2cf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418ac0ef-fa20-497e-99fb-b474c6f5a1ac",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a8c744-a721-4b74-b7da-d3b5f83cbbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85189799-5c56-4cbd-857b-4b0144df458b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9b9f03-2f5a-44f6-8f17-2ecab7f8c2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9933fb62-1ddb-48ed-b94d-5f2b198cc08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83efd66-5d8e-4d15-884a-d6ef83add2ec",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb58190-acf8-4a64-bdb0-8f828fb72cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc713208-d36a-4289-bf44-cf58682b5156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77899d5-0a4e-452a-b04f-f88db2e8c8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90b146a3-df58-4d1b-8d47-1d979830954c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1becc633-a022-46e7-a963-ba86ce4ebda8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831875db-5297-4425-91c6-e03a688aa091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca75669-33a2-42c4-8e24-7687e17a4ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d35a6db-e71a-450f-83a5-6910f471e26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b07827-f665-40af-a9d1-91e4d7bfad5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3159f904-1269-4829-84cb-7d73250ddee2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9489da-7256-49e4-af3d-c01740d662b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de19f50-b6d1-45f8-a8bc-e86fcdc92a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ba490f-59bd-4168-b9f9-dd7af0a5525e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "718305aa-2871-431d-ac66-dae1e8444e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7508f789-51e2-4a7e-a7a4-8689b8d085e6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad07bd01-f0ec-49b5-b78b-9b11f429ae43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fea8e9-ef7f-40d7-96b6-658850d2c221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8f6526-5325-4cb5-a1fc-ca03f435f846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03874691-9441-46be-9319-68f353c4c5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ee4d04-4257-4330-bdb4-623bc90e5c9d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc014ff9-c52e-4789-bb11-a3cd56c72f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27a5d4a-0893-4019-9a0a-c0cec0d9b354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3f92df-4189-4933-a52e-af7e325115ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb1c0f0-e1e8-4986-bae0-cc7e41443fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b33ed2-c99c-4e38-9ad3-960fb54509c6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d94b59-c7eb-44c6-bd9a-7fa1657df9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d03cd0-176e-4b9d-aef1-80daed1d9aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1eb568a-4256-42df-9873-ca1757edaccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c16551f-a212-48e6-873b-92455f4b18f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cd070c-3105-4829-a4e2-d2238919f110",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d6aa7c-f1b2-4919-a933-f7f7945ee107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024af1fa-f043-4865-924d-61a02a927398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98a3801-4d2a-427a-88d0-f07d470beecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a2a058-3105-4ca0-aa54-509ebef585f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfc5b89-e720-4075-900e-b009041d5601",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e3874f-70f6-4352-bcac-963fbe8edea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140b7034-636d-45c0-9204-7b9e77fab285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20743a02-4f49-4c01-9447-1698511528de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d8fe51-3be2-4e08-b57b-61f3ebb0d495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf70229-d862-4985-8d0c-791bbeccda42",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bf8347-6b97-41df-be29-e65eaa4edfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a22b30-3e17-4110-8823-f8a0001419d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada5fb4f-839f-41c6-af2b-aa3623354323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0605d56-5fde-4ca9-8181-0132b20ec79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b935a85c-aad7-4cb5-88d9-a48345406778",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af77856-8da3-4c5a-a811-b8b610c1b7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b44e067-5cdf-40cc-b482-f7162e694765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03b67f4-01f3-4cbb-9caa-ded7e1882b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "177be56f-34c9-4062-b5d0-861d38a28140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e47a446-2d7b-482f-a4b3-12fdab3da39b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887e2f95-de7b-49c4-b4a3-73efa9021463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b903fe0-0708-453a-a14f-79bcaeb25e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9789791-e02d-427b-bd73-830100a6caa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f486a82f-8c92-44a2-9205-9e5230ddfb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db88b79-f9bb-4c49-a766-8d2eed28f394",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af0206a-2393-4e86-897b-f05833755275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3a1236-fca2-4bbe-9a24-a85bd85cd381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e281cba8-3d17-4c59-9df9-8c0c895e06b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7f00e1-27c3-49c4-9e38-a88f31046f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685b8c57-9c08-4dde-8f82-a6a7ed556ca7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11048266-850c-4a16-b248-d73138115979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24bab6d-d35e-4e55-986a-cd97a4490c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41349192-2d3e-4412-873b-daf94608e96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dea0719b-6f15-4403-b102-eb1672219809"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5db4a6ab-9d6c-4081-86c2-11c96ce763d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "218f6d0b-6b14-40f6-89f3-88ed61414e85",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568a37dc-947b-420b-96bd-e65e12ffbaad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "11f32003-1209-42b2-92f3-1104d527ca71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d61abc8-cf54-40cb-8ac4-cff26990f5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff7ec43e-0241-45c7-9647-1772cde22737"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ad71969-d933-42d5-a13f-a0b2d88ac9fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "003cb22f-22bb-45da-aa9a-857243b966b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97d8af26-3261-4fee-a16c-32a50c4036de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4121f73e-6945-4b31-ad9b-c25bf8c30f5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94936b45-40b9-4633-85b2-8248302bbd8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0781b972-1530-4a94-9bb8-8e01a7feb44a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7ce7148-b9de-4810-b288-da254b4279dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93bb7b61-7d2e-435d-bf76-cbce38cf3faf"
            }
          }
        ]
      },
      {
        "id": "d7824861-c5f5-454f-af3f-3a62ee456278",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "58ca9e9b-5f0f-44e6-b6a8-b3bc7e1cb97e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9ab30fd-d6b3-46dc-bc26-6738229dfc3c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2cce385-0481-44ac-82bf-aaf4bafb4e70",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44e3d5d-dd85-417a-aad2-05a8909edf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091fa15c-43d4-4e1d-8bd3-9070585d0e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633999d8-7516-45cf-b54c-5ef143129895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a33569-debe-4122-8803-c2c9bedbfbf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e93011-0bad-4a86-b914-05eba238f686",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe13a60-b41c-4741-8645-bc651d72b0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2784076-e974-42fe-b28d-4a61e14f4531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a23f50-6a42-48b4-9b0d-5ea5b6584b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e1aa97-6e3f-498e-8a18-d90b72f44f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148477a7-9ce2-4759-8c1f-ecf93540e846",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf4cfe4-c674-459f-a6b7-ef00538fe0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a024c0d0-8028-4837-aa29-7742d7ee0175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0960acdc-97f3-4258-a702-d1ff4beb7f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea15718-e5ad-49e0-9bdb-d39fbe2a80e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd46feec-878c-4688-b93a-371fca92110f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fdc988-4773-46fd-a0fa-e37f2723a860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394e940b-a87a-404a-b0fc-c2106be0de87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b256c329-deb2-47f4-9ee0-9a9c4aa6d584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8631b2fa-fef2-4164-803c-5f1a99ffb443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660dd7b2-1c83-4ffd-aa77-596fd62a4fd9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dab4f97-75b7-4a2b-8288-b04cfb879c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045a7914-16f4-4212-ae5c-163674c22f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25440723-f4b4-4096-a7b5-68fff0821451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a86864-6ed7-4b80-bb4b-885b2902e24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba50d665-f217-40f3-be4c-297bf3f47c1f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5137dda3-c0fc-4a2f-b250-cb39f0699283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fdffc2c-013e-4476-821d-edc92d2e7153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4550d1a-c3b8-4fe8-8b75-b1ea2fd528ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e82c1c-2ef3-4352-82e3-a53b865e54af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e1a2b0-5048-4f08-925c-eaf23c2bfbf8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d925ea7-ea3a-4639-9d3b-8d28cebb5b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94441ff-555b-41ca-a0f7-d45f7c1f7ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c1760e-251c-4469-bf65-9b803bf4a4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e90fb6a-9b79-4882-b2c6-942cbd74e1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0298a32b-99b0-4a2c-b455-f5a369020555",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113cecf4-960f-4b45-945a-18b6a0304bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9233e544-6d1f-414d-a22f-c5f710f24942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50100493-7d9a-40d6-b9b5-850a7e15a67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01c772a1-e34a-4f1a-af1c-c0a64f4e65af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9f3c71-7ab0-4d2c-8d21-c91499b5a728",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd70847-bb8a-4ed3-b12f-9e516ea46146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cbda4c-f5d5-4f54-b6d9-46ed53f7bd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0a0959-c3d9-431a-bf91-29ae69ae20b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87098aaa-2ca9-4298-a313-308959d37349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b939022-80b7-4fd4-8077-7e32b87d16a1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7452ad01-13f6-4ea7-a63b-668a3568b289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d932f4-6110-4c75-ae09-d99025bf78b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6649a33b-f91e-483b-9dfe-0a8cc3ae507d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb927598-8fd6-4fa2-b420-fa6f818342ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1946b289-f2ec-4c87-91f3-c001c4ea4bea",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436a3a6b-b6d4-47f2-85a3-76a91105d4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68973f2-c0bf-4d36-b318-9b1c46701cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b787af5d-e0f4-4642-aaf4-0f17a1b47fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddafb53-030d-49fe-850a-ac4463723176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76da9a0f-9cf6-44ca-a691-e6d1d0c2ead5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428eb638-e4f8-4bb7-9ad1-0f479555d3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a642bf-b2a7-4743-aac8-28bdfa65af98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac45583-014c-4629-b7a2-cba4c12838e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08a4645a-41fd-49b2-808f-d510f201ab21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b0122c-111a-46f2-abd6-147f936b3e18",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f94a20-e969-4431-8e86-39cf792e62d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ce8960-62fd-4993-a1e3-0884b4217fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fdd94e-db9d-40d3-aa47-a61618958d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "181644b2-b0af-4c8d-91c0-b11c0f99a7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eecebf0-595c-4edc-81f9-59a7855de0e3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdaa5368-be5c-406b-86c5-315251b2fb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abae6193-17c8-4017-95b8-56cf7f91014c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cee840-befe-462a-8d3c-0ad4616c82c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6013eaf-369c-418b-ae38-52643ea7165c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f0ef9f-fbaf-4152-bb25-35a64ca512f6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657123fd-9aa8-4268-887f-b0f18dae7836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f199be4e-267b-4d76-991c-dab8fd814e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e3e9cf-4532-4331-89ba-ffec5c98c112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3059bd-0cb9-4de3-a026-855478599e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc18f174-7bed-42b8-b4bc-4c0428d48905",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58785736-1504-4f93-80a6-7df28fd81f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c36b5d7-4ff8-4699-aa58-d355072a0d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237a3f4b-5168-4ce5-b1db-b68d64775443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f697b4b1-2d35-4b56-a7f7-6b8debe41b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3180fc-fdd0-46e1-b66c-1177ae64c3b4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc27756-94f1-49e0-ac14-64098c8f8d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1eb9b8c-080d-4e01-9eb5-01b73795afdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c208eb1-c4d1-42a8-8460-b802155a1da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "68aed4db-72e3-4d26-91ba-c1c0f175cc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16218c2-5a65-4b58-8fa5-0c4bd95aeff9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e28365-0e66-4ee3-a998-5b40b5471054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91571fc9-c344-493c-bcac-19a82ddd4c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181c7329-2481-445a-bb5a-35bf07c8a8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "73b6fb44-7709-4dc9-b330-5af756d53299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b0ffde-41f2-4df4-a2d6-ffc79a693a09",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b010d64-91a4-4b74-9f74-6c5bfed0d597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdea9da2-6912-479e-bf9f-01a28c02e608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4130cab-07fe-4cbb-b35a-41c4172cc251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68a8e5ae-d81e-4cbd-957f-e5071dfc5219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bc8afd-5d5c-4a59-b913-117b779a88fb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb016750-529c-4af3-ba6c-097262b65e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78550480-9aaa-4380-8a75-04f61460c35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace95ebd-3d7b-4dde-8d63-6ab269ba28f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b449e1-e22d-4bde-86e0-b469c7cfdb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe1d230-2275-4a2f-9d49-db23d23bef8a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78a76e2-2713-4e29-bf47-d0becb8ebcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb37c21-9a3f-49dd-bc71-047f76e29543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9eb299-3fcd-4235-affa-6d8e86780916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2114111a-88b5-4590-9e8f-ca72b2851967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0fc073-3f11-4cf9-98a8-50e496dcd984",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264c7894-1c32-4836-b26a-5cfe5317bd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2464f3f2-7634-49f2-ba7f-d7d340ca2385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72bf522-8863-494a-a86f-e00311b5279c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9fa30e-4051-47e4-a636-a67f380d9cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718c1231-0ffc-4fd8-9f00-a72d1a368acb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6eae35-9dcb-41be-b99a-e75c862b59e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297af38c-0298-4537-b1ba-8a5c70e9661b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22be4927-5015-40ce-b149-51a675c02bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9401bf8c-e95d-48e8-9cee-4d0683a0a61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db67d1e-36dd-4406-a121-cc87a452ef19",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610bafcf-a518-46ec-ad47-1a9294f61e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddb4bb1-2ef6-4936-b374-017ad959577f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acaf8bb3-ef3a-4e06-b98e-14e1166b6af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a03148cb-204e-4999-9562-5cd4015deb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bf62a0-ce72-40a0-ac0c-8175db34395d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efdc8ed-3a56-4734-90eb-00097cdc2c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013bc917-2308-4bd9-8102-e6d69c592e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371657ff-cd8d-4355-a0dd-d557ecb2bae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10e2d5b9-e5d6-4f21-8610-65a339cbfd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32ccb38-46f8-4a7c-9935-e9b569a776aa",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05675367-55c4-4a3a-b5ef-6f19813da228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56bf66ca-02c1-45f8-85dd-9417aa4fa0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb781483-47af-47e9-86e3-eb01d4ce1ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab7ef38-4194-415f-9978-1779dac25ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570b32ef-7973-4b91-8e5b-1e15c7451396",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948ce710-3fd8-4cf5-ab8b-946bbc50c08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f93dc1-685b-4998-a674-fda95961936d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab253a7c-2b52-4ddc-9d15-736baecbf0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e20fe4-48d3-4d16-bcd1-238629ef2f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288e8f4b-1a83-4057-83f4-fcd4c5967115",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65cf3a9-d882-4e21-8456-f28e7649f53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9767a3-295a-4433-a07a-f9f01a831152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc697c9-dc05-49c3-bd74-cb6a939527af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60f3b07a-420c-4586-a83b-2352c0684a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c28e852-df08-4109-84d6-b1f94f96ffe7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e0e1a2-a858-49f9-9221-139b0ef4e169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ac9241-80d6-478f-9ea3-f3487f14692e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5a867f-4b28-452b-af95-8312ddc56314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e33a2f49-6ce7-42d2-acc3-1367ca9daa86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241b136a-c7b9-40f2-847f-d1680aa4bc65",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb76060-7c57-47b0-81ed-cf24df41f1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33431e6-a614-413a-b604-e627dea5e2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117fc6f6-f468-46d5-9078-6c080ebc2347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30cd3fdc-847b-44c6-9f41-ddb0c35e2fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1a20e6-05c0-415e-972a-d7f81e223f15",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8866c01a-f5c3-43fd-aff0-806ac384ab5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f505e439-5f44-4f06-8924-80cf3f5c5cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7174b007-e05c-46dd-bbb2-ad62122eefca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ac42d5-3b89-48d9-80fd-821613524cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d47f10-38ae-40e9-ba34-0735c1ed475d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1024f72-9b2c-4945-8bb6-70ed5042f306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73889530-ee17-49fd-a35f-d505d88db688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7ddb8a-6760-435e-ba19-1947b4c1b1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8171bb42-5276-4093-940b-c18331bfa86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ff388a-c43a-4cf3-adf6-3aea07206fab",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1bde8c-a422-42b8-8668-af668791a810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2a8f68-0472-488f-9efb-03a4e46f10e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadc4371-40a6-4d5d-a97f-fea3d7928084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "111abd4e-6d5a-4156-af0a-3b93837a4698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af18222-3ab4-47a9-8800-ee9dd017c01b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038ba3e1-32a2-499b-b9ad-5bfa21cb2aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30258327-9c22-4148-80f4-d9998503fa67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837abf64-d5b5-4a9e-ac22-f423a152c482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97bce8b6-5722-4310-a543-f478c053807f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f696944b-a918-4492-a5ff-5f5e58a22ae0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba01fdb-1344-4fe2-9724-30b7fde186b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ffa69ed-3be9-4fd1-b47f-6823fddd2576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba210a0-1ef5-44c5-97d5-a3a02f002390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a46efbd8-c293-45f4-839e-00108e798e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9534ad-80d0-45d5-908c-9c19bc58ff64",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb02387-ee7a-4ea6-88f4-f49e133705e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef848ba-2d75-4c7c-bd26-53c696cc8f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570ad2d2-3110-44e3-b80c-014a44c51e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caba76b7-1171-4f01-a2f3-0e9ad1222a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5127cb73-df48-40bf-87fc-a6c011887b96",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a3d9da-b2cc-4584-8195-e8099c892674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b5d25f-bf5e-4f21-a020-dc8effc0415f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965a206b-02ec-414e-9b26-a50f4c0d1364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93fff44d-f63e-44b5-afa4-66285d7120d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a20355a9-3603-4110-8a99-98a47e4df077",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7c2dc4b-58f5-43a9-9e34-30c7ee480ef1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41d3c86-075d-4876-ae01-2b696acdaa58",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad5989f-b918-4a60-9c0e-82b634447eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c87161-1028-4fab-ad13-5cf912be5315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a13824b2-a5a1-4634-a2cf-888deeb5f629"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "009147d7-25e9-4709-b296-794d178bb7ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f168a1d-ed5c-45ac-a1fe-761de09251b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "baeedb2e-bf5a-4c7f-b7fe-0a10f20e7b6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99783307-4116-4b6e-8376-3fec32b802ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4be0ae3-7c54-445e-b4aa-95c8662ee5c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ca42ac84-a137-4532-b0f7-5312b364a1d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68fc9110-290f-4fac-90ca-fe67d3831cf4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f65cf3b8-7fcd-4d9d-a1ce-a30382887bbb"
            }
          }
        ]
      },
      {
        "id": "4e8ee77e-d847-46ce-b8d9-277a2c7c7c32",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b875404e-e5f5-49fb-b8df-80049cc9345c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1cdb8bdd-14c8-4df7-b24c-0642bb663d3d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fb558ab1-8247-452e-8e81-181c4bdb01e9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38298960-ed7e-4b70-a966-f55bd972dc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb06ad5-550a-4859-8142-e79b6f4134b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028c4256-da4c-4d2f-8fe5-e4c745a2d75e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5be076f-c068-4312-976a-163d600de1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f433c0-6a0b-4dc8-b0be-35979a6621a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c032198f-01bd-4cf5-b487-e098772b601b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507d1257-9eff-44f3-bac7-1a1749d0dd2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff75793-d3f6-43e3-843d-cc7a4b36136e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5d18be-387c-4611-bd5c-901ad8bad8b5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d762f934-cc82-4678-9e28-12af1fad7b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2347d28-96dc-4d65-a23a-4656490a2c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69554689-b574-4762-a2b1-1e8831705729",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d582fe3c-3b2c-462c-84f5-78c4881d8ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4033673-ee9c-4c35-a96e-99b63375039f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b4fe66-cbda-4a61-b266-722a90c4adb3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51178a1d-c5f3-477c-bb0f-8ebbf237526c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11517a2e-01f6-4181-aea9-3bba6c05866a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166ec90a-c3bb-4d40-8c62-0e22ddfa1e6f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbff265-679c-4929-bd1f-a57006b81da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38089cc2-69d6-46f3-ac70-953c205f64ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e718b3-15de-4427-a568-6cc8eb9425d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3685876c-3d8f-414b-a392-b91f8bea91e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b708da0d-3591-4b1e-9eb2-d88278ad2925",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feafefbb-57b5-40d3-81c3-cb1582491dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "978132dc-e895-4ec6-9a4b-e99f1a129c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd28f34a-cf4a-425c-a76f-ad40ff089299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe2f49b-d804-4c1f-8369-ae3e3b5e6240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68c9268-89a5-459e-9aac-99aae9735320",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51376b8e-db17-4342-ac23-d3a8f8f7fd0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3c831e3-9f66-4c1d-8fe9-50f9a09ac7d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c07137-bb3a-4f0c-b1cd-046e57591f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca97d4e-010f-445b-951f-72815e8a45df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3172e03f-a522-4d05-83b7-251c4c2893b6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e56f14-f4a5-40f3-875a-f6d62db90f9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65dbc5d7-d8fa-44c2-9dbc-1f07e37a641b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cde9392-62d0-4bd8-abbb-e5d953f33503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e25538-c734-491e-a81a-bc4ae6b5a290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21df69d2-80cf-458a-9e55-dfd3722a4f3e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7941ddf4-1349-4e0d-b188-d68b371c6974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77aa1a78-03d2-4db1-8c29-4d86209795ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65f6676-dcec-496d-8c10-4ac72675f38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ab08bd-54bd-4936-b623-c78fb2350670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8769f7-3bf9-443b-91c7-9ec0e8f378aa",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4286b5e-8025-449b-9e55-bad479ede365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e853f2b-5a1b-483d-83cc-7b6c7b6de718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6776d8d5-adb3-4b42-b0dc-dda63c99fad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644d9143-c5f8-4a63-b2dd-d4d4caa92a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa0ac65-0f22-4e77-962c-ed7d3c65781b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a420f492-e582-4474-9ce2-c643bc468cfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1ec3a08-5329-4986-b3b3-68c2abd8b33b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98f720b-c759-4c10-8cfb-f3659e4c9c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165db4cb-144c-4a99-be2c-e40e402205ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b6fa09-468d-4b6d-ba20-82c041c73034",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29642858-0416-491f-8a8a-e4c7af1e00de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37984597-4abc-4bbf-8dc3-ad7c3090c610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7191b8ed-2785-452c-a53e-0a18cb39156d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae70b739-b770-48b9-b65d-bc56647a752f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8b9804-67d0-451d-8197-856c8e0bb9b1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaa42ae-a68c-4100-8da1-1c5676fed9ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c9213fd-ba0b-46d1-b93a-a47e96610a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512de5d5-69f9-4b21-a086-5cfd0beefa86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e3569b-90fc-420e-92cd-d87e3fc23cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125929cd-2e33-4fa3-9c1a-6ea84004cdd9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd28aaa-cdb1-4255-bcdb-77060c1c3c27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3faa4003-ad88-4396-80b2-c71accb127b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83e92c2-c195-4e59-94ec-11e893a9eadb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229226dc-0552-42f6-b918-07e498c500a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cea48b0-26f0-4c91-832b-382dc380e1c4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d69d951-7ed6-4939-8187-60dd597e655f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62bbbc9-f765-4a2b-b074-61eddfab06dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa21e1e-b92c-4d29-a96e-c1f56761c5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5ca321-82f7-4b86-b580-c4ad472e135d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40c282a-d30a-4e1b-8b26-a7dd5b2dd985",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eca4457-4904-43c7-9794-ee74d9b3540d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53765d1a-c03f-4201-97a1-0e0ac4bad796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bb6d89-9db5-47fc-b3b2-5b099216bd9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82cba4f6-0bad-49e2-8f29-d893d2bc9bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4f7f6e-be77-4702-b3cf-79aceb0bcbe7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49904ea-ead9-4373-a088-f7bc1eff9bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29376ee6-9875-4c29-b7db-d71074f8b842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0356348d-b5c9-4907-b9d9-5eeb66519b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20de8dca-2f30-4e0b-ac21-1ca04f1da4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0573f3-1542-45dc-bb37-bcfc8de667d1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b25db64-ea3d-47c7-8436-c3c91b62fa5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d21677b-133b-4e45-8179-913fec53fdbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723a154a-5237-48fe-8303-34d9701c6951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77a4bce-b1c0-4eba-b0b0-f479f65905c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373db1f2-9212-48e0-9128-74a7de017ab5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1269ed2b-1e5f-4e01-9abe-77480bcf9dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179056e6-f82d-40f0-a4f9-2fef48fa4402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104a4a6b-89f8-4086-82bf-039da8f637ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c532b369-539d-48f7-998d-4f1446fc1607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d973ee-37d0-45c4-b5e0-537ae93c6040",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc0a314-4688-475b-bb99-4d9a74446b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88063c5-b960-4f4a-a09c-9a9867a99528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a556ceb1-de02-459e-a375-fa90a7b8a360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2455e477-1f32-4a7b-839c-0bdd43311a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac5e44c-7a31-48af-a5ad-d5be4d846caf",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf7d9e4-675d-4359-b659-c98a3e618694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d161e020-46de-45e9-ac2e-a234bf7632c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e826cb9c-db61-48c4-99a4-3529420b4290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6457a09f-76fd-4fee-94bd-b8cda52dc192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4d4389-956d-4ffa-9bdc-235a7cdfd7bb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9d3a4c-2128-4069-84ad-1ddbdd388f8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ad34c4a-dca3-42d0-9eaf-8632729ef0f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061e63d8-5ce0-467c-b4a8-6b2e17037710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babfb77a-dc45-4954-9522-0e5c6dc7cb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05961de3-d965-4556-a580-e5f7957b7c70",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5b4af2-2a70-4fbd-acef-39eecc722cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b2171b4-e001-41af-a8b3-4ff0f6f8f9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400c2584-8293-47e3-9622-4a75bcf98e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e815cbd-a177-44ca-8951-988d154ed835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e659f3f2-565c-45f1-ab65-10f0232f2039",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fc9a00-02a4-4e68-afa3-b0e82f5d780c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e686973-e550-4a25-884a-59ade64c3737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4858f48b-d447-478d-b605-254624cd3dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ffa5b4-5871-4996-9398-9e511ed56290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50872040-55c8-4c3c-b93e-2569604d7f84",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22dd055-ee05-468d-beca-8a892a741d58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11ad6a8e-e3e5-43dc-8b6e-be99402175f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3510b7cf-c41c-4815-8a50-ec6b2dc166ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e91da3e-ddfc-4d4b-982e-22d89c4d78eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec8e20b-b65e-45bc-a931-9f68a00fa848",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245bbcd9-3c01-41a6-8c1f-86ecd95d3a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44049eb-9631-4af3-ade2-d2d992fbc2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cde5a6c-4cbf-4ee5-9283-60d0ff646486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fae54fd-9447-4fff-a2c7-30cb6eb5575a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28c1a41-a390-4c6d-afe4-da156e63cc38",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05610c21-01f7-4d02-9f13-716d25df6eb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14d25516-0dd3-4adc-ba9a-7e7ba99069e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbb38f2-e47b-4ac5-b875-fb97ea4e11b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dea11a0-58f4-4eca-a804-4f4064a44a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09363f2-5968-4706-a292-de607912be43",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ba1da3-db69-41f4-9c4e-4153a26a536d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccfc581e-5424-4933-bc27-9f3064c4c2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5e6f2f-8d2d-4790-ba56-d0440f69c4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6f5810-7c5c-4654-8a8a-65505e14aea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7265e81e-ddf7-470c-bdda-f86811955f4f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d4d37d-ffff-44e7-8a95-d60c15f5c789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2779fea-679a-403a-a390-dc0066fa86d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84f6bc1-f124-4f37-ad21-0dc4cfa05d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b8fb38-38e1-40c6-9ad4-72b6802a0f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdf980b-6ac2-4447-ab14-ec495eace1ff",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6bde1d-1500-4aa5-bee1-ca931f0a9564",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4262ced9-fde9-4971-9d1d-02ec193e162c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322c4ded-d818-466a-948d-1e81dd3e1662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042961a5-06b2-4dd7-a3ab-3f3a2f367781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d688930e-9c3d-4d6f-87a4-b518799408aa",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086d699e-bd39-4daf-95d5-44198d89d7a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2366dfde-818b-42fa-a2d1-97729f04ceaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbc5e02-009a-4d64-966d-92abd5ab96ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4cdd76e-136b-49d1-ada2-38ac73a85e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699fce49-a31d-4c05-a0cf-3b247ffdc6a4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ee6ed5-3d42-4105-a2c8-8f896863c1b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6b902df-ea3f-4da9-ba04-cda6a3782acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "402b91b3-de1e-4bb5-b6fe-c9cdb69d17e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1536a05f-63bc-47d8-aeb9-5ca11a9b87f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687ce42f-8b22-453d-b1f1-8ab1d4b7cdb2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0182612-6706-426c-8f19-fcc59e28c591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a07dae-47a7-4d84-9178-06ce4a08fc2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c7e36d-f3bc-4e19-8bb4-81810cfbd6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21bd45cc-e8bb-4332-9423-5f51cdb94725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911131f8-75aa-447e-838a-77fa79211748",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7420bb85-25ca-46ae-bd80-7c4918b21207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de46a055-58f8-465a-aa7d-3e8022969f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f63ada-cf3c-4b0d-af60-335a1df48c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b785076d-d935-43ad-8a3d-9d864951f1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9724c3c7-2c04-413d-a571-80124a3805dd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005e7a53-18b6-48b7-9c37-4c16b0a5f438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe570db-49ea-42f2-a1ee-015313931b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ac2418-f5e6-4323-b977-83a5a5b9e0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1b4589-7975-4b95-b630-85254aca696c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddffaac-5056-4724-8a27-bd952e70fc41",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6014a2e0-b348-4283-ac5c-7596687bc512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6efd226f-ad20-429e-bc46-fbe048b3c434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02754ef4-1680-4441-8f81-ff089fe9f2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5cdd9b6-5b7f-44e3-9251-5ef9c279725b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610de97f-34e5-4f58-b71d-5994aaaca02f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d480c834-4978-4e04-b4da-f1a38e08050b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fc0586-1d2b-4d7b-a83d-eef0a9ccd151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dc4fd3-3412-4125-a97e-38a57979069a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1171fa1c-d0bc-4b0e-a28f-c0b450789e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6949d5-ea51-4aa3-8b10-054ae49dd916",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89755415-8b03-4a1c-8f72-eb3c25ab3371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7a9b43-27f8-4db9-aeea-3469e1badd16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5fbe4d-b798-436f-9db3-520cc01b4b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af7b1ac-316c-4055-aa35-8cf093585fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1970806c-097f-4c74-a06d-815f2f75df26",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ed9f4f-8531-48ae-9701-e3c61ff92d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b868dac-9e48-474d-92e9-299198f87c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fec8ad-6974-4185-aee5-2360322cba6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3219c78a-62de-4474-b5b5-a58da4609aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913cb6e1-1fc5-4cbd-8f4b-bc49b00f8792",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8907d8-a258-40de-a6c3-c10e30cd49e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcda9467-62be-4d35-b9bd-afb252ee812d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07dabe59-6917-4059-b676-0f14bd6d96c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77dcdf4-e6a5-40ae-b3ef-6096766909d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd355d1-5bdd-49b9-bf00-a42395837fd2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304fa4a4-38c6-4873-a1e3-8e3e4062cb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744bbc7a-c94e-4e61-aa3b-4a2d63a1a4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b8d395-5788-4548-9c76-4972e15863c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b19560-a6ed-42a2-a3d9-22972b017ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24474114-239f-46f2-bd0c-471033b039c1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c5c0a9-8b84-4214-bc9c-45febfb15a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9ced54-6ddb-42bc-a44c-7b31b229e82c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b30a236-b8cd-488f-9616-3adba0f9194a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9ffb52-32b4-45ed-b776-b7bb48722c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96eeffc8-23bb-4060-94d0-c65e755f500e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa66b6f9-4acc-4f8c-8154-d9403df6abef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16adda18-2dfd-4a88-913c-9d1d254ea94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76428427-4780-44f3-90c1-c6355d96ade3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f86ca2-a1e0-4d06-8fd0-09ca7cbc5d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08277414-b465-4073-9395-2bc86ea3ecac",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ea5cb6-fd49-40df-9471-be0bc2e82909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7cbe72-b121-4acd-9108-45955cc36961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14abaae-20ed-4190-92c1-b722f6c85eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd933fe3-586e-4b12-8c9c-9fdc1d2af626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45246adf-c032-4122-96d2-0699a1712071",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8c3f21-1825-4d2a-986c-a51063941749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b7a484-ef9b-4572-81a9-0e50f99d8f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e39f12-66aa-4638-b1ec-eae1c9997b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f53a031-a25b-4cd6-b747-ed14120245e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1663b7ba-19e7-4e0f-a975-a8a0437f9c7b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a040aec-82c5-4ff1-82df-66ce7ebbc32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81bd51f9-7770-4880-9a4f-8b334905b067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "492e87fd-36f1-4c6c-9cbb-fb2778d8294e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8873abb4-a15f-46b9-a5b2-f4dcead4aeae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cec9cd-da3e-46a7-97b1-9d817420ff09",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c434316e-9f66-479f-a860-283f63d1248d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38de1817-3cb4-48c2-bf39-1acc02e44f77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904b2dd1-e53f-4ad6-a91f-68b4bd5f1c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b1769f-dad8-4e5a-b8e3-0fe201c025ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd71857-9cf3-4569-9188-47c9f6a400aa",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208da317-24cb-4fa9-a941-0f189fbe089a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec26e01-e39a-4356-a8f1-bb156b3c9247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c287bf-4f62-4600-bec9-a3a2a155eaaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7b8bdd-6699-48c5-9bff-215e46b101b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af251b0-182e-4bd9-8a3e-36ea89a5cbbb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1802692-9226-44c0-8fca-5dcd3f1f8888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3056d73-384a-4f04-9c81-32d98d416060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30dc7eb-9aec-4fe1-a76d-da76dba89527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e90055-39b8-4f9c-9bf5-fa32012f73e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64f3626-1b37-4ddf-816d-24248f991a65",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def51a1c-1b32-4db4-8bb4-381b366a34a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698ce9cd-3c6a-43a4-b04c-2767f92f010c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef8fc9e-8e0f-4d61-abb2-d51ed2e2520b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa82850-4a26-4061-aa93-104bbec7a0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0b64b7-fc03-4086-8f43-922828a3227d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf5999d-16fa-43ce-878d-7ca9c3c27b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6ffd13-51fb-4bc6-a52a-0a7110de4cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1cb3d9-7fb6-4246-a7f6-1989a12ccc83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b545d266-db17-4190-9f0e-d819b8273aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000cc9ce-64fd-44f8-98ed-d45aa9bb5d1b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1567430-9fb6-41bb-b263-0ea17056f700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c6aef3-6186-4a0a-bf7d-0e92ace81e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf7b48f-a939-4a90-a910-3a6c298f5f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d0a7bc-57b3-4f2f-b7cf-5a58675eb749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53f4f63-0e85-4deb-b441-c8b1cbe89773",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cd4a6a-69bc-487f-88ac-42822bc74f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414df6fe-978e-4d78-ac67-b8895739c92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd5b082-9250-4d9f-b781-3e730b1f2503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd96ee4f-e5e5-47ca-9796-fcad5322cb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2235a23c-a1bb-4c4a-b28d-3274752720ad",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc69ccba-a7ed-4cd5-9632-8b82da7bb66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c660e4-8c8e-4842-b9eb-d9e6fdad10f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e33d5f-3638-41ee-8eed-2d50aa01beae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101ddc43-95f3-4ee2-9b32-a3d1bf5a2277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe62048-d463-4ea2-ba22-7852dbc10ee2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb2e666-f272-4691-a282-22df4c5d8f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ea97f3-f0ce-4f08-ae1b-28a813e9c1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753f53d0-23c7-439e-919f-c610a565d431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b41c46-b4c3-4793-962f-315275a1119f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b96187-216d-4edf-948c-8593cc2c5a14",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6bcd7d-7285-4f5e-b0f1-d9e1c78444d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c6aad9-e052-437c-bf3d-c332f420255c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b2ac91-768b-481f-accb-945e521f9870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167f9163-7433-4d12-8578-b074b158c678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77a12e2-e25e-4b44-b207-f68812fc0c0e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189a34ef-54a4-47fa-a028-17cb4b5d1a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c033c574-6455-4ba3-8d08-459c867b8281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51d7971-a5ce-44af-9f3c-fae103aa15e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16301f3-c788-4e8c-bd0e-031505d3aacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fa7e0a-cb43-4cf1-a396-13d01f5caf81",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1350fa83-578c-409d-9750-a0a7e53ef7db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2d6cc0-3ce6-4e30-8f36-d5d3c764e952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d7a15c-317b-4b58-8fe6-3111d1cbef7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670553ff-4450-4eec-8290-15c72d1038be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a514ac-d318-4a20-81de-ef0bfbf3c1ed",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f52b2f1-c19f-4760-91f4-b47c7aee4225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11181e9-301e-4411-a83d-e33f72ba9bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a69599-49fe-4328-955f-952292c9c291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab06c86-89a1-4f1c-879d-f47ac5419e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57a864e-35dd-4f57-baea-c10eada7aea1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd8f919-2a9b-47bb-b8bc-0dd41b52205b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7781c6-2600-4270-85b2-81c51cae574c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fb0d7c-d0a0-4135-aa48-0b01ffcd73e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a097ee5f-131b-4e92-bd52-c8cfcdcf9038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbd871d-6c61-49d5-8992-97371b7ba00d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1516da2f-dd9f-4ca2-828b-49d5f47ce6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415ae141-13a5-445b-850a-0379727663dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b791c0e8-3521-4219-a08a-22f3ef5b5993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0ca9cd-e9b0-4523-80af-e1a1da0e10ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fb45e7-84ba-46d6-8487-5992a8aedc24",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334074e1-bfa0-45ff-9166-394549f70ebf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a296476-93c0-4651-9d00-e9d68a1c4043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49317d6c-a120-49fc-9c15-be2b325c1179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f85a22-3fbc-47ce-b2de-3b03fff7ea06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7c80fd-8613-4759-a240-4d5fd13aea0b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de95f3a5-39cf-4389-8865-766341244643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "864d0ad0-fa8e-4f36-a57f-934ad472c72e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbcdc3e-80ee-4c7d-9155-23a7a9258a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5ffb12-f362-405d-8f9e-2325bd43beb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089626a5-e050-4859-a86f-87fae8f3a526",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665a1310-b86b-4af5-bff2-7360f7941800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a5a60cb-6e70-4203-82d5-d3453354ce50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8c3c8b-2463-4c66-b9e1-5218dc98c33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb83082-3972-4e62-bf6f-5b5a7d9568c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e430d30c-89dd-4b95-a9c4-25ff61d0b6e6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9703b109-2d28-4e87-b037-5a02a7b4d5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b028608-ce26-4bc8-bdf4-2e3c96fb6232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bb5e55-f1ac-4929-9528-b9f3398a6b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9c8535-cfec-4efb-b2fc-b93a30b503e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea2957f-41bf-43d8-9ac4-58537babc03e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ade5373-186b-49e4-8c63-3b77fcd4e9a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe3913dc-7da1-4315-a250-1b78b69cfe91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202dccb8-6ce0-458f-9fc6-d085e0e3975f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3daf56b4-f5f4-4f50-9bc6-974bbbabd597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3d5005-d6ac-4223-9fbf-62abe527402b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c36bf0-0e47-4c3e-83a0-3d16e82cc3f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c59c9fa3-d826-40a9-a909-64440868f706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46777f02-abe4-466c-b086-f7d1990dd0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c002b1cb-6a5b-4196-abd5-4c25d277953c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bb2484-5adb-40d8-a3d4-d2cbb8ec08c6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5518011a-30f1-43fd-80e8-0b6b7eeea503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6ade0d3-d313-43f5-a914-bad2577314c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf7e34f-6014-472e-aab1-38ee5d5b706a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7e04fb-5241-4491-bab0-75e182aad100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01d38e2-3dc6-4f8e-9f31-8d6aba03f677",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3a1e3e-644d-4448-a5c8-0ec5e30beb80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7bc6006-a4fb-4e9e-8281-3d23df87d697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f780c6-56bc-4d48-96ac-db7f5559a933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb64c70-f04f-45f8-a660-786f533a61fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789c72d9-e5f7-4f27-9044-dde9c7de7607",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b93e80c-448c-44b4-84b0-fc8640d939a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84837f6e-dc16-42f7-9511-069dcd0cd26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e34332-046f-44c3-bc77-3a693418d56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e395dfa-8a29-480c-b241-d6dc16a705ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b68bf9-f1d5-459a-9da2-a3cc2147f6bd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29435aaa-9707-4e2d-adc1-aa75ad4fda0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "466153f1-d720-456b-aac9-96645041bd54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1813601-edb0-4724-a1d1-95ef8d034714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8100c993-905a-4847-8d49-f8a29850e1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc6ad50-eb9b-461d-a5eb-65020da7763e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b370091-20a5-451d-a655-2990cbe26c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6d3d86a-bfcd-46ef-97e0-018629119ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be25e24-7718-4be2-bde4-b82a41c43a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592a03a1-e115-47eb-9c72-a60124143e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7278b36-d3e5-4580-81eb-d70a42eb0608",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d898e3e9-4c8b-449c-ba52-d710c3e95432",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90bb6de1-3c37-4ee9-b848-2ddffb27b574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a755cfe3-e24f-47a6-8d81-83e60a5cda75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa9b135-8e72-432a-9599-ee33ce068621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa4c02d-e75f-425f-b68d-321e358a9b32",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660cf2c8-6f29-4aa7-9d7e-dcadd93cd97e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb324778-606d-4650-a635-c7e6c64c244b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f94dfe7-381e-4882-883e-51d0c867e1b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937ce4e4-c6f4-4e6c-88a4-6e7a2b864ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bafd362-1f1a-46f4-9953-56929dd31d3b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f115ceec-2570-4ad4-acc4-efeb582a46f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3079c694-fe39-47dc-ae50-10c9fcc3882c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f41d39-cb62-4951-93a1-e40f9b7963ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396c352a-fb8a-4559-8210-c9c13d91bfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e96c486-1533-4234-bcc1-56aeff9e6a6b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7d00d8-27b5-465f-ab5d-2d30de25c2f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3b3ce98-645c-4b4d-9835-2bb51bc1031a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29869709-0d29-4b10-b82c-8ef88a6ae511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27189aa-824d-4ebd-a76d-5ba0bc091759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba0a233-7dbd-4b52-b2fd-ae785bd757b5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e2d88d-e15c-4463-bd6b-82c811e42af3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa80340e-5e9c-4996-8efc-ee3014c147ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd862901-4a66-429d-a2ef-1df64a4c9dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b980f69-0afb-4d0b-8859-9a33425f2db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119022d7-2db5-4234-9658-9119b8d65baa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df09119c-033e-41d2-8f5e-a684a4f47ea0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae26a6cd-503d-455c-97cf-29dc6ff5611a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ddca94-0d14-4c5c-a189-f41cee2f13d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55b2c29-668c-4e1a-b194-11dbdfeff77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f041bbb4-c7dd-4455-9e7a-d7804e93d42f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10f12a2-cd27-49c6-ac84-f013cbbfc45f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dbac843-952e-4021-92c5-532018862407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b8bc7f-6026-46a7-b0bb-4980af83a366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185c4fea-b8ec-4d9b-8642-f750ea690e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920eebe5-7bb0-4748-883f-824dd71d247b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eacd0d7-c021-4607-a8b3-f84adcc1ac38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9a7f15-09a6-497d-9292-dcdc0b2dc63d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f534b3-7317-4096-a33c-ad0ba3393892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8193b1-3486-44a9-bd6a-0d814b255e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03923e8-040e-40d4-bf6e-26c5cb8b918a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7938d9-5f37-4db9-a0c1-1e5a7c163388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d24a1277-fb5d-4773-a790-8e385f8bed67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a687d991-d8bb-48aa-a7f6-6978a6a4e12e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c9c766-1abf-4ac4-a38f-cf913526f259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be10b479-be32-4d29-a404-30d2b9e05b55",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b1dd80-9a35-4dc1-bebd-d54f2dc5d46c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f265a51-4f7d-4952-bc83-ef6b4e7cc4d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a668d8f8-24ed-450e-a95b-2fbfbb1649a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951b6b84-7e25-465d-99d3-fc4b09712c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064af107-91db-410e-abfe-aef639cec093",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e586d233-5344-430c-90c3-597f1504eefb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38fb0558-b5ee-4a6e-8be1-b6b19caf4abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f294eca7-e2f3-4f5c-b35e-e39c5af1c25d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20aedfa7-949e-47ec-9590-30355d15e0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7a09c0-8f39-4359-a07e-a1f215a8d0b3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a03801c-7ce7-4505-a77c-d987a761b7b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aadaba0-7e62-4f87-be3c-b2cd1c865e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39a732a-345d-41d0-be7d-496b5d7c2d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a24ee4-2a8e-4aff-ad45-f54ea66b373d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a00f66-1a33-47ea-b139-22deb62582f1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff439f4-8178-448f-98cf-af1fbdfd83e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15ab13ed-058b-4644-9d0e-1559516c3db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb7d2cd-410e-4e21-85d1-d30f0a133dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42765c03-06a2-456f-8c17-ccd453ef979a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7965d9-83d8-4e4c-9d5e-6e180860ecd9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbf0692-f611-43a4-94a8-d9ddfcb31483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a26301a-df85-4302-a4d0-015b1f158332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9966c0-3ed4-4cb9-b15f-a76f6f39a18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829bb37c-f96b-4295-8fb6-10eb5a0b89f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9e63f7-de76-4ae0-b7ea-54b2ca0a3b47",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6291d8b2-587d-4724-b8d4-685b652605d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b60ad4-5099-48bb-a154-5f1608dc53a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3630ede9-eda5-4cff-b245-a37742c4310f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4671cdc-a741-4e8b-bc32-629f253e8c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb45ec8-4982-4501-8b03-9c51bbffa91f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fe9a2c-68ce-42d1-b6bb-5535b8fd60d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d8ea238-8602-4b89-945b-f04175485a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10096924-11b7-4b43-bf46-209be40885bd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74eee4ba-3508-4faf-8873-cf9184f7d408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a15775-f503-44f3-bf02-f74b5ef601ca",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f848e413-54ab-448b-9ba6-07ef416d1207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eb5bcce-bd70-4bca-bbe7-2d93c5592f17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a0e9ed-fec7-4df4-a459-36a3dd4ccfad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f811e3be-95e8-4c2e-8e0d-a8dda032ebbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee39e09-9650-4b2f-8264-a0ca5dad2774",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145e5361-4563-4d03-876f-c2e7e830b4e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f056749a-25f1-416d-963b-7fce20727480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0935c429-75b3-4aeb-8c0b-d56748163e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21791ce9-9311-47bd-b09b-7f8f4d83dee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0984728-826f-4768-ac25-b81fbb27b864",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73581e41-48e0-4177-b4d8-8c9f538b57fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d3bbcf9-7ed2-498e-baa7-54594999fcbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601b7607-63b1-4c78-a1b5-84b262d2a180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f850e14c-6d20-41eb-92c0-e8da64e2fd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ce7a2d-12bf-4a1e-aed8-53052856e5d0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865e4aee-600e-49c3-9640-75292502280f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1166fb4-b211-4124-b9b3-2d7547f90aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998d3a31-5402-4908-b355-ced80e53ab17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0213c1-a093-4c8f-ba85-b9a2258e3073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c2c5b7-a622-4f91-90df-19531b44c616",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43b58b9-ccd3-4bd9-8a32-919ae217073c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4806f36c-d66c-405c-bad5-f4ef2b69434f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2f209b-6991-47e9-bf8c-91abe81bcd90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff87f0c-048b-4c7c-be98-1abe72ca72e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baed2f84-684f-481d-b825-fc3166817f16",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c927aa5-8eba-4249-874a-3ce9daeb341a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a283b0bc-6f13-4bb0-83c9-f8f68c0cdc98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b365386-7608-44d4-8488-7157aa9b1399",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b08a05-9914-4e84-8383-57a77f86fb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b307ce6-95da-4ec7-82b2-f59eb75188bd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa47bdb5-689d-430a-9352-8cb2816dd790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c193b04-2b42-4bd7-a4d8-fdf52645efcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98843a1d-b2c3-430c-b996-9e58e8816376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b07234-dba8-48c0-bbd1-93d8121db278"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8c0fa0d-4f9a-4465-b12e-2534e6b37399",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96b42d13-b80c-45be-91dc-aabb86618eed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd1700bc-a02e-4721-99eb-016f709bbd4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51b16518-093c-4d49-b9f5-931abd3153e8"
                    }
                  }
                ]
              },
              {
                "id": "cedd5951-1db3-4a7e-bfec-926bf83388c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2a3982f-375d-477b-8aad-0e0bb8b2101a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be2ca58-ebf8-4ee8-8f0c-fed4d1d5841b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e67234fd-6380-45fa-92ab-9058d52ff296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d542c90a-c590-4994-b34e-df8f291ada71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "daf7b04f-0066-419c-bec8-4893000e3db8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2860bd44-ab99-4bc5-ae55-46d7f342daac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f56c4235-4c26-4b2c-b232-9b76d3307563"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5da7d48a-d019-4942-abbe-b1dc267a2608",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c65d9850-c805-4c3a-825f-d5393f65f23b"
                    }
                  }
                ]
              },
              {
                "id": "82eb78fc-0a3d-4260-982e-73df7e7c0186",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "05754030-3008-42a1-bc0c-8568cb76727a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f512ba15-d09e-439e-815a-5cc20a757137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8a00e71a-07f9-45c2-82da-d7ac7d63447c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc1e812-a4fc-42b9-b3c0-e9c10c289b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c677631d-a16c-479e-9e91-8f6525345570"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "347c130d-feeb-4349-9c6f-257c85de6b05",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a45f81b3-0a49-4e31-b5c6-3bce43acb983",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20d46c97-5a4b-4cac-9345-5125a066256a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "84306e52-9007-4e5d-907f-2ca8e7aad517"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38975f19-7bf3-4c22-941b-3cee05784310",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adaefc52-a031-461d-afd6-54c29953088a"
                    }
                  }
                ]
              },
              {
                "id": "41bcef07-304c-4445-a861-17d9f9338c77",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74ee3905-32bb-476d-b8c8-576f029388fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ddda0733-20bf-46ac-af31-ad772ba6d343"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9537f77-07a8-4917-8ad9-d5b48f11c357",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a148621c-7230-425a-8489-42526731792f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ecda22a-55a5-48e7-90fb-fbadec38dbca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "88ed5c14-658b-4bc6-a580-edef75c82625"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12f38f42-585c-4ce1-baa4-3794d098e1cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb6bbe7b-1d34-4f10-aa02-2b97737c73b7"
            }
          }
        ]
      },
      {
        "id": "b3ea4e12-71a8-49ef-820a-da91472fff00",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7b0ea0a5-a162-476a-9750-d7a203f8fc1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26df75d9-3824-467e-a505-eaaa1da32117",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57ae2546-a384-4c99-9400-e4b4b1af5f90",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1494e075-dc6c-4896-a39d-7bf00c0787ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4f860cb1-a0f5-48ce-a09d-6d81b18633f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf35fef3-c54e-40eb-8876-12b4e5d8b722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3082f9a5-046e-4307-8845-76d8078dd0b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d2bd978-4bb7-43d6-b493-6bae48300ab5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "283626c1-bd54-43fc-b630-54d6147cd4d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1325929c-e9ca-47be-ac5c-b068decb63fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d53d6fd6-1ce1-498f-a2d3-d4b72a3fea34"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae8a9b50-0435-4baa-b44a-276e425d4167",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "58257889-366e-4a97-b936-232a6c75c9f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07a83453-2ce5-422e-9b0e-a32d97811e75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fe04ed2-3366-4cae-b48e-57b54e688cf4"
            }
          }
        ]
      },
      {
        "id": "c42f425f-02dc-44b7-a069-034531edf43c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7a981d6e-8e94-4055-8de8-e9e6c40c73e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f880526-d0f9-40a8-b220-8ec037b9d233",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c10ba582-8232-4331-a411-7258dc56d742",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0ba97e-0335-436d-96a7-7abc7b699023",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c7c5216-e3a7-4ac2-985c-adde0198125c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeadde98-34d5-44d3-aed0-895f5a256798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6deefe21-2d31-49b2-8ace-6c7161b394e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff33a7b4-b50a-4cce-8c4f-4ae6486e0b2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "805742fb-eed1-4e91-bcbb-c0b260624aa6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "341b393f-06f1-4a86-8d35-ad238780114e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff8cd6b7-cada-4a86-a6a7-a384a678a821"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a2e876c-d840-4078-bc0f-a41d86858ff9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3433c36c-84b7-4158-be27-3652dd38b265"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a8cd435-5fd0-40d5-a0f6-de38248a8674",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8a159db-1d62-4a92-afc5-f8989b4c8934"
            }
          }
        ]
      },
      {
        "id": "11a5e35a-2a50-4505-bdb7-fb07a4baa3c4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5eade906-a221-4f99-a390-8fce78af8748",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ab3e895-8f51-4733-901f-0c978f8f3dd5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea01fde0-af45-4097-8786-3c73ba3d88e2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b1df6b-fba1-496c-a89f-3bddd505ce6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9293554-cae1-4481-8f36-be1754096602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09d0827-bea3-4802-81bb-ef0598740abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2979e269-4b5a-4f2d-8ed3-39235a6c0458"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e99f6964-b7c4-4972-b1ab-1e4a0722e020",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fc562e2-a709-4fb2-8633-ef1e236ff82b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81168ede-294f-4ebc-ad59-06575b0e2e42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0766edd-a835-47ce-9fba-03c45132afb4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7151a7c4-05c7-48a9-9403-996af6555fd7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0c20e42d-ac57-4a7a-8284-7f1531145217"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d834c60b-1df3-4559-85a7-5065c5d49adb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4310580f-8b90-465f-a347-e004eaaa0f65"
            }
          }
        ]
      },
      {
        "id": "25f17036-da44-4027-b3d7-48ec6aa9925d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff37aa1e-f780-4abb-a9d7-82ff9b112bb9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "173c4d3e-9c3c-4b7a-8b87-706f2313370b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6f2b1e42-32c2-4d1e-9498-6d6e294d0c46",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fdb2838d-1939-4df1-abc6-2c5417bf3af8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23138827-08e7-4a09-99f0-8dc7d564c8fd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.056338028169018,
      "responseMin": 3,
      "responseMax": 289,
      "responseSd": 19.328252199017765,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688431685031,
      "completed": 1688431698339
    },
    "executions": [
      {
        "id": "d8433f20-8ec8-4790-a9f7-2bd655bcc903",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "78cbb20f-0736-4892-9370-e02bb190d93a",
          "httpRequestId": "27ae25ed-228c-4521-b1c8-971bb08f7f21"
        },
        "item": {
          "id": "d8433f20-8ec8-4790-a9f7-2bd655bcc903",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "46cbfa88-0ebd-4d10-8de5-e989fe8d6488",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "f3501fc7-a893-427b-a5b3-c50117e550e7",
        "cursor": {
          "ref": "3665737f-ede9-47da-ae30-d164041a37eb",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d1f1a1b6-f33d-4329-904f-50f62eec9f5e"
        },
        "item": {
          "id": "f3501fc7-a893-427b-a5b3-c50117e550e7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e7373ca5-bd45-460b-9722-1b234d7821c9",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "062cf98d-9022-48c8-8e94-254937a368d6",
        "cursor": {
          "ref": "c23003f2-fc83-4df7-b09b-3beb5e414909",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ae702274-e757-4601-b692-f746eb149b6f"
        },
        "item": {
          "id": "062cf98d-9022-48c8-8e94-254937a368d6",
          "name": "did_json"
        },
        "response": {
          "id": "6cd2217e-a468-4ee8-b762-52ec5899c0fa",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c239f41-6c94-4ddc-b315-dab734e60564",
        "cursor": {
          "ref": "abaf6ab2-dd59-4312-abea-c3f22dc71daf",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cb898659-7148-4191-b5d6-4c481085736c"
        },
        "item": {
          "id": "2c239f41-6c94-4ddc-b315-dab734e60564",
          "name": "did:invalid"
        },
        "response": {
          "id": "03abfdaa-79c0-49ab-801e-412e6097fc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c239f41-6c94-4ddc-b315-dab734e60564",
        "cursor": {
          "ref": "abaf6ab2-dd59-4312-abea-c3f22dc71daf",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cb898659-7148-4191-b5d6-4c481085736c"
        },
        "item": {
          "id": "2c239f41-6c94-4ddc-b315-dab734e60564",
          "name": "did:invalid"
        },
        "response": {
          "id": "03abfdaa-79c0-49ab-801e-412e6097fc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc555f51-aab4-4e7e-8248-5d6ffed6fb0f",
        "cursor": {
          "ref": "2c550b78-915e-42c9-9912-5f7b2c89b242",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6ea89732-dadd-4649-94c9-f9fc827a0e1a"
        },
        "item": {
          "id": "cc555f51-aab4-4e7e-8248-5d6ffed6fb0f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6db90576-4fc5-424e-8815-24b6e7e6d938",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc8e038-9fd6-43ca-ba3f-08521fc3dc2b",
        "cursor": {
          "ref": "01bd47b8-4e3f-4d49-bd24-a14ea90b705c",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "90a77d8b-1356-4e55-a35b-7ba5307af342"
        },
        "item": {
          "id": "2dc8e038-9fd6-43ca-ba3f-08521fc3dc2b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "96c7c51a-544f-4678-afb1-6478e0798482",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d6db2d-059c-4c5c-98b5-bafe7bfd32a7",
        "cursor": {
          "ref": "57a86e74-5ead-4a20-9747-959a2847abb3",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3de2be44-9957-43d5-b96d-5d6fb3fb2b0a"
        },
        "item": {
          "id": "a3d6db2d-059c-4c5c-98b5-bafe7bfd32a7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c68f1eb7-237c-495f-a444-c53b88981158",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cb8929-bec2-4cc5-b0d9-1b92d3df05e6",
        "cursor": {
          "ref": "72d63d1f-1157-46b3-8766-97e72540dcf2",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "be60bdf1-c195-4758-a792-2e734c9bb7f1"
        },
        "item": {
          "id": "09cb8929-bec2-4cc5-b0d9-1b92d3df05e6",
          "name": "identifiers"
        },
        "response": {
          "id": "b9e207a4-a821-4815-88d3-2a06d25814bb",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60282171-0062-4830-b60d-3c88533bad8d",
        "cursor": {
          "ref": "deee717c-2c86-4de7-a8c3-3eca20776bf3",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dacfd780-3160-4d45-b7b3-d1ed1d6287b3"
        },
        "item": {
          "id": "60282171-0062-4830-b60d-3c88533bad8d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c5faeb1d-287b-435b-9307-e175efbc59a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2887e87-4238-4087-be1f-fa20acf36417",
        "cursor": {
          "ref": "23abda5b-3e56-4ece-b19f-1d8b079e90a6",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "266a9613-692a-4ac3-8dbe-4681620a3ded"
        },
        "item": {
          "id": "e2887e87-4238-4087-be1f-fa20acf36417",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2fff5308-297c-4337-bfe5-cd1391567606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501cd5b7-57e7-48f1-819b-6384d023b8f5",
        "cursor": {
          "ref": "4e6150c6-611b-4e43-9bfd-6905ca16ea3f",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b0356325-d731-4b2a-b23c-78273918c2cf"
        },
        "item": {
          "id": "501cd5b7-57e7-48f1-819b-6384d023b8f5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "63da06bc-54e4-428d-b18f-1ab49582d5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b247fc-66e6-46e2-9621-34bfeec2610c",
        "cursor": {
          "ref": "e4e46851-c036-4129-a9bd-a77535929af0",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "134c72cd-8505-4deb-b2f3-feab38f93fed"
        },
        "item": {
          "id": "94b247fc-66e6-46e2-9621-34bfeec2610c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7840bdc8-d221-450c-a0d2-8bc41ac9de92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ed703d-5240-4fc3-ab56-85420422aaba",
        "cursor": {
          "ref": "d1b58500-6eb1-452d-acc4-f7f7be5411ca",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a1da42dc-5d19-460f-959f-0485d7a4e577"
        },
        "item": {
          "id": "f1ed703d-5240-4fc3-ab56-85420422aaba",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5a4fd973-0e5e-483a-b40f-62ba6e35a5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a368f979-27f3-4c34-bdd8-83b5bc35f1de",
        "cursor": {
          "ref": "994bcac1-76ac-480e-b5cc-fd6eee99484b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3d13de30-518a-471f-a990-029196c68b7d"
        },
        "item": {
          "id": "a368f979-27f3-4c34-bdd8-83b5bc35f1de",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cf97a6e4-a9ba-41c6-86e3-7a1ea1099a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f4919c-b9f2-48e8-8d07-bf8732dd2dd3",
        "cursor": {
          "ref": "67de5a6f-44c1-47d4-a203-e902feaa09ff",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bcd2880a-95ec-4b66-9667-94e30b927d81"
        },
        "item": {
          "id": "74f4919c-b9f2-48e8-8d07-bf8732dd2dd3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e202d1e3-f1c8-4ba4-a25e-5e0e466f37d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6c14da-abde-44fe-9f4c-1ca076d32e7a",
        "cursor": {
          "ref": "f57d1b62-5f99-496a-b5cb-9054537c5f28",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9a66ef6b-649e-4a99-864f-a2506aa5261d"
        },
        "item": {
          "id": "9c6c14da-abde-44fe-9f4c-1ca076d32e7a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "309632a8-8abe-497c-8143-f65909f40950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a5085c-5cd6-401c-a6e3-f1a39d70facd",
        "cursor": {
          "ref": "a2b7d08b-69fa-4a78-bcfb-44ddf3cff765",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "890ed560-6c1d-4d3a-b44e-a5f1ab98d0a8"
        },
        "item": {
          "id": "c4a5085c-5cd6-401c-a6e3-f1a39d70facd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a0e4769d-d518-4070-a2ba-012fd61105ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019e6ffa-78b2-46c9-b4c9-385b9b4c924e",
        "cursor": {
          "ref": "43c738d9-cfea-4990-9951-d42ccadf2671",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8e8e5f91-b17a-4308-8995-8896d1a3e68d"
        },
        "item": {
          "id": "019e6ffa-78b2-46c9-b4c9-385b9b4c924e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "300452f2-31d2-42e1-8188-97f799cbf74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d572078e-ee7d-4105-9521-dca895a39000",
        "cursor": {
          "ref": "f6a58a8a-9881-4c04-b9ad-02d3c5a52b6b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "606ae340-463b-41b5-bd51-b12c4610047b"
        },
        "item": {
          "id": "d572078e-ee7d-4105-9521-dca895a39000",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "90c89825-a5e3-4331-b1c4-74414313b3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def1c977-1fcf-4134-aacd-743b984a88d0",
        "cursor": {
          "ref": "dcb7bd5a-2688-4f71-924e-c640d87bbcab",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "caf7d476-cf0c-44fc-a5b5-7fc6012ad4dd"
        },
        "item": {
          "id": "def1c977-1fcf-4134-aacd-743b984a88d0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "30a728f5-c4f7-4045-b887-948767c52b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634d25aa-ee30-4122-8a81-5bc5b05441cb",
        "cursor": {
          "ref": "c7096176-4382-494f-aff0-49c7ad226151",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3151bb8d-3c78-402e-b3c8-d9c36620f1b6"
        },
        "item": {
          "id": "634d25aa-ee30-4122-8a81-5bc5b05441cb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "79c703d9-b028-46d2-92f8-07738c83fe56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224bf435-3bc2-4e52-a3b0-17346db698b3",
        "cursor": {
          "ref": "b1b7b8ce-791c-4520-af53-a63a5acba8b6",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2aeedd98-cb8c-4bd6-9abb-5ea05d28a196"
        },
        "item": {
          "id": "224bf435-3bc2-4e52-a3b0-17346db698b3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "07b19a9e-87a1-44cc-986f-b0fa5182c839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df31bfc7-745c-476a-9c0f-df08b7785892",
        "cursor": {
          "ref": "2fe50655-223f-4f8e-91fc-7acea522088d",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2488c959-7fa7-4a98-9b20-d95fdd445f36"
        },
        "item": {
          "id": "df31bfc7-745c-476a-9c0f-df08b7785892",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "23b35cba-a439-45bd-9f53-b6445afed315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0d63aa-3142-4515-b072-3d32726cc21d",
        "cursor": {
          "ref": "2e5598b8-cbb0-44df-bcc1-76628777e05b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "194dc78c-7ca9-44bd-b245-d48af7984949"
        },
        "item": {
          "id": "8b0d63aa-3142-4515-b072-3d32726cc21d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "03c22478-d47e-4580-898e-4889f9806d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6572339f-874d-44df-9883-ce60ed7e5439",
        "cursor": {
          "ref": "ef205c5d-5263-4655-b5c3-27bbe2168627",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8b4ff782-e28d-45fa-83dc-8804e7aef48c"
        },
        "item": {
          "id": "6572339f-874d-44df-9883-ce60ed7e5439",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0c3809a5-d67e-492d-968d-5abfa215a58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0f6966-ece3-41d2-895e-15b4dc052014",
        "cursor": {
          "ref": "7c2ca5b4-ce5e-4f62-8b56-d360c28c1328",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3e093714-7330-409f-b1a9-d523946ea96a"
        },
        "item": {
          "id": "5e0f6966-ece3-41d2-895e-15b4dc052014",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6fac75d2-2782-4503-aaf9-77c8cc3ed908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef07c81-53d7-4105-91b7-f76d05e36c64",
        "cursor": {
          "ref": "1b19b296-2116-46a0-96c0-7c75608df787",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "54c2d021-827c-447f-8dba-3d1f7697e44e"
        },
        "item": {
          "id": "2ef07c81-53d7-4105-91b7-f76d05e36c64",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1bfddd50-af1b-4a55-af00-ede459f9d3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e59aac5-b486-4efd-8b42-2e4a4b1db374",
        "cursor": {
          "ref": "d24d8c1b-dbd3-4a08-8687-7fc2c45cb502",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "50b09e4b-03ab-4027-a8cb-5424e47a0a4f"
        },
        "item": {
          "id": "2e59aac5-b486-4efd-8b42-2e4a4b1db374",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "108d41e8-7bae-438b-9ede-d7dcead8c32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc86f21-ea7a-4713-afba-bafd0282f06d",
        "cursor": {
          "ref": "8df26a0d-7599-4a83-85f9-aca5dfbfea87",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ee39dd97-7096-412f-836a-54ab4eac3d8a"
        },
        "item": {
          "id": "9bc86f21-ea7a-4713-afba-bafd0282f06d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "40400464-32c5-43b2-b18e-d2320292d9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b8b9bc-11d2-45f6-9716-eeea814191bb",
        "cursor": {
          "ref": "1cdaa59d-6409-456e-89b4-dadc70dbf7e8",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "692c8575-5290-4d0c-aad7-09c227bb5d82"
        },
        "item": {
          "id": "79b8b9bc-11d2-45f6-9716-eeea814191bb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bbd1abf3-8d9a-4a34-a1a3-0b31d0627317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c79415c-c0ec-40a5-8e69-8bf44c188377",
        "cursor": {
          "ref": "8c3b4223-90db-4a45-87bb-6c2a9204cf3d",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e9f541b1-6f59-4fd6-89ea-16b44450178f"
        },
        "item": {
          "id": "1c79415c-c0ec-40a5-8e69-8bf44c188377",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "488056fe-b877-4f6f-bb9a-07df0253df7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b2762d-ef45-4cd1-aa9a-eca09bf214ea",
        "cursor": {
          "ref": "5be504d5-1dde-4423-858d-08a697acb6ae",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "540d8922-e4f6-49b6-b881-77a2d2db5510"
        },
        "item": {
          "id": "70b2762d-ef45-4cd1-aa9a-eca09bf214ea",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "118f0b30-79f7-448d-b4ce-048c02cdd36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1625f999-2d6d-4aeb-9b96-fce96f5b50b3",
        "cursor": {
          "ref": "6eac245c-c910-4412-8f94-13f79eeb4311",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4c588857-5839-4e1a-b752-80496093d0bc"
        },
        "item": {
          "id": "1625f999-2d6d-4aeb-9b96-fce96f5b50b3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "25e95bad-9d91-42e8-a055-82658f4e00c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef185d16-188b-4318-90a0-9ed9e069a2e3",
        "cursor": {
          "ref": "5f785a4e-1270-4228-a8d5-9a58006929ee",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c3aadde2-3e29-41f5-aa8e-81be2d021a7b"
        },
        "item": {
          "id": "ef185d16-188b-4318-90a0-9ed9e069a2e3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "96836fa5-71c7-42e6-adc5-5c219fe8c519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6a2221-49b2-4a2a-aa04-33673585e767",
        "cursor": {
          "ref": "23612a94-9fe1-44d3-9fae-2fbbca28e61d",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0d08dcdc-4f6f-4386-bf67-40495ea74eeb"
        },
        "item": {
          "id": "9c6a2221-49b2-4a2a-aa04-33673585e767",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8cb3db72-66bd-484b-90f7-0eda4ef64605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37df0757-94f7-4c93-9740-e63aa9c400b1",
        "cursor": {
          "ref": "77950553-e387-488b-bd6a-cf234acf8210",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "208c174d-8b72-4622-b644-7b3806f457ca"
        },
        "item": {
          "id": "37df0757-94f7-4c93-9740-e63aa9c400b1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "02724d32-315e-45c0-b497-c2dadef3acf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7194e02-6b3e-48fe-b1f9-726b2bcba96d",
        "cursor": {
          "ref": "b4817444-5f9a-44d9-aa7f-ab982434bb39",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3a673b96-d616-4f77-bd97-97855f6af71c"
        },
        "item": {
          "id": "a7194e02-6b3e-48fe-b1f9-726b2bcba96d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "57fb5857-c36a-4aa8-b54f-89ee010a7d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e9e00c-609c-426b-af55-6ef3b8e95a17",
        "cursor": {
          "ref": "f7fb02e7-ea91-4da5-b24e-3ec3dc0a883f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "72ce6ebd-97b4-4145-a749-f0f7edda18b4"
        },
        "item": {
          "id": "46e9e00c-609c-426b-af55-6ef3b8e95a17",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "278a0af1-bf14-4959-9ae2-1e3202147d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777addc8-a4d8-4336-b810-0f7da7bb4407",
        "cursor": {
          "ref": "7c966525-85ba-4081-95ef-a9ba0e9cc79f",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "28ff2c8b-a7b0-429d-8c01-1bf2a0229a33"
        },
        "item": {
          "id": "777addc8-a4d8-4336-b810-0f7da7bb4407",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d84e3ed2-e06c-4b3f-8b86-6f6abae4e98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daef601c-1158-4e3b-abea-da3ac701b0c8",
        "cursor": {
          "ref": "66156d80-f5f0-4e26-9f89-ab562529e214",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fd66830f-20c6-4587-a9ee-2ea1c1aaf311"
        },
        "item": {
          "id": "daef601c-1158-4e3b-abea-da3ac701b0c8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8dc2a1da-85b6-4bb3-915d-420c4805ccbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8a1163-4026-4aca-89e5-f1d4e313b8ac",
        "cursor": {
          "ref": "e20960cb-081c-4556-a74c-e76078b6b68c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "75204bf3-2708-4d90-be45-ecbe8953ebe3"
        },
        "item": {
          "id": "1e8a1163-4026-4aca-89e5-f1d4e313b8ac",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "865c1504-3998-4a35-a3fc-a02727ad16d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ec5fd4-35e6-49f8-a996-2aa4911487bd",
        "cursor": {
          "ref": "ec0798ba-4e81-431a-bd67-2cfa660105ed",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "33c0bb35-1a75-48ad-bea2-9e73cff08e39"
        },
        "item": {
          "id": "98ec5fd4-35e6-49f8-a996-2aa4911487bd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1739967c-2108-46a6-b7e7-d978d34dd5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b2cf72-fd94-4777-80c0-17250998ea26",
        "cursor": {
          "ref": "b7e6de6c-e9f0-4d52-b459-aa48b13fd6ad",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c49cf8e2-5f66-42e7-8f51-cfb5334f9552"
        },
        "item": {
          "id": "d4b2cf72-fd94-4777-80c0-17250998ea26",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "58f8a731-403c-40f5-804c-62a6c4feed06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3bf411-fee8-41df-88e7-4003e09f3a63",
        "cursor": {
          "ref": "dc36a264-18b4-466c-bd1a-01be28af5546",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2d6de23c-c0ef-442e-b3d3-b43a3168779b"
        },
        "item": {
          "id": "be3bf411-fee8-41df-88e7-4003e09f3a63",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "59ab676c-98b3-4234-9c4d-b5d381f5810c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924c982e-b6a9-4c6e-8164-169afa807b60",
        "cursor": {
          "ref": "255ec32c-89bf-4cdf-9e8f-88f3cc2c5aef",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "53abd0b3-f43a-4428-860e-1b7b79757f02"
        },
        "item": {
          "id": "924c982e-b6a9-4c6e-8164-169afa807b60",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d192e57d-c573-41d3-b2d4-9668681a1e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfd6d08-2376-4209-9c78-fe63eca4054c",
        "cursor": {
          "ref": "e3d4058d-f31e-41a3-9cec-ea11a5bf4e16",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e990b74b-18d0-465f-be00-b0f0758e7aaa"
        },
        "item": {
          "id": "5cfd6d08-2376-4209-9c78-fe63eca4054c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bd92cd85-a6e7-4ccf-b7c2-1238daac846d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50fbfe8-a710-4d77-85b3-7ec77339484f",
        "cursor": {
          "ref": "aafa604d-3d58-45ad-bc5a-780ab400b90d",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0131a34d-846f-458f-b9b2-f004749e5565"
        },
        "item": {
          "id": "c50fbfe8-a710-4d77-85b3-7ec77339484f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "99a5c8a6-abc4-49bd-9dcd-163d6414a1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e589f31-a6a7-4572-9a89-2eefe38d98b3",
        "cursor": {
          "ref": "c47a3d11-ff21-4c70-974d-9022e2db37df",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f2e82c98-d15e-422e-b98a-b295908de3a3"
        },
        "item": {
          "id": "7e589f31-a6a7-4572-9a89-2eefe38d98b3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3b9177c0-d9e6-4ab5-84b7-cebaccbdad3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e00a0a0-90a6-42d3-be4e-32338349c27d",
        "cursor": {
          "ref": "f6d73fac-b82d-49a5-9f7a-cb5988231474",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3ff2d3e9-2a24-4059-9919-9899d02eda6c"
        },
        "item": {
          "id": "2e00a0a0-90a6-42d3-be4e-32338349c27d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3bab1d91-25ae-47ee-8169-a0d3ea31e533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e8f071-45b8-4f30-80c4-9e4aedc428a8",
        "cursor": {
          "ref": "6773fb38-63b9-4caa-911b-73e691973ed3",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7e727a42-82c5-4b10-87c3-35fd3bd3c4a5"
        },
        "item": {
          "id": "66e8f071-45b8-4f30-80c4-9e4aedc428a8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d401dbbd-b5e8-401c-93f2-42bea03e8a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8572508-6884-495b-bdd9-7b848090d1a4",
        "cursor": {
          "ref": "756d55e9-469e-4f2d-b65f-73ed3f86de0e",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "56101bf4-b31d-4976-800a-600bf093e9ff"
        },
        "item": {
          "id": "c8572508-6884-495b-bdd9-7b848090d1a4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3e489f8b-96c7-43fc-9688-56d8112d3e77",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4127f7-1fc2-40a6-9b9f-71edb24ab9c1",
        "cursor": {
          "ref": "7c661ed0-3299-4f00-86d8-f5c47249a212",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2ed3b075-97bc-4ffb-9820-de5cf515a54a"
        },
        "item": {
          "id": "7c4127f7-1fc2-40a6-9b9f-71edb24ab9c1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6d6e7c09-5616-4f5b-9224-ea573653d8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c8a6e4-a1b4-48a5-b93f-4a91ff1b7d4d",
        "cursor": {
          "ref": "53deee7e-66c9-479c-99bd-bc3cf70ff99a",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1d9b3406-f62a-4c82-9a91-7964218c26f7"
        },
        "item": {
          "id": "c6c8a6e4-a1b4-48a5-b93f-4a91ff1b7d4d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "365c5924-f2d4-4eec-8b80-a57a87792d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1efb595-f582-4971-9819-84dbdb543f03",
        "cursor": {
          "ref": "725d86ec-b844-4cca-b4ef-cb4209e01615",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e901979d-c195-4391-9b20-add474b12760"
        },
        "item": {
          "id": "e1efb595-f582-4971-9819-84dbdb543f03",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6283faa1-8c05-4081-98cd-e7d512c7308c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16100e67-8acb-44ef-96f2-4fda1b046de3",
        "cursor": {
          "ref": "89250d07-e866-4b86-93bc-15fd42652134",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8016cacb-6733-480e-815d-db76e33ad944"
        },
        "item": {
          "id": "16100e67-8acb-44ef-96f2-4fda1b046de3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b4ffbc4e-785c-49e7-8058-41ac4bbfaa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3532eb63-9f20-4ed7-8edd-f4eae7d508ac",
        "cursor": {
          "ref": "0959cae1-62cf-401e-ab5d-f9935d83789c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "25c186e8-e588-49c2-bc29-9fa1881923c5"
        },
        "item": {
          "id": "3532eb63-9f20-4ed7-8edd-f4eae7d508ac",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "585c03d0-6c64-4362-9794-23e7caebf561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3566b72-ead9-4a49-8eb5-6caf73d2155e",
        "cursor": {
          "ref": "40dfc08a-2e95-43de-bdaf-589051e754a8",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d6c47707-2754-4171-aa69-5c383d5d346c"
        },
        "item": {
          "id": "b3566b72-ead9-4a49-8eb5-6caf73d2155e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a1639964-5345-4190-ac79-83430a4650db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17196bc9-3b5c-48c1-8454-549ac043712b",
        "cursor": {
          "ref": "17423fe6-04ea-4362-b16d-611ae631916d",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0b125e2d-22c0-41b6-acda-2d615d2e7e48"
        },
        "item": {
          "id": "17196bc9-3b5c-48c1-8454-549ac043712b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "208e3d1c-68a7-4d14-9a4c-b530c70cf0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b816cb-3a96-4916-8e70-e249b2261b96",
        "cursor": {
          "ref": "e9c1312e-cf1a-455f-8a62-212b2e315541",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8905c1fa-c3af-4891-ba27-ea626a4eb381"
        },
        "item": {
          "id": "87b816cb-3a96-4916-8e70-e249b2261b96",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b0051550-4143-44d6-afa1-7d774866a895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29abbe08-54ee-408f-9911-122a8347fca0",
        "cursor": {
          "ref": "7edeb25e-1725-45aa-aafe-fd6a1c1a547e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a8f339d4-5f7c-4121-9e17-892243b1efc6"
        },
        "item": {
          "id": "29abbe08-54ee-408f-9911-122a8347fca0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "81c1bb67-29f6-4c53-b109-ccc30fc0d0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d705205-c3c6-452c-bc41-274ec638384d",
        "cursor": {
          "ref": "b925f5a5-91b5-4d6a-8117-4635fedd86b9",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9f6c17be-0dc0-4021-ac04-3bd0d3a2a182"
        },
        "item": {
          "id": "7d705205-c3c6-452c-bc41-274ec638384d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9cb21889-b0bc-4caa-8590-3ec3571983ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51789bc7-50d7-43ea-ac8f-47ba7563ce59",
        "cursor": {
          "ref": "91a5006e-50c6-4966-9202-3385d052e31b",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a2828442-70d8-408e-a01b-9cb37da50921"
        },
        "item": {
          "id": "51789bc7-50d7-43ea-ac8f-47ba7563ce59",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "63b480f5-cf32-40ad-8fa1-a2785f4a5d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2dd495-29c8-4fed-87bb-41a32fa9ef42",
        "cursor": {
          "ref": "7ad970ff-44e9-4130-b624-7cbb60a2a138",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d5faf399-fa7a-4614-9377-0a299f146f24"
        },
        "item": {
          "id": "dc2dd495-29c8-4fed-87bb-41a32fa9ef42",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a8f1fde1-af40-413e-b9d1-4921b1f901fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee7ef59-9731-47d4-8b98-d37117a082ea",
        "cursor": {
          "ref": "fbd3144a-fadb-4765-85d4-aad2a7f64b04",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a95c2ae7-0677-4500-964f-00384a6c30c9"
        },
        "item": {
          "id": "aee7ef59-9731-47d4-8b98-d37117a082ea",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4a67976e-e096-4291-8e52-21e2ed8b855a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab288a9-a6e2-4867-b066-5ab10bf6f8f4",
        "cursor": {
          "ref": "81b0b52f-8f34-4749-bff2-ee986045a166",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "df7af9bf-e7b6-4264-bfcd-87b88e5d5981"
        },
        "item": {
          "id": "eab288a9-a6e2-4867-b066-5ab10bf6f8f4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a45b5a76-68d3-4acc-9709-b80e9bf4bca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f5e780-2128-4b40-8427-28ef23de407a",
        "cursor": {
          "ref": "8630e30a-a43f-407d-9649-646e6c184ad1",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b978cf61-b96a-4eae-9a4a-32ab2ebda899"
        },
        "item": {
          "id": "05f5e780-2128-4b40-8427-28ef23de407a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6ab2adb4-8e90-4769-b5f8-463f2fc56fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d485bb-370f-415f-a04f-9b250264421b",
        "cursor": {
          "ref": "5434f62b-b63f-4faa-9180-4ea3a75b866c",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "28cdf287-9775-43d2-ab2f-e40a6cdf5c77"
        },
        "item": {
          "id": "e3d485bb-370f-415f-a04f-9b250264421b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f0811df8-be82-4226-acf4-9c8852f9f811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a33f5d3-d9cd-4895-a6e7-1a5cfbea30fc",
        "cursor": {
          "ref": "b57b776a-1459-488c-9e94-9164090bd944",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "35011f5e-199a-4911-b29a-a261f8b05627"
        },
        "item": {
          "id": "5a33f5d3-d9cd-4895-a6e7-1a5cfbea30fc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d55ea5f0-3624-4525-aedf-8b25fdaeea81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69010633-1b54-407a-8ad4-247be07d9205",
        "cursor": {
          "ref": "caaed716-23f5-430b-919c-e14c99c8175c",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e2c9501e-098b-40d6-a151-939838096450"
        },
        "item": {
          "id": "69010633-1b54-407a-8ad4-247be07d9205",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "91f89d80-56e1-49a0-8b29-1403cc95777b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dfd0e6-93a3-4fe7-a355-278a9640a187",
        "cursor": {
          "ref": "f1f7521a-14e1-4085-a313-4e8ed6bc4357",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "df3d3b57-34d5-426a-8e80-9ec5fdcdf2f0"
        },
        "item": {
          "id": "a2dfd0e6-93a3-4fe7-a355-278a9640a187",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "abee5893-6dea-4397-adba-b8b92d86ddfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32ddffe-be66-4218-be11-f2cf50958d98",
        "cursor": {
          "ref": "42e05266-2c45-4d03-a217-d7ef02acf828",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0034d9cd-c0c0-4a5e-8594-6b156a7f541b"
        },
        "item": {
          "id": "b32ddffe-be66-4218-be11-f2cf50958d98",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d3a2ae42-8e58-4f20-b7e6-46ad2b9b0e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36a4328-4a6b-4fc4-836e-9d372d3b30bd",
        "cursor": {
          "ref": "6483a401-9a0f-4ed0-a8bc-685fc22df88f",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "269a2b76-2cac-4b6b-b524-22a20d47a39a"
        },
        "item": {
          "id": "d36a4328-4a6b-4fc4-836e-9d372d3b30bd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cb14c17f-3ce7-46e8-b8e3-7758bdd666bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7acdbe4-03df-4f58-b696-4644f0b620bb",
        "cursor": {
          "ref": "8a27e984-ed9f-4cf1-8cb9-845e71601ce5",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d911d662-7718-4951-886c-1a5419067a09"
        },
        "item": {
          "id": "a7acdbe4-03df-4f58-b696-4644f0b620bb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c585436b-d548-423a-9c9e-428cab42472a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e8f51d-9a6a-4bd0-955e-4f5376ddd326",
        "cursor": {
          "ref": "0a12a8d7-dcf4-4723-bc84-03bd69f307f9",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2b4854a3-cb59-48f6-9783-693dbe1ec824"
        },
        "item": {
          "id": "42e8f51d-9a6a-4bd0-955e-4f5376ddd326",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bcff32c1-5cc8-455c-be32-76a8036021fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310d1e32-a904-42cb-9f7f-c7e5deb19559",
        "cursor": {
          "ref": "abdc086a-aefa-4d25-9939-98d7b0189ae4",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2f0d82e6-a7a1-4fb0-9bcb-06e4976a910e"
        },
        "item": {
          "id": "310d1e32-a904-42cb-9f7f-c7e5deb19559",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d9369308-1cab-4c6c-ad55-ba2afbb4ca47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e50925-0504-4c62-850d-942c2f927d56",
        "cursor": {
          "ref": "0309a24e-3cf1-4fa1-aebf-1469311c8ab3",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e0299993-f9c8-4739-81bc-7864445bd324"
        },
        "item": {
          "id": "f3e50925-0504-4c62-850d-942c2f927d56",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d1b49915-88e7-439b-aa0d-55cbed5e2b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea2b35d-24b0-46a9-bd4b-2b355ae31b88",
        "cursor": {
          "ref": "936499a6-55c4-4fe4-99bc-e891054ef659",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "06d8b888-a9bf-4b7e-a88a-e7255d5f5b68"
        },
        "item": {
          "id": "2ea2b35d-24b0-46a9-bd4b-2b355ae31b88",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "35ef9df3-2260-4476-89d8-6a8f422f23cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01ea0b9-f54b-4ace-9789-c472dfb2a23e",
        "cursor": {
          "ref": "61348b64-7462-41e7-b814-774e145bc9d0",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a4acb527-61c2-48e4-955e-42aecfeccf9b"
        },
        "item": {
          "id": "e01ea0b9-f54b-4ace-9789-c472dfb2a23e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "379c3bf5-7bda-406c-bb06-32ac940a642a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302d5ee9-091d-4ef1-95cf-9204d80b3944",
        "cursor": {
          "ref": "a59af74d-279b-441a-9ffa-63bcb060a2ae",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "04c701dd-7f05-48c2-875d-c67efb1c30f1"
        },
        "item": {
          "id": "302d5ee9-091d-4ef1-95cf-9204d80b3944",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "688aa20b-0120-4833-99dc-fab9f4776d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28a3ce5-a45e-495b-9958-dbb77ee87b99",
        "cursor": {
          "ref": "3d03c187-22d9-4f31-9f0e-6004070e6257",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b6c0050d-d34a-46bc-83d7-9ea7e7a79cd7"
        },
        "item": {
          "id": "a28a3ce5-a45e-495b-9958-dbb77ee87b99",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "91eb9da3-00c6-44a0-8303-febe360118b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa232901-60da-4a14-bb65-3c71a1f579e3",
        "cursor": {
          "ref": "fec0605a-71ef-4539-92f2-99c1fc0c8735",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "131cfa28-9205-48db-83c4-07228c67c855"
        },
        "item": {
          "id": "fa232901-60da-4a14-bb65-3c71a1f579e3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3c946cae-3eb0-48f2-a2ff-2a28ba8d15b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f16f48-a618-41bc-b3e5-3420e35ea451",
        "cursor": {
          "ref": "e034e2d3-4f38-4baf-9a57-559590af9604",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "931e813f-e256-4c22-ba3f-1ebf90e5bf97"
        },
        "item": {
          "id": "50f16f48-a618-41bc-b3e5-3420e35ea451",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e213266c-b690-40ce-a68f-4aaae0bb0d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c09071-8f96-4f3a-8789-851c8227db6d",
        "cursor": {
          "ref": "68b20c7f-c8d7-46a8-96dc-96e068740561",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ece13ccb-a5de-4fa1-a789-5dcd99d944fb"
        },
        "item": {
          "id": "07c09071-8f96-4f3a-8789-851c8227db6d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ef2f31c4-89d0-455c-a751-353173a2ced4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8459a264-85e1-4288-bb9a-09a72bab7649",
        "cursor": {
          "ref": "c82be424-0efb-45ab-807d-88294b1038c5",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7a25258d-f7ea-4162-89f1-2254ee6e5956"
        },
        "item": {
          "id": "8459a264-85e1-4288-bb9a-09a72bab7649",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0f84bfcd-30d6-4e94-bab5-cac5f93abd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26dcef4-7d34-4454-b2e1-651eddd19152",
        "cursor": {
          "ref": "1a326f58-eb31-44f5-8677-9aba7d51afac",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "62537958-0f48-4b19-9852-aa5e94b3bf57"
        },
        "item": {
          "id": "b26dcef4-7d34-4454-b2e1-651eddd19152",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "84ec31d1-2f8e-48ab-a276-67f5a935e251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3472f0cb-681d-4207-a647-a2e5abcaadc4",
        "cursor": {
          "ref": "a04e6be8-f882-433d-bd88-331797534950",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a509f251-0b7e-48ff-8106-c346b2a4f20d"
        },
        "item": {
          "id": "3472f0cb-681d-4207-a647-a2e5abcaadc4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "143d2860-371b-4e86-9862-da00f2bd04b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbdadf3-dd43-4164-a7cb-43fa3daa5d0f",
        "cursor": {
          "ref": "33015a2d-7a5d-4f0c-93d4-e3d452e29578",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "57d4d1b1-05c5-4878-8c28-a605440a4eb5"
        },
        "item": {
          "id": "fbbdadf3-dd43-4164-a7cb-43fa3daa5d0f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "add978f5-b54c-4d16-8cab-f824ca1f0efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7711054-350d-4340-aaac-75f9163d4b50",
        "cursor": {
          "ref": "916bfe9a-2cfb-4aef-961a-9485a9adf4d7",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f6849c2a-ff63-4258-8450-4e14e1f1eb53"
        },
        "item": {
          "id": "f7711054-350d-4340-aaac-75f9163d4b50",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "13e16ae8-a8ef-4cbd-beab-a99587890877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f89b5f6-1dd7-4b95-a123-9eef2c72cff2",
        "cursor": {
          "ref": "0245878e-cc16-45c9-a7f7-d29d0ae645a6",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ea247ac2-a55f-4747-ba33-d4fee3976ffe"
        },
        "item": {
          "id": "8f89b5f6-1dd7-4b95-a123-9eef2c72cff2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8d040f74-129d-441e-b371-63c8d027e8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e572446-6644-4eb9-8b15-be5ac6e9f20f",
        "cursor": {
          "ref": "d49af962-d691-4f8f-ac6f-1033faeff574",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "464b328f-eadb-40e1-b547-5f0188f554fb"
        },
        "item": {
          "id": "8e572446-6644-4eb9-8b15-be5ac6e9f20f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "22f34d16-f6e4-4c5a-b484-574c2a71926d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8919cf0-56ec-4bbd-b99f-361dd789f9f9",
        "cursor": {
          "ref": "93fb445c-11dc-4fdb-8c00-21c5d3d5f5db",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7132e248-5c09-493a-ab98-2d5d7bde21b9"
        },
        "item": {
          "id": "d8919cf0-56ec-4bbd-b99f-361dd789f9f9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "30b59801-1501-4013-b356-ff17d6be210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb997a3e-4acc-4cfa-9553-4eca8d92bf28",
        "cursor": {
          "ref": "d77d6660-5490-4fc7-8780-83256239a9e6",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "843c391c-fb45-49c2-9a5f-00d1073e0754"
        },
        "item": {
          "id": "fb997a3e-4acc-4cfa-9553-4eca8d92bf28",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ca6155a2-dbf2-481b-a3e1-f0741cfee4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031a9013-c772-4545-b6e0-a8673da89e29",
        "cursor": {
          "ref": "8d824133-2cab-41ab-8732-a030d8a30a65",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fed6404d-2f90-4b21-947e-14baaf852625"
        },
        "item": {
          "id": "031a9013-c772-4545-b6e0-a8673da89e29",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "799a0971-5222-4b77-a388-9ce16aba9dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94ae1cb-f1ea-40ba-8493-036691d9cd63",
        "cursor": {
          "ref": "3407c965-691b-4fe4-86ef-1bfe46ea1bc5",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "37f7a841-96a3-4e52-b028-818d4e1b2515"
        },
        "item": {
          "id": "d94ae1cb-f1ea-40ba-8493-036691d9cd63",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a5108a08-926b-46c1-9b61-2211ff060ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd27b1a5-4007-41db-8efd-1f0f9e8a147b",
        "cursor": {
          "ref": "d1ebfa6c-b783-42ea-a984-fa9c8afeb130",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0b99950b-104c-4b60-8773-c3c18484b95b"
        },
        "item": {
          "id": "fd27b1a5-4007-41db-8efd-1f0f9e8a147b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "41a41176-001b-4951-93ad-82e3012162b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1beec862-bd4b-4234-bf8f-9fc592ff53c1",
        "cursor": {
          "ref": "c6bec0cc-6e3b-40e3-b832-afa468cb8472",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b22e185b-857f-46b0-bc2b-11f9430955d0"
        },
        "item": {
          "id": "1beec862-bd4b-4234-bf8f-9fc592ff53c1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "514c2aee-f19a-444c-bc72-76bdc0d715de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20226e1a-180f-442e-9fe3-956d2311bdeb",
        "cursor": {
          "ref": "734d9ba4-5749-456f-a92c-e812a56f9440",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "44e3d800-a8ec-4688-a5b5-c772a717b31f"
        },
        "item": {
          "id": "20226e1a-180f-442e-9fe3-956d2311bdeb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d4527e1f-9378-4e8d-be00-865c364d6634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ff873a-91da-433a-be0b-38bbc900dccd",
        "cursor": {
          "ref": "8ddd12b8-bd49-497a-8db1-daf4125243b3",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ff34df07-a8ab-4d96-af78-9afcdbe01f94"
        },
        "item": {
          "id": "62ff873a-91da-433a-be0b-38bbc900dccd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ba9c9b3f-92ad-42f3-adb7-f613053d9e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0e3605-e171-4b3d-b4ca-9f82e1467a58",
        "cursor": {
          "ref": "9be710db-1419-41d6-948e-1fd83fa03323",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "237acd94-0211-46c0-be44-5e8a258a55e5"
        },
        "item": {
          "id": "9c0e3605-e171-4b3d-b4ca-9f82e1467a58",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f0bcdc53-d38a-47f0-8869-625b60989e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eaed69d-40bb-4dbc-881b-7380806f738f",
        "cursor": {
          "ref": "009e978d-0c29-4d91-be27-b75a1818c145",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f1009a67-f4be-44ad-9421-16314375b127"
        },
        "item": {
          "id": "4eaed69d-40bb-4dbc-881b-7380806f738f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d418d318-7182-4dd9-8210-2471dc788f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a2354b-c3a1-4852-afeb-b5f02b3d3772",
        "cursor": {
          "ref": "b0ff7c94-2161-4b38-943c-e05175dd5902",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "28e92629-5b15-4e33-8cb0-b07876fbaf5e"
        },
        "item": {
          "id": "b8a2354b-c3a1-4852-afeb-b5f02b3d3772",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1abaabdc-f613-4adc-af69-34099fd51d2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3c1d20-9480-43a3-8b74-1cf836df5cce",
        "cursor": {
          "ref": "6153aace-6d28-4741-b963-c72c9b6dbaec",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "45475a2b-0bb5-4b0f-8c67-aed700cbffec"
        },
        "item": {
          "id": "ad3c1d20-9480-43a3-8b74-1cf836df5cce",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ebf0e028-bcb1-4ba6-b591-20464b9cbc98",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6520ac-c1c7-4dcb-9d28-4f5e97667ab3",
        "cursor": {
          "ref": "f098bc2c-d81a-4fff-99d7-406c7351966d",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d5639394-dde6-47f7-93e4-eaf05f808a34"
        },
        "item": {
          "id": "1c6520ac-c1c7-4dcb-9d28-4f5e97667ab3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "632f477a-c89a-4cec-8b44-ecfa8f36777c",
          "status": "Created",
          "code": 201,
          "responseTime": 105,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1dfdd54-7763-41fc-815a-3dae4e607f58",
        "cursor": {
          "ref": "4b175299-e02a-4293-b6a3-4f95f62fd2c1",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4ef275c8-9390-4089-9c08-888edf1ae32e"
        },
        "item": {
          "id": "b1dfdd54-7763-41fc-815a-3dae4e607f58",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a95232ff-26e6-4fac-a491-fdb555e683a2",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b39d87-cf59-414a-aa7c-168315c8ad2a",
        "cursor": {
          "ref": "b7219f40-d62f-4d4b-a3da-9a877106fcc1",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c1e382b6-bde8-430b-ae5f-c331bd813ab2"
        },
        "item": {
          "id": "96b39d87-cf59-414a-aa7c-168315c8ad2a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a8760d48-9bf6-4ad2-b0d7-9247e552e9f0",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8525ee-51cc-425e-a3a9-30dbd642fade",
        "cursor": {
          "ref": "6149108c-7e6f-4f43-ab09-9c84310f4f10",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "89740412-d7ff-4eb9-963a-0ce801f7e48e"
        },
        "item": {
          "id": "5b8525ee-51cc-425e-a3a9-30dbd642fade",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "df7d7cd5-8f72-426e-a073-204e0930b661",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6190409e-b8a7-41cf-b681-fe495f20e57a",
        "cursor": {
          "ref": "4daf3dd3-cef1-4e71-a689-975cc4e5d45e",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "61756cba-fff4-4350-8a8b-74ac83602310"
        },
        "item": {
          "id": "6190409e-b8a7-41cf-b681-fe495f20e57a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ed3ce883-2870-4d04-8fd6-87809af6d1d1",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671916b1-f8a7-484a-bb57-f6a543c30e6d",
        "cursor": {
          "ref": "16e33a47-339a-4c7c-890f-3d0b25e3e7d5",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c7c61298-95dc-425d-ba11-8af07cc69631"
        },
        "item": {
          "id": "671916b1-f8a7-484a-bb57-f6a543c30e6d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7b9f7454-ec49-49ee-ae2e-e2734fcda343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b478fda-afb6-41b9-99a3-436808f62427",
        "cursor": {
          "ref": "563974e3-8f2b-4ff5-b26c-a5603fb98830",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0e8ea318-409e-43b1-b68f-b44ba5125105"
        },
        "item": {
          "id": "8b478fda-afb6-41b9-99a3-436808f62427",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "aa06658e-668b-4859-95f6-229dce633622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a051a952-cb39-42cd-8352-a35031d67ae9",
        "cursor": {
          "ref": "040010d7-3ac5-4feb-85a1-b40042c3a79e",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "36c06345-9124-40e8-8bb0-66e00be9ee82"
        },
        "item": {
          "id": "a051a952-cb39-42cd-8352-a35031d67ae9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "af6ab4b1-96a0-447c-8f07-015c4dc0e0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e5f36f-5a3c-4953-a79d-5421e89419e7",
        "cursor": {
          "ref": "23abbfdb-8fe9-41b3-bfb3-706ea208eb9c",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ac40d229-20f4-4d82-b544-84739fefc125"
        },
        "item": {
          "id": "31e5f36f-5a3c-4953-a79d-5421e89419e7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2cd3ff5e-da6a-4bf1-ac65-c298061c46be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b60f58-a3a9-40ae-a244-4e54abb7fa07",
        "cursor": {
          "ref": "0a7d2463-f4ff-4ec0-bfa7-b44f797dc83f",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f6fcfaf3-8bb2-4f44-b218-4e0823bec86e"
        },
        "item": {
          "id": "82b60f58-a3a9-40ae-a244-4e54abb7fa07",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "95e34892-b925-4ee9-a6a9-4e04bfe272bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3f76f3-b790-4517-b316-cee9cdaa2c46",
        "cursor": {
          "ref": "d092c167-3805-474d-b641-b5c9e3da8b4f",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a95f45eb-ca68-4787-8d92-0ac2c1a21a4f"
        },
        "item": {
          "id": "1d3f76f3-b790-4517-b316-cee9cdaa2c46",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "85907bf7-a799-4c33-b06c-db6dfcf3e3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d66f15-2089-497c-9eec-ccb27c952b10",
        "cursor": {
          "ref": "92fb080b-ba92-42c5-9bd1-a765cc7cb48d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "14c0ef6a-7aeb-4f81-8c35-67597a33721f"
        },
        "item": {
          "id": "f4d66f15-2089-497c-9eec-ccb27c952b10",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4634f09f-33bd-46ce-b512-2e32b79c9959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf6f34b-c94f-41df-b25d-39a9f09dceb4",
        "cursor": {
          "ref": "30d9bffa-4b08-4f8b-a890-ef023e79c9d5",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "268ae2c1-3727-47fc-8230-97dbe1242494"
        },
        "item": {
          "id": "7cf6f34b-c94f-41df-b25d-39a9f09dceb4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "146af853-e8ce-44fa-a6be-56483f9ad35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56d8472-64ff-47cc-ac3c-137b2e030257",
        "cursor": {
          "ref": "571cf7ea-bc96-4c0e-853f-c3c0917f28b9",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2734e7eb-053b-451e-8dc8-27b6c4be6a15"
        },
        "item": {
          "id": "d56d8472-64ff-47cc-ac3c-137b2e030257",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9bfb99cf-5d6b-476e-82a9-ce9949e10093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba84e88-b030-4769-b1c9-148fcf075a2e",
        "cursor": {
          "ref": "5745980d-3f6c-44e8-b554-d882bfb7a8d8",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f6ee6021-4b17-4e40-89d4-79f0dfdc9b6d"
        },
        "item": {
          "id": "3ba84e88-b030-4769-b1c9-148fcf075a2e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "01a5b06e-fa85-421b-aafb-adb885dff4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b3b5e0-1126-489b-b08e-dd8bff040b5a",
        "cursor": {
          "ref": "5bd32c2a-5ee3-4d0f-aa74-08c4f7492c07",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8c08e06f-6ae1-41cc-bc6b-9f0ba6b33be8"
        },
        "item": {
          "id": "30b3b5e0-1126-489b-b08e-dd8bff040b5a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "291bf806-dc5b-4846-85a0-6af490d5d29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05751398-1ab9-4a6d-a738-0169bd5acadb",
        "cursor": {
          "ref": "9640781a-61b9-42b6-94d7-c90883c7e9c6",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bb5bb4e2-d610-43a2-8092-e5c0a44ad65b"
        },
        "item": {
          "id": "05751398-1ab9-4a6d-a738-0169bd5acadb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "045cc684-922e-4a73-a54e-b080944d9b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86dd47f-9203-4571-98f0-0e0e45a1da89",
        "cursor": {
          "ref": "e6965098-e8f7-48a6-976c-eba675207c9a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7d170e64-e939-4260-b18c-09c75ec344d6"
        },
        "item": {
          "id": "c86dd47f-9203-4571-98f0-0e0e45a1da89",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e12277a2-44c1-46aa-ab5b-490cbe0bf3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7230cd-f35d-4f8b-b0d3-caed514460a1",
        "cursor": {
          "ref": "e3c6011f-cc15-476f-9522-09c69e019243",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "180d5e05-f74f-4ff5-9d8a-96b7f6583774"
        },
        "item": {
          "id": "9a7230cd-f35d-4f8b-b0d3-caed514460a1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3d951939-21f4-46d5-b380-7d0e060e9647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3611e213-57b2-4cd6-8bc8-abfd47e14f47",
        "cursor": {
          "ref": "fe10efb2-8b99-499b-881d-36e70fec4ab4",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "56ea8194-3791-45c9-8b21-086b65382cbb"
        },
        "item": {
          "id": "3611e213-57b2-4cd6-8bc8-abfd47e14f47",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0e676f0f-815a-4065-8a52-c75fd2e67fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91af0076-457e-4376-b90d-a088985c2d38",
        "cursor": {
          "ref": "1c1e4912-ed63-4562-9ef4-7d18c9acb3ad",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ee2a2944-6454-4e65-9fb7-53cad08adae7"
        },
        "item": {
          "id": "91af0076-457e-4376-b90d-a088985c2d38",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c8b551c6-3400-4971-a0c2-53b46f88d0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6165aa-7c18-4fd4-8a07-deb3a58629bd",
        "cursor": {
          "ref": "9478381b-a53c-40c8-83e8-a21698e69877",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "29ceea54-e52f-45f9-be8f-c850774e4517"
        },
        "item": {
          "id": "ee6165aa-7c18-4fd4-8a07-deb3a58629bd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5a6d9c0b-b417-43a2-8afb-f7e4d575199c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f84d3aa-103f-4997-9775-cedceabb925d",
        "cursor": {
          "ref": "035f7f20-e153-4919-b022-4c3d1827a323",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4cc946bf-8b37-44b1-843a-704387d3341e"
        },
        "item": {
          "id": "6f84d3aa-103f-4997-9775-cedceabb925d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b821178e-9236-4d34-8ee2-31f1e3ae9e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418ac0ef-fa20-497e-99fb-b474c6f5a1ac",
        "cursor": {
          "ref": "80b6e160-9843-4031-a882-50564bf18bea",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6273c4ff-fe11-40f5-96f5-5c87395a8dd6"
        },
        "item": {
          "id": "418ac0ef-fa20-497e-99fb-b474c6f5a1ac",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9d2efcff-cbe9-45ce-b269-25a2a86cfb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83efd66-5d8e-4d15-884a-d6ef83add2ec",
        "cursor": {
          "ref": "b4fbc99c-b167-4efe-939b-6b1ab22e73ab",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9768134c-492a-4165-811c-add28f8d95e2"
        },
        "item": {
          "id": "b83efd66-5d8e-4d15-884a-d6ef83add2ec",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aed84cd1-1435-489f-84b6-012f469706b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1becc633-a022-46e7-a963-ba86ce4ebda8",
        "cursor": {
          "ref": "b9ee3df9-dba8-4283-bc4f-1387a8f06915",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a5b04983-1577-4c90-991a-e4ea3551ad44"
        },
        "item": {
          "id": "1becc633-a022-46e7-a963-ba86ce4ebda8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4ff127b7-a98f-4be2-a6da-b80f08a31e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3159f904-1269-4829-84cb-7d73250ddee2",
        "cursor": {
          "ref": "119c03a9-db2b-4ae3-a893-7889ea65414c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "398ebca1-8586-4317-b74e-b1254236e86e"
        },
        "item": {
          "id": "3159f904-1269-4829-84cb-7d73250ddee2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "79fc6ab7-be87-4d47-bd50-6d72c2264f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7508f789-51e2-4a7e-a7a4-8689b8d085e6",
        "cursor": {
          "ref": "5c91ec91-c6b0-4b0b-9871-a1835d77db34",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "16de798a-d366-47ac-9ae8-9ed91772487a"
        },
        "item": {
          "id": "7508f789-51e2-4a7e-a7a4-8689b8d085e6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "583feedd-f4e9-4f7d-beeb-57df3ad5ad92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ee4d04-4257-4330-bdb4-623bc90e5c9d",
        "cursor": {
          "ref": "a8aa8d27-8e83-4d4d-9d82-82255913eabe",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "09855c9a-dc1b-4aa1-9bc2-756fd3cb3c94"
        },
        "item": {
          "id": "89ee4d04-4257-4330-bdb4-623bc90e5c9d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "374114fb-6432-4216-8fde-fd75bbdcc9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b33ed2-c99c-4e38-9ad3-960fb54509c6",
        "cursor": {
          "ref": "f19fdcfb-fabe-4f1a-b84c-63473cb97ad4",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6f70bb55-5d0d-442a-a5d6-0b53b058be29"
        },
        "item": {
          "id": "10b33ed2-c99c-4e38-9ad3-960fb54509c6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e1fc6a43-5b6f-4a41-a640-7a3228e4e7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cd070c-3105-4829-a4e2-d2238919f110",
        "cursor": {
          "ref": "e6dd119d-e462-410f-a7ba-61c90e96e942",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cc50fb03-4e9d-442c-a571-381a4155f4a3"
        },
        "item": {
          "id": "82cd070c-3105-4829-a4e2-d2238919f110",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ec6fa4d9-ae77-41d3-a048-64f1293e03a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfc5b89-e720-4075-900e-b009041d5601",
        "cursor": {
          "ref": "d72c55bd-837d-4e34-8289-7ebd95ddb1d3",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a6e92a0e-b9a0-45a0-8f81-7e3472bc2637"
        },
        "item": {
          "id": "dbfc5b89-e720-4075-900e-b009041d5601",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f438b103-4387-42c5-b7f9-08a1988e7208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf70229-d862-4985-8d0c-791bbeccda42",
        "cursor": {
          "ref": "cf411f13-3728-4d97-8b0b-4e3272cfefe8",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c8334d01-25f4-445e-8e43-c641d596356d"
        },
        "item": {
          "id": "0bf70229-d862-4985-8d0c-791bbeccda42",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "67be3a16-e7b1-4051-a482-c4cf9147c1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b935a85c-aad7-4cb5-88d9-a48345406778",
        "cursor": {
          "ref": "a8b87ed2-f92e-4a4a-9e2d-f76d3adf72af",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c2ec5b36-e51a-47bd-8ded-abf9c75ce164"
        },
        "item": {
          "id": "b935a85c-aad7-4cb5-88d9-a48345406778",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "59c53359-b6cf-494f-a2d1-97f0ea812f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e47a446-2d7b-482f-a4b3-12fdab3da39b",
        "cursor": {
          "ref": "afca8a61-efb4-48eb-ac2d-a04159bbe1d9",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e1683363-5d17-45b9-9095-bccdc326453b"
        },
        "item": {
          "id": "1e47a446-2d7b-482f-a4b3-12fdab3da39b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8a073fb3-81c7-48d9-bf23-153948c81f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db88b79-f9bb-4c49-a766-8d2eed28f394",
        "cursor": {
          "ref": "acb90262-5ab8-49d8-a3e3-d136a4233d6c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "276cb695-9b61-4e5a-8778-3b267546bed6"
        },
        "item": {
          "id": "6db88b79-f9bb-4c49-a766-8d2eed28f394",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e4fba376-1bcf-4bbc-8f02-33f907184493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685b8c57-9c08-4dde-8f82-a6a7ed556ca7",
        "cursor": {
          "ref": "a92a87a3-debd-4422-b96a-5e8b06d3ac5d",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "47672001-81d1-46f1-84fb-f48e29c0efbb"
        },
        "item": {
          "id": "685b8c57-9c08-4dde-8f82-a6a7ed556ca7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6b5f7625-b319-4250-9128-88b0df027d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218f6d0b-6b14-40f6-89f3-88ed61414e85",
        "cursor": {
          "ref": "b2f773bd-805a-4fcb-abd1-9b4251dd7d3a",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fbae8c84-325f-484a-bcca-3b6ef06cd0de"
        },
        "item": {
          "id": "218f6d0b-6b14-40f6-89f3-88ed61414e85",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2a007ac7-ef8d-44b1-9c0e-2df81021fd16",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cce385-0481-44ac-82bf-aaf4bafb4e70",
        "cursor": {
          "ref": "e3d13db9-e0c0-467a-beb5-c032f319b97f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e6f9337b-db64-4883-9099-29f5086e4e84"
        },
        "item": {
          "id": "c2cce385-0481-44ac-82bf-aaf4bafb4e70",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "94856cc0-d6d6-4aa1-9983-35c9021216e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e93011-0bad-4a86-b914-05eba238f686",
        "cursor": {
          "ref": "651662b9-3dfc-4780-8dc4-54842f8d0fb9",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2dfec127-ed6b-4351-974f-f96af60348c5"
        },
        "item": {
          "id": "70e93011-0bad-4a86-b914-05eba238f686",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "098c3cba-f58a-468a-8993-26fb64ec7a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148477a7-9ce2-4759-8c1f-ecf93540e846",
        "cursor": {
          "ref": "49c0cc1a-5af8-41b4-a8f3-c7589251255b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fc2cf970-c1df-4249-9a4c-4f0762a6c002"
        },
        "item": {
          "id": "148477a7-9ce2-4759-8c1f-ecf93540e846",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c0a3d9c2-bac2-4593-a459-82feb4394f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd46feec-878c-4688-b93a-371fca92110f",
        "cursor": {
          "ref": "6bb9743a-fc9b-465d-9158-724e91d92821",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "efa152cc-2e87-4566-b8b1-94fb5db3d7d1"
        },
        "item": {
          "id": "fd46feec-878c-4688-b93a-371fca92110f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6f1963b5-80e2-446a-84e7-b62d14f21bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660dd7b2-1c83-4ffd-aa77-596fd62a4fd9",
        "cursor": {
          "ref": "da0b359b-9600-439d-987e-cb741698b924",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c8feda9f-e93b-44af-932c-d0048596c85f"
        },
        "item": {
          "id": "660dd7b2-1c83-4ffd-aa77-596fd62a4fd9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4c24fd8d-3b7b-4bfc-8098-84752d7528a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba50d665-f217-40f3-be4c-297bf3f47c1f",
        "cursor": {
          "ref": "2872e56b-ac7a-498c-b354-509bb50bb671",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0093ce1c-2023-45b8-87be-295d844e659f"
        },
        "item": {
          "id": "ba50d665-f217-40f3-be4c-297bf3f47c1f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "38f45a6e-0bce-4129-97f9-cd501a5ccda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e1a2b0-5048-4f08-925c-eaf23c2bfbf8",
        "cursor": {
          "ref": "f556094b-2222-45ce-968f-520a042d757b",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "59e72222-e318-4c6b-80de-4b4e8e3aad56"
        },
        "item": {
          "id": "a4e1a2b0-5048-4f08-925c-eaf23c2bfbf8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7aba042e-062c-415a-8f86-023506e849ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0298a32b-99b0-4a2c-b455-f5a369020555",
        "cursor": {
          "ref": "9684effc-a7ab-4db8-b595-be6f44f224ee",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "97a5f48a-be15-48e6-9896-4dfb45b02ac8"
        },
        "item": {
          "id": "0298a32b-99b0-4a2c-b455-f5a369020555",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "96f3f7ab-ca3e-4a2c-9edf-d9fa336a3c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9f3c71-7ab0-4d2c-8d21-c91499b5a728",
        "cursor": {
          "ref": "58d4ace6-dcb7-454d-80a8-96a97b5bcbe8",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "adb2289d-5a55-4a45-bda3-990fb32ecad5"
        },
        "item": {
          "id": "cb9f3c71-7ab0-4d2c-8d21-c91499b5a728",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ffa18f05-d91d-4aad-8bff-1ba1b28fff6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b939022-80b7-4fd4-8077-7e32b87d16a1",
        "cursor": {
          "ref": "5a4046a6-977f-4ccc-9dc2-3699ebc70b3e",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7b542e38-84f8-427a-98eb-ad58dfccc8ae"
        },
        "item": {
          "id": "7b939022-80b7-4fd4-8077-7e32b87d16a1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c688985c-48a5-4365-8a28-d4980b5164b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1946b289-f2ec-4c87-91f3-c001c4ea4bea",
        "cursor": {
          "ref": "4960a3d8-e046-4d49-bb3f-eadf7be71243",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7ea93f5b-342a-4094-811a-497d84e94661"
        },
        "item": {
          "id": "1946b289-f2ec-4c87-91f3-c001c4ea4bea",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9cc569ea-c891-4e80-80a0-c63648dc1deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76da9a0f-9cf6-44ca-a691-e6d1d0c2ead5",
        "cursor": {
          "ref": "ea7c1243-41a1-4eb6-a3a7-9d191032419b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "73a78624-db21-46d9-a94b-c373a3fa33fa"
        },
        "item": {
          "id": "76da9a0f-9cf6-44ca-a691-e6d1d0c2ead5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "33b2e9a1-97ce-4df4-8e38-1954f653b82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b0122c-111a-46f2-abd6-147f936b3e18",
        "cursor": {
          "ref": "c4dc86b9-11f1-4dfd-9e4b-17990288cec4",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4bf86db0-abe2-40a1-afe5-b3a0be8cda9e"
        },
        "item": {
          "id": "81b0122c-111a-46f2-abd6-147f936b3e18",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "916044fd-eccc-4adb-8cd5-4e6d94a87a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eecebf0-595c-4edc-81f9-59a7855de0e3",
        "cursor": {
          "ref": "88b46d12-cd8a-4f40-827f-c867e3e7fe3c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f260d931-0be3-4fea-a2a4-0964c3330e78"
        },
        "item": {
          "id": "8eecebf0-595c-4edc-81f9-59a7855de0e3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4538ca6c-c8af-48e5-894b-ca63b5b36fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f0ef9f-fbaf-4152-bb25-35a64ca512f6",
        "cursor": {
          "ref": "d4f7474e-3d26-474e-88ad-504613a73135",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e84bbac5-2979-4282-8d45-19f8c08eeec0"
        },
        "item": {
          "id": "35f0ef9f-fbaf-4152-bb25-35a64ca512f6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c7d46a09-e76a-4910-be91-44f467d9c584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc18f174-7bed-42b8-b4bc-4c0428d48905",
        "cursor": {
          "ref": "5fccfe5a-49d9-4f3f-aca3-d147fcf4d0a2",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "23c090dd-dc51-42be-97ab-19b4d991028b"
        },
        "item": {
          "id": "fc18f174-7bed-42b8-b4bc-4c0428d48905",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4e9af6fb-af3e-425a-babd-9cb31a155a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3180fc-fdd0-46e1-b66c-1177ae64c3b4",
        "cursor": {
          "ref": "a44a67cb-024e-444e-8501-35455f16b486",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "881afda7-af2d-40d9-84d4-ff99083379fa"
        },
        "item": {
          "id": "4a3180fc-fdd0-46e1-b66c-1177ae64c3b4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "02378ff2-4a4a-4e91-8bde-2a6603aedf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16218c2-5a65-4b58-8fa5-0c4bd95aeff9",
        "cursor": {
          "ref": "b3fc170e-45ed-4808-aca8-e460fe0b11cd",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "29cba96e-290f-49af-8dd5-bf9d509a7370"
        },
        "item": {
          "id": "a16218c2-5a65-4b58-8fa5-0c4bd95aeff9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "49e07a19-9bce-4531-8987-689bb09e4fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b0ffde-41f2-4df4-a2d6-ffc79a693a09",
        "cursor": {
          "ref": "b13ae3da-37dc-4864-a623-8f466aa2584f",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d48d8116-ac66-455c-8a91-3462f17f0254"
        },
        "item": {
          "id": "19b0ffde-41f2-4df4-a2d6-ffc79a693a09",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1a29b3dc-2c8e-4ee3-b755-921dee1b0164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bc8afd-5d5c-4a59-b913-117b779a88fb",
        "cursor": {
          "ref": "20f29c45-e41c-4775-918d-b17dad4fbb9e",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4577c414-caf1-46df-9853-7da7bc791e06"
        },
        "item": {
          "id": "c8bc8afd-5d5c-4a59-b913-117b779a88fb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d993df10-c865-4557-ad23-58b89cd16983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe1d230-2275-4a2f-9d49-db23d23bef8a",
        "cursor": {
          "ref": "fb0a27fa-c09e-4b17-9a23-c596cfc88e24",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fbd76675-3cef-4c59-a13d-4417fc08276f"
        },
        "item": {
          "id": "cbe1d230-2275-4a2f-9d49-db23d23bef8a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "36930a6d-57f6-40ee-a020-5a5b63c267aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0fc073-3f11-4cf9-98a8-50e496dcd984",
        "cursor": {
          "ref": "cecd038a-3a95-46ea-87da-00bac6201252",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bdacdd01-b3c8-400e-b0e0-626aff881047"
        },
        "item": {
          "id": "3c0fc073-3f11-4cf9-98a8-50e496dcd984",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4ee5a1f2-512c-4fda-b4e2-357277d8b867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718c1231-0ffc-4fd8-9f00-a72d1a368acb",
        "cursor": {
          "ref": "54bcc0bb-9fcb-4754-8ce6-838f5286d0a9",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1b1ab259-6717-4dd3-8f55-d73a3d88ca51"
        },
        "item": {
          "id": "718c1231-0ffc-4fd8-9f00-a72d1a368acb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2907ef1e-8ff6-4133-bc7e-a38ae63aee01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db67d1e-36dd-4406-a121-cc87a452ef19",
        "cursor": {
          "ref": "61a6b41a-39db-4e34-a251-c98a08dd9f7f",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1da7f485-b26a-4ddf-9821-5418303181e9"
        },
        "item": {
          "id": "4db67d1e-36dd-4406-a121-cc87a452ef19",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "980818bb-6373-4627-8600-7e866aeb6d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bf62a0-ce72-40a0-ac0c-8175db34395d",
        "cursor": {
          "ref": "6f09231b-75b5-4a75-9492-28bbfe8dce3e",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7b1ddfe9-5f72-45c5-a5cb-28aac0f8fe69"
        },
        "item": {
          "id": "f2bf62a0-ce72-40a0-ac0c-8175db34395d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "97938d50-427a-41d4-8d50-b39454870b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32ccb38-46f8-4a7c-9935-e9b569a776aa",
        "cursor": {
          "ref": "b2d6a70e-e99b-414f-9a94-143b1b02530e",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b1138992-decc-4149-9b96-f3c1e7d576a3"
        },
        "item": {
          "id": "c32ccb38-46f8-4a7c-9935-e9b569a776aa",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "23b0ac8c-188f-4a1f-b275-e1bf90122ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570b32ef-7973-4b91-8e5b-1e15c7451396",
        "cursor": {
          "ref": "01be05f6-d64c-4562-8eb7-529933d12522",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c0e1638b-8f3f-43de-88c0-9c07c7ff3aed"
        },
        "item": {
          "id": "570b32ef-7973-4b91-8e5b-1e15c7451396",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3134ced8-cd7b-4007-8d65-0539e6176093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288e8f4b-1a83-4057-83f4-fcd4c5967115",
        "cursor": {
          "ref": "02930c7f-e185-49ee-b4bb-4dbfaa3b92cf",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a33ee2c0-7df7-4a36-9171-60dc2c65083f"
        },
        "item": {
          "id": "288e8f4b-1a83-4057-83f4-fcd4c5967115",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "529e8685-9485-469c-926d-62588c4b47d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c28e852-df08-4109-84d6-b1f94f96ffe7",
        "cursor": {
          "ref": "6ecc2619-a808-4911-9ef8-06b19bf4b138",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3f4ae494-dcf3-4ffd-a66d-f17616f25d84"
        },
        "item": {
          "id": "9c28e852-df08-4109-84d6-b1f94f96ffe7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "83423f1b-d82a-4f22-a7ab-ec77b55b376f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241b136a-c7b9-40f2-847f-d1680aa4bc65",
        "cursor": {
          "ref": "32d2e437-5af8-480e-937b-8ea17d924dcd",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "12009f98-acb8-45d0-8325-e94f8fc802c8"
        },
        "item": {
          "id": "241b136a-c7b9-40f2-847f-d1680aa4bc65",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0fbe6221-38b3-4d88-b6fe-e757c360d44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1a20e6-05c0-415e-972a-d7f81e223f15",
        "cursor": {
          "ref": "d89aae93-c477-4013-be8b-b5a4064acf50",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "95465f5a-3ed3-4166-be58-0aef0c82167c"
        },
        "item": {
          "id": "db1a20e6-05c0-415e-972a-d7f81e223f15",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6faa9097-5ccc-4d92-8164-dcd6b2a1a5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d47f10-38ae-40e9-ba34-0735c1ed475d",
        "cursor": {
          "ref": "2b3e07a6-e42f-408b-9137-3939c9f58cbd",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "487170bc-d8c0-4fee-abf4-7d6c1510b226"
        },
        "item": {
          "id": "70d47f10-38ae-40e9-ba34-0735c1ed475d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7aef908c-5e11-45fe-b481-e968cc945531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ff388a-c43a-4cf3-adf6-3aea07206fab",
        "cursor": {
          "ref": "a1d7d7c7-33cc-4d1f-a43c-f738414ebcd5",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3d2579fc-0f7c-4abe-8f5f-9921e95eae0f"
        },
        "item": {
          "id": "e5ff388a-c43a-4cf3-adf6-3aea07206fab",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "072be42f-83f1-4ba2-80c8-aff2ad4952b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af18222-3ab4-47a9-8800-ee9dd017c01b",
        "cursor": {
          "ref": "f105f689-367b-4c18-a225-6ade95006402",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c3ca92e8-9855-42da-b009-3306b3c86840"
        },
        "item": {
          "id": "9af18222-3ab4-47a9-8800-ee9dd017c01b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "850200b9-2e57-4cd7-ae19-e4617f7bf8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f696944b-a918-4492-a5ff-5f5e58a22ae0",
        "cursor": {
          "ref": "9e65909c-6417-4f2a-94c1-4213d9e442e9",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d78d13a4-c364-451a-bb00-a0c5a158542c"
        },
        "item": {
          "id": "f696944b-a918-4492-a5ff-5f5e58a22ae0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "df98441e-d42a-42bd-8a74-74cb55a76ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9534ad-80d0-45d5-908c-9c19bc58ff64",
        "cursor": {
          "ref": "1511408f-781d-4364-9185-fae46e451b9a",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5143bf3a-74f6-42f0-ab1c-05c3aa3dd4dd"
        },
        "item": {
          "id": "7e9534ad-80d0-45d5-908c-9c19bc58ff64",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "81f2b556-8ada-46b6-9e8a-5283abe78f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5127cb73-df48-40bf-87fc-a6c011887b96",
        "cursor": {
          "ref": "2df52a65-f91a-4ecd-837d-ce3d019a2962",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "89cbac9a-59d8-4b6a-9a25-42be0be99ba4"
        },
        "item": {
          "id": "5127cb73-df48-40bf-87fc-a6c011887b96",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e49bcb1e-d802-401e-9b87-64680e79ec3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c2dc4b-58f5-43a9-9e34-30c7ee480ef1",
        "cursor": {
          "ref": "87455cd1-ef51-40f3-9d42-284f4b788192",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d8331897-74f9-47b8-81dc-a28b85e99211"
        },
        "item": {
          "id": "e7c2dc4b-58f5-43a9-9e34-30c7ee480ef1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4976fd44-a60d-4d55-9d5d-543510513271",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb558ab1-8247-452e-8e81-181c4bdb01e9",
        "cursor": {
          "ref": "acf77f31-3329-42a0-bf6f-73aa57e70ace",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8e3c5464-a2f9-4cb7-be40-03ebee5f8a4b"
        },
        "item": {
          "id": "fb558ab1-8247-452e-8e81-181c4bdb01e9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "11a84b4d-e800-4bc2-8dfa-70510dd86e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028c4256-da4c-4d2f-8fe5-e4c745a2d75e",
        "cursor": {
          "ref": "66765511-038a-4ef7-adf3-d9a5fcb184de",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cca8b533-4809-41bd-84e1-e38dae083aee"
        },
        "item": {
          "id": "028c4256-da4c-4d2f-8fe5-e4c745a2d75e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "aff7a445-a2fa-4b22-ac48-cd7b87b5f92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c032198f-01bd-4cf5-b487-e098772b601b",
        "cursor": {
          "ref": "ad9e92b6-2068-43f8-aa46-3c51a5bb20d2",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "583cf8d7-72ab-4c7b-b840-7bf788109ff2"
        },
        "item": {
          "id": "c032198f-01bd-4cf5-b487-e098772b601b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "03d8a46d-e35f-402e-8a3d-7bdd920eaf9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5d18be-387c-4611-bd5c-901ad8bad8b5",
        "cursor": {
          "ref": "1f4dc711-94d4-4834-a5ab-e8e0e7944911",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6fa495ee-0720-48dd-b217-2d1c67cb4d62"
        },
        "item": {
          "id": "fe5d18be-387c-4611-bd5c-901ad8bad8b5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e982dfeb-b342-477c-b49a-7da22e9f6422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69554689-b574-4762-a2b1-1e8831705729",
        "cursor": {
          "ref": "1013dd2b-21cb-4af5-b982-c6e3e01487ec",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d2570e91-1e09-4cde-ab46-9ec3c3082ffa"
        },
        "item": {
          "id": "69554689-b574-4762-a2b1-1e8831705729",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dabd0e7b-6e8c-4f30-bb18-bf91ef503bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b4fe66-cbda-4a61-b266-722a90c4adb3",
        "cursor": {
          "ref": "7f9e48d7-d4ee-4454-9aba-2f89f6f4be0b",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fcb8a5d5-6894-42af-89be-4ad2461f61ea"
        },
        "item": {
          "id": "35b4fe66-cbda-4a61-b266-722a90c4adb3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0bde3b10-b15b-4dd1-85f9-c03567e02e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166ec90a-c3bb-4d40-8c62-0e22ddfa1e6f",
        "cursor": {
          "ref": "3674b43e-e641-42f7-a6d1-403c3fe6a5f3",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "60e9e05c-e3e2-4b7c-81eb-3826cbf608f0"
        },
        "item": {
          "id": "166ec90a-c3bb-4d40-8c62-0e22ddfa1e6f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "31980d2f-acb1-45d8-817b-a2e979b9b424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b708da0d-3591-4b1e-9eb2-d88278ad2925",
        "cursor": {
          "ref": "45d277b4-99e8-4b9c-8936-563cef47a519",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6ab1828c-55a8-47e2-b4ce-b1367af75bca"
        },
        "item": {
          "id": "b708da0d-3591-4b1e-9eb2-d88278ad2925",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "670a6d20-74fa-49bb-b6a3-d94d343edd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68c9268-89a5-459e-9aac-99aae9735320",
        "cursor": {
          "ref": "c2e78755-4df9-49c0-b665-9fdeb2ed025e",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d7ed605b-c89e-45b5-a142-1e6d79ca05c9"
        },
        "item": {
          "id": "d68c9268-89a5-459e-9aac-99aae9735320",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "04f3cd51-7250-4b46-bbca-40fb4b127b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3172e03f-a522-4d05-83b7-251c4c2893b6",
        "cursor": {
          "ref": "31a0f1b2-5777-4a4a-9b65-4661f37626b5",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "62409668-fc74-4644-a5de-0650a45d3582"
        },
        "item": {
          "id": "3172e03f-a522-4d05-83b7-251c4c2893b6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "50260072-646d-4440-9b8f-8acc567158c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21df69d2-80cf-458a-9e55-dfd3722a4f3e",
        "cursor": {
          "ref": "72b97a60-33f4-43cc-ab9c-bff391d10dfb",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "453135cf-045a-415f-b019-7844fd175ade"
        },
        "item": {
          "id": "21df69d2-80cf-458a-9e55-dfd3722a4f3e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1f64e633-020f-4bce-9a3c-ddc60b8979f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8769f7-3bf9-443b-91c7-9ec0e8f378aa",
        "cursor": {
          "ref": "876cff11-f3e6-4744-a88f-6443e2c2f9b2",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a88d8239-6b34-4681-9711-07ad7c382799"
        },
        "item": {
          "id": "ba8769f7-3bf9-443b-91c7-9ec0e8f378aa",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "498a2edc-433c-4e76-8c2e-72d6ae972ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa0ac65-0f22-4e77-962c-ed7d3c65781b",
        "cursor": {
          "ref": "afdccce8-6b33-4642-a48d-c4b2922179a4",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "38a1c1a6-2ce6-4a70-b006-c194130e9ddf"
        },
        "item": {
          "id": "1aa0ac65-0f22-4e77-962c-ed7d3c65781b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "38642a95-ce1f-4ecf-a72a-e3a6de5599f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b6fa09-468d-4b6d-ba20-82c041c73034",
        "cursor": {
          "ref": "b14ccdc1-416c-4c02-88c1-49c05a2847f0",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "56989b89-9893-47af-aa5f-76a1428facaf"
        },
        "item": {
          "id": "90b6fa09-468d-4b6d-ba20-82c041c73034",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cb88832d-f81d-4158-8678-e0539b5565c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8b9804-67d0-451d-8197-856c8e0bb9b1",
        "cursor": {
          "ref": "c17532de-9c82-4db9-8056-f2a405585940",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5d1fdf65-3d4e-4f37-9b34-75018fb61652"
        },
        "item": {
          "id": "0b8b9804-67d0-451d-8197-856c8e0bb9b1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fb22653c-33ce-4d7a-b015-b2185fa08687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125929cd-2e33-4fa3-9c1a-6ea84004cdd9",
        "cursor": {
          "ref": "400bf41b-e3b1-4027-b6fb-08078da6912f",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6c1c495b-28ec-4a19-bbd2-4c69a9836e3e"
        },
        "item": {
          "id": "125929cd-2e33-4fa3-9c1a-6ea84004cdd9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c6758953-22f2-4ebd-8bdb-5da9a0621200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cea48b0-26f0-4c91-832b-382dc380e1c4",
        "cursor": {
          "ref": "6e7d6c79-22d7-4292-ab8d-456d5a085b6d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dbbea79e-f3b6-4ca1-ac36-d4f1ddc2522f"
        },
        "item": {
          "id": "1cea48b0-26f0-4c91-832b-382dc380e1c4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9dc647b1-974e-4ebf-b413-2e1ff710a3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40c282a-d30a-4e1b-8b26-a7dd5b2dd985",
        "cursor": {
          "ref": "354bd85d-4dee-4171-b2d6-1bfbdfce822d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5d7c30e5-2f58-4e77-a7be-f972eff3b2c3"
        },
        "item": {
          "id": "c40c282a-d30a-4e1b-8b26-a7dd5b2dd985",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "08ca2ba4-c180-4f33-bcc9-1fce046bc76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4f7f6e-be77-4702-b3cf-79aceb0bcbe7",
        "cursor": {
          "ref": "2e38867a-ccaf-4bea-96cb-21aee4f161b6",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f4c92a9c-cd45-4d42-99eb-50a3b5f14e0c"
        },
        "item": {
          "id": "ad4f7f6e-be77-4702-b3cf-79aceb0bcbe7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e490fd4a-6815-4f01-82e6-4637654d3b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0573f3-1542-45dc-bb37-bcfc8de667d1",
        "cursor": {
          "ref": "11de2cfe-5180-4d98-a1d6-bad7a382a20f",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c1b16385-0ebf-4741-bb6c-5b0b54c8124a"
        },
        "item": {
          "id": "7c0573f3-1542-45dc-bb37-bcfc8de667d1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dd761b52-453f-422d-9d0e-31f7acb2b512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373db1f2-9212-48e0-9128-74a7de017ab5",
        "cursor": {
          "ref": "7f2f39f6-1815-44dc-acda-63c2de200f7b",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1a6b45c8-aaee-4a08-9be7-1dcb774205c3"
        },
        "item": {
          "id": "373db1f2-9212-48e0-9128-74a7de017ab5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b718144e-3f22-4a98-a1df-de80f81e65aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d973ee-37d0-45c4-b5e0-537ae93c6040",
        "cursor": {
          "ref": "b40f1eb8-7f2f-4dca-84c7-1488fc5d14c6",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d86d52d8-6329-4c46-a067-c70bf8c3a82f"
        },
        "item": {
          "id": "a7d973ee-37d0-45c4-b5e0-537ae93c6040",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "418e1bb6-f69d-4e1a-bea3-339f220b004e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac5e44c-7a31-48af-a5ad-d5be4d846caf",
        "cursor": {
          "ref": "d37a05ed-cb8d-4a10-be8c-565ee8ebf012",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d7d57b57-cd72-4d4d-ad86-1b64357d8e85"
        },
        "item": {
          "id": "2ac5e44c-7a31-48af-a5ad-d5be4d846caf",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "336e58e5-ceb5-4cf1-b36f-5f4753281d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4d4389-956d-4ffa-9bdc-235a7cdfd7bb",
        "cursor": {
          "ref": "80ea771d-aebd-4b50-a71b-e1ae71bdee50",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cb9a2e35-94e6-43f8-a40c-dc4b1e3eb600"
        },
        "item": {
          "id": "bb4d4389-956d-4ffa-9bdc-235a7cdfd7bb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "be40d6c9-fbdb-46c6-898b-8c1d20e4e4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05961de3-d965-4556-a580-e5f7957b7c70",
        "cursor": {
          "ref": "e5a990c0-eba8-4dff-8955-a8166ca15e9c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "27f6c719-80b2-43ba-a1dd-e8fd40dd4943"
        },
        "item": {
          "id": "05961de3-d965-4556-a580-e5f7957b7c70",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d61bfdf2-b98c-42e6-95db-67edea1e34cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e659f3f2-565c-45f1-ab65-10f0232f2039",
        "cursor": {
          "ref": "5c266480-5f37-4aa4-a27f-3af4858d0076",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e950ca94-0264-46e6-ab8c-7fcd34995879"
        },
        "item": {
          "id": "e659f3f2-565c-45f1-ab65-10f0232f2039",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2e4b87b7-8b06-4f9d-8446-f89461fbb3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50872040-55c8-4c3c-b93e-2569604d7f84",
        "cursor": {
          "ref": "01a6d2d8-629f-472b-a075-1f31ca7a15c3",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fecc43a6-627e-4e52-8411-b63cfe296c05"
        },
        "item": {
          "id": "50872040-55c8-4c3c-b93e-2569604d7f84",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4045bb7b-b96a-4355-bdf2-c82663228f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec8e20b-b65e-45bc-a931-9f68a00fa848",
        "cursor": {
          "ref": "38f2ae1a-9752-47b6-8e01-a10025b8799b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a978640d-4c13-4ee9-bbda-ceabd6fe3614"
        },
        "item": {
          "id": "6ec8e20b-b65e-45bc-a931-9f68a00fa848",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "567ea87f-3734-4878-b0c2-31d8138967db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28c1a41-a390-4c6d-afe4-da156e63cc38",
        "cursor": {
          "ref": "5205ff9a-57ee-4e17-b9fb-47bfc3fe26ab",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6167e203-b1cb-479b-aa3a-6bfc22b50003"
        },
        "item": {
          "id": "a28c1a41-a390-4c6d-afe4-da156e63cc38",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a4a826ae-3856-45ad-8b27-c4e572fbd15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09363f2-5968-4706-a292-de607912be43",
        "cursor": {
          "ref": "95e12197-bcbf-4246-8204-5be37ad8bbfa",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d78506ee-eecc-4be9-8cfe-23571c8a5d9f"
        },
        "item": {
          "id": "c09363f2-5968-4706-a292-de607912be43",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "91b0ce6d-b980-406e-8af4-b2f5b4f5b1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7265e81e-ddf7-470c-bdda-f86811955f4f",
        "cursor": {
          "ref": "dba6be88-4f86-47eb-8ea4-5f4581e537b1",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e1f5d8bb-be56-4ff0-a26d-a2e00024fb28"
        },
        "item": {
          "id": "7265e81e-ddf7-470c-bdda-f86811955f4f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4449d2bd-4f70-4eba-94ec-76063deada08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdf980b-6ac2-4447-ab14-ec495eace1ff",
        "cursor": {
          "ref": "ebb4c96c-2fd8-4214-b3b1-58ead9d83de5",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a21722a7-3113-4bbd-b804-232a696ae8b2"
        },
        "item": {
          "id": "dfdf980b-6ac2-4447-ab14-ec495eace1ff",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b58b014a-9724-4d90-a8da-04ae6f74335d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d688930e-9c3d-4d6f-87a4-b518799408aa",
        "cursor": {
          "ref": "2a5c9c4c-97d2-4fd5-87e7-b205f4b41caf",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "429d322b-eb3a-4069-8094-62dffb3fa556"
        },
        "item": {
          "id": "d688930e-9c3d-4d6f-87a4-b518799408aa",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a6ed21f5-7ec2-4751-8735-1a643c118693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699fce49-a31d-4c05-a0cf-3b247ffdc6a4",
        "cursor": {
          "ref": "eb559f20-0cbd-40ca-92d1-458200e4895e",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "48b9fc12-9838-49be-9ddb-b1c2b5e7b1cb"
        },
        "item": {
          "id": "699fce49-a31d-4c05-a0cf-3b247ffdc6a4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7526c041-0ed3-4c9c-9fd9-5981828bd61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687ce42f-8b22-453d-b1f1-8ab1d4b7cdb2",
        "cursor": {
          "ref": "e2b1d31b-0c04-4e3c-85c3-6df4be2b6da6",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "93bba66f-3d87-44dc-bb16-4d2ba33a812e"
        },
        "item": {
          "id": "687ce42f-8b22-453d-b1f1-8ab1d4b7cdb2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0bb109c2-422b-40a0-b956-4e4f570d5f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911131f8-75aa-447e-838a-77fa79211748",
        "cursor": {
          "ref": "32baef4e-8000-4cfe-abd9-69a871b03496",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "33914814-1c6d-4b62-b075-fbe58722a05a"
        },
        "item": {
          "id": "911131f8-75aa-447e-838a-77fa79211748",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "96926903-fcf0-45a3-948e-0a5cf37a2dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9724c3c7-2c04-413d-a571-80124a3805dd",
        "cursor": {
          "ref": "19ea0e3c-9028-499d-8a88-ccceb2153ce6",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "650767e1-a162-4056-b98c-8c6037b5e1b0"
        },
        "item": {
          "id": "9724c3c7-2c04-413d-a571-80124a3805dd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9bb11c38-8ef3-4555-9dc0-2f171955dd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddffaac-5056-4724-8a27-bd952e70fc41",
        "cursor": {
          "ref": "875ae30e-36af-49db-9b30-d3b01d1f3e89",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "982d2aba-9670-4d42-9ece-fc176e5190ca"
        },
        "item": {
          "id": "fddffaac-5056-4724-8a27-bd952e70fc41",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4adb6e53-1814-4e63-b33e-239befeb5c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610de97f-34e5-4f58-b71d-5994aaaca02f",
        "cursor": {
          "ref": "60ec3581-41aa-4343-90b2-7ad86520d0da",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0299e386-7a88-4607-ad63-b6a8d3ef3cf0"
        },
        "item": {
          "id": "610de97f-34e5-4f58-b71d-5994aaaca02f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fb37ea0e-6dd3-41a2-b4cc-c172a1cfd141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6949d5-ea51-4aa3-8b10-054ae49dd916",
        "cursor": {
          "ref": "e8d733bf-9b19-49fc-9447-e72f05a8ec8f",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7bbb0722-51d2-4892-a809-322b25f13087"
        },
        "item": {
          "id": "fe6949d5-ea51-4aa3-8b10-054ae49dd916",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0bddc9c9-47d7-418d-985d-6384a84d2b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1970806c-097f-4c74-a06d-815f2f75df26",
        "cursor": {
          "ref": "86bdd3b5-9863-4dff-b151-189647bfdb34",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4e4e7b25-70d2-4f5b-a406-8d27f8a751ca"
        },
        "item": {
          "id": "1970806c-097f-4c74-a06d-815f2f75df26",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "98c30566-7e82-4ac7-bf08-d4b3d5664167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913cb6e1-1fc5-4cbd-8f4b-bc49b00f8792",
        "cursor": {
          "ref": "a874de72-d542-45f7-8438-5d2b83ed5757",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f6198b19-fb60-4445-bc40-7dba4a9f4a53"
        },
        "item": {
          "id": "913cb6e1-1fc5-4cbd-8f4b-bc49b00f8792",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7875d278-bcdb-4bfd-a23d-e569167499c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd355d1-5bdd-49b9-bf00-a42395837fd2",
        "cursor": {
          "ref": "cc4d02a5-622b-410a-bf89-01e68c082f26",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5387cc8f-e74a-4dfb-8939-28b2ebf99d04"
        },
        "item": {
          "id": "7dd355d1-5bdd-49b9-bf00-a42395837fd2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "aca50af9-68c5-4a38-b228-ed14b098982a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24474114-239f-46f2-bd0c-471033b039c1",
        "cursor": {
          "ref": "9a601d2e-2997-40c2-9a45-3756e3f8a312",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "56430c6f-9bb7-4e25-8bb8-4f204d8e7c84"
        },
        "item": {
          "id": "24474114-239f-46f2-bd0c-471033b039c1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "89b20f01-295c-4b5f-8184-679787195ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96eeffc8-23bb-4060-94d0-c65e755f500e",
        "cursor": {
          "ref": "547fbbe0-9685-47a2-b975-7c7f92ac07d8",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b7e19bff-5e6a-4cb4-b1cc-d313980b4cee"
        },
        "item": {
          "id": "96eeffc8-23bb-4060-94d0-c65e755f500e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a5f4eead-75a7-4a6f-b1f9-b76a1c984994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08277414-b465-4073-9395-2bc86ea3ecac",
        "cursor": {
          "ref": "aaec991a-ad25-4ce2-bdf7-e143914c5a7a",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6d888ae5-5569-4f44-932d-b8bbf5b6d590"
        },
        "item": {
          "id": "08277414-b465-4073-9395-2bc86ea3ecac",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "89671ac1-5144-422c-8d5c-414993608185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45246adf-c032-4122-96d2-0699a1712071",
        "cursor": {
          "ref": "f8908a06-01fb-48ce-b0fb-09ee6f2dfda0",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4121b972-d195-4f6b-a4af-56cea1e89ea6"
        },
        "item": {
          "id": "45246adf-c032-4122-96d2-0699a1712071",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3baf994a-1764-4369-b8f7-9082bfc1f261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1663b7ba-19e7-4e0f-a975-a8a0437f9c7b",
        "cursor": {
          "ref": "ec180542-007d-4e1e-be31-8fc84c15955d",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "677ebe41-a5e2-4bd9-ae14-125620efd5f8"
        },
        "item": {
          "id": "1663b7ba-19e7-4e0f-a975-a8a0437f9c7b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "188f68de-1a10-45fd-9d59-f712493814a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cec9cd-da3e-46a7-97b1-9d817420ff09",
        "cursor": {
          "ref": "0081ef53-32c5-4c5d-a98f-8c4e47747bd0",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e12ba1df-bc60-4377-999a-07f933aaf49e"
        },
        "item": {
          "id": "36cec9cd-da3e-46a7-97b1-9d817420ff09",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2f2d467e-af99-46c7-8a35-4dba6eaaf49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd71857-9cf3-4569-9188-47c9f6a400aa",
        "cursor": {
          "ref": "19e974ee-be16-439b-a458-9e406cce9aba",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "293709c3-186c-426f-bf9a-a7f0f0395ba4"
        },
        "item": {
          "id": "3dd71857-9cf3-4569-9188-47c9f6a400aa",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a933b4f6-ac39-4970-9201-4134f8ea09e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af251b0-182e-4bd9-8a3e-36ea89a5cbbb",
        "cursor": {
          "ref": "9fc72b99-bd9c-400a-8bde-e5a089e583f9",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e4a204f8-8b2e-43ee-942d-1ccd6f20ec3f"
        },
        "item": {
          "id": "4af251b0-182e-4bd9-8a3e-36ea89a5cbbb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3ac0effe-5e3d-46dd-8b33-3102d26e2531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64f3626-1b37-4ddf-816d-24248f991a65",
        "cursor": {
          "ref": "bdf40798-2cfd-40b0-b03f-e1da479b741a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9e11beff-f801-4499-a067-3d10600ed59c"
        },
        "item": {
          "id": "d64f3626-1b37-4ddf-816d-24248f991a65",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9f9911fa-acb9-45b6-a791-3a5af4b4b8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0b64b7-fc03-4086-8f43-922828a3227d",
        "cursor": {
          "ref": "15cc0dab-4af0-4380-8456-15cefc6f4635",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a0d68647-6909-4908-8072-96d64577d538"
        },
        "item": {
          "id": "fe0b64b7-fc03-4086-8f43-922828a3227d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "635cd1c8-3332-44db-810e-5073a873c264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000cc9ce-64fd-44f8-98ed-d45aa9bb5d1b",
        "cursor": {
          "ref": "74d23b49-269b-488c-8284-101263b7306b",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "81ed5983-a587-4c05-8093-4f5f779b98f8"
        },
        "item": {
          "id": "000cc9ce-64fd-44f8-98ed-d45aa9bb5d1b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "649df978-be61-430b-80c0-5868667893fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53f4f63-0e85-4deb-b441-c8b1cbe89773",
        "cursor": {
          "ref": "76ee8d93-0603-4c8f-ac33-55469d5c5233",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a4e85d7f-98ae-46cf-b2e8-43446b3adafd"
        },
        "item": {
          "id": "c53f4f63-0e85-4deb-b441-c8b1cbe89773",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "280f7de9-cb22-4864-91f3-451083ec0cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2235a23c-a1bb-4c4a-b28d-3274752720ad",
        "cursor": {
          "ref": "437b2ed0-78c2-4d3b-b3bc-a8aec3a1b3ca",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f19e929a-64f8-47c9-abb0-de73c6024cbc"
        },
        "item": {
          "id": "2235a23c-a1bb-4c4a-b28d-3274752720ad",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8bf03ff7-5315-4ecf-8503-f7b86bec7c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe62048-d463-4ea2-ba22-7852dbc10ee2",
        "cursor": {
          "ref": "cd5932fc-16fb-4208-a413-6d37f6c79cbd",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8a6eca1f-f08b-421e-be40-bab64e7874fe"
        },
        "item": {
          "id": "ffe62048-d463-4ea2-ba22-7852dbc10ee2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "86dee75a-314d-41ad-bf7c-23764bb64aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b96187-216d-4edf-948c-8593cc2c5a14",
        "cursor": {
          "ref": "1f7f5fad-8939-45d1-921b-c052afecbef3",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e2db4d29-c92b-49e3-91db-0bde47a01ffd"
        },
        "item": {
          "id": "c8b96187-216d-4edf-948c-8593cc2c5a14",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4d1c946a-9fc3-4bbe-83af-9b2137615617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77a12e2-e25e-4b44-b207-f68812fc0c0e",
        "cursor": {
          "ref": "0482a7bd-b3f9-4193-b3b4-0006f22dc01f",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "918b52bf-109c-4cee-8d8c-ba89aaeec6ea"
        },
        "item": {
          "id": "a77a12e2-e25e-4b44-b207-f68812fc0c0e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e922795b-8017-495c-b91c-cebcdbe397b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fa7e0a-cb43-4cf1-a396-13d01f5caf81",
        "cursor": {
          "ref": "1feda49b-9d95-4ea5-a3ff-578942645e5f",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d8f41a00-9d55-49d1-9f9a-1e79358eb425"
        },
        "item": {
          "id": "10fa7e0a-cb43-4cf1-a396-13d01f5caf81",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5ffda0dd-fe2f-4eb7-92a8-310b6fda44c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a514ac-d318-4a20-81de-ef0bfbf3c1ed",
        "cursor": {
          "ref": "80b70e1c-9080-420b-a12c-d726ecf4683d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "332988ef-1577-4065-88af-74a64d8658bd"
        },
        "item": {
          "id": "f1a514ac-d318-4a20-81de-ef0bfbf3c1ed",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2036de6d-ab04-4df2-b30b-2a9c879db5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57a864e-35dd-4f57-baea-c10eada7aea1",
        "cursor": {
          "ref": "76e0ab22-edce-4f1a-b74e-8e67ef0f21ad",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "563ec77c-5e3d-4587-a83a-ef2c4ca02a23"
        },
        "item": {
          "id": "e57a864e-35dd-4f57-baea-c10eada7aea1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "527725ac-a9b6-44dd-9194-398b4311d45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbd871d-6c61-49d5-8992-97371b7ba00d",
        "cursor": {
          "ref": "c5f00dac-01e7-4f8e-a808-fe0335731387",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2993608a-a640-4783-9776-795f5c906876"
        },
        "item": {
          "id": "0bbd871d-6c61-49d5-8992-97371b7ba00d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d6f9ce23-a92a-43bf-8484-f926f4e89ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fb45e7-84ba-46d6-8487-5992a8aedc24",
        "cursor": {
          "ref": "43515cb4-0302-4c45-b977-cd99cac5b736",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c36b1ceb-3dfe-4d04-9d28-207568342504"
        },
        "item": {
          "id": "18fb45e7-84ba-46d6-8487-5992a8aedc24",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "97b1c03a-4b91-4542-a7d3-25430b33ab47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7c80fd-8613-4759-a240-4d5fd13aea0b",
        "cursor": {
          "ref": "6046c053-17c3-4a1e-a375-7c82bda15d8c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6404815e-ed8a-4457-aecb-d9004fc348b9"
        },
        "item": {
          "id": "ea7c80fd-8613-4759-a240-4d5fd13aea0b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "81230a28-94eb-4b8d-9bcc-1dce92078246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089626a5-e050-4859-a86f-87fae8f3a526",
        "cursor": {
          "ref": "1f4af03e-4a3e-47ee-9a6d-9d4c12891c1a",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "94ebc558-4f67-416e-81f7-d0ef76065b97"
        },
        "item": {
          "id": "089626a5-e050-4859-a86f-87fae8f3a526",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c2f39838-e955-4111-a56e-1566d2d4ecc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e430d30c-89dd-4b95-a9c4-25ff61d0b6e6",
        "cursor": {
          "ref": "63dee5f7-5304-4f1b-8b1f-d770c4585adf",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ca0cc767-03e7-49a6-9151-c293f52bbd5c"
        },
        "item": {
          "id": "e430d30c-89dd-4b95-a9c4-25ff61d0b6e6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1dec3af0-89c7-48ad-96de-ea6ef234642e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea2957f-41bf-43d8-9ac4-58537babc03e",
        "cursor": {
          "ref": "047a16e3-b5fe-44c6-a41d-c32e223d343b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2b88bdfe-a7f0-4fbd-88c0-c5198ee39c34"
        },
        "item": {
          "id": "6ea2957f-41bf-43d8-9ac4-58537babc03e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e9959420-61e6-45ee-a9bc-15f9d8deb2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3d5005-d6ac-4223-9fbf-62abe527402b",
        "cursor": {
          "ref": "92d273fb-4fcd-4d54-b84b-a47515582b97",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9b7bebe4-b726-4336-ab4d-95d5e3b24188"
        },
        "item": {
          "id": "fc3d5005-d6ac-4223-9fbf-62abe527402b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4949292a-e480-4fd2-9b7b-532ff61e4cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bb2484-5adb-40d8-a3d4-d2cbb8ec08c6",
        "cursor": {
          "ref": "99b1b6ea-e845-46c5-bbae-cc5e4a25cd10",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c8b9995c-3fd1-4699-a829-b641a80cf2f1"
        },
        "item": {
          "id": "32bb2484-5adb-40d8-a3d4-d2cbb8ec08c6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "17e90624-3424-4204-bc4a-39789cb25cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01d38e2-3dc6-4f8e-9f31-8d6aba03f677",
        "cursor": {
          "ref": "4ff6b058-1a3a-4e56-85e2-4efface1eb00",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "aabd4804-7e17-471f-8044-c49c78f87a8c"
        },
        "item": {
          "id": "b01d38e2-3dc6-4f8e-9f31-8d6aba03f677",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "237ce561-482a-4438-a05e-df4be4f69271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789c72d9-e5f7-4f27-9044-dde9c7de7607",
        "cursor": {
          "ref": "ed900b1c-9cba-4daa-88eb-c2fffb4ea8d3",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7a80e46b-dc07-4fa6-84d2-2c097acba1dc"
        },
        "item": {
          "id": "789c72d9-e5f7-4f27-9044-dde9c7de7607",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ca1229f8-e769-4bec-8273-7a46c243ce25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b68bf9-f1d5-459a-9da2-a3cc2147f6bd",
        "cursor": {
          "ref": "1e3ad25b-1ac2-4f04-979d-d230cc2e0b81",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9b825989-ce06-4ef4-9d14-b1731686aed5"
        },
        "item": {
          "id": "31b68bf9-f1d5-459a-9da2-a3cc2147f6bd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9192c88a-4abf-4b76-9255-8012d6040310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc6ad50-eb9b-461d-a5eb-65020da7763e",
        "cursor": {
          "ref": "cab0774c-e077-4121-ace4-6d8ad2158451",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7cafb4e5-220c-42c0-aabe-ecf25025a1e3"
        },
        "item": {
          "id": "9fc6ad50-eb9b-461d-a5eb-65020da7763e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "29ed3596-12d5-475d-a619-8a26de8feb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7278b36-d3e5-4580-81eb-d70a42eb0608",
        "cursor": {
          "ref": "08121fca-5778-4d38-92c2-f867122df9b9",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "747a30ad-f490-4952-9f89-72156b55d78f"
        },
        "item": {
          "id": "f7278b36-d3e5-4580-81eb-d70a42eb0608",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c5809eba-b833-4b0b-9f8a-5736c77b87fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa4c02d-e75f-425f-b68d-321e358a9b32",
        "cursor": {
          "ref": "3c57811c-555d-479a-8713-811a89b5dbb6",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "cb1cff79-7c13-4b42-b0b9-6ec4fb398d08"
        },
        "item": {
          "id": "4aa4c02d-e75f-425f-b68d-321e358a9b32",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "47fb4622-cef9-4544-9c7c-d07c59957e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bafd362-1f1a-46f4-9953-56929dd31d3b",
        "cursor": {
          "ref": "4e68060e-61c3-4a2e-88a5-f7c154641765",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6c03e8a4-6d9d-4a80-a44b-86ffcd91aa60"
        },
        "item": {
          "id": "0bafd362-1f1a-46f4-9953-56929dd31d3b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b0e04124-2814-4fe3-8d98-cea035edb8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e96c486-1533-4234-bcc1-56aeff9e6a6b",
        "cursor": {
          "ref": "0835967c-9447-410a-a5a8-3bce9e029dca",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "cb2a52f7-c991-4b9e-8614-f66b296b96e8"
        },
        "item": {
          "id": "4e96c486-1533-4234-bcc1-56aeff9e6a6b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3e62c826-b938-4e51-ab70-a16b4d31a6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba0a233-7dbd-4b52-b2fd-ae785bd757b5",
        "cursor": {
          "ref": "77444b83-8859-4046-a6bc-49c1a171a5b4",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ea9c0df0-131c-41f4-b352-17aa79038606"
        },
        "item": {
          "id": "8ba0a233-7dbd-4b52-b2fd-ae785bd757b5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a8c9f91c-f22e-40c7-b6ac-fba6c0782f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119022d7-2db5-4234-9658-9119b8d65baa",
        "cursor": {
          "ref": "b92dad39-9fc5-4695-b507-f11b80ef1ef1",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5aab4d30-c045-4b3a-bca3-d250e0f1709d"
        },
        "item": {
          "id": "119022d7-2db5-4234-9658-9119b8d65baa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "058576b2-914c-4fe7-bd01-f284f74ee129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f041bbb4-c7dd-4455-9e7a-d7804e93d42f",
        "cursor": {
          "ref": "5f8e331c-f0d6-4a5a-a17f-b0f77cdb43fc",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "23a84c0c-227f-4e59-9016-29af0d4ef809"
        },
        "item": {
          "id": "f041bbb4-c7dd-4455-9e7a-d7804e93d42f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e79c8abd-1f8b-46cc-94a6-ac077c510c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920eebe5-7bb0-4748-883f-824dd71d247b",
        "cursor": {
          "ref": "95f84b4b-c9e7-45e4-8b4f-404e59c97680",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1f1cd63b-d0a3-4f58-992e-c16f4d624ae9"
        },
        "item": {
          "id": "920eebe5-7bb0-4748-883f-824dd71d247b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4eeb4ddf-0b7c-494d-ba1b-7e5ef9a8752e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03923e8-040e-40d4-bf6e-26c5cb8b918a",
        "cursor": {
          "ref": "013db7eb-71e1-43e4-a62b-56de4c473fde",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f4ab5cc5-1808-48c0-aa22-801787a14872"
        },
        "item": {
          "id": "d03923e8-040e-40d4-bf6e-26c5cb8b918a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2dd5d6a6-091e-48f9-a86e-ad2b79fa742d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be10b479-be32-4d29-a404-30d2b9e05b55",
        "cursor": {
          "ref": "58e5fda3-0fb5-4c6c-8674-016cb89bfd16",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "cf025757-9406-4611-96b2-1ad5904bb444"
        },
        "item": {
          "id": "be10b479-be32-4d29-a404-30d2b9e05b55",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "97443df0-8a39-4fb1-86c4-104bf245a665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064af107-91db-410e-abfe-aef639cec093",
        "cursor": {
          "ref": "a0b83520-421c-4068-a75c-0a41b455e0e8",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "be9e18c6-d182-4c50-a748-91cbdd57e155"
        },
        "item": {
          "id": "064af107-91db-410e-abfe-aef639cec093",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "829681d7-8110-49d0-a54a-277dfc6ffe21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7a09c0-8f39-4359-a07e-a1f215a8d0b3",
        "cursor": {
          "ref": "598054d8-9719-4148-acf5-c94dccefabcf",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0cd8d58f-5539-4a31-8f2d-444fe9e46e5c"
        },
        "item": {
          "id": "6f7a09c0-8f39-4359-a07e-a1f215a8d0b3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e8de0c20-f6bd-4add-a3f8-0837b02f4054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a00f66-1a33-47ea-b139-22deb62582f1",
        "cursor": {
          "ref": "f446ed42-ffdd-427f-b2ed-27c0052ff802",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2929313e-06ec-49a2-8506-b3ed7f0fefd0"
        },
        "item": {
          "id": "93a00f66-1a33-47ea-b139-22deb62582f1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "38d18084-c1f8-44fc-9907-96b4b87a435d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7965d9-83d8-4e4c-9d5e-6e180860ecd9",
        "cursor": {
          "ref": "d1984993-90a5-4bbc-aed5-65d0f3c11841",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a3864304-f932-4a92-8470-7a5c8d1b92a9"
        },
        "item": {
          "id": "9d7965d9-83d8-4e4c-9d5e-6e180860ecd9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e03e912d-54e5-48dd-943b-cc06612c25f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9e63f7-de76-4ae0-b7ea-54b2ca0a3b47",
        "cursor": {
          "ref": "a3dd8e37-8ef3-4e7a-9e6c-760d54b1c25c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1b6b14ce-706a-450d-a851-7834d93baaee"
        },
        "item": {
          "id": "6e9e63f7-de76-4ae0-b7ea-54b2ca0a3b47",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e7dde060-2632-4f19-9648-2db8e3e3f4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb45ec8-4982-4501-8b03-9c51bbffa91f",
        "cursor": {
          "ref": "1d6b190d-1e4c-4e52-9e9f-548db943a4e3",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "37d221e1-6b98-4fc2-bf72-312dc0cca6af"
        },
        "item": {
          "id": "edb45ec8-4982-4501-8b03-9c51bbffa91f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1f11a0e0-e9f2-4812-8b7e-86febfa375e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a15775-f503-44f3-bf02-f74b5ef601ca",
        "cursor": {
          "ref": "5a91c2e6-4db6-4443-ab5c-422abc0cda67",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5d61f872-dbd1-4d44-8d0a-5c5f60a83a46"
        },
        "item": {
          "id": "a7a15775-f503-44f3-bf02-f74b5ef601ca",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5908850e-ecc9-4961-88c5-e58eb85a9adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee39e09-9650-4b2f-8264-a0ca5dad2774",
        "cursor": {
          "ref": "ce5d53a1-c6e7-41b7-bb03-9eecae90b7d5",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "04ae6012-256e-4f7f-9dd8-894e74f1d291"
        },
        "item": {
          "id": "5ee39e09-9650-4b2f-8264-a0ca5dad2774",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5c6b406c-80f9-4a32-975f-d60bd511dbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0984728-826f-4768-ac25-b81fbb27b864",
        "cursor": {
          "ref": "f4118903-69cc-44a6-ae60-3e63b4236d1e",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9ed56e07-eabb-402d-a3b2-3dcfdae510b1"
        },
        "item": {
          "id": "b0984728-826f-4768-ac25-b81fbb27b864",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e37eb65d-f4fd-437b-a679-5497cb152107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ce7a2d-12bf-4a1e-aed8-53052856e5d0",
        "cursor": {
          "ref": "e9a1dbe0-6d3a-4c77-975e-1f10fa514aa7",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "4f8ed961-8497-4f83-b7bb-dc1ba993938d"
        },
        "item": {
          "id": "c3ce7a2d-12bf-4a1e-aed8-53052856e5d0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c99e352a-5ff5-407d-ab90-390ab3f325d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c2c5b7-a622-4f91-90df-19531b44c616",
        "cursor": {
          "ref": "e6334ba8-a1dc-4375-a663-b2e0e2e92f94",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4a4890b7-2ecd-412c-b5b3-d51b369c7288"
        },
        "item": {
          "id": "86c2c5b7-a622-4f91-90df-19531b44c616",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0d3b80f4-9bcc-4442-bc87-7aead6ef743b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baed2f84-684f-481d-b825-fc3166817f16",
        "cursor": {
          "ref": "dd439888-a55a-4523-b794-c6fe7b11f4c9",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ae92b3d3-cdb8-4d32-a3fa-1920b68f9d1c"
        },
        "item": {
          "id": "baed2f84-684f-481d-b825-fc3166817f16",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "701316fe-2122-4ae5-bb5e-948409bc4533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b307ce6-95da-4ec7-82b2-f59eb75188bd",
        "cursor": {
          "ref": "764b6c03-39a0-4af5-96c8-72aedc7b07e3",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d2a85182-01c0-43f1-84d7-ffaec4902c3c"
        },
        "item": {
          "id": "7b307ce6-95da-4ec7-82b2-f59eb75188bd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8fe22411-f9c2-41f3-94dd-7f4741f0696c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a3982f-375d-477b-8aad-0e0bb8b2101a",
        "cursor": {
          "ref": "59be4fe7-c681-40da-906d-5790848ac329",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "7f856b1d-87fd-4de6-9ff0-3eeb6886f2ea"
        },
        "item": {
          "id": "f2a3982f-375d-477b-8aad-0e0bb8b2101a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "799fa371-9443-497b-9292-efdd23863650",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05754030-3008-42a1-bc0c-8568cb76727a",
        "cursor": {
          "ref": "6c86fdaf-230d-4344-b0c2-3bccd3c3283f",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "78198265-496c-4fb9-a65d-7154c2d22c98"
        },
        "item": {
          "id": "05754030-3008-42a1-bc0c-8568cb76727a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0c4b7b01-ff90-4ed5-8dbb-6afe0d5b5fb4",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45f81b3-0a49-4e31-b5c6-3bce43acb983",
        "cursor": {
          "ref": "9d7d0f9c-09c7-4e2d-9232-7bd6dbe41757",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ba83c44e-ac57-4aef-a957-0dc6beb663bd"
        },
        "item": {
          "id": "a45f81b3-0a49-4e31-b5c6-3bce43acb983",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2f6a567a-7e20-4c48-a9ff-a15f2247283d",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bcef07-304c-4445-a861-17d9f9338c77",
        "cursor": {
          "ref": "3367f9bd-e825-4595-add9-3cc596ace2a8",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3642cfc0-260a-4b1b-8460-dae501df9d8c"
        },
        "item": {
          "id": "41bcef07-304c-4445-a861-17d9f9338c77",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dd7b0e57-b0d8-4c8c-9830-5da14357ef41",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ae2546-a384-4c99-9400-e4b4b1af5f90",
        "cursor": {
          "ref": "35f2d6fd-15f8-4bf0-8fb8-1c5698e6583a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b4072623-59d6-47a9-9ad6-0d75fed3e07d"
        },
        "item": {
          "id": "57ae2546-a384-4c99-9400-e4b4b1af5f90",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7fa87794-d048-4a0d-998e-3076531fd7d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ae2546-a384-4c99-9400-e4b4b1af5f90",
        "cursor": {
          "ref": "35f2d6fd-15f8-4bf0-8fb8-1c5698e6583a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b4072623-59d6-47a9-9ad6-0d75fed3e07d"
        },
        "item": {
          "id": "57ae2546-a384-4c99-9400-e4b4b1af5f90",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7fa87794-d048-4a0d-998e-3076531fd7d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10ba582-8232-4331-a411-7258dc56d742",
        "cursor": {
          "ref": "d9b477f3-a388-4e2b-92fd-35e348047cdb",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9902f2dc-7985-447b-a76e-5987050998f0"
        },
        "item": {
          "id": "c10ba582-8232-4331-a411-7258dc56d742",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "73a0e733-6378-449b-afec-099076b90f88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea01fde0-af45-4097-8786-3c73ba3d88e2",
        "cursor": {
          "ref": "8fe32acc-e5aa-49e4-9e3f-542d746bce7f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fba28974-826d-4393-82a0-26c94d3a4667"
        },
        "item": {
          "id": "ea01fde0-af45-4097-8786-3c73ba3d88e2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f7f0c968-1bc0-4e9b-8a24-fe3e2771ee05",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}