{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "196c42b3-6880-4133-9e98-ee0bc3eff50e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "aaf37788-8306-4973-870c-bc63cb23e4aa",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a38b79c4-3f51-4974-ac63-6761fc84367b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "21588e9b-f192-4a02-960d-36226d14d512"
                }
              }
            ]
          },
          {
            "id": "c60e5278-70a1-440a-8d1e-f0f5d4dd28d0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8bced950-2d8c-4298-b656-e54926d1add8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f270e987-9506-4093-8124-a1a51b7bda88"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "353cd042-5cae-455f-bbb0-95276ca5a91f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "39397315-79a6-4a6d-ba69-5e3b7f919403",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f7c051c7-8b08-4675-8796-247d9ccf9df1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9887ffa6-060c-4063-9877-3c7559975d73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fefa2ff-a95e-4dbc-bd7b-8cb9df420f99"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c59fdb77-d481-4ba9-a81d-94a810bd2d27",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a11ffc3-5122-46ba-9b3f-c0f4446cd248"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ef13e7e1-2c83-47a7-9375-194dd306fcdf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39657973-699f-4bbb-bf4f-cb5a5faca844"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee20f2db-1dfc-4a9e-beff-914703867e17",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "61bb1954-47bb-4517-81e7-37f7bae8a7ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5ae89b3-8d1a-4a43-bf43-8500d893e046",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab95ebd7-3dcd-449e-8fcd-6955096c4fe9"
            }
          }
        ]
      },
      {
        "id": "3d7543af-37bf-46ce-9c4c-1d7201d57fea",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7a21b1dc-688d-4832-acfd-4caaec2e8905",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b84572e-bb18-483b-85e5-e1f579c88adf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b2847244-e886-47bf-8817-257db019f782",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a68afe-0912-4e0a-8c63-f25b02ea5664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9834cf58-5107-4554-9a64-ed3503fc90ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15d9f78-6daa-41d8-8958-a946b34b1384",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108a97bc-cd49-437b-9742-f8e131f0cff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b0f1d1f-4bed-4c86-871a-71e50c261e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e38ce50-d1d4-4303-9327-cbb7b1e1b0ef",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a80f31-6444-46c6-b5c8-169ba74d733a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8837c75f-44ad-4427-b2c2-6b7ad4fd16e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7e13993d-b536-44a7-921c-4b6937569411",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "402c0133-6cd1-4091-9b5d-c8f6388ac520",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6344cfd1-e5f1-40ce-9c7e-8804807edf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f50f57c-a5fa-4049-8f8f-cf77c23ef39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffb1b44-bb57-4bd2-add0-79cb4ce999a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957d5809-8bdb-4019-96a4-5e3b8be7452d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ad4bf9e5-1368-410f-9e1f-0b135feffebf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1b2aa9be-6764-4e5a-8a7f-07fac6d213bb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "204ce622-81c0-462b-b284-27cf45df1f4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "86ccbac6-5977-49f7-aee5-1c36f82b2ed2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd5019f6-57e4-4276-bb92-37dcedb7f5de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "dbabd168-d2d2-4efb-b541-13f729daa91e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f14e87b5-a964-4778-a2cb-b9b431b5b969",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "939a1890-38e8-47d1-84cc-a4eec8308b02"
            }
          }
        ]
      },
      {
        "id": "af5b9968-7416-499d-97cd-183ec1d5acd9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1490da01-37d8-444e-b726-48acd00424a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87198bbe-4fe7-455b-b186-0e2996418aa3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a97bb2ef-49f9-4ab7-ab1e-e8da8e3b812c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7426ef-335e-46c6-aed4-a926f2e32499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6ba64c-80a0-466e-82d9-da62c60697ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4012546b-0e77-4a4e-ac8f-69348f3f5418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11718879-b76f-45d1-a510-2a12a80ddc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fddb1f9-6e08-410a-b86d-80bd55a53a5c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c05ecd-cd78-4fb4-bd49-402e4ecfbae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d40054-6866-4767-af63-806029dc629e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77626735-2857-48f6-86e6-b927748a0d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b689ca4-eca3-4872-926f-af5c38a0fbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67e90c5-1b3a-4e48-9ecb-2a78c1d55398",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80580eef-a623-4b0b-a3ec-92d5e9a33e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f444af-7a63-449d-aeb0-5559712493ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609b0087-e728-4c1b-a892-e7100e726db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5a75a20-d3fb-4a41-9d70-eff4f1f1e3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928df4b5-b55a-4f6a-b8d2-034f000d67ec",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21a3419-1ae9-417e-9697-d01b1c36109a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7732db9-e0de-4e57-b474-0ee0867c5221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ae24bc-590c-454d-9cfa-53d3b5cb4e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69a2161d-ac21-45ec-8fb4-4ef3480621de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5486d407-1873-4a44-b845-2b86ff216d50",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f986ba0-19aa-44c5-ac06-bd95dfa23e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22cdd45c-4b72-4d73-835d-8b75e8d3e01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173b0bd2-efdd-45d4-960b-53882ac0e81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f4bd699-b75c-4478-ab8d-4ca3722c0740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b71e86-db22-489b-92c7-7df79b6efe99",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37eb2649-71df-4c68-860e-c469e0bbb1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7bdcf23-2bc2-409c-8da6-c60bf871fb99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a35668-0397-4d14-ab8c-011273999d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40d4b7f8-cd96-4a73-a63e-a937b3071c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd12cc39-278d-4bd3-b912-aaa59a245366",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3a2dc3-1869-4243-91b3-cda2593f0e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42f1c4e-3506-4220-b97a-cc2411e11143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b0ce38-e387-443c-8cd1-5914d8afae4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d3a5797-cb4f-4cde-bd89-50acb8b68adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff410a4-83e3-4714-b189-487a31ba4cea",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7134983-a4f1-4a50-ae97-3754f0186013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a5cce1-bd26-4548-8bc2-0006baf4166b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1182082-6f20-419d-83ed-0aec5ce9e6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e164fd9-d221-495b-bc1c-412bf4f3812a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0ade9d-14b9-4e58-b729-f2d63fc77ead",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef61daa-21e4-47c2-9d00-2603730b541f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66dfa320-9ba1-4cea-8b45-782b5cbe7fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a8693e-d63f-459a-8b03-f0b9d1eebb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0271827b-4f3e-46f9-b0a4-1f67604fdbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fc4dd6-a2b3-4d50-b7d1-45cf22bb4239",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b9075f-9722-47f6-bd2f-0ab477a69b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09fa408-6443-4510-9cef-4543ca725f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b7a28f-120c-4629-a4ec-efb08bdde157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b165814-00f8-46a1-8cd3-413c5f720b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bc75fb-72c6-4766-8267-3c5580705621",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f881ded7-5656-40e0-b0ab-7fb231a10b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d03924f-3466-43bb-88f7-89938b50a5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a34fca-b331-4fd4-9871-d62dced395af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee494148-3786-48d7-9c83-f87ae389d4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3996ca82-e29a-49a5-8aa0-9693a84f6bae",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13eb79b6-7e15-4b09-b492-3688fe6465f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be710c72-1411-4ab7-b6b2-5c04ad2986b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed4bb0d-12aa-404d-9b55-b3a33372a5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03c337b7-5db3-4524-b521-03e9e0af7260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c97a91-f751-4959-b15b-43cce20f1111",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd2841f-e00e-4526-adf4-d42c8ce246d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c4e8ae-59cf-4ebe-af84-b15b991dff1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa93b1c-a891-4ddb-8b95-3385803149d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "772418b0-6abd-4378-9efe-fc5fcc3b1a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b1e137-1566-4f17-a136-94f1295def53",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb86174-f252-40e5-a50a-136745dbf8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff4403d-e67b-44b9-9b8a-b499ba62cc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e95c46-c100-432a-ae6f-025ae4c6af29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8d240f5-addf-4734-b2e0-b5bd132b23d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908bacb1-c235-4c40-938b-bd630b70dd66",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d41b06-2f08-4284-93b1-4b7257dc7ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18643bd3-f985-4112-aaaa-856fac8ccbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2216c14c-1d47-4129-9ac2-378ec6554258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fffa592-dbb6-4e22-8e44-549484e035b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f81c0f-b04d-4fdb-9ea8-151955e3d3db",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5464723-d510-4043-9f23-e286b8ffbaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecdedffa-036a-46ab-950c-83c55d96c15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9cf79d-6a74-47ff-8a62-c02758faebc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55623250-bafb-4533-8409-c6c4a175f324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2d7cc5-eed7-4dea-b403-3fdc1ffd6766",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5028be-9e4b-45b6-a4f0-817734f961b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7000338-ade7-4d5f-948f-62d2db6b9fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7410412e-e660-4e21-a71d-2ea3399da62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd5dd387-6244-43f2-93ae-9043746a4625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e118feeb-bf4a-48a3-a696-72656b569cb3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7bc62e-0b83-4456-bf9b-19729cded97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37170bc-6585-49fa-9c8e-be96d7c43045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6106ff-9874-4307-b8f6-b7bde49f60e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd6f21a-d91d-4415-ad92-7722cf0b6476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbff7dc1-94d7-4cdc-8396-76c104841095",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd8b269-cb3f-45ef-8c6c-e4cd4804727e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b27498-0729-4787-b952-ac9da6775737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f861970f-0ccf-414a-a8c0-fea377cb181f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb30089-5c07-4d0f-b137-565cab2cc8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6350ea2-9fa1-4e66-8e9a-f763842b51a7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30d3a11-bc93-419b-8563-e0937a7c967b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd94a85-2cd3-4181-9d2e-270016bfc422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca30b102-3959-4a19-b614-ec31fefc526f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2249c624-3d26-4183-a80e-0e9719c5b9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2c3963-36a7-4556-8f42-fcc29ce41b44",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30efd3e-974a-4236-b5bd-e607869582ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0d9b3d-18ea-46d3-b87b-5555b2fd1c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3175dbf0-2624-4bc7-965a-2117006f02a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e85fffd-ea98-4abb-93ad-8bab53c79fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc731c97-86eb-444b-9269-f5322ccec7ae",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233f6807-a068-4156-aba6-9e5b56fcf943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910e7e61-db5c-4b21-ba7b-bd1de6d150fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0c446b-ab78-463d-87d8-8990bf0f5e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46263bb8-abde-4c64-a612-6faaa6ada28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240d0917-0f8b-41c3-b116-eaddcfb65297",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553c10c4-3133-4ce3-9d5c-fe43d25b4242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e723deb-6aed-4706-92fa-44c8c42bf117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6925b2a3-9e7f-4f4f-be37-fd6bdc8bdd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1fd14b-0cda-4643-ac2a-3437f86365d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131d16d3-729b-49a4-ae5c-d3b392656cdb",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848f8706-ca93-422c-947e-d2404f78edb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160f0269-bd4e-43b3-aab6-c6f344a857b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501b9de0-fe56-4619-ad31-6b5c734ef885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "06d2f746-3389-4beb-9988-1364edfa2e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05872a1c-3d74-45ce-973e-09a180a10b0f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acf653b-189b-4ae1-9420-f5cff68650ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2e83d7-5edc-41ee-8a66-9a1feab2890b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df82425-948b-4a73-a017-ef9895c9df12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb5447d-8b48-4c91-b898-85cad8001920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea41510-fabb-43a6-91b1-15d40682595c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b075f5-1686-4c09-bca8-c938bd14b411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe59f43e-22bf-415e-8172-1e858a741f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc979bba-a3c0-4993-be7d-9c7a9e4efd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf05f65-c8fd-4495-bf2f-ec3b4fdc0cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4347bcfa-2066-41f4-8922-adb7bd5e013f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d67ded8-7c84-463b-9ff7-e2b9550d6482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc538236-c7e6-43a8-bfbf-0bc5950c227d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca66294-c167-477e-acdd-475ad791023f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "592b562c-f4bf-4227-bb18-1feb859cc379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dce79f1-a6c1-4f1f-b067-c058659387e2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4001c0dc-0689-49de-abdb-228fe57e577e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3163b6-2f73-453c-b77d-3cd15011716f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b82b84d-4f55-4fef-aa38-5a29dfb99a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1dea42d-5d0e-4038-925d-ec8b9682e267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b10e32-fd45-496e-ab09-c49f46c6607c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc94ed52-53c0-4de7-ae57-3f91768c2f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4244770-bee9-4ae1-80e4-966f49f52ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29709fc0-f1e3-48ea-93c9-d018c0af4bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "550e7df4-3e4e-4702-90c0-e3542f610471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adceccd-4e4c-4b96-93a2-e0344fad75e6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854115ce-e0d8-4e08-9e57-4297ded638ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5b971d-e9a3-4973-acfd-1b35c1e3f39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d91d6b-5fc3-4c46-9c81-708e10de3ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8660a7-d481-4a8c-a1ac-9986793f4fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb570ab-fee8-4495-8bba-2d48057cfba8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7d63d1-3f3f-4e70-9e4d-f26a71df06db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df28a0c4-7e1e-4e00-84df-79b5bfc84513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89202c6c-376d-422f-a14a-0dd5ba22d271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b08e97-6ba4-41b5-89ac-457f1ff21aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1523fa-f6c3-4e52-b297-284a11e67da9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb924503-f067-4ef6-b9fe-e6584e8779b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e32b9d1-2c8c-4eef-893c-1f6c298dc9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edafca27-e036-4804-b187-fcc4f15db9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e68786c1-8048-4f05-a0fc-21d67801a3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9537d815-0a82-45ca-9751-8ec208025f73",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb43d224-a9bb-48cf-90f8-3089de5bc7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264081f5-d79e-4014-83de-69bd9a9a87c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecdb726-b542-431e-bbeb-3ee35a158bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "229fa132-0375-4ef1-ac39-58035599f75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0501ab17-9be7-438d-ba60-64e4c96092e1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c916b22-ed98-45a0-a504-ff4607030772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4be0a2e-4b82-4157-879e-c25a22b1d785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be98a0b5-80a0-4857-ba9d-c680baee56ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3e2ab4-bb34-46e0-b05a-744cf2e072fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202f098f-a178-4ce5-975f-e2f623108ff2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb842df-2e47-40fe-92fc-ee0346b820bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b87cfc2-995a-4583-a539-42411ded3eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb20f95e-9286-4f39-a1b7-b12c0a7f28e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "aede2805-1850-4858-9546-556960f2325b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc52792a-81e7-45e1-86e1-185d54a0b647",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd015961-ebda-47d7-afd8-487812f63505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e67bb31-e005-4d20-a311-9d8320bc6546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8fb3c6-62fe-416c-9444-5cda19460518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f03276fd-58fb-4031-9f56-af5bcad03c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b19bc6e-a939-44f6-888a-1b7bf2474480",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe76675-3b5d-4070-a382-cc55453c9bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1836ab-7064-49d6-bd80-ca8f78e79fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d87b75-1987-4833-b6f5-c2539e2d4a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47cc20fd-3ce2-4c88-bee9-0adf430be43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1dbfe47-763b-4c14-91f6-b545595a8a11",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2860b3-e230-487b-b197-ae0aa363b654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbbad51c-d70f-44a3-9ec4-b15e2223b61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce08f7b-4a0c-4559-a49f-949be7401f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f835b4dc-2ab6-4e43-95ff-4505f3212bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3bc20e-2918-48a6-9282-4c785d61933a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d29109a-2c07-484f-9113-f33dbf56159d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108812f6-bf82-458f-b7ca-31f2a2f41ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7addfb7-ce97-4216-99de-f6900d55a3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "26be1525-6c08-4427-b677-d84dae30acfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8a7808-0966-4155-9fbc-88cf1d81822a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6c938a-0746-4187-8bf3-af2343812cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a67382-4d2a-4e8f-a876-15020ce27bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73176adb-6e09-4277-9cd7-553ba3c485f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4106153-86ea-47b0-9bac-4e35541bf0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc27a9a-4f68-40ab-a148-e21f7c7b5e32",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f40f23-59c5-41de-8065-44227bc1c39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d007d89-6245-4a78-9c86-0268df6776f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bac1753-a4c1-47c0-9b18-78f111127f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "95b955e9-dfe4-4a7c-9818-ed9bf4fd54f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5722e75-b8ef-40e9-834c-b51ba1c7bb61",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba201de5-ab87-4068-87b3-15993cd12f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e3b823-80dd-4897-b47e-44a8253c05dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429d5e3c-9ded-46ce-a9b8-44134c214b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0d998481-befa-4777-8c93-c01f91b87bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1bcdb5-0219-4ad4-8c24-b90f89d51e2a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470a728c-4427-46f0-86be-75c83e778208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9cede4a-9ab1-4d14-ab09-fe1411d60610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44085519-27f4-4879-868f-5bbb1522b969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7977d726-217e-4ed6-b68b-a7370e0a7eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3587d227-1053-439c-a865-ca89ab6f2ace",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00fca9c-f76e-47ad-94e5-2972c908c849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a24892f-7f21-49bc-a71b-1ec969ad049d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87eebfc-c249-44ef-9f17-001a99157b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c0daee-e297-4541-bbe4-3c08b1a9805b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd6fc20-5dfd-4949-8ae0-86f6323c6fef",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a4a1ec-d0ad-4d7c-8a21-a878968ed0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfa294b-b471-4eb6-928a-f8a302e91687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b93d738-de9d-4c09-888f-caba408a3d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a59b090-64ca-406c-9407-1fb2b7d892f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555008c7-b914-4fab-bd77-3dfbecc52d01",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164c2785-70bf-44b2-8ee0-94afc1de5ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef65751-1cca-41e1-932b-cc8dd595fd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a1b3b6-27f0-47cf-888e-f3ef07804e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aef0556-3249-4739-97a0-beee74c3f93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431fac2a-2783-444d-9ad9-40fa474309af",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef4b112-3a0a-49dc-b4f5-7fdc30566a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a34eef-4fb7-4e7b-a64b-ec69e363b892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a27126b-7d08-452d-a69a-19014e46d7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97abc65e-30da-4843-ae53-9e482a9d0bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63aad1bc-6abc-4297-b2b8-fc3e8533a80b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9ab7ea-12a6-48d9-8499-cffb1df736e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f09c6f4-7a78-41cd-8825-979e8b864398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8729b269-beee-4fe5-b581-28d7119ffc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc3ede9-0f05-44ad-b806-d2ce20a4f7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5034ea9b-cc70-443e-b627-b2d02d4272e3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1c7f3e-6891-4411-86a9-1e6128d51612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb309bc5-3990-48cd-badf-cb656672d8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920095f3-3e79-428e-85b1-98b2f5aa48e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "855a98a2-601c-46bc-b3be-18e6ea13cf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708f11dd-7814-40cc-8006-662640b53444",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635eba04-1338-45a9-9b34-21cddf2011ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35ec3dc-a89e-4693-9bf6-8079e11ffc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ec6fca-57f8-45ea-9eca-6de97f458ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78715dee-594f-4687-aef4-febbf527287f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec652bd-e0ef-4cb3-8d82-d97862471c6a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c05b813-8447-41a3-9b9d-691f8c0790ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e35eb44-f8fb-41b8-a3ee-12f469fa930c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df08458-a8b5-4d7b-aec2-e929e7e269ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c61bfc-4960-4d90-9f3e-6b395839f5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e908a6-b894-412d-a39b-f4844c65f6c5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85d8ec8-2279-4bae-a8de-03ea833ae1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4845da-3e51-4c98-a8a5-143d9a7d57c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f049d7-59e0-46ae-b93f-3075190b994b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9858df-d25f-4da2-a885-0b395503b604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9004fec-0ea0-4d83-affd-4079ab171613",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b6a51a-182f-45e5-858c-ac72df992441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ec3095-cb74-43e4-b073-dcf396088b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93a9242-9b89-4c3b-a086-abc668bc019a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70d91b01-5a8b-4076-9e87-ec9d1cbd6722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bdfd96-efc6-4c27-9378-bc676b505adb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d27cc2-183d-4905-b761-4a8edf3a2943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca045e49-581e-44f1-b16b-38a79e4e765f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b30f68e-53c1-452d-83f2-ca00f90eb5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afd60244-ee96-4774-be22-1433d6115e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a90512-3689-4ef6-900a-d291d36cb410",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb9b606-2215-4145-a86a-67690768c020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ce16f1-cd03-40d0-bca5-0f4d80e38b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c737769-6ef0-450a-a43e-18251a89b0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab2114f-07ef-49b2-ad2d-2047eb27e179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4471947d-f315-486e-8ea6-4403829b5cda",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97996368-b4da-4626-ad15-43a060c65481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94a160e-5962-45c1-bcf8-c8386ad2552f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a5e342-51d3-4a59-b7d0-d4d705f08ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "83265653-9e08-4d9a-a112-bddcd8823ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c24d1d8-6ffe-4bcc-8106-1e07dc431d33",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2313d31-f598-492a-8983-e559d8aceed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a27a91c-75bc-4330-bfe8-ba891f1b9c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751c5ea6-247b-4c95-b645-279bc17814c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b08cefb-864c-4a43-90e8-cc65c0d30ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f35ea78-3e3e-42d7-82ea-5e8c4b0ef1da",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dacf0d-1e59-4691-8de0-fa0d62859483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b10bb1f-f77a-4be6-9057-1a03a342d567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c1772a-6083-4fb0-ad75-c18d47148407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "332d5a7b-a660-4e24-9764-e9e8cb19af32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8324cef7-a1c5-4dd9-a90b-63553b41b90e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064583bb-28d6-462d-aa12-6df1dce61073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0427ba81-64c6-4048-a5c1-c59d9cf4d497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c36188f-f0d7-46ca-9f88-aafefc9cc807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "911489f2-0fdd-4071-9ab8-a75c6639cb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134ae2a2-2c54-4bb2-b341-94d367705c99",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f226f1e-01a4-4029-a71f-d6cf8e1f8bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242256a5-fb5b-4caf-8922-d2989b1fc2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bc33b1-c01a-47c9-bd48-9b1e95f97490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7a09ea-8d49-4447-848a-62b9d50149a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13a7f03-53a6-4601-a917-641339998872",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463d493c-4911-482a-ae2d-4044ee76cb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac71936-2fa1-4d85-ba47-45d24e615bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb0dd0c-b4a3-4c24-9654-ef1fed8b1651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "145c9a08-1fd5-4c4e-840a-eb8a5f19a30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fc5029-afb4-473d-b4c9-debe8cf19275",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d081398-8518-4d27-87f6-9216fb4501aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247a6124-4e78-4e72-a698-13f46599d3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6b2621-42d8-4f15-8f62-f0d02b6c422e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "571bf0d9-22c3-4fe2-97f1-e5214d5bbaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2e760f-514b-4fab-b5e1-f165d66087bd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf54a92-149d-4d8b-b804-3354d23f9d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04b8eaa-ab91-4324-9c25-4d303bfcd557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ee490c-d41d-4607-b3a3-bf87d0ea2b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "be3848c0-0b24-431c-910a-6b03dc528d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f4ad04-b714-4ef8-b36f-2bde1a1b4ef5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531f86c0-e412-4da0-aa1e-f8e908236282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c32d203-afae-462f-a5ce-154118ef24d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7553ace2-b79f-4f22-a388-9a00b3c249b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab00496-f214-4c62-ab05-54622b34483e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd23ed63-654b-4415-b50b-51ddefc80ced",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9890d888-8b94-4b6b-b353-8a9d98df58d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cc6f68-da87-4383-a86b-2eaf17dafc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9d80d2-556c-4ac0-8b9d-7f200229fe45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc0e1b3-3a56-47e5-9162-c862a1a551d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a47e99-09c3-4c4e-9809-1d5dc6f6fbb1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7299ec-86d3-425e-903b-f1d00877cae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8836db7a-fb37-48eb-ae50-b546bf30129f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dc5b8a-c924-49bc-9198-be1c5924f5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9c74ac-3ca1-472b-85f1-66c528b27193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f351e9fc-e8a5-4162-adfb-f480101b1d5f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8f814f-404a-4976-9186-ad2e1e81ed8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58fbf9a-a295-400a-aaa4-e2a7480fe053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fbd3a6-3f99-4202-99f0-b9f8b528bd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4eac907-39a5-48a0-b899-4b8cd550d749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9174c4-a863-4f72-8afc-ca63cf5b3202",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe7da31-7882-4020-a6fb-fed746bf5fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2b3283-3324-4f4e-9983-0e720ff8bee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d7ecbd-ac1c-4de7-90ab-c135858621b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6089f3d4-780d-4f79-a6cd-e1dfd87731f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de20cb7-bda6-4750-b22d-6235df093ffd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09ebe3e-52ac-4cdf-a86e-b8c99bcf431e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c2a75b-4941-4ef7-b691-d2801e90c39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c4aa81-7caa-4944-ae30-2051bdde89b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4467cf29-e6fd-4f74-9b10-cdf060d98d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c7abac-9000-4ebb-b653-0d2d18b7c145",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e75428-0c1d-4098-8ec1-bc90de0a810f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d162cf2a-5529-4395-b99d-076da21065c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ac4565-2303-4130-b6d8-a11ab3be7c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28741892-a16e-4e52-a5cb-f00c364855bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047c3f82-a90f-4320-8294-e086ba44e94a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70fc61b-2573-4e85-92cc-4b3c9f342add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1db9b4d-b73d-431a-ba87-f0af1823d5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014b565d-f746-4787-b124-a00a15aeec5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "052070ca-9ff1-4bd1-8c4d-508c607f4035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49eddfb2-2fed-4306-ae58-3c2f446616c8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fa12bb-5e45-4245-80b2-49c55f463ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51febfe-1e3d-4308-b782-20b68f14c836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1ec2f8-ee92-449d-a253-784fc7b8624c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d41cd09-2718-45c5-9fef-67af53bf7093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3593f8-4b76-4577-bbbd-51523cbeca08",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84b6315-0bde-48cc-b637-a4f81144f034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df3d903-3c44-403b-8bec-fe4df460f1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d332f1-e774-4a1a-b552-6665e2cc9746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68cad226-6690-43f9-97da-236e8ccbcdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ade028-b7e6-4e7e-a357-b1f46f9c0be8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8851c0c6-f208-4d49-9e5d-18311c849e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00804c0-b168-4688-a046-71e2d401dbbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91680396-c95b-4827-a833-48dcb3956bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd20212-8d07-4f28-bd7f-0b5690013bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37248fa-741a-4f7b-928e-445dc70cf257",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6f3697-7fa8-4661-bd7b-42585c073814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796d6918-f031-4f66-85fa-430a5499f4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b5d36e-9097-41c4-825e-a11d696808a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24a5c278-8bc1-4ae7-aac8-69124be7d0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4890a2-b223-437b-a2e1-ceffbd76e117",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ac91c2-f73a-4cb5-a129-e7a8c8b72714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bee555a-e4bb-4c3c-9b14-b448b1ad5f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4a0fd2-4b2b-4ce6-b256-3addfbeb1bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e86ddef1-d29e-4767-97b5-e8cd32dce6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1e87b7-839a-4c51-a7f0-48454c98dbac",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d4eca0-ccd0-4b0a-8111-d61318255aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fadab6-226d-4aad-9e27-eb643e530d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8246bb20-c9bd-4734-aebb-0bf347d26e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23be61cc-039a-4367-8358-b370ed6393f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee60e8b-712e-4d0f-a483-4ab64555ea4d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675a8299-6241-475b-a1ce-7b30d2178b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab5340f-db3a-42cb-91b5-ff512ee4c82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b6497d-e5d1-45ff-a64d-ceaa01a77d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37c77be2-5f8d-4ce4-91a3-83ed78953f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9e2239-920c-40c4-bd15-f662534c93df",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57b210b-7757-4d75-bcdf-7e84df6a4691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe54ac7-8f7e-4f75-b763-e0d9f86a2b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8306eedc-c633-4025-a689-dd6691e56d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f64218-8470-46d3-bff1-956d824cf54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f525d04-faf4-4a07-9727-be47a25094a4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bedc92-3d3d-4deb-ab78-adf53098a20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09876106-88a6-41cd-a730-6be0fe75afb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28133b5f-872b-4c62-b6cc-c336cc039110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42fab790-3d1f-4541-aaae-b81acd32d5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc01025e-ee5f-4b5a-8834-63a32ac0a1a8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b036a08-1421-463e-ab72-c1f0ae9571d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d999cd2a-9ca3-4660-8cb0-fb8a9887ba18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f392ab-d71d-47c6-8acd-37a8b51051d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f5e5d5-af2b-460c-88c2-a1f9fef930c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8d5f33-c562-4995-b793-d16576d3b030",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a9d573-31a8-48bf-ae40-7770773c9343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8dc767-1fc6-4b83-aaa1-01101b6cb130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a332ccd3-c361-46bc-9193-c6b7ff701117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e028a6-cb74-4a8a-95c6-1bf544852419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8485c8d5-faaf-4401-9767-05e47792d191",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd45940c-24e3-44bd-bbea-6faa8def6026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b62cdeb-14bf-4987-b507-42f6e2004b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3efaa19-e27f-4149-8a69-b10beb7e9655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12d93a72-4bed-4a9e-bbab-1696e84cee46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9c6f40-7526-42fd-86af-0517f277f628",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4362ceb4-4bb1-4bd4-92f9-c02aba260e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e6685c-695d-46fd-820b-77d39ec48569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49d2758-f3a2-4b8f-9fdb-8f76dbd6086b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53a4913d-5a5c-4706-bfec-0ae168165433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24caa29a-c2a3-4d8c-b0d7-f644c7e4820f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac1d867-b31a-42ce-a8ca-a246dcef59bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ea0b81-05e6-4970-a3e0-c2ca8c750735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0dd35cc-4655-435c-8743-b1a589480f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee88a70-19e6-4ccd-b671-fb3dfdb272e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996a7900-a2d8-433f-9d4f-94b7f5c4f4f7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf96d37e-f522-4959-b582-c0319255dba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257f6161-3c6a-4317-85b1-0d6d14a81ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66ae3df-c659-4c23-b0ef-f47506c44cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "daea78f2-de23-4bb8-9556-e7b7c0e7ddc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787bcc7f-cd44-4790-9e41-b3511c1dc3e0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a642d7-df56-4433-9402-8697e74d9f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89443ad2-e26d-48e2-9bef-9790704034c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c530d1b-1e21-43c0-80d1-875e5eed51fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b825f532-1e1a-41d1-94de-3e34b847cd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d16fe9-800a-4625-89ea-70c341c8f544",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862c52b1-94a2-478e-80c2-cacfad9b378f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3006e10a-4846-49f3-98c6-06e247c6cc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483ac51c-3761-44e3-9b18-339d5f2efb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cda4e805-b334-46a2-b3fd-e6ab1e52abd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d71884f-0679-4030-9e59-96882415d215",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3684a9-41f6-4e42-a118-cd7388164eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4a00ac-c715-48d7-800f-220ee26dcb31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03aa5cb4-ff17-44fc-a82e-731553fa7908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "28a0107d-8fb7-4389-946b-6056737ea085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00638d0-1a14-4a39-966d-d4eaaacbbb36",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edbe588-ef9e-47a4-9c8b-d3081fa9c92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3c48aa-db90-4874-84fc-e15780f1ff91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b202b4-b96f-4777-9ff3-7cfcc5f374ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "25ce5572-db66-4ce9-9cf8-bba0e4e612c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48228966-644b-4cb2-bd4e-38fd64eeb0c2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5a42e3-b2a2-47c9-a092-f4e8cbd217f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d32754-3d2d-429f-ac6e-5fc94629dc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d13a53e-a5d4-4dfe-9e24-e9d2e3fa578e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f44bbb0-2284-4644-a449-8af90d149b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b71d56a-1929-4af4-b039-46ed5322b822",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de6166f-4eca-490e-ae29-007c0ad208da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7943782d-3a11-46a8-9740-bb1d46413d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd68efb-930d-4fc6-b032-f6aa013a2457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d075d81a-01d7-4743-b173-a102be45d951"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "724afea6-9fb7-4898-870d-e89939305aa7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c6b025a-71c7-4710-91c9-7115c62bbeff",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbed3b59-c9ad-4bf3-95ab-500611764594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f26aa01-5e45-4ffe-b1eb-77b68919ebcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b19b07-6f89-4697-9fdd-2d8e7b98e928",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61698b1d-2fb9-4fc0-a0ad-d95a6b3a3ae1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c8edd06-f5ec-40ff-946b-aaeca41c5c59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69ab45d8-3563-45e7-afa1-e2befb00d817"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41af2b47-1106-47a4-9f66-68c80231acfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8b64594-7357-4ebb-be3d-c9362d9a0e57"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80d6f80f-3978-4b83-acfb-4df3b89f4086",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d02f1cb-e57d-4c54-9caf-cb497e199ef0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1ef4f58b-be38-4715-8334-111d11218c70",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "122996d0-8452-48cc-9b0d-1c4b55c26da4"
                }
              }
            ]
          },
          {
            "id": "a3b8493b-8532-4671-bfd1-06acbd55d60a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2539fd12-f8ea-4bed-8eab-b71952bc0bca",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "605591ca-8ba6-4a89-9e83-65619537a978",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b8ea65-cf34-4f5b-a57c-1b983871f573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b025c4e0-2624-4380-a024-06cabb626f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dd3e46-bf82-4dc5-9ec6-3fe9797187eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c16e97-ecd0-450b-8719-37241544c339"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "82968edf-c0cf-4eca-b5b2-a25932ace1f5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99c9c43f-96d7-4a45-97e0-a3bbad4b4865",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2650635a-3d25-4d92-beca-94f572e495e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bb27cf2-d026-4796-99a1-a96e34695142",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "893c1a22-a547-46c9-9454-77756aa3d988"
                    }
                  }
                ]
              },
              {
                "id": "e252ef2c-3b30-4746-8300-a21f4ab77b9c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc9892bd-5363-4e2f-8be8-3a470a00f1d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db28884c-212d-443a-a7ee-db944a9244e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "524de259-8f48-4f0d-86d4-695adf880fbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e6e4c1e-d5b5-4f46-b4d5-003ae02b0992"
                    }
                  }
                ]
              },
              {
                "id": "ff356b30-fce4-4f44-989e-5fae374b837f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cee87a9-b36e-4446-a3c2-992656c3eb23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a54ffaec-780f-461b-a715-5c6823c2d007"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a064f6b-7f45-468c-a45e-1cf5124ecae0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2ae6ae82-5a92-43dd-bb41-109a8a20a5d0"
                    }
                  }
                ]
              },
              {
                "id": "85678f3d-7b58-4603-93b6-743e7f31b4b2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15f784bf-a619-4698-90d7-a3f236eedb0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06bcbbe0-ecf4-4ef0-86d1-31ac0538f859"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dbeb00f-9f41-4a48-9c43-e5ac1d8f1c0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3d345aba-b871-4323-8b65-4e1e006188e4"
                    }
                  }
                ]
              },
              {
                "id": "c231b15c-8e75-40e5-87ab-f27de8fa7738",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dfee44f-7843-480a-bcef-6a523152205f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "651d1992-04eb-42bd-a39a-a0b2caf83505"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "003ac200-dbf7-41a3-b0d8-656f4fdc72d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "642b1375-859d-45bb-b033-f1392731ccb4"
                    }
                  }
                ]
              },
              {
                "id": "3234353a-385d-44d8-a152-485fdcec4f18",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31ecb03c-7f63-4d4c-985c-8170b665f4d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3410ffa5-6b9b-47ee-a8f8-ca5428ec61bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc13205f-f237-4a73-a7da-0d520eaffc41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "608130f1-d8c8-4c5e-966c-22ce295daaae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8ea38949-a6f6-441a-ab66-373ad7224dc0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4293fa5f-80f2-4eed-8df8-f6c9c68eda73"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0f5719c9-9a3c-499e-9603-f77373c19e7d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "855efc37-a60d-4438-a62b-0b06061de510"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b005e717-4ae1-4e42-a505-7ff3e1401571",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "18dad5cb-e279-418e-acc4-4ec27653bb21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a72983f8-b43e-4b4a-88dd-d90a9f5784d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fea5738d-eb5b-4d4f-bc0d-4201f0decbdc"
            }
          }
        ]
      },
      {
        "id": "ac84d9dd-73c8-4f18-bce2-28116deefb1b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f0e17af0-0f42-4c6b-980d-acd5123d04a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b39de915-b434-40dc-bccc-9827b04da28f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2fce0d19-1bf9-4409-a4f8-80dff59072b3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bccbac5-8c94-4e64-a775-e86f0a1f2c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40183d50-402b-4ef7-bce6-be424d20bace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a213cc-15de-4672-87eb-e4caa6827aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1930810-d329-4850-8a61-b41331d917b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6671d9c-75af-44ca-8c1e-3ecdd8fe2ea8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b59fb1-86c0-462a-a453-ff9ef161275c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31571e86-f34d-43bd-99e4-78808e301f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd738d6-298d-42a0-8519-4ed86b2001fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "178b4111-8991-472c-869a-0bb1bd781e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76eb31ba-9d8a-4464-a487-afe91d22aed5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6171f9af-f804-4e15-b3ef-a8deeff7284b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a20ed9-0680-4ec7-b46b-9e6d2dfbec6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aef9624-8bd5-42e3-a7a0-de34d716cc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "faabd672-37e7-4d04-a3ea-dd07fa317053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7de3074-c1a3-4fe8-bbde-89fadae8a40b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504d5dea-6579-4529-a51c-2ed0d799d0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57592f8-55e0-42ad-8594-828ac5121d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8556f1c6-0ff7-431c-8cfb-5a5e9e745a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "869c3b7e-e1ac-4896-8741-3d0bfcf0480c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d990c0-a6df-4266-a713-7026ff91fa38",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73a9fa8-bcc5-40f4-a0ce-7038f420ba4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a16079d-1869-4288-aeb5-fead2197d56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ddca96-f12a-4b14-87cd-d133a9fc270d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f84e715-ecf7-4a43-a773-0d196ff9e95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea095680-ffdb-4304-ac26-bd4ddc13dd51",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011e6d35-dbc7-40ae-92e4-74ba558398ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd17800-c8a2-4cb7-ad6d-f56c3f3c5513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746adc27-5b2c-4457-b4f0-9445b8b3ebc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd03894-b6e9-4dd8-85b5-e8b03c4d8c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91c32ec-06f1-4647-b489-3c50523a5e4b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ddbf0c-473b-4a68-aa89-a47c3386e538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16f5227-ed56-4c27-88ad-302547cb35d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0df5d70-e177-4cfe-82be-29cc2bad1d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "66a4ff86-6747-4cdd-9360-b33986f427a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f919b6-5270-4f7e-98af-eaa7dfeb764e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7405c88b-8013-43be-99b5-f9214027bc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11adfeb-8a78-449a-b06b-35aa2ea38ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3c30df-ab98-4d8e-b94c-b663ea719cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8206484-5bf5-406f-97fd-e38088c176ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14405a1a-8a35-41ff-a4ef-7db13eb52579",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6624b110-8073-4805-b5f8-628469d6e510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9da8ba-5a37-4c00-b23f-89e5379fd4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c69b1a-f3f3-408c-b0b8-01989e028d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c249d61-17b9-44cd-9193-d31387086136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8e9507-feb8-4279-8103-d15a6eb6a74b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfec758-2a32-404f-bc74-2152c1f81a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b445f471-423b-4a11-88e5-1f678ea5c93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67de7548-f469-4380-8773-b11056d21d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4cdc07-005c-4a76-883c-dc625b9d0dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daafe701-60a9-4651-807f-98bf90e0387c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c82709c-0bbb-4349-8812-a0dd8b87f9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f536738c-be14-4aae-9afe-0c699434a7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198bb5ae-524c-446d-9fc0-43d25bab24a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7282ed58-49cc-4d19-be17-6e7b722c679f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442be9fa-acf7-409f-9e2b-94690675ec79",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93faedcd-f326-405b-bd5d-b2cf30fe4766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68096beb-e158-4786-a657-35a473829b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f085b4-48c1-49fe-9785-a288bd177564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed7ec03-0d15-4f38-a4f0-6604c4a3f18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6f980d-6374-4026-9ae6-98364198a80b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16508ad8-8431-4ce1-a094-52cadf777278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4445f4-9215-4b85-b300-92cc60bb672e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b718d7d3-c6e1-43ad-a36c-5e73acd3488b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "787ea794-4092-4ef5-81f3-f0c2cf9c691a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaad8f7c-be5c-4dc0-8bfa-58f9971ecdce",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6417dfb4-3d77-4ed2-bfda-0e9d18ef18c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1791b8f-c386-42b7-b05a-44f8513b7ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa357354-3ac4-48b0-98f3-40838b3fbd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d73bf23b-6b3c-4ec0-ba09-f48132cf93e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43bce12-80e3-4db8-86f9-bdfd50156d62",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efb7d4e-10f8-4100-8494-8f00ff4c580b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7628e405-c567-4426-9570-4801da173702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae3c046-21fc-437b-ab9e-ff1e53a65b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "423c3a4a-6f48-4b24-bd64-86823d461a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4fb9dd-3e64-4304-8427-43e5895bd199",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e4e044-c181-4b72-9116-f6fac4377827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ccae14-6872-4b25-8680-b4726ec31090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97526d78-ae31-4c26-adfd-9a2c3e836a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "147839b7-f8f0-40bb-8e14-dbd3d9f02dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296c3e84-ade4-4a79-b479-730101fd54c0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d23844-d703-40fb-b62c-4addc0b56255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44692eb5-c234-48ab-a266-b4910d2cc422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e4d440-5daf-4939-b66f-47681026fbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "de9adc00-1c96-4916-a2f4-6c94b03ebc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cce186c-5b2b-4084-a686-680e4aeac21a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e8eefd-5471-4b0d-9a86-f0d2647cdefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2d9821-2faa-4d21-b082-8a85ffd43b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0f0c69-ce6b-4665-8964-04a89a2d6f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85a040af-e425-4b6b-8a74-efa740ebcb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace083d7-be17-4108-82e2-25a1e3943a40",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d608876-28e4-4217-9425-6d3e13c3e801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1de1249-6833-451b-8afd-0d229fcbd1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d79ecf3-9a74-4c25-a1d5-b47b004f4f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67519a9f-b8fd-45ab-b04b-6e78c8391e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa482398-1cb3-4d78-8386-3fdf543536b2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a68e940-d974-49fc-a7b4-58f7efe8e827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9074251b-1b30-4cd7-a40e-d090f27a879e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f770b3c-912e-406a-99a9-3097ecb080bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "637b1865-38f6-4ad7-867e-90c87d26a3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff0cb54-6010-4adf-b618-e4cff733b05a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad786419-e0bb-423c-96d7-bf3189a97dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20eca9b3-a7cf-4c48-9cb8-967273a0a4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7005e34c-1dae-4018-9026-da9afaaffddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f79db4-69f8-43d9-aa84-2d2c196ab512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afb548f-e120-4a59-aef3-35c8b8a64a75",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee66f46-c55b-4735-857f-1672e743054d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b50b74-2bad-4d5b-be97-e893dadd8c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbadee5-1d0a-47b7-a13d-8f44894b6791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e09470-d4b7-4ae6-91ce-e84670bfbb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21cd3a7-351e-4412-b43e-02c176cf3abd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35f0490-ac8f-4142-8d65-8fc9ad90bc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa962d2-686b-4d5b-afe7-32d1a402398b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce978bb-f422-4dac-8008-feabdafd2b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77d87203-63e3-454f-8b08-2770907081ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7873ee6-ab85-4f76-aa86-1716e204252a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18822ab5-01af-4c36-ab17-ae19bcc3b387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae086af-83df-492b-bdf6-544fd974e78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd93a2a-0952-469c-b023-d4b9fd9ddffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bce46531-dd07-42f6-92b0-6f670e481551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808ed1cf-11ed-4d46-950c-de19970a52e3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d74abe4-1380-463f-be3d-7c864fb1a6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd97e29-8a4c-43f8-9f5a-af83468e90f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b79b2d-b62e-49b1-b738-7fa150b4e363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7378e7-e071-40f3-a003-61dd0e05f820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e4318d-87e6-430e-bf92-6b44975ca0ac",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7191a8d1-3f8c-41a6-9739-9d67017d2585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9182cf3e-8ce9-41a9-8c30-10cc0c4c0974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4b4726-454b-4796-ad65-acbe74cc5f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb3470e-51a6-40fe-a755-acdf5a67abe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad2a468-c61a-41f8-a3de-8a055b7c1580",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3130adad-6b07-42b9-8cc7-2d678f84ad9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b153cc40-7516-40b5-a342-c2b6eaf2d540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae52482-9835-4c8b-9638-37fbcbb791d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47016649-6bc4-4131-afc2-08ef71e254d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ce4c5e-63a2-4c87-ae7a-b747294034ea",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e5369c-6aee-41ec-8d26-cf959b7f0f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320d7260-ad86-481e-9fcf-6b92c7c07d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b4ef7d-ac3c-49ce-9fec-5bcbfc54c36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b2ee10-b8f7-4b64-a5e1-5a30f709554a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa8916e-d1b1-4b9d-85de-fc8e6fed0149",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3959cb29-68e1-44f5-bbcf-4d116e960e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec3c844-b237-44bd-868a-bb339b3866dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cf87a1-3fb1-4bc7-be4b-4037c4f405a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b27b0ace-909b-40f1-9c6e-39199648829a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef4d7ca-a2ae-4312-8d98-0b7ee416e30d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2f340a-8d3c-44b0-84dd-54d396c8d7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afae715c-6acf-442d-b28f-2705ff31dcbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d887bc1a-264d-4032-9ed2-45385c2afb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af496aca-2713-4216-9e47-413ad5e7b887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b8ac20-dc6e-4c80-bae3-47f22f0550ba",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8393cfce-9905-4167-84e4-fc1cb7b9b52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebbb127-a853-49e9-b038-9ae1dd8e17b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbbfcc1-1d57-4e77-a954-f00bb0e719a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc12429-8c70-45ac-a820-e88669dde654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d628cd5f-6802-4a8c-97d5-e8f3fea920aa",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a1bfdb-4032-447c-a91d-1d4c18a312eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5805e6-1567-407b-bf96-76dcfca0e361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d6e2ff-3276-4c2c-a0f7-9fe159e8ce43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0941356e-b332-4d44-b8a6-b695094867d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5b6d7e-7a72-49a8-a0ab-8208ef41ef5e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432180e7-e0e2-435a-a52b-55d14573fed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f89047-3144-46fa-8c2b-03ed2f570c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1365f3cd-f332-4cac-bfa4-6741ac6d4d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad77da74-fddd-4f01-9adf-84d1d9b31f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7de026f-d520-452d-a51d-b5eec4c7d34c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb6da1e-6aed-4c35-a33b-64d9c37c5a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3ea2d0-423d-46e6-8ca6-67fac6b7ad5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104cd4f4-4852-4269-ad7b-38980a4ff501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c13cfc6-a92d-4b31-ab7b-628c18b9cec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b834449a-2114-4b73-b2e1-cd4f7ea5dcbb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d0b0cc-2dc3-456d-be8e-f249a2438002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d02910-275f-4b85-a68d-65c978fcf680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d45151-7fdc-46c3-b33e-707796e75fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43e621ab-7eea-4b1d-a8eb-d59cab50a71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2690ed-3286-4b57-8342-f70ea201c445",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeaae52-c3d5-488a-9d19-096b475c8c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f480de-f494-4c31-93cb-10427089c0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8649a0ea-5bd5-484a-b99c-9f8b5fddeca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b884221-1e62-4216-90aa-245b6fb12bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d598fc5e-414e-4405-99d4-2c021f5ac59a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2a2489-51d1-49b6-bf5b-385eba57fa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6600c47b-dc2c-4c4c-93fe-0713b5970f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475b6540-5a53-419b-a9fc-375da01bdee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45921d1a-5628-4307-8cf7-7e1eab94a83b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad0eba50-8016-462b-990e-61453630c620",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e820a62-4cba-46e1-a75a-45d0b8b1ecd3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b95223-2c62-4027-a8ba-dd14b6635330",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1b79341e-93cd-4163-bc98-cbf704ab91cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad93d874-6b17-43c7-ac4c-2fac6cd8c861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5faf72a-8776-4e7c-b76a-3e35f8bb6695"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf03ae75-2cfe-4273-a391-69eeaf0f582e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9652fe44-6396-41b0-b640-4a87ba1fa33c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "462cff0c-5e6c-4bf1-9a0f-0adb8cae4a7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86a62de4-9c84-4f17-af32-b782435156ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e29be04d-5f02-4684-aedf-6c59f633be0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7637051c-3643-4a1f-b830-183675ed42bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c7093b3-d3f9-4a22-b693-b196c388704e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b76d651e-ea23-4f27-bb2c-8e450c77c6df"
            }
          }
        ]
      },
      {
        "id": "d96ed196-b034-40eb-b994-c0b0ca9a8b1e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "14811622-e99d-4d1e-8937-8384c889961e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4cb6864-1307-40e0-88d7-c0eca65d1397",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6e6ec10a-643b-4a0a-b98c-c49e03ea8a00",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b83de22-1a21-4c26-906a-0b77b2fad6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039fd15d-4772-44b0-bdfc-62940597318d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4c0da5-358f-4d6a-8e42-7c52200f115b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49b9601-5713-4347-b245-3447ddb040f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bae41c1-8fc7-4225-a16b-db8cf795f50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494e3422-2c5b-4c71-b496-3b29b24dd282",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be37efe-8c52-4e10-a4e1-d35b4f3d546c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223c7172-0199-44ca-8d00-974d51fb568e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82e3374-80d0-4caa-a4a0-ab4bb56fdf9d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92664183-a95c-4375-a522-8babcf8779df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df12813f-5774-4138-a30c-b8592051f142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea9a822-d83f-4549-bc61-3d8cf264fd2d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb58c979-26c5-43c1-8bc8-c8c5db79f527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382f19c7-72c9-4d99-8a82-005528405a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae980ba-d35c-4d8a-90a0-04ed80fb420d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c4ed99-b83e-4048-a5a1-59039ee2fef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b40144-fdd3-4f85-b3fa-6c5cc61f7572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede17b76-9811-47f1-bf0d-52c8fd6bc7c5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c3582d-8e07-438d-ac00-e22d498f8cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0863e27-8686-4a0f-8a17-1f22f21d1051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846ca5d0-fed8-4b88-8678-806eb8cc1b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a1a254-c55a-4461-a4ba-aeeb2b946453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e08279d-9b80-433c-ba2f-e46debbfdd68",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6097bc9a-b9bd-4847-adad-5c01027bc0d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f4e8489-4ade-47c4-b3ca-1661ec21516e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3d5b2c-9ea7-4780-ab5b-1c70e9f0cb5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c69b0f-4380-421a-ac0c-dc0c1560d501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe1effd-52d8-42f9-ab86-6a8fcc7c1d6f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4f21a9-68a8-48a8-b6c9-37d41042f61a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16615764-6478-4fe8-ab99-234bdb4779e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "994cc502-4b75-4ea2-aa8f-a113ea3fd4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc0e7f1-d70d-48c6-af35-305afff154e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d535058d-712c-466d-819b-7f805dcf0c44",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41ceb2e-9180-4531-bbd2-262dfd95dcf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c273cc-45cc-490d-8ea5-df870a4181bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211195b7-18b9-4ff0-9e07-3280c7bb2a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bd3684-f6ad-4043-ad54-a3a5975e2b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1fe746-38ac-405c-9018-4ec2cd71af21",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62498345-d019-4926-9e09-fb044a203dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd654f8-dda3-4d08-b4f0-3b79a83747e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5990747-e964-408e-9ef9-9ca9553c7424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fbfc43-7d3d-438d-9efd-5ecc110bd384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c38c706-9af5-48a9-aa58-5ea095071c3f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50380546-4c6d-4885-a2dd-966873e37f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458558c5-de76-47c7-a88a-6bc82d4f559c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3ff307-c396-42ba-a7aa-48c915d8ca9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e09564-1f2d-43fd-9b17-e64c197db51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942e829e-1b5d-4636-80e1-fc51bd03922e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad958ef-ebc1-45b0-87f1-f255aff6fd8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "757f3512-0d72-4be9-ad66-aae7fa7ae95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7453264-28c5-4ba2-ace6-bd36e2d458f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1801152a-5e39-4440-9732-6ee77ca7d75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97efd4b8-b39e-425e-b5ce-2fb058e09b0e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d783f9-d7f4-4c21-870a-59a864b8d4e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dbdd966-078b-48a7-978b-4ce2a9f1705f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf08bfd-5097-4a17-b6bb-9c00e5c3caa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d8c24d-57a3-4229-8b19-676c9afd69dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98700aa3-ad26-4e61-9891-08f4f815f5ec",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c4c11f-2092-4abb-a024-046cac11e641",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b816f5ce-9033-42e8-9833-10b3dade639c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32265b5-2011-4b71-a814-c8440edbff45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6aeb6d2-1324-4529-9e41-816e61320ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df7d0c9-3126-4d39-add9-6ca49e0e2f8e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b5a103-8723-4519-9a67-f6263aa30bee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7514e98-5c40-4603-bc04-d174f21cda6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9de2f33-a797-4fb4-a03c-ec5a36079d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25e6e15-1e4c-4bec-b777-0218120d3aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d2d643-5601-454f-8fcc-ad9bc07e8496",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a593aa-7187-4303-bf41-d5248dc102b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2186f9b-747b-45db-a517-3671d6d0dde6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ce445f-faa1-4747-8a1c-c64d011c6fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09425396-1cf1-49cf-bb56-aacf8bfafe9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f37838-21f1-4d43-a87c-a0919148d289",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307d544b-bd9f-4256-9b9b-a9e2487287e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bcc1c9a-3e41-47b2-b21b-70beffa3d1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cea9a4-adcc-46b0-94c8-e529aca572da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0697a28e-a5d9-4a31-94d1-f2e27c423098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276c5d56-b9f2-45d1-b156-95a5d01737d7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2c2490-b2e5-403e-b583-e1872c9a7ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b8252b-e936-4436-8d45-0e60007deec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94790887-3439-4f4d-a6c5-f08e6ee26179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfbf852d-6d3b-4e84-a474-8b0a0af13f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2940eb88-6189-472d-b038-7571113d5713",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1460382-325a-401a-9ff5-59c773fb5969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5031cb23-62d4-4696-ab26-7c82149aa870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62769a56-398c-4699-8950-1c224751dfe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b040984-94c3-4e13-a825-f6fb28f7b29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c766ba21-c26f-479b-bc7c-52fc1af4fd26",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db942902-b863-4a9d-b73d-8f55cb106603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a1554b4-4f3c-4c49-8ef5-6c7ed4b1abf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "005961e6-ac7e-408d-be13-cac94583ba15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bda5077-40c9-4346-9140-c1b0f6a5c720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3491bd-a9eb-4906-99c6-057ca68345e4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc3aa3d-5fc2-48f0-8fce-533c81ced3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a22673c-1d80-4a93-b30e-00e2654d83fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec715df0-4c4f-4ddf-a9c2-f821f5580384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c77b33a-d8c8-42df-990a-d3a417721236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d7cec6-3c89-4618-8eea-977e6d6c3215",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76c67d0-ee2c-41ea-b2e1-62fd995c0c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6720587a-fc6d-4da1-9fe8-a164e08e0b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324b34c1-1867-40e6-b465-394b5026cf6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0d6eeb-2fb0-433f-b5fc-0d8d76b9b038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7e124a-8831-479c-bf88-11685e1183b5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce06c083-4496-44ff-bb6b-62d00fb25cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d94186-a8b7-461c-8ea1-80baa2d1790b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c1427b-d64d-4fd8-8f83-6ce9f3edf816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322862f2-d148-4303-a30d-32250b3d5156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4f3716-b26c-459e-9633-26775258a165",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32c77c0-e59f-4208-8258-56fcb3cf1796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db933e4-67c0-4829-aab2-e68b968dd25c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f1b7a6-d579-4701-9ca8-eec8fd4d2a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42417d6f-73be-47e7-9d54-5876f20e0c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8ec8f0-5f5c-4888-898c-0012600e1737",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aecbcd0-b23d-47cf-b65e-a0e31ef33077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c075457f-b040-4b2e-ba4c-e3a326405318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0319ac-56bb-43de-aaac-ebc81987ceb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78d421c-551d-4162-b48d-a55bd969259f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45351d24-7425-45d9-88df-178bce799e30",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca57a4b-2f15-4a14-a82e-016f7b047646",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e962cbb-13e6-462e-b568-c63bc887af1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98fa5fe-9ca1-46f4-9b1a-f726fe85aea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba1aa79-2af4-4234-9d3f-a32fe44b7054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b53dfb1-37c9-4594-96de-8baace85c904",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008bf28f-ed8e-45d8-98cc-1f38530e503d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e180fb-ac51-4537-9cb0-337094ee4a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42469dd6-2e58-45d5-a605-0533a0273762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbec1ad1-6db6-4cd7-b341-a813040c60a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65628dea-2360-43d7-98d7-3cd19221d264",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f7b094-4a51-459c-8d99-dfe0685da9be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f565472b-a50d-499e-9cae-5847f3f8cc41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a32232-2195-457b-90ca-40edd44d168a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389c98c6-a973-4c4f-a9ed-95af0d66a959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414c86a4-43c8-454e-b7a0-a5d0bb2b5901",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f138b37-2499-442b-a8d8-02048836bffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273e9eff-af61-491f-853b-a1a37b921199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea40332-b6c7-485b-8342-1c21eebcc371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abb3d57-89f2-4f24-ac7a-91c0699b1e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8618abc-e114-4c21-9c73-131080e3d634",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ec9a4c-3129-44d7-806e-6d16e5aba6f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb81b160-bf01-4c2b-ab2a-0c50572879f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "576016a5-e479-4794-a63c-d84238e5992e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa707bf8-871f-47d7-9cb4-bd68a51e9456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05f1c45-72b9-45d7-99ac-f1b396b3a5e1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7fc26e-9650-48ea-b9a2-2278301aa6ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66cb4b56-cbba-4b55-8ad7-76fbe913a629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5bec32-ec85-4a17-8366-d44da57f2221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b4ff19-8717-4f7d-8483-81f476449691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bb1399-0ce6-48ee-8f4d-20e7644906ad",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1b9260-e78a-45d7-9fe8-fe746beb34bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe29c90c-8f77-4a9c-b1f4-307c2c381434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c4445e-233f-4bd8-8d71-efbff8612746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1cc4f2-9aa4-4068-8505-06e85f2498f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8b928e-a5ec-4f99-b4d8-61b35f14dd79",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead9498c-acd8-4265-9c81-53e158df508f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f66738a1-b782-4806-af8d-97f704ff7136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ec3b6d-4a76-4ddb-94eb-ec6d1e2f6af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9aff8a7-2893-4597-a9e9-c570aad5412b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea57be62-5dbc-43f8-a682-7bfdbf904cb4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c7c4aa-ad24-4626-8229-13cf29e5b0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527f4c3a-c5aa-4320-b320-4a14906d48e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90036625-530d-4de2-a4f3-57c5bd746e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d54aa6c-c43c-4c29-91c0-13c0384cf617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354a44b3-809f-4bb1-b6c4-7e4ef072b14e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8505e335-7a0c-4976-a442-6866e5665bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22ed04f-073b-469d-b740-dbd1bc0e7a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11db344-c47c-482e-ba2d-da98654fead9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c68122-894e-476d-8690-dc2a2e8811d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1a6112-f4eb-490c-bf2a-8df60111425e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2502de8-ecc8-41f1-a2b7-3863656d3b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab88fe33-e2d7-4a63-b643-d0fb11b0cbf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb1ab89-3b79-45c1-8c47-4dd63df4d71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463e4d87-cfcb-406d-a7fd-2faba3cd95df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2588cd-edfc-4e0f-aa64-57d310b3ce10",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738d5f2b-57ab-4e25-933c-6e1634670f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea203ef-b486-45f2-8f4c-d543c2842785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211c3eb8-61d8-4bd5-9c37-2ba999fac737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71126008-9d1e-435d-b31e-af5575cbfc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f830479-bbc0-4a3e-a3c0-800e8712390c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043f923d-7898-471c-9491-b13fd885c4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d98334-5575-4441-99ad-7bc823ba72da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "436fb630-bee2-444b-9d99-e197ad8580c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05384ab-4d9c-466e-b4e4-9ca90b0216e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ef9930-0818-4e50-afe5-ad3c90eff45b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c0e2d7-7173-48c7-8c92-24e08e673424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b68b5fd-c88d-45cb-bf97-95a7c58f2c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba9c031-eb13-43bc-a6a0-adfa91268564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4417eab5-7a73-4be1-965e-ff967b6c3383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43076cf-e8bb-46ba-a34e-a960f4c41155",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbc1f50-618b-4d21-9256-26d23c1b0505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbd31bb-efb9-4508-9324-f753577caeb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a421be36-19dd-4c91-908a-b98d13162aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac736650-be50-4ef0-9556-5f34f63a5792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3b2028-f254-4dcb-80de-59dd57594220",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88631fe-efb1-4892-a567-eaaf46c4bf01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc515154-fe6c-470a-b30f-391e116306b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f366f213-3a99-45ff-a05d-bd6b3e74decf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3772a11-f82b-4c07-a890-6196cd99fad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60239fcf-73d9-44c9-9863-04a3fcdac0bf",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3b0a33-5266-4a38-a52b-164c5be5f9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7eb0ff-b307-472e-a594-5bd6af8e1eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b3c0bb-040b-4159-a472-ebd0ca49c254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3013bcdc-c228-4fee-871b-c8555e30e53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d76a86-3a7c-491a-9875-82f2eb5fcdc4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3a0ad3-bdee-4d8f-a7ed-ab03ad2beda0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108c716a-631b-403f-935c-34df7e8f39f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abeed56e-3c78-4351-b1f0-17266474232b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c9815d-0ec6-41cf-9b5a-b9436883c31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28428d60-112a-4cce-a439-bb735a479dcf",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd3e3d5-878b-4bfe-97dd-b8219a36420d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c8e1c3-2132-4f8e-ab60-41bc89483cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44c12b5-9094-4908-998e-44a45da5489a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b288c662-7c4a-4948-957a-ee8d34e08bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5e7364-e0b6-45ad-9eb2-e01e15689586",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78639fc-8fde-4495-b30d-1858ffaf649d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24004fe8-2ccf-4778-aaaf-39ba5d21cde1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdede4b-a6ba-45bc-ae42-b740ba915113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc4171e-9206-45c3-9286-4b846b38b6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8789d895-cf4a-4ccd-aced-00f40c9cbf9f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d8ce82-223b-43f5-879a-b0f98e368d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30aa1b91-6e66-48b4-a205-64c623941d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec309212-a77d-4fe7-87ec-b6c34b5eedab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f9ccb1-0ab0-406d-b97e-380ae5302fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9434ea-a441-408d-af86-bc2c681d0e99",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d6fdab-7d1b-4026-880a-6d12396f8402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66fbb955-e315-47d6-bcdc-2771ba769bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9b8b05-8953-4e0b-878d-f65fec5feb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd5fcc7-2cbc-405f-b9d2-8df94bb4218d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823eab47-c966-471e-a543-14223e61afcb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a44a6a-5958-452a-9db1-0aed19834445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0b6bf3-f748-4bb2-aacd-fb8af5f0aaf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93132130-476b-47c5-a80d-21c4732736c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0f2ef4-af2f-45d7-bc0e-eecfefc8afba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9574e1ee-eaac-4d22-ae5f-150e04513684",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef4fea1-16c8-4101-ba18-4dc698cb5dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a624a149-568f-433e-b314-9d0d767bd1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c171bf-dcc2-4cae-a4fa-4ccc6f040040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ede021-16ea-43cb-95a2-b3f6c3c0b6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429f40ad-b21f-49e2-82e5-aeb2c76a64f5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cbd247-db1f-4ee8-a507-ecda0992c8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cc28a7-517c-4b9f-a35f-aeabcd05b813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a435e7e-dacb-404f-934e-23f20d64625a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e2b294-478d-449f-b1d8-7a4c265c2d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135db490-a75a-4cd6-af9c-ec785681b4db",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a47162-027d-40b0-bc07-035ab2e899c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4459d3-e46f-4b24-a9a7-570f9522b94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d43eb9-850b-40ac-8853-3ca0db46fa8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9011c1-e281-4d52-a96b-728ee5820beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bca1662-8b70-4bb7-864b-412bf9162f38",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcd7568-c78b-490d-b20b-18cf80a353c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda6ff22-ced9-40bf-8333-81fa618a6b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d228992-32e1-4d26-979d-c2a137ac5a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d6062f-ffe8-429f-8779-01f7cd4cff56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63d9acf-3164-41f6-98e7-fd28d77aef43",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7944b8b9-2151-4775-a032-b490f6f7bd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88dc66d-cc94-42c7-ae60-9d501385d523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3360a0a7-03df-495d-a4a6-6d19c3fcd18a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e31ff92-1cb0-4e4d-9c1a-cb2ffeb2b0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa144685-4342-4054-b1a8-f587a879d316",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c89aec-1d03-4eae-9a4a-1ae0424f8c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbea007-b1d8-4094-9628-834deb3c9a75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1c4078-635b-4a98-b111-edbcf72f33c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc7c22d-a759-4eb8-a631-2366eaf2df0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62717bcb-01c4-4df8-a86e-283d6d1d5ea8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f609adfc-998b-4f9d-916a-ff1b8bce75fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b875ee-ad97-484a-b8af-2e955b98e7b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ece76e2-9aaa-4cbf-b494-01e463949296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d80646-bd99-44d2-9afc-01e970a622ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a004127-f158-43eb-8f9a-788f861b068a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d79ddb-6264-49f8-a2ec-101576ad915b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06d4f90-8171-47c3-bf18-0dc3abe3946d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051d0325-788e-49da-8815-7d28d4212eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7256b11c-5001-4fbf-b204-495d55befb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edada7d9-cf26-4eea-8f59-f19143c9099b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ee8679-9d2b-4e80-acb8-9906f1713c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a0ab50-1a70-4585-b18d-a79ca11a33c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "107cb422-c617-4180-b106-e2240641a6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986f1073-c481-4378-8639-7a4a6916984b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0f9a5b-775e-4a5f-8c9b-6449b8072e86",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fbd719-6463-45fa-9aea-c898534ac6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeccdfa7-4312-49a8-aafb-bc9640585cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a9619b-cc91-4f41-b024-d3e2c296eace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba37cc81-95f2-4642-a3b1-7705b0696042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d20e885-97b2-45de-ae34-7b0fb58a467d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cae19be-c3dc-435e-a0e8-2bed514054fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2606f50a-1af1-48c9-9bf9-93447c3e3be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504ef468-3fb8-4a1e-a39c-2bdbe9cc4df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ebd7cd-909b-45bd-b34b-124b10b0cff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6c1271-49a2-4274-af8d-2bce70a2cd04",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19e1cc3-fc15-47d6-8ae9-f6c847f4abb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c337520-e247-4d9d-8c06-82041424f7d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdca5ef-23a8-45c6-a6c6-0a6836eeb258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb133bb-ca5c-4ff1-a882-32c2b6ac9237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0488743a-0fbc-44c4-9359-ac241228e257",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b73cc58-147b-4f58-8710-ac4c56e7da7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbac835b-aeb0-4c86-905b-3001e9a2422c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c25dbd-af37-46b4-9313-1ebb5e80990b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39f68b6-01c1-4c91-b339-687ec6117fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68e75af-b5af-41fd-9a37-b9910f590d6f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b78ce2-44f5-433f-a316-9bb399c222b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71dbb8c-cc5f-4dec-8ceb-ffadd8303463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044f3aae-196e-419c-9492-b8ac549ac000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab57c161-2bbf-4969-a2c9-a91e3eb63eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c65c17-482d-49d7-bcb2-944465652ae9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef673e65-958a-4fdb-a1f3-ddd267422e6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eadc2393-2c17-4228-93ab-e7e9d63b2ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4967d38c-158d-484d-b9e7-cfddf1c62f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204a18a8-62f8-4ce6-b09d-0cb5a6006c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054794d9-a15c-4bb5-bccd-b9abac1f037a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0eb6b03-8093-492d-b45d-319cc2601f5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30ac58f5-b9a6-4cac-b67e-3c527f70df63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c8b6ff-1cf2-4edd-80bc-82cac4fcdb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81961190-5237-40df-b944-78aac257bd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ddc571-8ee4-40ca-9b48-2122813999d4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a238d1-1ba4-4fb2-8f27-c7efdf0992cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba970077-364e-40bf-98ac-a98b2eb3aad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee2f2eb-8ab3-461c-9e84-17a21faa4f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db7fac7-af69-4b79-9222-bc923bc5eade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626f76bb-b7f6-4ed2-bb30-e1a7f341126e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65ef3b4-58b1-4116-9884-9c603a464785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1b45556-a8f9-4532-b57c-127f1156eead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505eb829-19f9-4afe-baaa-46a7e3f6bc4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590c42d6-c7b4-4b91-9103-be64de0ced2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a41601-72ce-4e4b-bdb9-6a9f3f6319bc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d68597-6cb2-42de-b21d-8e25f4ddf4f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d91996e6-382c-42be-b504-a89c1a4c8dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ff3126-3281-4348-a0c0-20ec26575483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091d5a2a-4ddb-45ec-a9be-ad3d2bc96638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a867a6-eb7a-4be5-9a62-087914743cef",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ba4da0-dee7-45a5-bfc3-f812a240a178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f86e2826-c891-4f3b-b5ba-e66ca018e2e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04257b0b-e91e-4341-84e9-8833b72792eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa85f41-c468-47be-b2d6-014e311c6657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e7fc73-f24c-4bcb-a696-56f1189e5eae",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7768591-d044-420a-80f5-40a35bdf0baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e276d05-4c08-423c-9fad-4adf83880f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a5b8a2-2a19-4dff-bbb4-de43a560b242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e03b8dc-dc5d-4312-b286-46c9c1ab2d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a02fbd-6749-4076-a32c-70a8c6626152",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df653d4b-5e3e-4de3-9e7d-ef6e40f708ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7506cd03-c21e-4021-a33b-c494657e48a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad88e29f-4b7e-4e76-98de-8ddd9efbab40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860834a9-e5b9-4733-9991-733d5df67def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4be71a9-9544-4b04-bc36-fc36864647b8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e164ed93-7de9-4826-8b39-191917de1b75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a1bfc54-c5bb-4caa-b8f4-ec7591cdd383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf306ae2-f1f6-4075-8702-ec8481a4851b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bbd7b12-b02a-46c1-ae36-3fccb1f99a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e761c5-26a4-42a8-b926-c89d76a44efb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78795dbe-4d62-4966-abdc-ab08f9990d0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e21d288-408e-4263-828a-a3a6d8852cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "946ab24f-1a5d-4c95-91e9-cc6d410b188f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e61ddc3-e102-425a-9b27-6f99d81a56fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb23426-625a-4c59-a974-19cbea1b1695",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facc8e84-f56f-4253-be00-6ce1bd2bce33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c14be14-7b91-4f67-ace4-3030c9e353ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9612554-abe1-4f7f-9761-35f910d59f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0f2796-8670-44d8-b03a-65512ea3c29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f879fb13-ccfa-4c4c-9e2f-9bdc0067422f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5a2281-442c-4e5d-b593-0f8b9a16ac09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a3fd112-67ea-4945-a441-861525f002ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9bd877-6729-49f0-bb59-f118d5524ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c15978-c518-42c5-9a62-e9038ec0f4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076a9137-7a48-4e55-80f2-c20e094ca406",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ba85a3-6388-4f50-84b0-e3f8d200df0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c37ed7-6b99-482f-8d78-5552ee5c4e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa124af4-5c35-4566-8cfb-d911d574138e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278f63ea-73a1-4418-83d6-01508245e0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e89fb8-32d1-4307-b09f-3a3be25d4ec5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb1bf25-f5db-445d-b69e-72913655c6b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea6febbe-11b1-4367-b081-09992b36f75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1a9023-31b7-408d-9c8f-cf6ff411445b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ef2932-39b5-4a81-96ec-5884b9518311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9badbe-e123-4d06-aaa9-2cbc12330630",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe84444-bc47-4d17-84ac-60bba329fe6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1df48349-65a7-46a6-84f0-8fb7e6294449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206706f6-dcac-4847-bdfe-63e658a01a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc12962-e087-4d65-b792-38e2d0ba48e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa9ff8f-9e82-4f2f-a02b-cafb82b245e4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad082c9d-c30c-43e3-9c2d-902813a8128d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fbec95d-d1da-4ee0-bce9-07a0b47ae033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91cdce7-e75e-4789-9b4f-61e27058f742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc52037-7963-4ce6-bf7d-aeaceb73db28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a763b88-954b-4bd1-a037-651651452e08",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92999fac-f2d4-487e-ae92-cee0702a21d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c27ff6d-6fb1-4bdc-a1f2-6ec9d4e7f834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce044957-764d-4bdf-9f58-2caf3442b130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36ea0a8-5ad2-4ccb-acb5-96f34cc9a5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e742a018-e185-47d7-b153-eb7b1af5da71",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f162dd02-8738-4205-bf86-c5fffca2e5e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d114983b-9032-4a34-9a16-585f5ed3af75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d448c9fd-20ff-463d-a9c9-7fd9d0ce4d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221b16d8-4372-40ac-8ba6-6b87010f99b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98b9988-d39c-4557-8d86-e65eb2d730ac",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167d6308-fc43-4f86-b6ae-ca70d37b0a30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5de23d98-5305-45fe-9120-9f942570f909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84e690f-c7d0-44b3-9b61-f64d972fefee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5753680-b60f-4b04-b926-a6e5c07d88be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6297ce-0634-444b-8c1d-29cbbf079588",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5800289-a8bf-4cde-8501-8d8f48047c4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9868a02d-56cf-43f6-8f2f-2ad63bf62462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33683efb-8d5b-483f-8fc2-5b9cb880a65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ae5d04-2f5d-4b36-a829-cbb4081760a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e1e4f0-af1c-459a-865d-16b6e24dba4c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9630b29-66db-48a9-ac9f-b0ce07b7bd58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae1e1c2a-7c59-4608-a09c-0470a4f7083e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afe195a-0e42-4244-8a69-a5d96873a08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58dcc33-103c-4bf0-b0b7-13e27302cde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a696f6a-4fac-4ff3-9ea0-3d423abf31de",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640b6096-082b-47ed-a7fd-34e083d76a09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "508ff088-9da3-40b3-a7a5-acdd3c9cea6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8fde6f-0027-4255-8c65-16b5a001b83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa2f12c-fddd-4923-9dd1-abe4083f7374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0485853-7b4e-420e-a171-693ff195165f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ee6100-abb6-4ba6-b1e5-0241b6c75d41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fff64b49-a416-4b5c-84a9-50d03deb92a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "069e2d53-9e35-4605-9604-8a3c22021acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8dd384a-198e-4416-b4f9-5dec369e11d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6af529a-3963-46a8-8480-884bedfd3643",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8f4040-eb87-4565-bf63-f1f00c16d27b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a2c6419-4ffd-4c35-970f-88bf385cf384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb966560-c4f8-459f-adfc-942c595e2836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ece81c-128d-4b51-8d31-fccea4200bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf09193-3b66-46dd-b3ec-e62e38160713",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0409658b-138a-4c00-a45e-be40700a921e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6123010-f698-48ac-9a79-c2997f2b4fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f9a97d-873f-4cff-882b-2836795c40ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f4296e-5653-41a0-9165-82022faae3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d205c7b-7732-44d6-b1f8-010e3bc2a8aa",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12f305a-eca4-49be-84ea-c401da3e3848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef9831b-15f7-4cd3-818d-6ff9b01faeda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192ee471-278f-48f4-95ec-eb55e70d3185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4b2c8d-c8b1-4a08-8ca4-e50d97e3a1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b489be08-29e6-4c2e-8272-9dc66a1568fd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc2b3a2-f6c0-40b4-bdc7-9a7d2e21d565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4c7154c-1365-4a00-9c9d-7d14abd96f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32885cd7-33c1-479c-87f0-ce120b124346",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04ab3a7-47a8-4b7c-bf22-de2de5893383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3d28eb-3d43-4b76-aa0d-865e30e9c929",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af2923e-ecc1-4db7-bbc2-9982fbcc8fe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bd99d05-2e49-42e8-8032-99dc2ce28f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae5661f-03d7-4ef6-9f42-5286846604ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be8e3c5-6a50-4236-93c6-c82f4adb6ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d05e7fc-8666-4585-9e2f-55c50dd0c056",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b36bbf-b265-4f1c-852d-8cd249265173",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73b11d79-aac6-4e48-8d9b-af1cbdddb3e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1201da8-46b7-4af5-b9c5-7683493d5869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50b303e-4af2-4ad8-bef0-9718cb1e57e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d831be-ed88-4a47-b8f2-768b76296dcb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9ff591-6c99-4cec-b8d8-fa4dad261f87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15137e6d-cd9e-4db8-a108-934301a4af99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318142de-f50d-43ed-b308-750c328b45af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50008f71-84ba-4d1e-90f5-b24473815f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544fbf2f-39b3-4f85-b398-a623ab9675bb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec8a8cc-1f3a-4172-95a6-0888d0c0b0fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58b074e9-a759-47ff-a58c-c85e59addc79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "121fc976-9be8-4479-91df-703f322e86a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3367b98f-fccf-4448-aeb3-ecad32157cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284f0506-bb8a-4c02-adb5-55dd5dff6686",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24df23c6-3c94-488b-a0c9-f476f17ce224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d252e236-9095-4ea6-a579-f8c447c915ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a73ef6-a43f-4d4b-8e02-63d833c3b430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77402d8-94fc-4116-ac68-0d66a83b753b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3531c0-d290-4f3e-8d20-3219e6bc23de",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865a35d7-7a72-4b68-91eb-57a8e2c3b571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c6143f-1429-4a3d-acb7-309e3212d416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2304922-d21e-45d1-8c99-83b21df2a7be",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70af7b31-3af8-4e4a-bb76-a9b84a538c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8a12d4-3204-4788-83df-1d21c2ca9b88",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148f4719-4c89-4c59-ac3d-721a7cecbc4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0bf17d8-dcba-45dc-979a-86d30c7e2317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f493e552-3de4-4d2a-809d-676a5d22ca3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd073e1-d0d5-4410-a53e-8d5afa389261"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8058ab1a-409f-446f-9eed-a38702e309eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff651156-2074-4326-9e69-8b4baee05eff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "293ce993-8149-40ee-be55-9e7cc14099bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5495576f-ef15-4f3c-9fff-9b922ee19983"
                    }
                  }
                ]
              },
              {
                "id": "48f6d620-503f-4478-98ef-4cc790d400e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c37c8acd-c027-4b76-aeaa-5ba8253899c5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a8d275-16fb-46f8-8c8d-ac0582ab7019",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d84ba55a-1cf8-4a31-afb2-e32238e50abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8f4f2b-b5ab-4b74-bc3d-b2c33799d583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5aac3d7-4e67-4a46-86db-331ffa6249dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99606f76-733e-4fb9-b176-c3613bb25de7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5956509c-22f5-4f6b-aae4-d1ae13ae7720"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3304864-80ed-4bf9-adbf-a83d28dd49b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "885bfdcf-ba0d-44a6-8b6c-dbd2a876d722"
                    }
                  }
                ]
              },
              {
                "id": "d5f6b1e5-be64-4579-bc59-8e8dac9b21b5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "730110cd-5beb-44ee-b4a2-12054a0709e5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5400368f-5713-4e5a-9f16-845210ff6701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "644189b2-de56-4a4e-9ea5-2d0b3920c8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19863441-44a6-413b-b56e-4a53938cc051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92722e4-7516-4d7a-bafe-8f6c03ec7fa7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "acd48885-5a7a-47ee-87c8-1459f124b951",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce10247b-503c-4657-9226-a8d29b91b9b6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60c022e8-fbdf-43a6-a829-f10506ec1e17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "302966ce-e51f-4d49-8c1c-a48ee725ee37"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d885dd1c-7511-4ff2-8697-9a64de222246",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7bb0092-c2b5-402c-876b-43bafc8e9c47"
                    }
                  }
                ]
              },
              {
                "id": "ef93bba8-4618-4e35-b4c4-fdc4147d9a17",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d062e04-1f20-4db6-b64e-270d62544521",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "478c677d-2663-4c4b-a2a0-1ba3e4bb1e11"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "897e585a-0cac-4ebc-bc22-2a4bf8501677",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5943b0e-c6f0-4fb7-874d-36597b2dc27c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68053b57-e075-48f9-84da-a7a401a4bc2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "80831cd8-8031-4d31-a1e5-b8f0985256f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e06cab83-c45e-4f25-93de-aa13ff2b6a4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7cd02bc-f0e5-4174-9e49-ddd56e881362"
            }
          }
        ]
      },
      {
        "id": "b5f255e9-c8e7-4129-8c1c-311dbd8f6b51",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0879ee1e-f837-4ee7-abb5-c93245c50a8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a916efff-213e-47b6-bcc7-71d50e2d8e95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b452970-2a4f-4bb4-9459-4280d9ae4450",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cdec99-70ff-4099-9b39-5dff518388b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a097dc14-42e0-4f0e-af3e-2e51a69b21c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d0a48b-76f9-46ff-88b4-1e0dc074e62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f62f3c7-0511-4b0e-8680-47b205b02250"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a447345-3a2a-487e-942f-9eecb6e9649e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03f77bcb-8b6a-43e0-9cc4-86b5e4299994"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11cc90ba-53ca-43f1-87f5-82b983965c3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b83575c-57f5-4bc3-b022-b248b58543e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9aa88851-683f-499f-935a-91782c57293b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "37d58662-60aa-4445-ae0d-c071f7915c56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "353e1d83-740d-442d-a39e-f141d90b4a59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b6878b2-8fea-4d49-903e-b6673b456db5"
            }
          }
        ]
      },
      {
        "id": "3b08bc0a-6fdf-4bae-bef7-453e1eaf2e60",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b36c23f4-0080-4939-86d4-f61803c6c903",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa1a8396-fe83-428f-9442-9b7ca7cd8a91",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "567bf071-d3a8-45ec-94b0-98667db98942",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d1c72b-f11f-4aec-9d0f-4671056fa174",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f472fbc-df6e-46b9-b138-d55af4a2cb5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e3e78c-c954-4757-b30b-da1069763a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae08dfdc-bb6f-49a4-bcf8-65b9193d20d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4b54844-5ace-404f-94ee-66d3cb42ff0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfa4bbcd-bd63-4a45-854e-71af203e175d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c50f4819-64f1-4207-be46-f2ba63b205f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d346ee41-9313-46ba-b3fe-0b90934ea1a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e882cf24-65b6-4b67-9291-5061a27586b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1ac41a2f-111e-445e-b15d-c9a075a15e83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a790fe66-b19f-419a-b8e3-1819c0d01e69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3987779-b62e-4182-b182-188c86c89d7e"
            }
          }
        ]
      },
      {
        "id": "0853d639-ffb0-4d3a-822e-6e5694f924a3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a8d03cdc-5f23-4904-9ac8-4bc7f8bd4737",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc8b79d6-9ea3-4732-a0c7-10d5091b1be8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eca0a785-e936-4439-b094-aa2cf624e642",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc940dd5-7dde-4793-b1d7-462164a9f877",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d04bdb6-e529-473d-a0c1-ab5e5b82f407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f37eac3-3f56-4b31-9a98-0d1fc5aa3447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfe7da66-e8d2-4a18-8184-560320bdad34"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85504539-03ff-4311-829a-d2d3b26768d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de7374c7-6ebe-48f3-8c62-554a04afe295"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d22f8059-21b8-4189-9b98-13ada1e78f1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adae43ea-90b3-48dd-9a2e-fa0f2179c323"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19f87adf-34e4-42b3-92c2-ac3dfb5040fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "83cd212a-b6a8-42dd-95db-d647c67cbad4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3ef39fd-d813-4cec-9c5f-c09904734a95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a4afefb-01d8-41b4-acf8-35e18925762e"
            }
          }
        ]
      },
      {
        "id": "f01b78f0-e7b8-41f2-b328-81953d6690d5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "203bced7-1d45-4ec2-9542-e0e829b9267a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa1c9166-d123-4f30-ad30-9b7e2d95279f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "21655b63-61f7-41a3-8257-2b9a33e566d2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02938cb8-ce62-44c8-999f-c9a6eae247be",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9eaad73-b426-4712-8efd-01d72a7288ae",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 800.9801587301591,
      "responseMin": 5,
      "responseMax": 27761,
      "responseSd": 4156.965030581722,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728521103256,
      "completed": 1728521313555
    },
    "executions": [
      {
        "id": "aaf37788-8306-4973-870c-bc63cb23e4aa",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "87e03a72-0516-4fba-bd77-cdd933c7c924",
          "httpRequestId": "2069dd08-e446-40af-a128-5aa953b1800e"
        },
        "item": {
          "id": "aaf37788-8306-4973-870c-bc63cb23e4aa",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "798eed78-644a-428a-a8ac-4f84b97f229d",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "c60e5278-70a1-440a-8d1e-f0f5d4dd28d0",
        "cursor": {
          "ref": "563abbdb-184d-4c35-a026-705600a1bbda",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3f29d96d-6d0d-4da0-80a0-37290d3ad6b0"
        },
        "item": {
          "id": "c60e5278-70a1-440a-8d1e-f0f5d4dd28d0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e7778a79-fc98-49f6-af8f-1f4280d9fce0",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "f7c051c7-8b08-4675-8796-247d9ccf9df1",
        "cursor": {
          "ref": "b351d1d7-daad-446b-9e40-a967a1930bf1",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1ecc5d6c-e395-41ae-8748-a37b534c520b"
        },
        "item": {
          "id": "f7c051c7-8b08-4675-8796-247d9ccf9df1",
          "name": "did_json"
        },
        "response": {
          "id": "72259394-16fc-4784-9450-047225024462",
          "status": "OK",
          "code": 200,
          "responseTime": 405,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2847244-e886-47bf-8817-257db019f782",
        "cursor": {
          "ref": "8615a5b1-0e36-41eb-9f0d-6c2f52c98cd7",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "34d14c71-a2bd-4bb4-b4da-9181840b07bd"
        },
        "item": {
          "id": "b2847244-e886-47bf-8817-257db019f782",
          "name": "did:invalid"
        },
        "response": {
          "id": "29ab31a0-7a97-4d7b-8b3f-ba489b62a5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2274,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2847244-e886-47bf-8817-257db019f782",
        "cursor": {
          "ref": "8615a5b1-0e36-41eb-9f0d-6c2f52c98cd7",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "34d14c71-a2bd-4bb4-b4da-9181840b07bd"
        },
        "item": {
          "id": "b2847244-e886-47bf-8817-257db019f782",
          "name": "did:invalid"
        },
        "response": {
          "id": "29ab31a0-7a97-4d7b-8b3f-ba489b62a5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2274,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15d9f78-6daa-41d8-8958-a946b34b1384",
        "cursor": {
          "ref": "8f9f7cc8-acb3-4259-8ebb-1e5f1690485e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d0e12385-eff9-4082-852c-7e6d92ed8272"
        },
        "item": {
          "id": "c15d9f78-6daa-41d8-8958-a946b34b1384",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "daac6c36-1fe8-4025-a32b-7b41e268daca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2993,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e38ce50-d1d4-4303-9327-cbb7b1e1b0ef",
        "cursor": {
          "ref": "d2bca967-6862-4874-8694-e1c20f7e4af9",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8012a342-593c-4044-b886-1aaa750ca915"
        },
        "item": {
          "id": "5e38ce50-d1d4-4303-9327-cbb7b1e1b0ef",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5ae5471b-3fac-46d1-ab74-f84626120e7c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2360,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402c0133-6cd1-4091-9b5d-c8f6388ac520",
        "cursor": {
          "ref": "6ed2fbf8-fe4b-44a1-be7e-7f1420a34f5c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "998192c2-705b-4d4f-842d-2e65b2a5f22f"
        },
        "item": {
          "id": "402c0133-6cd1-4091-9b5d-c8f6388ac520",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5375aa3d-f37e-4520-b1d1-ce3c0b1ac8a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2aa9be-6764-4e5a-8a7f-07fac6d213bb",
        "cursor": {
          "ref": "4d895028-c365-45db-8e21-74f38bb8c293",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cb00ab3d-b1bd-4d25-8c63-aad1a53f0920"
        },
        "item": {
          "id": "1b2aa9be-6764-4e5a-8a7f-07fac6d213bb",
          "name": "identifiers"
        },
        "response": {
          "id": "fb048df2-1580-45db-8972-9ad45e1bddfa",
          "status": "OK",
          "code": 200,
          "responseTime": 2421,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97bb2ef-49f9-4ab7-ab1e-e8da8e3b812c",
        "cursor": {
          "ref": "3ddfcf9c-7211-422f-862d-186e3ff43872",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0aed15c2-18e8-464b-8d27-07b5ef96871c"
        },
        "item": {
          "id": "a97bb2ef-49f9-4ab7-ab1e-e8da8e3b812c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c988a0e3-5b9c-4405-9016-cb629afd3585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fddb1f9-6e08-410a-b86d-80bd55a53a5c",
        "cursor": {
          "ref": "236e791b-ac74-4c1f-9ab0-28d38d75f671",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a1a5efae-9d8d-4df6-8220-58eceb4f8603"
        },
        "item": {
          "id": "9fddb1f9-6e08-410a-b86d-80bd55a53a5c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e1e198a8-1240-42e9-b40b-3e9ec5cddc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67e90c5-1b3a-4e48-9ecb-2a78c1d55398",
        "cursor": {
          "ref": "e22e6762-fb9b-43e3-8dc7-861b1f28e0ab",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5426da51-0cf4-4e17-9f61-6089ed6bd5f8"
        },
        "item": {
          "id": "b67e90c5-1b3a-4e48-9ecb-2a78c1d55398",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "20306991-14ab-474a-a030-d7f7a3cc0a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928df4b5-b55a-4f6a-b8d2-034f000d67ec",
        "cursor": {
          "ref": "bb5054ab-93e0-4daf-a19a-12c4315d8db2",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e119cfb6-d96f-43b6-8749-ae1476ddb06c"
        },
        "item": {
          "id": "928df4b5-b55a-4f6a-b8d2-034f000d67ec",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "212cee23-9da7-425e-920b-d89993d6b8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5486d407-1873-4a44-b845-2b86ff216d50",
        "cursor": {
          "ref": "3f7ce40c-20bc-4ac1-b964-76036a1c0aaa",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d3ef8290-5cbf-4f12-9abb-e7df2bdb6717"
        },
        "item": {
          "id": "5486d407-1873-4a44-b845-2b86ff216d50",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5ca95938-5f51-43ae-9394-7fe881d509f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b71e86-db22-489b-92c7-7df79b6efe99",
        "cursor": {
          "ref": "60032712-86f6-43b8-b7cf-14684d4632bb",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ff5dab5a-502d-4b62-99d4-54b4d6f8f40a"
        },
        "item": {
          "id": "d4b71e86-db22-489b-92c7-7df79b6efe99",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5647799f-3a56-42cb-a13e-5ef403373a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd12cc39-278d-4bd3-b912-aaa59a245366",
        "cursor": {
          "ref": "c734f397-82c8-46ab-8d34-17ef00aee728",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0d9ee913-f2b6-4cdc-8c56-00577f53aff6"
        },
        "item": {
          "id": "dd12cc39-278d-4bd3-b912-aaa59a245366",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "484817a4-f23c-438d-97bc-52a8d615931e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff410a4-83e3-4714-b189-487a31ba4cea",
        "cursor": {
          "ref": "dcbf6b65-7f8a-473d-9d2d-39127695d535",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "816a48c4-e9de-4d10-bbb0-1d1faf9c90b5"
        },
        "item": {
          "id": "8ff410a4-83e3-4714-b189-487a31ba4cea",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3dabf7d1-c018-49ae-80d5-833d4aab336b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0ade9d-14b9-4e58-b729-f2d63fc77ead",
        "cursor": {
          "ref": "37172e04-2e5f-4b0b-8753-a34192dfddd0",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e9c07609-c67e-4b51-902d-c592788a162a"
        },
        "item": {
          "id": "ac0ade9d-14b9-4e58-b729-f2d63fc77ead",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "828ee8f9-1782-4f68-86c2-daa7cb9445e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fc4dd6-a2b3-4d50-b7d1-45cf22bb4239",
        "cursor": {
          "ref": "f398f907-d285-4689-aeea-7978871ce418",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "94724f59-bcba-4b23-a639-6a7b4f8822b1"
        },
        "item": {
          "id": "79fc4dd6-a2b3-4d50-b7d1-45cf22bb4239",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fc7b43f3-0836-4262-ba4f-086398ab4cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bc75fb-72c6-4766-8267-3c5580705621",
        "cursor": {
          "ref": "676557d9-04c3-4e36-84a8-79e0ec254a51",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d99bee7c-17a6-4b06-8fbd-c67b21dca61a"
        },
        "item": {
          "id": "a3bc75fb-72c6-4766-8267-3c5580705621",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c94ddc64-0756-4f8e-bc56-c14a60f68aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3996ca82-e29a-49a5-8aa0-9693a84f6bae",
        "cursor": {
          "ref": "5470b8c9-15ba-4dbe-b447-ac222229f627",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a9f86d22-f713-4151-b21c-82cb34bb416b"
        },
        "item": {
          "id": "3996ca82-e29a-49a5-8aa0-9693a84f6bae",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "556a3424-3751-431a-b3b9-14fbff9a43bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c97a91-f751-4959-b15b-43cce20f1111",
        "cursor": {
          "ref": "c00a6fb7-098b-4a39-a3dc-89935e949fc7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "750558b8-41ca-4e43-8a89-0414865cfcd2"
        },
        "item": {
          "id": "69c97a91-f751-4959-b15b-43cce20f1111",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f81e3a2b-c227-4836-a44a-426fc61950ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b1e137-1566-4f17-a136-94f1295def53",
        "cursor": {
          "ref": "c7da3814-20a8-497d-9d62-dde000b43830",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b924b374-2550-4502-8f6f-27d236068627"
        },
        "item": {
          "id": "b9b1e137-1566-4f17-a136-94f1295def53",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "dfe82c91-e916-4b6c-89cc-ab235cf2581e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908bacb1-c235-4c40-938b-bd630b70dd66",
        "cursor": {
          "ref": "cc809ce3-fa52-46d8-b8d5-67e6fd019702",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e40f837c-9b60-4ba1-9456-62f163becf69"
        },
        "item": {
          "id": "908bacb1-c235-4c40-938b-bd630b70dd66",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9b98dbaf-dd6e-4a2d-af42-9b6a30e76e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f81c0f-b04d-4fdb-9ea8-151955e3d3db",
        "cursor": {
          "ref": "57801622-bb62-40df-8d44-e258054791fb",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c8cc4e75-c02c-4cb9-b138-0ab4facdc473"
        },
        "item": {
          "id": "40f81c0f-b04d-4fdb-9ea8-151955e3d3db",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ad3b7c37-8dcc-4097-bbf7-62d50f992200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2d7cc5-eed7-4dea-b403-3fdc1ffd6766",
        "cursor": {
          "ref": "427c2164-7723-4b41-a920-063fd1ee0615",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b2493c76-8b20-4e31-9eaf-f5885c6a7068"
        },
        "item": {
          "id": "3e2d7cc5-eed7-4dea-b403-3fdc1ffd6766",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2a8b97fe-f945-4848-a22a-e6f68f2f6c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e118feeb-bf4a-48a3-a696-72656b569cb3",
        "cursor": {
          "ref": "24a70228-6384-4590-a14c-fda8ca58f2ab",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5ef5530b-5ec3-4ef0-9856-d2167446d9ae"
        },
        "item": {
          "id": "e118feeb-bf4a-48a3-a696-72656b569cb3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bc8cddb9-adad-4a15-a549-01f66431fc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbff7dc1-94d7-4cdc-8396-76c104841095",
        "cursor": {
          "ref": "33cb3ff6-5c2b-4897-a503-36671b8bb5fc",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6164f315-28aa-4700-a9dd-5ee6e59e9fd0"
        },
        "item": {
          "id": "cbff7dc1-94d7-4cdc-8396-76c104841095",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ff215536-5aa9-4824-ab8f-343eea0fa05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6350ea2-9fa1-4e66-8e9a-f763842b51a7",
        "cursor": {
          "ref": "3fc0a0da-6636-49c8-b662-a1b45a5b65d0",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b28f04ba-40bc-49e0-a426-6017f7baeb3f"
        },
        "item": {
          "id": "d6350ea2-9fa1-4e66-8e9a-f763842b51a7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b001c6b9-8533-4263-af31-5a5cd3736c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2c3963-36a7-4556-8f42-fcc29ce41b44",
        "cursor": {
          "ref": "5ab6a6a0-e174-441d-9800-1208c60dbf68",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1e33fa6b-e297-42cb-97df-c2ea4ebd821b"
        },
        "item": {
          "id": "ed2c3963-36a7-4556-8f42-fcc29ce41b44",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "758472ea-7fc1-4cde-be04-d862d3dd01e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc731c97-86eb-444b-9269-f5322ccec7ae",
        "cursor": {
          "ref": "1b6e5818-ce14-43cd-852f-6c90c5ef6a17",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "30e62dac-1447-4724-8388-55d64928bc53"
        },
        "item": {
          "id": "bc731c97-86eb-444b-9269-f5322ccec7ae",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "05c7a65d-477d-4134-9082-a370917061a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240d0917-0f8b-41c3-b116-eaddcfb65297",
        "cursor": {
          "ref": "454e0963-db96-44fa-8d0f-7edc061c89a1",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0702afed-4ac2-45b5-8e44-63b83449cb8d"
        },
        "item": {
          "id": "240d0917-0f8b-41c3-b116-eaddcfb65297",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2181109e-6401-4ae6-985d-12beba8dd2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131d16d3-729b-49a4-ae5c-d3b392656cdb",
        "cursor": {
          "ref": "930ee390-d26e-4a40-b5dc-810765cdf578",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "033361b6-04d4-4f46-a2ff-fa80adeffae5"
        },
        "item": {
          "id": "131d16d3-729b-49a4-ae5c-d3b392656cdb",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cf796e56-0cbe-4013-b61b-f556976b4459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05872a1c-3d74-45ce-973e-09a180a10b0f",
        "cursor": {
          "ref": "3541eecd-1443-411d-b7a4-811297308fec",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9d7fa25a-9c08-4d1e-945c-b6171391eee1"
        },
        "item": {
          "id": "05872a1c-3d74-45ce-973e-09a180a10b0f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6ecc7267-fd76-4c4a-9abf-017b46e9df8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea41510-fabb-43a6-91b1-15d40682595c",
        "cursor": {
          "ref": "633c981d-adb4-4edc-a315-46d5ffd6ade7",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "48f76ce1-67d0-4494-91b7-81ab4cba273e"
        },
        "item": {
          "id": "1ea41510-fabb-43a6-91b1-15d40682595c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "39685f26-1f57-4d43-b179-0c52b352ae50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4347bcfa-2066-41f4-8922-adb7bd5e013f",
        "cursor": {
          "ref": "d18beef6-57d9-4063-84fb-be707bbc7f32",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fc564c88-3f44-4cb2-889b-2374de8a8e15"
        },
        "item": {
          "id": "4347bcfa-2066-41f4-8922-adb7bd5e013f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "96363945-f554-4d70-b84b-814c06fae114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dce79f1-a6c1-4f1f-b067-c058659387e2",
        "cursor": {
          "ref": "e9e63ef7-3715-4d80-a1e2-7abf9a2c495c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2edd3564-b3fe-4ac1-a29e-27e2375f09ea"
        },
        "item": {
          "id": "3dce79f1-a6c1-4f1f-b067-c058659387e2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f0274841-d84d-45e1-8e58-7a744de0b3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b10e32-fd45-496e-ab09-c49f46c6607c",
        "cursor": {
          "ref": "1cd6355b-890e-4e25-982e-0181c5930312",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "999aaee4-c42f-4288-8dbe-b79ef8f88756"
        },
        "item": {
          "id": "79b10e32-fd45-496e-ab09-c49f46c6607c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ffe6e423-f8df-4e3b-a867-94b2a43559ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adceccd-4e4c-4b96-93a2-e0344fad75e6",
        "cursor": {
          "ref": "69805e6f-db6e-4dbb-9e1c-13a9af5c08c8",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8340823b-e776-4ade-a3c7-a32f4783f827"
        },
        "item": {
          "id": "3adceccd-4e4c-4b96-93a2-e0344fad75e6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fe1dabf4-26a4-469a-93cb-5d3cbd68c295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb570ab-fee8-4495-8bba-2d48057cfba8",
        "cursor": {
          "ref": "cdedb79f-4388-4231-8ca7-f982b57911c6",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "33fe6eac-4192-4e9f-846b-fb5eafae429b"
        },
        "item": {
          "id": "acb570ab-fee8-4495-8bba-2d48057cfba8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "98b56575-bb1f-43ea-8ddd-ea7bfb7cbf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1523fa-f6c3-4e52-b297-284a11e67da9",
        "cursor": {
          "ref": "2cffb01a-09c2-4953-b1c0-2076f65df59e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5e901aee-987b-4dcb-aebb-1e65c10059a2"
        },
        "item": {
          "id": "fb1523fa-f6c3-4e52-b297-284a11e67da9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "dc457bd1-cc48-4aa8-90e0-75a7b552197b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9537d815-0a82-45ca-9751-8ec208025f73",
        "cursor": {
          "ref": "846919ee-7f9e-4153-8d18-431365578ecc",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "dece2c53-5a37-41ac-96cd-24b3fc10b420"
        },
        "item": {
          "id": "9537d815-0a82-45ca-9751-8ec208025f73",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d06d484b-04c2-4829-8063-81f302ea4c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0501ab17-9be7-438d-ba60-64e4c96092e1",
        "cursor": {
          "ref": "25ad1e4d-b3e3-42ab-9bcc-2f5c1c6b561e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a4fa10c5-b50c-40ea-b68f-78084fb5b608"
        },
        "item": {
          "id": "0501ab17-9be7-438d-ba60-64e4c96092e1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a9caa93e-5433-4559-b3e3-b01bbf183e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202f098f-a178-4ce5-975f-e2f623108ff2",
        "cursor": {
          "ref": "1b6ca3cf-f2c7-410a-88a1-1957b99cc390",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a172e5fd-d4b1-4390-a41e-9a4f2fe9d240"
        },
        "item": {
          "id": "202f098f-a178-4ce5-975f-e2f623108ff2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "99a80efd-b471-4c32-a11d-24f0dc8baa20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc52792a-81e7-45e1-86e1-185d54a0b647",
        "cursor": {
          "ref": "ca49bc2f-a84c-4233-8e0b-736f59efa499",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "25715e8f-2569-4268-a5c9-4cb0b2a2dcbf"
        },
        "item": {
          "id": "dc52792a-81e7-45e1-86e1-185d54a0b647",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "937dc931-d0a6-48ce-8f93-937c616b53d3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b19bc6e-a939-44f6-888a-1b7bf2474480",
        "cursor": {
          "ref": "59e78042-f8b7-4587-a4e2-0fd5fad1300d",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "636275f8-be9f-4502-b72d-4a0d1001d43e"
        },
        "item": {
          "id": "4b19bc6e-a939-44f6-888a-1b7bf2474480",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "39fd25ad-023b-498c-aac8-82688e0c011e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dbfe47-763b-4c14-91f6-b545595a8a11",
        "cursor": {
          "ref": "a37c66f1-c57b-443a-b1e1-be1ec147fd1b",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "93512442-cb7f-4521-8560-4cb332cf5648"
        },
        "item": {
          "id": "d1dbfe47-763b-4c14-91f6-b545595a8a11",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9d4d8779-ef15-40a3-9efe-a8935d66d3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3bc20e-2918-48a6-9282-4c785d61933a",
        "cursor": {
          "ref": "a8bb3660-4266-45c6-9ceb-6f5f78c74c14",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5ff71dfb-554a-47d4-a763-cfce11609675"
        },
        "item": {
          "id": "ea3bc20e-2918-48a6-9282-4c785d61933a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0cce82c4-f235-4838-a9ec-00488066c11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8a7808-0966-4155-9fbc-88cf1d81822a",
        "cursor": {
          "ref": "8d39f632-e374-4f91-b133-4817746b139a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5e718e50-d188-4b7a-a3f4-5e92223a0c46"
        },
        "item": {
          "id": "8f8a7808-0966-4155-9fbc-88cf1d81822a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "16d47981-5dd8-440d-938e-933a591595ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc27a9a-4f68-40ab-a148-e21f7c7b5e32",
        "cursor": {
          "ref": "49faa38a-c0f7-4fbf-80c0-7be6df190f2d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f2582bb1-a4aa-4181-aa61-35862c207240"
        },
        "item": {
          "id": "7cc27a9a-4f68-40ab-a148-e21f7c7b5e32",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0fc1fed1-149e-4f64-bbad-9b89454c884d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5722e75-b8ef-40e9-834c-b51ba1c7bb61",
        "cursor": {
          "ref": "1eeb2748-80c7-4cfe-be12-0b58958a5793",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3824041c-97fa-45fc-b0a3-bfc29b16bb7c"
        },
        "item": {
          "id": "f5722e75-b8ef-40e9-834c-b51ba1c7bb61",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6ec3261d-9371-4c07-8bd3-52ce84f90a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1bcdb5-0219-4ad4-8c24-b90f89d51e2a",
        "cursor": {
          "ref": "2baedb16-c70f-42eb-aef1-10f35ec24796",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4536fc97-128d-46f9-8965-48dbfd073ba2"
        },
        "item": {
          "id": "8f1bcdb5-0219-4ad4-8c24-b90f89d51e2a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e3b1ec73-0a0a-41a3-ab62-94cf1383b974",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 75,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3587d227-1053-439c-a865-ca89ab6f2ace",
        "cursor": {
          "ref": "d4ad74e0-b459-45b4-be84-07eb824fcb69",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "15fe7453-00c4-467a-af99-762226ca0ec2"
        },
        "item": {
          "id": "3587d227-1053-439c-a865-ca89ab6f2ace",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "dd5ccf6e-53a9-4468-bbd1-a014726ebe16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd6fc20-5dfd-4949-8ae0-86f6323c6fef",
        "cursor": {
          "ref": "df98db97-d93b-4d25-b91c-b3ebcd74c007",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6257d022-c146-4a81-bb01-1fe7e0fffb2b"
        },
        "item": {
          "id": "edd6fc20-5dfd-4949-8ae0-86f6323c6fef",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ccf08660-69b1-4374-a1a7-f58e97454be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555008c7-b914-4fab-bd77-3dfbecc52d01",
        "cursor": {
          "ref": "af7d21bd-ec16-4b4b-9cb0-2eb033f93a7b",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "46c1f44c-2ef7-42ab-892e-6a00bca54583"
        },
        "item": {
          "id": "555008c7-b914-4fab-bd77-3dfbecc52d01",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cc6cd75b-bbfc-407b-b051-641a8c0888e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431fac2a-2783-444d-9ad9-40fa474309af",
        "cursor": {
          "ref": "7e3650cc-2f62-45a0-92a6-341880698e34",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c3f37bd4-577c-4cc5-9c67-bb8b001ddbf0"
        },
        "item": {
          "id": "431fac2a-2783-444d-9ad9-40fa474309af",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "878069e3-b70c-40a1-aa96-71aab224de77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63aad1bc-6abc-4297-b2b8-fc3e8533a80b",
        "cursor": {
          "ref": "d1c26b3c-6644-4cf5-9e62-257d84ef7fc5",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "68936c7e-486d-46ca-acef-3f60e4011871"
        },
        "item": {
          "id": "63aad1bc-6abc-4297-b2b8-fc3e8533a80b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "280a2cfa-f2d4-4b1c-9ea4-661cd5ec25f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5034ea9b-cc70-443e-b627-b2d02d4272e3",
        "cursor": {
          "ref": "50b5e6dc-ed53-4db3-a1b2-53f624c43d4c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fa10250a-54bd-4b38-986e-4b6ae2c83adf"
        },
        "item": {
          "id": "5034ea9b-cc70-443e-b627-b2d02d4272e3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "df1ea282-9d31-474c-9264-33749276a66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708f11dd-7814-40cc-8006-662640b53444",
        "cursor": {
          "ref": "fdad79fe-fa13-4099-8f9b-efeb925b478e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b827ae96-2a5a-4f08-b505-8bcd2190ec2b"
        },
        "item": {
          "id": "708f11dd-7814-40cc-8006-662640b53444",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "92321e4f-4c28-4a35-84b7-89a36626e41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec652bd-e0ef-4cb3-8d82-d97862471c6a",
        "cursor": {
          "ref": "3e1906c3-0599-48dc-ba91-78062b78161b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "86a95bc0-94da-46ec-8c15-02676c7d4d7a"
        },
        "item": {
          "id": "6ec652bd-e0ef-4cb3-8d82-d97862471c6a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bf91de75-f15a-4735-8985-c04f88a83715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e908a6-b894-412d-a39b-f4844c65f6c5",
        "cursor": {
          "ref": "ac4493e8-f7b7-4b46-9591-3c0d943fd4d6",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "02a47b64-5e81-42ca-b768-9391db0a017d"
        },
        "item": {
          "id": "32e908a6-b894-412d-a39b-f4844c65f6c5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5ef824f9-33ea-4ac1-bb81-10ab57d3c0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9004fec-0ea0-4d83-affd-4079ab171613",
        "cursor": {
          "ref": "22e4d929-ca16-46fc-9102-924460861df8",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2173e9c1-3dca-4053-8f18-f5d6a2c1b284"
        },
        "item": {
          "id": "e9004fec-0ea0-4d83-affd-4079ab171613",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3c82839e-18f1-47b2-a499-8bbc86d108f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bdfd96-efc6-4c27-9378-bc676b505adb",
        "cursor": {
          "ref": "ee6237c5-d500-4971-a3ac-5ff60835dddb",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e13635b6-cdeb-405d-b02d-40465c324863"
        },
        "item": {
          "id": "c0bdfd96-efc6-4c27-9378-bc676b505adb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6517bde0-b383-41c3-9007-fe5a0a8434f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a90512-3689-4ef6-900a-d291d36cb410",
        "cursor": {
          "ref": "9998e21d-3913-4f59-bf42-c27a3ea7f357",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4c2eda05-344b-4bc6-b7d7-190e72179a8a"
        },
        "item": {
          "id": "44a90512-3689-4ef6-900a-d291d36cb410",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c70ef11d-87be-4849-a2f2-e908af49a4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4471947d-f315-486e-8ea6-4403829b5cda",
        "cursor": {
          "ref": "d9239d7f-f1f1-4a8f-81a8-420aa8dec0b1",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3289bd31-6d32-4cc4-a37e-841eb7fe604d"
        },
        "item": {
          "id": "4471947d-f315-486e-8ea6-4403829b5cda",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b44a7e29-1036-4a3a-8cf4-cf10d2d65117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c24d1d8-6ffe-4bcc-8106-1e07dc431d33",
        "cursor": {
          "ref": "a217c93e-2864-4043-8ca6-5034d2d0281a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "39acafaf-a3ea-4a4b-90d7-52513856c9ed"
        },
        "item": {
          "id": "2c24d1d8-6ffe-4bcc-8106-1e07dc431d33",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b8630b7b-3c97-49c1-bdcc-e8127c1bbcb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f35ea78-3e3e-42d7-82ea-5e8c4b0ef1da",
        "cursor": {
          "ref": "e329661d-3bba-4ce4-94d4-493a292c4fb4",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3857ee06-691f-483d-adf5-3287549981b0"
        },
        "item": {
          "id": "8f35ea78-3e3e-42d7-82ea-5e8c4b0ef1da",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9e8a550f-360e-4b2b-b48c-d862074f1ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8324cef7-a1c5-4dd9-a90b-63553b41b90e",
        "cursor": {
          "ref": "bd50f1e9-6497-4a00-ba44-419871552433",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "390945bf-6147-4b00-b8b4-2b3a75f66914"
        },
        "item": {
          "id": "8324cef7-a1c5-4dd9-a90b-63553b41b90e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3c4155aa-7d50-4dd5-9732-f522ee09b9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134ae2a2-2c54-4bb2-b341-94d367705c99",
        "cursor": {
          "ref": "bb54e925-e71e-4bf4-a67a-aa62919eda1e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "def6771a-1e50-4427-8ad1-685715ceee42"
        },
        "item": {
          "id": "134ae2a2-2c54-4bb2-b341-94d367705c99",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "17a24c55-4287-4d3a-aacc-4eb4fcf42b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13a7f03-53a6-4601-a917-641339998872",
        "cursor": {
          "ref": "8b3b2bfc-2707-4906-813e-94582b1524ab",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "69b4462e-e05f-4a91-91f2-3b458fc06bf0"
        },
        "item": {
          "id": "f13a7f03-53a6-4601-a917-641339998872",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "37f94645-00b0-403d-be21-52b48a4ff6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fc5029-afb4-473d-b4c9-debe8cf19275",
        "cursor": {
          "ref": "d2e7e3f7-d788-4ddd-b905-938ae44e0c92",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "196618d9-d2ea-48ff-9ad5-3e512e551237"
        },
        "item": {
          "id": "15fc5029-afb4-473d-b4c9-debe8cf19275",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f17d1f97-4b46-457c-bef8-b1d5f4e80230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2e760f-514b-4fab-b5e1-f165d66087bd",
        "cursor": {
          "ref": "0c065c08-9cdd-47f9-b58b-202627d5494c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b93bc215-b65a-4756-b8e7-297a814cd313"
        },
        "item": {
          "id": "1b2e760f-514b-4fab-b5e1-f165d66087bd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4354888f-fa62-4af3-a89f-ae158987a38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f4ad04-b714-4ef8-b36f-2bde1a1b4ef5",
        "cursor": {
          "ref": "a5695b4c-ab0c-474c-841f-333adcd30971",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "95fa938e-8850-4833-a5ec-2ca8617e329d"
        },
        "item": {
          "id": "12f4ad04-b714-4ef8-b36f-2bde1a1b4ef5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2fdb31d3-2769-43d0-bccb-cf4917897c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd23ed63-654b-4415-b50b-51ddefc80ced",
        "cursor": {
          "ref": "dede1ff3-0a4d-46bd-9668-60039a078d46",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8fbc2abb-827a-4ca9-b0bd-00bf1961be47"
        },
        "item": {
          "id": "fd23ed63-654b-4415-b50b-51ddefc80ced",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "279c39fb-4250-46af-9f96-b06a697dc8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a47e99-09c3-4c4e-9809-1d5dc6f6fbb1",
        "cursor": {
          "ref": "9163a89a-7343-43e9-8f34-24dfe36325de",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b8bc2886-12eb-4ce2-902c-9195f92b89d9"
        },
        "item": {
          "id": "00a47e99-09c3-4c4e-9809-1d5dc6f6fbb1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "86928f85-2b30-4103-9929-6d2eb7547c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f351e9fc-e8a5-4162-adfb-f480101b1d5f",
        "cursor": {
          "ref": "306831b6-3576-487e-8eab-09eeb81da7ea",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7dce2e8d-3327-4219-a2e3-a2d36715f879"
        },
        "item": {
          "id": "f351e9fc-e8a5-4162-adfb-f480101b1d5f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8b925048-fcbd-45de-8891-dd346497c821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9174c4-a863-4f72-8afc-ca63cf5b3202",
        "cursor": {
          "ref": "dfd51ca8-f352-4598-b8f1-77d596864e24",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "91baa619-50fc-4ccf-b81f-6b4c42e88b5c"
        },
        "item": {
          "id": "2a9174c4-a863-4f72-8afc-ca63cf5b3202",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "100d6c81-0393-4902-8862-30bc3b5dd0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de20cb7-bda6-4750-b22d-6235df093ffd",
        "cursor": {
          "ref": "29494f30-6909-46e9-8a2e-888b6e718580",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "204685fb-6853-41de-91d8-670f7b05f158"
        },
        "item": {
          "id": "2de20cb7-bda6-4750-b22d-6235df093ffd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d0cd0bdb-96f2-4e40-a926-9a2a07b66024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c7abac-9000-4ebb-b653-0d2d18b7c145",
        "cursor": {
          "ref": "78ab814a-c615-45e2-9f94-93910122b4fd",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "674f9f76-7f6c-407a-8307-8becc8ffe12b"
        },
        "item": {
          "id": "e1c7abac-9000-4ebb-b653-0d2d18b7c145",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "db3e8608-76d4-43fb-a109-e8bd8a9258ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047c3f82-a90f-4320-8294-e086ba44e94a",
        "cursor": {
          "ref": "d04ed075-0f7e-475b-9318-106c9b81902d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "099f9fbb-918a-4735-a6e9-2b3caa624674"
        },
        "item": {
          "id": "047c3f82-a90f-4320-8294-e086ba44e94a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a59eaf32-395e-4172-9edb-4154a039bb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49eddfb2-2fed-4306-ae58-3c2f446616c8",
        "cursor": {
          "ref": "bbbe675f-5d13-4983-a25a-7d33c22dedb4",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "28d46423-f5ce-48fb-af54-ca902616b335"
        },
        "item": {
          "id": "49eddfb2-2fed-4306-ae58-3c2f446616c8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "209a0caa-6c20-4683-b280-eb711c42a185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3593f8-4b76-4577-bbbd-51523cbeca08",
        "cursor": {
          "ref": "bfbf31b2-7b38-4680-a623-c97b28ea3efd",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d6060854-3c84-41f5-bcd6-bb97b4a50f06"
        },
        "item": {
          "id": "aa3593f8-4b76-4577-bbbd-51523cbeca08",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5fbd9afa-e2be-4788-bcd3-af17a3f3e9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ade028-b7e6-4e7e-a357-b1f46f9c0be8",
        "cursor": {
          "ref": "9220cc33-b52e-42b0-b157-ff0562584553",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "577c192c-0438-4890-bc4a-dd42a658a855"
        },
        "item": {
          "id": "e5ade028-b7e6-4e7e-a357-b1f46f9c0be8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b80facab-a4dd-4980-8442-e8b5537235ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37248fa-741a-4f7b-928e-445dc70cf257",
        "cursor": {
          "ref": "a663a2dc-7488-4658-a46c-fc28b1f39122",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cad4960b-ae03-4ebd-af34-bec926fe6542"
        },
        "item": {
          "id": "c37248fa-741a-4f7b-928e-445dc70cf257",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f91bd724-37f7-4159-9df0-257cdf697d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4890a2-b223-437b-a2e1-ceffbd76e117",
        "cursor": {
          "ref": "ba27bc4f-df10-464f-8bc9-9b755a0471b6",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1d037b48-ab7d-4ae5-9b23-9f0f3e489b62"
        },
        "item": {
          "id": "3e4890a2-b223-437b-a2e1-ceffbd76e117",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6dfff8fb-f3e8-4267-9e0a-6c32bd8fb450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1e87b7-839a-4c51-a7f0-48454c98dbac",
        "cursor": {
          "ref": "7a8cad2d-46cb-49ce-ab84-7cdb1a9e4ad4",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7d532b82-6d36-4b83-a450-a7a4eda8a3ea"
        },
        "item": {
          "id": "7b1e87b7-839a-4c51-a7f0-48454c98dbac",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "986db35b-a44b-426d-bd78-ebe83f9bab9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee60e8b-712e-4d0f-a483-4ab64555ea4d",
        "cursor": {
          "ref": "cb434f01-2b1f-44fb-b406-7ac8c5859a45",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8b979602-c213-435b-a616-f10fe072f21b"
        },
        "item": {
          "id": "6ee60e8b-712e-4d0f-a483-4ab64555ea4d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e578544e-31cd-4847-af65-550e45bd72a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9e2239-920c-40c4-bd15-f662534c93df",
        "cursor": {
          "ref": "8a4caabe-947c-42e4-9d19-3aa5894423ee",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6c4fc9bf-96df-4ab2-88b3-ef965dde19e1"
        },
        "item": {
          "id": "fc9e2239-920c-40c4-bd15-f662534c93df",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fe37fa55-570c-4a42-945e-97258dd60569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f525d04-faf4-4a07-9727-be47a25094a4",
        "cursor": {
          "ref": "b50559a6-5e45-437a-a801-551146e702a7",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "675cea38-b492-4e70-9128-dcc946e08e8a"
        },
        "item": {
          "id": "8f525d04-faf4-4a07-9727-be47a25094a4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "80eac54c-92e6-4e9a-8754-0f37849864b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc01025e-ee5f-4b5a-8834-63a32ac0a1a8",
        "cursor": {
          "ref": "c047f84a-87eb-4592-bd4d-bfe033f0cb1c",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3b0c6641-6578-4617-9238-319e713eb59c"
        },
        "item": {
          "id": "cc01025e-ee5f-4b5a-8834-63a32ac0a1a8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "56e18550-14b2-416d-9b4b-3c2efa2ec875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8d5f33-c562-4995-b793-d16576d3b030",
        "cursor": {
          "ref": "021b0eaf-ebb8-44e6-ae42-ac6fc2cc1116",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4fef8b53-397e-44fe-9d2a-8f4c4bc31e3f"
        },
        "item": {
          "id": "6c8d5f33-c562-4995-b793-d16576d3b030",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5ba1aecd-df38-418a-b75b-f3195b71ed35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8485c8d5-faaf-4401-9767-05e47792d191",
        "cursor": {
          "ref": "ecbd2517-093c-4892-b3be-41ac9b0891ef",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c37ebc2b-068d-4ab8-9ddc-0b6b5235a9c7"
        },
        "item": {
          "id": "8485c8d5-faaf-4401-9767-05e47792d191",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "84e1b345-0a40-48f2-a111-8f09734b28d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9c6f40-7526-42fd-86af-0517f277f628",
        "cursor": {
          "ref": "45fb6c25-fc54-4494-9468-93c66fa420e2",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d59757aa-ab9f-4345-9592-c93f1f8bfe00"
        },
        "item": {
          "id": "8a9c6f40-7526-42fd-86af-0517f277f628",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "23bb7b69-a175-4769-8f47-40b491b49173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24caa29a-c2a3-4d8c-b0d7-f644c7e4820f",
        "cursor": {
          "ref": "56fce633-c494-4b1f-95b0-a3faf4e65ca4",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b452f242-5c1d-4558-9c52-6d2c61684881"
        },
        "item": {
          "id": "24caa29a-c2a3-4d8c-b0d7-f644c7e4820f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2eaf161c-33d4-40e8-899d-f23b4c714a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996a7900-a2d8-433f-9d4f-94b7f5c4f4f7",
        "cursor": {
          "ref": "43a18d5f-3865-400c-9c0a-8bcc1e05048c",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a67bc422-962c-4315-9ab0-7b47f01ad0fd"
        },
        "item": {
          "id": "996a7900-a2d8-433f-9d4f-94b7f5c4f4f7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a55db8ac-5da4-43a2-bd2e-ad96e29d5a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787bcc7f-cd44-4790-9e41-b3511c1dc3e0",
        "cursor": {
          "ref": "a25f954e-884c-4454-95d0-2f692efa1d42",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dc8a3883-762a-49ef-ac53-f336ec8063fa"
        },
        "item": {
          "id": "787bcc7f-cd44-4790-9e41-b3511c1dc3e0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c762d3d7-3e7e-40c8-9b79-eed767771e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d16fe9-800a-4625-89ea-70c341c8f544",
        "cursor": {
          "ref": "4e7ceb0a-7c58-4f1a-83b1-7b2a5a199dc3",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6d5f3768-9bf1-481b-87e3-506b152fffe7"
        },
        "item": {
          "id": "28d16fe9-800a-4625-89ea-70c341c8f544",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9dcd99c0-56a8-4086-b027-a749f672f061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d71884f-0679-4030-9e59-96882415d215",
        "cursor": {
          "ref": "f5d97bef-cf3c-4c11-b734-6505a020fb6d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "81b77fc4-ed56-4da4-a1f3-b972177d8672"
        },
        "item": {
          "id": "9d71884f-0679-4030-9e59-96882415d215",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3a8e5255-6053-46d7-9e26-554524d15aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00638d0-1a14-4a39-966d-d4eaaacbbb36",
        "cursor": {
          "ref": "22cc64e7-de50-4a59-8b1b-f08245cbf6a4",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f2418429-c915-4f25-80d7-9bfa7ece6de4"
        },
        "item": {
          "id": "e00638d0-1a14-4a39-966d-d4eaaacbbb36",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "34cca54a-1694-4221-960a-bbb946cc1169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48228966-644b-4cb2-bd4e-38fd64eeb0c2",
        "cursor": {
          "ref": "79f032e2-1132-483d-ad75-73b45a9ec2ab",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "53525a2f-eff7-4a68-b26a-4410e876fe9e"
        },
        "item": {
          "id": "48228966-644b-4cb2-bd4e-38fd64eeb0c2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "63eed9e9-af91-4230-81d7-1d0cc4e3ef25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b71d56a-1929-4af4-b039-46ed5322b822",
        "cursor": {
          "ref": "effc61c2-3400-4912-8075-eabef8a3cb9f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6d254612-2963-4149-b07a-2f4fbe400769"
        },
        "item": {
          "id": "0b71d56a-1929-4af4-b039-46ed5322b822",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "678ec118-1f6e-4976-85ad-e7c910b1a895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6b025a-71c7-4710-91c9-7115c62bbeff",
        "cursor": {
          "ref": "8570ca1f-7cc4-4e2a-9286-268582ea1b51",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bd900dee-9873-454d-a826-041c4c290117"
        },
        "item": {
          "id": "2c6b025a-71c7-4710-91c9-7115c62bbeff",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3e7902f1-e9df-493c-bcc7-005f0d13b3e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605591ca-8ba6-4a89-9e83-65619537a978",
        "cursor": {
          "ref": "a3efce70-08c6-4053-90d4-f8a51ee466e8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "eafb04ef-6510-431d-bfb4-8d41db5b5e5d"
        },
        "item": {
          "id": "605591ca-8ba6-4a89-9e83-65619537a978",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f41c1d80-6639-4bc0-8cf8-31e7da3b472e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "82968edf-c0cf-4eca-b5b2-a25932ace1f5",
        "cursor": {
          "ref": "324352ec-be65-4c04-be07-27b245930682",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b4d64593-960f-4d1b-be91-4b70fc03dd43"
        },
        "item": {
          "id": "82968edf-c0cf-4eca-b5b2-a25932ace1f5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dcd12e37-2519-4ac2-b147-71bb3771cbf1",
          "status": "Created",
          "code": 201,
          "responseTime": 27761,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e252ef2c-3b30-4746-8300-a21f4ab77b9c",
        "cursor": {
          "ref": "181ee7f4-b3f0-4239-8ab0-09a83dd26f0f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fd3dd7e3-6170-4b7c-829a-f8842c5f6b37"
        },
        "item": {
          "id": "e252ef2c-3b30-4746-8300-a21f4ab77b9c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7ee9c3ab-1170-499f-b673-a884d8cd18e4",
          "status": "Created",
          "code": 201,
          "responseTime": 27326,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff356b30-fce4-4f44-989e-5fae374b837f",
        "cursor": {
          "ref": "ce16ef05-c4f0-4cf3-858c-0a9815074d7a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c57024c6-a31c-46dd-b15f-a26af5abcd79"
        },
        "item": {
          "id": "ff356b30-fce4-4f44-989e-5fae374b837f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b2fe6e19-cbf9-4227-b23a-74fc7797e884",
          "status": "Created",
          "code": 201,
          "responseTime": 26975,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "85678f3d-7b58-4603-93b6-743e7f31b4b2",
        "cursor": {
          "ref": "95d00fa2-2f59-40ea-8c75-93587c4aabc3",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "29e96086-0b97-48d2-97ac-902b8fd6a488"
        },
        "item": {
          "id": "85678f3d-7b58-4603-93b6-743e7f31b4b2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a96dabf5-8f47-4464-8051-5832b10dd659",
          "status": "Created",
          "code": 201,
          "responseTime": 27235,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c231b15c-8e75-40e5-87ab-f27de8fa7738",
        "cursor": {
          "ref": "61e5d606-b6e7-4fb0-82dd-5c738b4b76a3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ad900353-34cf-4858-9629-77ccc3affced"
        },
        "item": {
          "id": "c231b15c-8e75-40e5-87ab-f27de8fa7738",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d6b35606-c282-4f4f-8782-0dc585c25c5a",
          "status": "Created",
          "code": 201,
          "responseTime": 27247,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-10-10T00:47:41Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-10-10T00:47:41Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3234353a-385d-44d8-a152-485fdcec4f18",
        "cursor": {
          "ref": "a6a9f78e-b9bb-47cf-be5e-df8b353eba54",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9eda3a72-4c33-43e2-afc9-bfdba2837041"
        },
        "item": {
          "id": "3234353a-385d-44d8-a152-485fdcec4f18",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5ba73e74-c5d8-4495-97bb-155139a7e296",
          "status": "Created",
          "code": 201,
          "responseTime": 26888,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fce0d19-1bf9-4409-a4f8-80dff59072b3",
        "cursor": {
          "ref": "71b8efb5-ccde-41a1-a2d0-15f63446094d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "24828146-ab82-4100-92a7-c1fb2ae5d426"
        },
        "item": {
          "id": "2fce0d19-1bf9-4409-a4f8-80dff59072b3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "48cc024c-7602-463d-84a8-5b21f99cc963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6671d9c-75af-44ca-8c1e-3ecdd8fe2ea8",
        "cursor": {
          "ref": "10bfc374-0736-4347-9c09-2d3703f62246",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "aea0a9f2-0c46-4bc7-b211-aa1dc547e287"
        },
        "item": {
          "id": "c6671d9c-75af-44ca-8c1e-3ecdd8fe2ea8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "71a1afc8-329d-4103-8b3e-ae2a8de669fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76eb31ba-9d8a-4464-a487-afe91d22aed5",
        "cursor": {
          "ref": "0bfde346-0d08-4ae4-874d-1d7469744025",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "91912420-b143-4cd2-a2a7-cd1b4db1d699"
        },
        "item": {
          "id": "76eb31ba-9d8a-4464-a487-afe91d22aed5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e5903c50-6883-4848-b03f-00b49465591f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7de3074-c1a3-4fe8-bbde-89fadae8a40b",
        "cursor": {
          "ref": "c27bbe18-0cbb-4b54-b037-0b5e8259645e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "97d0ab0a-7bc9-4bef-9d93-85eac62bb238"
        },
        "item": {
          "id": "d7de3074-c1a3-4fe8-bbde-89fadae8a40b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c84d1365-31d4-4674-a294-f0092f4467c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d990c0-a6df-4266-a713-7026ff91fa38",
        "cursor": {
          "ref": "10e8283b-af41-413e-b0a6-62f28eac1fa6",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "589a8dee-ebee-4bb9-b0f0-b21c4323b908"
        },
        "item": {
          "id": "b6d990c0-a6df-4266-a713-7026ff91fa38",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "58ce3796-4114-474f-b017-4f1ee592cb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea095680-ffdb-4304-ac26-bd4ddc13dd51",
        "cursor": {
          "ref": "6874b521-d63e-4528-b8a3-78f277bb004f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6fed80b3-67d4-414b-92aa-159640bd90f0"
        },
        "item": {
          "id": "ea095680-ffdb-4304-ac26-bd4ddc13dd51",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "68ea17b2-7a04-439d-ba91-879e5563e69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91c32ec-06f1-4647-b489-3c50523a5e4b",
        "cursor": {
          "ref": "7093389d-1dfd-42f8-b9a1-5f9af8ca0459",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ae4b8ed7-5bbd-45e6-90ef-7da80dcb1aa6"
        },
        "item": {
          "id": "f91c32ec-06f1-4647-b489-3c50523a5e4b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "aa7077e1-0b90-40da-906a-5182452eb3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f919b6-5270-4f7e-98af-eaa7dfeb764e",
        "cursor": {
          "ref": "78efc807-193e-4bf0-97a0-529cac2eb66a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "58c6269e-090d-4431-b54c-6c47b37ba97b"
        },
        "item": {
          "id": "a8f919b6-5270-4f7e-98af-eaa7dfeb764e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c25c0c79-81be-45ef-ae9e-2962fd67710c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14405a1a-8a35-41ff-a4ef-7db13eb52579",
        "cursor": {
          "ref": "d9412eb0-be44-475d-b3b6-af3b6b62e702",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8f88a38a-43e8-493b-9fdf-6b367f28ad90"
        },
        "item": {
          "id": "14405a1a-8a35-41ff-a4ef-7db13eb52579",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ae415391-db8a-4a3a-b2a7-ac1ba2baeff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8e9507-feb8-4279-8103-d15a6eb6a74b",
        "cursor": {
          "ref": "7627df4c-6d3a-4396-bf50-f76e070c4ce2",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9e5738d8-e34b-49be-ac0e-1d13d5feee38"
        },
        "item": {
          "id": "0b8e9507-feb8-4279-8103-d15a6eb6a74b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "49a98774-2ba8-4a7e-b4db-aae883567b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daafe701-60a9-4651-807f-98bf90e0387c",
        "cursor": {
          "ref": "c8c2483e-1b5a-4d32-b531-805f18cbed59",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dc61dc50-80f9-4411-9c3e-a00338bf5f8d"
        },
        "item": {
          "id": "daafe701-60a9-4651-807f-98bf90e0387c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e72aaab4-c907-4526-af8d-18b1f76aea92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442be9fa-acf7-409f-9e2b-94690675ec79",
        "cursor": {
          "ref": "fa420bed-d7b6-482d-bdc2-5a4d6b23975c",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a3827547-59ce-42e4-9bcb-e2ea2ec33f23"
        },
        "item": {
          "id": "442be9fa-acf7-409f-9e2b-94690675ec79",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6f980f54-8bd1-4eb6-b789-b6b9e50bfab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6f980d-6374-4026-9ae6-98364198a80b",
        "cursor": {
          "ref": "2eb1ba28-8bcf-495b-9e9d-18e34cc66bcb",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "713d52e6-b33a-4125-9a93-0adf08046cfb"
        },
        "item": {
          "id": "be6f980d-6374-4026-9ae6-98364198a80b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0911f5e5-24e2-44b3-9f1c-baccf3ab97d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaad8f7c-be5c-4dc0-8bfa-58f9971ecdce",
        "cursor": {
          "ref": "09b6b961-b51c-4d77-8133-70eabdb60149",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "44c623c9-1d1b-46e9-95d8-6ca0b05e7ee2"
        },
        "item": {
          "id": "aaad8f7c-be5c-4dc0-8bfa-58f9971ecdce",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ef4535db-f2be-4c77-9807-051c2a15bb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43bce12-80e3-4db8-86f9-bdfd50156d62",
        "cursor": {
          "ref": "9684e20e-bb7f-4594-bc80-40474d01d4e6",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a9881ff3-69d8-463b-b06c-0e545457f8ef"
        },
        "item": {
          "id": "f43bce12-80e3-4db8-86f9-bdfd50156d62",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7646e966-260f-460d-8ba6-a1ac9fdd9569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4fb9dd-3e64-4304-8427-43e5895bd199",
        "cursor": {
          "ref": "1c43dd1f-65a4-4e4e-b8d3-ebdf52f4c16c",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "831a1358-5711-4ff5-be32-9a3a8a0d9e48"
        },
        "item": {
          "id": "0c4fb9dd-3e64-4304-8427-43e5895bd199",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "14a16626-d9fe-4a7d-baab-7c39a723d79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296c3e84-ade4-4a79-b479-730101fd54c0",
        "cursor": {
          "ref": "9d561298-9ff9-4e59-847e-ebd3cc5a3f5a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "546bf7ed-8bca-49eb-adad-bc0cf511a73e"
        },
        "item": {
          "id": "296c3e84-ade4-4a79-b479-730101fd54c0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ac5732c5-7a2e-49ff-a001-6e03bf30f8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cce186c-5b2b-4084-a686-680e4aeac21a",
        "cursor": {
          "ref": "44cb69f4-42cb-4cea-86a0-241025057452",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2b994565-6faf-44a8-834e-f5fe2dcb505a"
        },
        "item": {
          "id": "1cce186c-5b2b-4084-a686-680e4aeac21a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "126c20aa-efd7-421e-8bc3-a4ffe89f24a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace083d7-be17-4108-82e2-25a1e3943a40",
        "cursor": {
          "ref": "c3bf5e29-1056-41d1-870b-47a299f9e6b4",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7310a87e-2e3c-41e2-99b6-726081815a20"
        },
        "item": {
          "id": "ace083d7-be17-4108-82e2-25a1e3943a40",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b2abfa0d-5a5d-4a17-b85d-9311f28a091f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa482398-1cb3-4d78-8386-3fdf543536b2",
        "cursor": {
          "ref": "185e52b5-44aa-4ab5-9d08-602b4f47603b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "978c8390-a980-4bb3-825b-c7bb8cb8e4c6"
        },
        "item": {
          "id": "fa482398-1cb3-4d78-8386-3fdf543536b2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1fe05505-2263-4ff1-bd99-65dc5d2bc3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff0cb54-6010-4adf-b618-e4cff733b05a",
        "cursor": {
          "ref": "1958ae7c-512f-40a5-9741-7963d9aa6a29",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "50bf2860-354e-4eeb-b2df-54458b38d34c"
        },
        "item": {
          "id": "bff0cb54-6010-4adf-b618-e4cff733b05a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3350f551-f905-47be-ac68-42bf9c1f2b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afb548f-e120-4a59-aef3-35c8b8a64a75",
        "cursor": {
          "ref": "f40f6c55-0c0c-4157-997d-0502d8557785",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f40116bc-c426-4279-b036-99a0ba8d721f"
        },
        "item": {
          "id": "3afb548f-e120-4a59-aef3-35c8b8a64a75",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b62021a1-f448-4e07-93c4-df740a505fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21cd3a7-351e-4412-b43e-02c176cf3abd",
        "cursor": {
          "ref": "7760d52b-c827-4350-a83e-cff2f696bf6b",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4ba5205a-0a65-4d43-99bf-7a986ac5240e"
        },
        "item": {
          "id": "d21cd3a7-351e-4412-b43e-02c176cf3abd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "00e58e75-491c-46b3-91a4-6768dd50c64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7873ee6-ab85-4f76-aa86-1716e204252a",
        "cursor": {
          "ref": "f2422ab9-6b9d-4d7b-ae02-177f7d34da8d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4a598293-dafa-4293-9254-b0a9c005e789"
        },
        "item": {
          "id": "d7873ee6-ab85-4f76-aa86-1716e204252a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9b69aa82-beb8-40e2-94dd-da90693a1c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808ed1cf-11ed-4d46-950c-de19970a52e3",
        "cursor": {
          "ref": "e623bde6-d69f-4bd3-a452-92700e2ae865",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f166fca6-6fa2-4e64-9bdb-713d1337fe74"
        },
        "item": {
          "id": "808ed1cf-11ed-4d46-950c-de19970a52e3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7d3040b3-f769-425d-934a-3c691e96931b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e4318d-87e6-430e-bf92-6b44975ca0ac",
        "cursor": {
          "ref": "6b41a89e-2d33-43d9-bd7d-4b44652d2bb3",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b0355a7a-0df1-44b2-8b0e-0e879d3271d2"
        },
        "item": {
          "id": "05e4318d-87e6-430e-bf92-6b44975ca0ac",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4143e25b-350c-433b-834f-042afa2f8372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad2a468-c61a-41f8-a3de-8a055b7c1580",
        "cursor": {
          "ref": "1e1a0522-6119-4aa2-9499-dd617fada422",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "89dbc652-e54b-4558-ae17-c81bb5224aa0"
        },
        "item": {
          "id": "cad2a468-c61a-41f8-a3de-8a055b7c1580",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "10c4b3cb-9b4f-49c0-8046-867a3c171554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ce4c5e-63a2-4c87-ae7a-b747294034ea",
        "cursor": {
          "ref": "4452c76b-5ad6-46f9-b15d-d4a6978e73a5",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d3329c9a-b1fe-49e5-9217-bd31f0fc5f60"
        },
        "item": {
          "id": "f3ce4c5e-63a2-4c87-ae7a-b747294034ea",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f1425250-6c38-4a20-811f-847c26efc09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa8916e-d1b1-4b9d-85de-fc8e6fed0149",
        "cursor": {
          "ref": "32e8f6b7-0293-43df-8e07-6e0d38af82c1",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4f3606e2-663f-48e5-9b01-17c94f0f6ccb"
        },
        "item": {
          "id": "faa8916e-d1b1-4b9d-85de-fc8e6fed0149",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "26b9e66d-779b-4a4d-9f29-78afdd8ac35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef4d7ca-a2ae-4312-8d98-0b7ee416e30d",
        "cursor": {
          "ref": "a70d7da8-426a-4e50-bc3f-2e628e6fbf44",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9132c0f5-9dd3-4067-9958-d2b2f64d5e62"
        },
        "item": {
          "id": "9ef4d7ca-a2ae-4312-8d98-0b7ee416e30d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3d8df38a-c85d-4de2-923c-554f96576e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b8ac20-dc6e-4c80-bae3-47f22f0550ba",
        "cursor": {
          "ref": "2e54ab36-e88c-441d-96b9-a778c9e7534c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f2dda3e5-aada-4656-9622-5ec52ec59207"
        },
        "item": {
          "id": "82b8ac20-dc6e-4c80-bae3-47f22f0550ba",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cf495f94-c66f-4134-931f-076eb654ecc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d628cd5f-6802-4a8c-97d5-e8f3fea920aa",
        "cursor": {
          "ref": "b4dd40fd-1121-4de9-a5a4-5e8001c1e88e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "39a7dd92-d8b1-4055-9593-3a2b71a32ba1"
        },
        "item": {
          "id": "d628cd5f-6802-4a8c-97d5-e8f3fea920aa",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "80e22536-8388-4676-a067-7b967decac3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5b6d7e-7a72-49a8-a0ab-8208ef41ef5e",
        "cursor": {
          "ref": "3dfc0006-d5fe-418d-b957-0478aaf6193b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "508a3af1-5b3a-4ff3-8d1e-f2e82b31b75c"
        },
        "item": {
          "id": "ca5b6d7e-7a72-49a8-a0ab-8208ef41ef5e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9d069659-9876-4dfb-acd0-00344a00bf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7de026f-d520-452d-a51d-b5eec4c7d34c",
        "cursor": {
          "ref": "593e52ca-ae8b-43a5-92b3-e51d874b8544",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d962c4ee-5d0d-4edb-81a4-475d0429ca2d"
        },
        "item": {
          "id": "d7de026f-d520-452d-a51d-b5eec4c7d34c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ae3be292-91d3-4491-b6ca-030da61b2362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b834449a-2114-4b73-b2e1-cd4f7ea5dcbb",
        "cursor": {
          "ref": "67993480-f6ae-4e35-8f56-daa5b1cecb38",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "63f0d384-89bc-4f69-a99f-4c4be3011a08"
        },
        "item": {
          "id": "b834449a-2114-4b73-b2e1-cd4f7ea5dcbb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fa9c5038-9b31-4ab2-9a5e-4163740ccce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2690ed-3286-4b57-8342-f70ea201c445",
        "cursor": {
          "ref": "992689f1-951d-43ad-ac97-1e5cfdd48cd7",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "62047dac-e328-434b-94d8-de420f32015c"
        },
        "item": {
          "id": "2d2690ed-3286-4b57-8342-f70ea201c445",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2d710525-f03b-4773-9010-23a77e0246ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d598fc5e-414e-4405-99d4-2c021f5ac59a",
        "cursor": {
          "ref": "fbdf4c22-5f69-4435-a4d4-be0cc76f5f58",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7f314c50-044d-4b79-bdaf-852893ac1c8d"
        },
        "item": {
          "id": "d598fc5e-414e-4405-99d4-2c021f5ac59a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a3f862e8-a4bd-499c-a192-5b0f3c1194ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e820a62-4cba-46e1-a75a-45d0b8b1ecd3",
        "cursor": {
          "ref": "94edc468-2c14-4c34-85f9-9dc86a51f12b",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "20a110bb-8b6b-4e79-84e2-41ccafc685e5"
        },
        "item": {
          "id": "9e820a62-4cba-46e1-a75a-45d0b8b1ecd3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5bb53fbe-4fc7-4359-a43a-5e054dee5167",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6ec10a-643b-4a0a-b98c-c49e03ea8a00",
        "cursor": {
          "ref": "84ffdbca-b18a-44d4-873f-3e27132b98f9",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b751648c-6a46-4ed7-9f71-dfbe6d8d8704"
        },
        "item": {
          "id": "6e6ec10a-643b-4a0a-b98c-c49e03ea8a00",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "74543e46-4756-4eae-8485-4fd756d1c7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4c0da5-358f-4d6a-8e42-7c52200f115b",
        "cursor": {
          "ref": "19df8c30-3e80-4f73-be0e-4907484cff83",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "45bf77ba-4eb2-4962-bf77-a4e8566e64e7"
        },
        "item": {
          "id": "3f4c0da5-358f-4d6a-8e42-7c52200f115b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b391c141-84b9-46e8-a730-202bf58504f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494e3422-2c5b-4c71-b496-3b29b24dd282",
        "cursor": {
          "ref": "5e7552a0-6edf-4fd6-b753-d06065b492fb",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "53f4c615-559a-44a8-89cf-4e4cc168c922"
        },
        "item": {
          "id": "494e3422-2c5b-4c71-b496-3b29b24dd282",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2c7a4032-5039-4abe-afec-cb60e7283bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82e3374-80d0-4caa-a4a0-ab4bb56fdf9d",
        "cursor": {
          "ref": "cf9dabd4-f49b-437d-8b87-bd79f0485b6b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dff20ebf-9701-4f93-852a-bb99fad4475d"
        },
        "item": {
          "id": "f82e3374-80d0-4caa-a4a0-ab4bb56fdf9d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "62063417-47e9-4ba8-b82b-a26b06c39792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea9a822-d83f-4549-bc61-3d8cf264fd2d",
        "cursor": {
          "ref": "2aa0d6ca-31f4-41e7-9988-4eb6c2750a40",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9ab5a42f-50a9-4413-8e49-db45c6727fc6"
        },
        "item": {
          "id": "eea9a822-d83f-4549-bc61-3d8cf264fd2d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d50c599f-fd0c-4164-9e1a-5437aa1166ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae980ba-d35c-4d8a-90a0-04ed80fb420d",
        "cursor": {
          "ref": "2d21642f-3939-4764-b3ab-d0c91b2493da",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4393a45f-60e2-4ba7-944a-c370800f8c3a"
        },
        "item": {
          "id": "4ae980ba-d35c-4d8a-90a0-04ed80fb420d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8c8e0e81-e8c1-4104-81d8-ff35ca956970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede17b76-9811-47f1-bf0d-52c8fd6bc7c5",
        "cursor": {
          "ref": "a2513b70-a0b6-43fe-b282-8129e8fc7dca",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3b8a10c6-cddd-4b59-a542-3d83d19eb9ce"
        },
        "item": {
          "id": "ede17b76-9811-47f1-bf0d-52c8fd6bc7c5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e6698a93-64a9-494c-9093-bab85892a810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e08279d-9b80-433c-ba2f-e46debbfdd68",
        "cursor": {
          "ref": "e29be18c-5e41-4b19-a05d-ab4b0cb8a07b",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "231ac6a2-e2e3-48f8-86c5-b6252196dfc6"
        },
        "item": {
          "id": "3e08279d-9b80-433c-ba2f-e46debbfdd68",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0a5a9991-5c2d-4a3a-9dd1-def4d0df3470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe1effd-52d8-42f9-ab86-6a8fcc7c1d6f",
        "cursor": {
          "ref": "24b4f29b-5a4f-4040-8413-85054b283a66",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0ceb276f-c3ca-4861-a951-c20a56f8d4e9"
        },
        "item": {
          "id": "2fe1effd-52d8-42f9-ab86-6a8fcc7c1d6f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "318d82f7-e9c3-44f6-bae6-097f38a19129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d535058d-712c-466d-819b-7f805dcf0c44",
        "cursor": {
          "ref": "06d1d898-0781-47ea-8b9a-7b5bc122bff0",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f6ebd491-5f33-49af-b4fb-f075b7fd2116"
        },
        "item": {
          "id": "d535058d-712c-466d-819b-7f805dcf0c44",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d489efdf-b3fe-4ef8-b78c-2dd508ca038b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1fe746-38ac-405c-9018-4ec2cd71af21",
        "cursor": {
          "ref": "ce5e13ae-8468-4a9a-9cbe-33b43f4667a7",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "643ffd9c-cb48-4a38-b6b2-169fd68c25e4"
        },
        "item": {
          "id": "0b1fe746-38ac-405c-9018-4ec2cd71af21",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2e811b71-eec1-4f33-a368-13ab9df8bf0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c38c706-9af5-48a9-aa58-5ea095071c3f",
        "cursor": {
          "ref": "8937c84b-9a81-4f79-96fd-5b52923c0c0c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fe5e890b-b3ca-4e23-8f65-4320423f7ea2"
        },
        "item": {
          "id": "7c38c706-9af5-48a9-aa58-5ea095071c3f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "24993063-64b6-44ee-8fc2-85588694442d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942e829e-1b5d-4636-80e1-fc51bd03922e",
        "cursor": {
          "ref": "3a8702b1-a15c-436f-9728-385b5822dda2",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "186ea20f-199c-45d5-a811-fd2069e8d94f"
        },
        "item": {
          "id": "942e829e-1b5d-4636-80e1-fc51bd03922e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "07ae2038-a529-4cec-9017-b5619cb62aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97efd4b8-b39e-425e-b5ce-2fb058e09b0e",
        "cursor": {
          "ref": "2f321116-760b-4746-8ace-48372d6101d9",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f9a817aa-25a8-4675-acf1-59f5e4b0a15d"
        },
        "item": {
          "id": "97efd4b8-b39e-425e-b5ce-2fb058e09b0e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c9ff016f-984f-4ca0-a3d6-82675446664f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98700aa3-ad26-4e61-9891-08f4f815f5ec",
        "cursor": {
          "ref": "b0094f13-4d33-49af-9797-4530bce9d4b5",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0c94305c-cf5c-4f86-ac30-ec588408bd38"
        },
        "item": {
          "id": "98700aa3-ad26-4e61-9891-08f4f815f5ec",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c79fa3ef-35db-4231-9a4c-ee72e9669f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df7d0c9-3126-4d39-add9-6ca49e0e2f8e",
        "cursor": {
          "ref": "c5a8065e-f001-417b-9a67-185564a286cc",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2a78798e-fd48-47ab-9287-4eebe67f55fe"
        },
        "item": {
          "id": "5df7d0c9-3126-4d39-add9-6ca49e0e2f8e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f19faf7b-f981-47f8-9595-7517596e9d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d2d643-5601-454f-8fcc-ad9bc07e8496",
        "cursor": {
          "ref": "e56668bf-2927-43b3-94ae-ff0ab3a57f04",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4984637a-973d-40c7-9880-bf5ae3d7f809"
        },
        "item": {
          "id": "c5d2d643-5601-454f-8fcc-ad9bc07e8496",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a9d329da-775f-4e24-af9a-a0933a4c8153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f37838-21f1-4d43-a87c-a0919148d289",
        "cursor": {
          "ref": "7f285dfc-9a58-4df8-96d6-afc35281276e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "196a2bda-9195-4a2b-8ec5-f6f9cc5a704a"
        },
        "item": {
          "id": "e5f37838-21f1-4d43-a87c-a0919148d289",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7df696bd-0860-4c8b-954d-f5a9bb71a737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276c5d56-b9f2-45d1-b156-95a5d01737d7",
        "cursor": {
          "ref": "019b3320-a762-49d4-8c1d-4487faa468b3",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e3a9f874-8d33-4871-aefb-63114b8bd464"
        },
        "item": {
          "id": "276c5d56-b9f2-45d1-b156-95a5d01737d7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bb5f2232-8d06-4abd-b072-c7b83ac2d0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2940eb88-6189-472d-b038-7571113d5713",
        "cursor": {
          "ref": "1c47cf3d-3d6b-49f3-8510-0bc62923d87c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "84e0677c-a3fc-4f36-a50c-28036cda3d5e"
        },
        "item": {
          "id": "2940eb88-6189-472d-b038-7571113d5713",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d82692df-8df0-43b5-a4be-c1dc602e2f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c766ba21-c26f-479b-bc7c-52fc1af4fd26",
        "cursor": {
          "ref": "4228c362-b1ee-4e80-8b5a-5a973e60c5af",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fc043d17-9aba-4ecd-9747-da13a1312271"
        },
        "item": {
          "id": "c766ba21-c26f-479b-bc7c-52fc1af4fd26",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b25c948c-997e-4140-9fe3-5b73c2b2a276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3491bd-a9eb-4906-99c6-057ca68345e4",
        "cursor": {
          "ref": "d7f74c8d-df49-4e2e-8e47-1814997110d7",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "06accfb6-ce04-476f-85ac-36ab029b7086"
        },
        "item": {
          "id": "cd3491bd-a9eb-4906-99c6-057ca68345e4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a4be75fb-6a6c-46dc-a70a-37f47a6414ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d7cec6-3c89-4618-8eea-977e6d6c3215",
        "cursor": {
          "ref": "f40a5010-6f3e-4fdd-a945-321ed7d00769",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8af4d461-b578-4919-879f-b39ee914b851"
        },
        "item": {
          "id": "76d7cec6-3c89-4618-8eea-977e6d6c3215",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "824e0a64-4d89-4e29-adb8-63046b908dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7e124a-8831-479c-bf88-11685e1183b5",
        "cursor": {
          "ref": "3f02636a-e44c-45de-b040-638832d544f1",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "799b63a9-c368-463b-b151-3daa8c09cbe5"
        },
        "item": {
          "id": "dd7e124a-8831-479c-bf88-11685e1183b5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "25973802-501b-4b74-b400-8f167d29b06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4f3716-b26c-459e-9633-26775258a165",
        "cursor": {
          "ref": "b08050b3-f3d0-4040-b07b-ae30dba62e95",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "687cce66-cb1e-4016-a724-12d1da2511bb"
        },
        "item": {
          "id": "1d4f3716-b26c-459e-9633-26775258a165",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "05456066-5b2c-4459-8dc9-e47f273d9054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8ec8f0-5f5c-4888-898c-0012600e1737",
        "cursor": {
          "ref": "cb1951ac-ec24-450f-a392-437f5f08b79d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5bc7a0ed-d079-4efa-89d9-ac7d59996d2f"
        },
        "item": {
          "id": "cb8ec8f0-5f5c-4888-898c-0012600e1737",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f5b5b144-2e2f-45d0-a307-9c230d7e21ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45351d24-7425-45d9-88df-178bce799e30",
        "cursor": {
          "ref": "6146a827-cdee-4abe-99ed-42f2da832bbc",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b16340f9-d430-4007-8b41-824e481a81a1"
        },
        "item": {
          "id": "45351d24-7425-45d9-88df-178bce799e30",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2c1c6193-8f66-4173-a6b5-7d78773d2f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b53dfb1-37c9-4594-96de-8baace85c904",
        "cursor": {
          "ref": "9bdea5ee-becb-4476-9566-0db4d5423ebe",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bb1a4438-6a02-4d61-a11b-d92be09187fd"
        },
        "item": {
          "id": "9b53dfb1-37c9-4594-96de-8baace85c904",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f18439d9-6c59-4e64-b894-d3cc22d35a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65628dea-2360-43d7-98d7-3cd19221d264",
        "cursor": {
          "ref": "278d86bb-10fa-4056-85e9-569dce6f73be",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ba78733b-c7d4-46f9-a23d-47287e87882b"
        },
        "item": {
          "id": "65628dea-2360-43d7-98d7-3cd19221d264",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3c844b68-0749-48f9-b951-dac96336b79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414c86a4-43c8-454e-b7a0-a5d0bb2b5901",
        "cursor": {
          "ref": "db2506dc-a015-4380-976e-61838e274a37",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ae35d9ba-4aa0-4bdd-b4a1-f0a60b638ffc"
        },
        "item": {
          "id": "414c86a4-43c8-454e-b7a0-a5d0bb2b5901",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a1e48cca-cc64-4d67-a403-6d682ad55969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8618abc-e114-4c21-9c73-131080e3d634",
        "cursor": {
          "ref": "06fb3416-46e8-4f02-9d95-307d2bd47a59",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fe121c7c-60f3-40e3-a056-fd2595d06172"
        },
        "item": {
          "id": "d8618abc-e114-4c21-9c73-131080e3d634",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c4a1557e-652e-4692-91ac-f26ef7a40e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05f1c45-72b9-45d7-99ac-f1b396b3a5e1",
        "cursor": {
          "ref": "63199784-3555-4c1b-acc6-84daf6a6b345",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bcd48421-8661-4067-9eb7-5e07870c05d6"
        },
        "item": {
          "id": "c05f1c45-72b9-45d7-99ac-f1b396b3a5e1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7939220b-3a0d-45fa-bd76-193f1b87387d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bb1399-0ce6-48ee-8f4d-20e7644906ad",
        "cursor": {
          "ref": "8e3a5a7c-e659-489f-9b7c-6bd7d6bedec9",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e1042b2d-82bb-43b4-9dfd-f5234b1dc312"
        },
        "item": {
          "id": "33bb1399-0ce6-48ee-8f4d-20e7644906ad",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0374d05a-3a1a-43cd-ba1b-41e6953e3a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8b928e-a5ec-4f99-b4d8-61b35f14dd79",
        "cursor": {
          "ref": "8376c0e4-4a20-43a3-bd32-979acb0342bb",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "55e9079b-a53c-47b7-86a4-37fbe1470daa"
        },
        "item": {
          "id": "fc8b928e-a5ec-4f99-b4d8-61b35f14dd79",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bede7d79-c32b-4c0e-b9fc-5bce311f50b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea57be62-5dbc-43f8-a682-7bfdbf904cb4",
        "cursor": {
          "ref": "8c254918-c885-4be8-a545-dff4df4684ab",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b4ee6bf4-c1ce-4f21-90c6-4dfa1f441d84"
        },
        "item": {
          "id": "ea57be62-5dbc-43f8-a682-7bfdbf904cb4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bf71e631-74be-439e-af50-299dcc805a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354a44b3-809f-4bb1-b6c4-7e4ef072b14e",
        "cursor": {
          "ref": "14b4a900-9602-40f6-a261-083c44819ab1",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c4b86600-766a-4cef-9ed1-b6bc0f40e6ed"
        },
        "item": {
          "id": "354a44b3-809f-4bb1-b6c4-7e4ef072b14e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6326f846-6dc6-4e52-bdef-ad6da05caa7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1a6112-f4eb-490c-bf2a-8df60111425e",
        "cursor": {
          "ref": "3a92060b-1a1e-4585-98d9-1af8b35bc674",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "efb76046-e1d8-4798-b989-6e48fbaedc77"
        },
        "item": {
          "id": "fb1a6112-f4eb-490c-bf2a-8df60111425e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e8491361-5cdd-47e1-a1b8-d1009967d931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2588cd-edfc-4e0f-aa64-57d310b3ce10",
        "cursor": {
          "ref": "ed8b9bc5-1a72-46d1-8144-3242ed8977b4",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d3e50fac-49c4-4334-9cc8-d636233af160"
        },
        "item": {
          "id": "7d2588cd-edfc-4e0f-aa64-57d310b3ce10",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2e28de0c-eb4a-49eb-a172-ff1b4715965d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f830479-bbc0-4a3e-a3c0-800e8712390c",
        "cursor": {
          "ref": "e618eca8-b937-4fa5-80e4-cf36f3fb3b51",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4a98c7bc-b4c9-458e-8945-f848f57447ff"
        },
        "item": {
          "id": "7f830479-bbc0-4a3e-a3c0-800e8712390c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f00afe05-f3ef-4bb2-9951-ada99489b9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ef9930-0818-4e50-afe5-ad3c90eff45b",
        "cursor": {
          "ref": "b437a369-be93-48bd-afd5-a3714b6a485a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8f3ca367-ac70-4aec-85a4-6d868bd42d93"
        },
        "item": {
          "id": "a2ef9930-0818-4e50-afe5-ad3c90eff45b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "11bd1786-0584-4da2-8aa5-eff524ec3bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43076cf-e8bb-46ba-a34e-a960f4c41155",
        "cursor": {
          "ref": "7888a5da-7350-4b45-bdd5-ff4b0c52850b",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "90d2d72e-0b75-4d7a-8276-f962254480f1"
        },
        "item": {
          "id": "b43076cf-e8bb-46ba-a34e-a960f4c41155",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f8bc90f7-5c17-4d6d-a49d-4af6423e3da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3b2028-f254-4dcb-80de-59dd57594220",
        "cursor": {
          "ref": "aa3156c4-cc3c-489b-a59e-9b4c184cb9ab",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b57e3a7d-99fd-40e0-ae0c-0a07b225cd3a"
        },
        "item": {
          "id": "7c3b2028-f254-4dcb-80de-59dd57594220",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6b9cd863-93e0-4dcc-8bc8-70c24f902279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60239fcf-73d9-44c9-9863-04a3fcdac0bf",
        "cursor": {
          "ref": "494ace6e-22cd-44dd-b613-c86fa6857fb3",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6877d583-1ea6-498c-b9f1-7845b8369f53"
        },
        "item": {
          "id": "60239fcf-73d9-44c9-9863-04a3fcdac0bf",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "52b52b6a-2260-4b50-8419-5816319a9b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d76a86-3a7c-491a-9875-82f2eb5fcdc4",
        "cursor": {
          "ref": "e66ed0ab-bfe4-4483-975d-177114fc3f44",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ef2a7bfd-3a07-4784-9477-2346ab52227b"
        },
        "item": {
          "id": "75d76a86-3a7c-491a-9875-82f2eb5fcdc4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "db88b6dc-9434-46bd-b3e6-0b6a1211461c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28428d60-112a-4cce-a439-bb735a479dcf",
        "cursor": {
          "ref": "df2cdbf8-5b0d-46da-b1c5-d7055cf0ed0a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9e2a6e33-fa7d-4d62-93c7-97a1317bef9d"
        },
        "item": {
          "id": "28428d60-112a-4cce-a439-bb735a479dcf",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8da3fccf-837b-4f5a-a6d6-c43196da4717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5e7364-e0b6-45ad-9eb2-e01e15689586",
        "cursor": {
          "ref": "8f3c2ed7-060c-4613-8f4a-7c6979c2cbd0",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "41453bab-f970-496d-8b2e-187b866252c8"
        },
        "item": {
          "id": "cb5e7364-e0b6-45ad-9eb2-e01e15689586",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9a6fde43-361a-48c1-90d2-14df75840270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8789d895-cf4a-4ccd-aced-00f40c9cbf9f",
        "cursor": {
          "ref": "74b97803-c275-4cf4-abbe-0300ebe7249c",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e8eb3c1d-cddb-4d14-8313-9a2d7de7f72c"
        },
        "item": {
          "id": "8789d895-cf4a-4ccd-aced-00f40c9cbf9f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b3b7c7ae-f28f-4622-a88e-c7386a9f061a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9434ea-a441-408d-af86-bc2c681d0e99",
        "cursor": {
          "ref": "a8616945-0f1b-4a0c-b495-e2bb65d98a2b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f19c5e3d-2a59-4bb0-84e7-1fcf23007c89"
        },
        "item": {
          "id": "dc9434ea-a441-408d-af86-bc2c681d0e99",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "06d250c3-d768-42c5-b33a-2960213c95db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823eab47-c966-471e-a543-14223e61afcb",
        "cursor": {
          "ref": "1e108526-811a-4476-884c-8b1dedbadfe3",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1f05de82-768f-4f3c-9293-35b2d70a081a"
        },
        "item": {
          "id": "823eab47-c966-471e-a543-14223e61afcb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f861a7a8-5cd4-46a1-b8f8-e4bee97fcaf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9574e1ee-eaac-4d22-ae5f-150e04513684",
        "cursor": {
          "ref": "2bde3f42-8849-46a0-8719-43f52c9805b1",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "32ae4747-8d65-4684-a2bb-cc49ad688bf1"
        },
        "item": {
          "id": "9574e1ee-eaac-4d22-ae5f-150e04513684",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5696fd70-92ea-4a90-a3f9-d3ff61588a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429f40ad-b21f-49e2-82e5-aeb2c76a64f5",
        "cursor": {
          "ref": "845d95de-6dd5-4210-bd96-d0cbb18d4fe5",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c5a78117-a6eb-4644-b761-6ce89e8d289f"
        },
        "item": {
          "id": "429f40ad-b21f-49e2-82e5-aeb2c76a64f5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cc31bc79-5340-46d6-95ec-afe3458c7416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135db490-a75a-4cd6-af9c-ec785681b4db",
        "cursor": {
          "ref": "fdbe6786-304e-4537-8774-dd370659d8d9",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "21ba6067-5960-40f2-a5b9-9bb39e6407a3"
        },
        "item": {
          "id": "135db490-a75a-4cd6-af9c-ec785681b4db",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4781c8e9-c029-477e-9637-7875ad859a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bca1662-8b70-4bb7-864b-412bf9162f38",
        "cursor": {
          "ref": "d2f59652-7257-4cd3-bbf6-1471d1b30eab",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5ab7b2ce-7634-4d3b-a6a2-4b6b3f15d756"
        },
        "item": {
          "id": "1bca1662-8b70-4bb7-864b-412bf9162f38",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a2ce2c18-0547-442b-a860-1a4c08a2f07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63d9acf-3164-41f6-98e7-fd28d77aef43",
        "cursor": {
          "ref": "132d830c-4f58-4f2f-b26b-88e1169f66af",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8d92de62-ed26-4a6e-b194-80afa1cb0452"
        },
        "item": {
          "id": "a63d9acf-3164-41f6-98e7-fd28d77aef43",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "11e2b746-9901-45d8-8d95-0233981db358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa144685-4342-4054-b1a8-f587a879d316",
        "cursor": {
          "ref": "3c3f20de-120f-4562-9d11-afa9ddeac7de",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b676ad43-ca05-4f24-a996-d9f789aa3d1b"
        },
        "item": {
          "id": "fa144685-4342-4054-b1a8-f587a879d316",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b92a79e0-ee53-4fb4-8476-147f9c73139b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62717bcb-01c4-4df8-a86e-283d6d1d5ea8",
        "cursor": {
          "ref": "3ee58124-92fa-47b7-a2da-59949a09363b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c513cdcc-4723-41f2-90dd-248e68f94c41"
        },
        "item": {
          "id": "62717bcb-01c4-4df8-a86e-283d6d1d5ea8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5421a189-6f62-4e8b-be6c-8c31b8c8bb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a004127-f158-43eb-8f9a-788f861b068a",
        "cursor": {
          "ref": "036b172b-525e-4723-b274-a4982a8eb7cd",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c05eb530-d8e9-472c-93e9-25ac872c29b0"
        },
        "item": {
          "id": "4a004127-f158-43eb-8f9a-788f861b068a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "10299137-45cc-4dfa-bd20-c9986848f14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edada7d9-cf26-4eea-8f59-f19143c9099b",
        "cursor": {
          "ref": "5a0ddf88-836b-4c04-a62f-735cf93cdd69",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4cd689d8-5cbd-44a2-9335-10e5196ec82e"
        },
        "item": {
          "id": "edada7d9-cf26-4eea-8f59-f19143c9099b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e3dead4d-8227-4008-a51d-b597b0fc17b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0f9a5b-775e-4a5f-8c9b-6449b8072e86",
        "cursor": {
          "ref": "b2b4a5f0-b727-4e51-9fc3-8eed3d80db04",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "21e77e9d-52a6-4cca-8400-d7bd863a81c8"
        },
        "item": {
          "id": "0e0f9a5b-775e-4a5f-8c9b-6449b8072e86",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ff82a341-a63d-4be3-b9a2-0cee9b88b004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d20e885-97b2-45de-ae34-7b0fb58a467d",
        "cursor": {
          "ref": "6cfba496-6970-40e0-aa5f-ea6937463ebb",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "829e7cac-1f94-43ea-b522-fe0166652bbe"
        },
        "item": {
          "id": "1d20e885-97b2-45de-ae34-7b0fb58a467d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "23c29d5e-a0a4-4383-87a5-7f73e914d293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6c1271-49a2-4274-af8d-2bce70a2cd04",
        "cursor": {
          "ref": "42281fed-2912-49cd-a00a-ce381110c1ae",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "676e4e9c-85cf-453c-ad0c-67f4d5cf4034"
        },
        "item": {
          "id": "fd6c1271-49a2-4274-af8d-2bce70a2cd04",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3136518a-e7d3-42fd-8541-b2312d8fd8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0488743a-0fbc-44c4-9359-ac241228e257",
        "cursor": {
          "ref": "9a823dc4-ca71-474f-8f1e-7405cf21eefc",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0ee7b69f-d2a0-4bd1-b982-5de2938445a9"
        },
        "item": {
          "id": "0488743a-0fbc-44c4-9359-ac241228e257",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2e2f2a98-cddf-44d2-b3cf-969acf0dd109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68e75af-b5af-41fd-9a37-b9910f590d6f",
        "cursor": {
          "ref": "4dff1019-e63b-4762-bf16-2717bd0b8572",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "86a11a97-4df8-4ba7-b821-f50d51dc0725"
        },
        "item": {
          "id": "a68e75af-b5af-41fd-9a37-b9910f590d6f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f667ae7e-a151-4ef4-9ea0-665ff7c678c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c65c17-482d-49d7-bcb2-944465652ae9",
        "cursor": {
          "ref": "8f3b3e5b-899b-4c8c-9bfd-c903108882e9",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "787f9f77-0005-4059-a54c-2f8254182ad9"
        },
        "item": {
          "id": "d9c65c17-482d-49d7-bcb2-944465652ae9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "df6cd302-3ada-4048-b343-4d09714e18d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054794d9-a15c-4bb5-bccd-b9abac1f037a",
        "cursor": {
          "ref": "39aef042-a574-40cc-bec4-8a1ddebc6c4c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e8374d53-c833-4c48-8807-1c7a5cece5fc"
        },
        "item": {
          "id": "054794d9-a15c-4bb5-bccd-b9abac1f037a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e2faf77a-9cf6-481d-82c2-e5d1e9d1a85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ddc571-8ee4-40ca-9b48-2122813999d4",
        "cursor": {
          "ref": "7e16e84f-b305-44e8-a549-1093d81047b6",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "11713c97-1d2a-4670-99af-27a5dc17c578"
        },
        "item": {
          "id": "60ddc571-8ee4-40ca-9b48-2122813999d4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6a71e815-ecfb-4c3f-8fe9-339f449682f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626f76bb-b7f6-4ed2-bb30-e1a7f341126e",
        "cursor": {
          "ref": "cf948f78-28c5-402b-87f4-3cd8261f8ce8",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f7624231-605f-4db7-9f21-cf72dcd8f3e0"
        },
        "item": {
          "id": "626f76bb-b7f6-4ed2-bb30-e1a7f341126e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1828dcb8-ad1a-47d1-b762-ca37c38d72d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a41601-72ce-4e4b-bdb9-6a9f3f6319bc",
        "cursor": {
          "ref": "43dd2acf-0538-434b-868e-2fac16f24518",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6cae1cc3-e058-4cb0-8476-42f4cb6ac700"
        },
        "item": {
          "id": "40a41601-72ce-4e4b-bdb9-6a9f3f6319bc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c6c413cd-719d-415e-af1a-baaadff16b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a867a6-eb7a-4be5-9a62-087914743cef",
        "cursor": {
          "ref": "7b14b498-3065-4534-94f7-24977304719c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "970372a3-07c0-4751-aca2-9a3b9e286a33"
        },
        "item": {
          "id": "46a867a6-eb7a-4be5-9a62-087914743cef",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a87edaa0-06bd-4b6c-877c-a3f030de03f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e7fc73-f24c-4bcb-a696-56f1189e5eae",
        "cursor": {
          "ref": "4d3d2655-810b-44d6-aeab-d493944bc463",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a156549f-9516-4580-8fb4-f8faea856b21"
        },
        "item": {
          "id": "83e7fc73-f24c-4bcb-a696-56f1189e5eae",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "181a99b0-7757-4415-b539-85ae8f90f3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a02fbd-6749-4076-a32c-70a8c6626152",
        "cursor": {
          "ref": "4ddf1526-eee8-406e-b508-56b9a0f4b5ba",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d6e947e0-6e66-475f-9ca6-392b586e7590"
        },
        "item": {
          "id": "f0a02fbd-6749-4076-a32c-70a8c6626152",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7ef32efc-0e88-42bc-907e-7a62eee358ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4be71a9-9544-4b04-bc36-fc36864647b8",
        "cursor": {
          "ref": "4c731584-7958-4d22-965f-2c295d1b425c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "043b2ecc-6a95-4b1f-bd0e-7a194c657d90"
        },
        "item": {
          "id": "c4be71a9-9544-4b04-bc36-fc36864647b8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "57ef9b92-117e-4d70-a84e-e3dcb65f7ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e761c5-26a4-42a8-b926-c89d76a44efb",
        "cursor": {
          "ref": "a84987c0-54ff-414b-80cc-651c8965a7a9",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ec9bce84-cbea-401a-b52e-1e13b3e5f308"
        },
        "item": {
          "id": "d0e761c5-26a4-42a8-b926-c89d76a44efb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1a46aeae-8eea-4334-9a70-40821d5838e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb23426-625a-4c59-a974-19cbea1b1695",
        "cursor": {
          "ref": "076e18b4-5986-4a3f-af72-da558d35dfb9",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "39c76e42-75c8-4a00-944b-2b5eda1566f9"
        },
        "item": {
          "id": "0cb23426-625a-4c59-a974-19cbea1b1695",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "56ea00fb-e5e9-4806-b3fd-63d18f6d768d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f879fb13-ccfa-4c4c-9e2f-9bdc0067422f",
        "cursor": {
          "ref": "eb6f2410-d1ba-4c8c-9fb9-8c8ad16a9699",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d7b5770e-95d6-45b3-bd24-45637c3fc9f1"
        },
        "item": {
          "id": "f879fb13-ccfa-4c4c-9e2f-9bdc0067422f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "459c89c5-510e-4cf6-8f58-3e600e53be84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076a9137-7a48-4e55-80f2-c20e094ca406",
        "cursor": {
          "ref": "1789f787-0bac-4923-b961-84ba2508fe57",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "010b538b-98d3-4e3e-b2f9-a92a6cb8cbe7"
        },
        "item": {
          "id": "076a9137-7a48-4e55-80f2-c20e094ca406",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ec489517-3fc6-4a5f-ad67-47b1bfd2e555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e89fb8-32d1-4307-b09f-3a3be25d4ec5",
        "cursor": {
          "ref": "70c35e5e-9d49-44a7-82bd-398026c035f5",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "650f10d2-0ccb-4c2a-82dc-dd44b02321b1"
        },
        "item": {
          "id": "49e89fb8-32d1-4307-b09f-3a3be25d4ec5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f4a509c8-7901-42f5-b149-02284adcde50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9badbe-e123-4d06-aaa9-2cbc12330630",
        "cursor": {
          "ref": "ba0e1b31-1d11-488b-b92c-81ee2a46947f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "30f835f1-dd5e-4e7a-b811-092f8f5cb193"
        },
        "item": {
          "id": "5b9badbe-e123-4d06-aaa9-2cbc12330630",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2b715f6f-a095-4fa0-9566-446c77afe6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa9ff8f-9e82-4f2f-a02b-cafb82b245e4",
        "cursor": {
          "ref": "e1076425-ae47-48fb-8078-c8138f5aa05e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "51dd710d-9940-4614-9753-e06192565947"
        },
        "item": {
          "id": "bfa9ff8f-9e82-4f2f-a02b-cafb82b245e4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e513a65d-dd17-42cb-87e1-bb24f5427aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a763b88-954b-4bd1-a037-651651452e08",
        "cursor": {
          "ref": "271bbbb5-be34-46da-a7c0-3aba3fd1b845",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "07b19ce8-e4d8-4b3b-a6be-9560aefcde1d"
        },
        "item": {
          "id": "4a763b88-954b-4bd1-a037-651651452e08",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c4b48ed6-12d8-4346-a980-b2e0c99867bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e742a018-e185-47d7-b153-eb7b1af5da71",
        "cursor": {
          "ref": "5f341709-599f-48e7-92a5-874059d47258",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a9fc553c-cdba-4a75-8352-7b7c70455a2d"
        },
        "item": {
          "id": "e742a018-e185-47d7-b153-eb7b1af5da71",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fcdfe2a9-467c-4ef9-a898-2dd7715e75db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98b9988-d39c-4557-8d86-e65eb2d730ac",
        "cursor": {
          "ref": "938285fb-c58b-4a2b-8e13-60ea0f6272b3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0a1bef61-2949-4564-9551-38c6ec85ecec"
        },
        "item": {
          "id": "c98b9988-d39c-4557-8d86-e65eb2d730ac",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "646c2014-35ff-4346-91e2-454629a69019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6297ce-0634-444b-8c1d-29cbbf079588",
        "cursor": {
          "ref": "23fea34a-ad89-4883-8f0c-1b10290644a6",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b374b3f9-62bc-4700-8665-47c2d653255c"
        },
        "item": {
          "id": "cb6297ce-0634-444b-8c1d-29cbbf079588",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a9af1fae-760e-4e3b-b751-dba9682d1408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e1e4f0-af1c-459a-865d-16b6e24dba4c",
        "cursor": {
          "ref": "b219d885-afbe-4c78-ad66-1ca1eebad59b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "985b18f8-2ecb-418a-a11d-6386544dd44f"
        },
        "item": {
          "id": "87e1e4f0-af1c-459a-865d-16b6e24dba4c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "38897d82-9721-4759-a842-65a211aec271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a696f6a-4fac-4ff3-9ea0-3d423abf31de",
        "cursor": {
          "ref": "2bf8aa87-1660-4354-b72f-001d2034885b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "38400833-73ac-456f-86c7-d1923ded8470"
        },
        "item": {
          "id": "3a696f6a-4fac-4ff3-9ea0-3d423abf31de",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "783fd547-56b3-40a7-a363-eff5c738d92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0485853-7b4e-420e-a171-693ff195165f",
        "cursor": {
          "ref": "099bb631-9bb6-4729-9165-3ff983aa3b69",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1335d834-6b9c-47d5-8b67-5613f48b79d7"
        },
        "item": {
          "id": "c0485853-7b4e-420e-a171-693ff195165f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d50894ab-fc7a-427e-b46d-ece97c84162c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6af529a-3963-46a8-8480-884bedfd3643",
        "cursor": {
          "ref": "1369311f-075c-4b7a-a6b8-50d66ae929e2",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "69c6f9b3-9f07-4bd4-9f29-369e5f883784"
        },
        "item": {
          "id": "b6af529a-3963-46a8-8480-884bedfd3643",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5d8a000c-c82e-461f-a235-cc33d548bbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf09193-3b66-46dd-b3ec-e62e38160713",
        "cursor": {
          "ref": "89073801-9cd9-4228-8ed4-e3b41660ad55",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1bb10566-d1be-4bb2-86ea-82c8f82f270f"
        },
        "item": {
          "id": "edf09193-3b66-46dd-b3ec-e62e38160713",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e11f604a-06ba-42f3-a680-57d7be247405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d205c7b-7732-44d6-b1f8-010e3bc2a8aa",
        "cursor": {
          "ref": "5ecbf740-21e3-4b6e-9381-97c2bfbe8447",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3a184f3e-74ab-4d0d-91af-39a18949bcaa"
        },
        "item": {
          "id": "1d205c7b-7732-44d6-b1f8-010e3bc2a8aa",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "53e490eb-39f9-4545-995b-b588e84f0b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b489be08-29e6-4c2e-8272-9dc66a1568fd",
        "cursor": {
          "ref": "bd850a1c-0b49-45a3-907e-cc98abceabc7",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "505eb5bd-624f-42b2-a2cc-5aaac5e4e50a"
        },
        "item": {
          "id": "b489be08-29e6-4c2e-8272-9dc66a1568fd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "78d61ac5-930e-4261-abc0-f83ed90f1b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3d28eb-3d43-4b76-aa0d-865e30e9c929",
        "cursor": {
          "ref": "1f630159-e38a-4990-864a-618e940d4224",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e1260ee0-6f99-4fd0-83b4-f898d94c23f0"
        },
        "item": {
          "id": "7a3d28eb-3d43-4b76-aa0d-865e30e9c929",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7fc3e5c1-61f3-4437-be4f-774ace26d07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d05e7fc-8666-4585-9e2f-55c50dd0c056",
        "cursor": {
          "ref": "d080f454-8365-4ef4-b475-8e08ea1ca26e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7d091940-0084-4bdf-8873-13ac2b3f9831"
        },
        "item": {
          "id": "6d05e7fc-8666-4585-9e2f-55c50dd0c056",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "361e0302-e63d-4bfd-b01f-0affd66ce29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d831be-ed88-4a47-b8f2-768b76296dcb",
        "cursor": {
          "ref": "ddf934ef-dbf4-4e5c-b24e-e390e5c25cd4",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "40892610-d958-4899-ab71-7c0aeccdf82a"
        },
        "item": {
          "id": "11d831be-ed88-4a47-b8f2-768b76296dcb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1f137533-7fa0-4629-a2bc-2d1dc54e6464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544fbf2f-39b3-4f85-b398-a623ab9675bb",
        "cursor": {
          "ref": "a2e1f4bd-f646-4997-9100-c3d0a608c40e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "27e89544-1368-4634-b16e-357710402206"
        },
        "item": {
          "id": "544fbf2f-39b3-4f85-b398-a623ab9675bb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "63f7b76e-396b-4d8b-b7fb-7bfa7b986e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284f0506-bb8a-4c02-adb5-55dd5dff6686",
        "cursor": {
          "ref": "3bbf90a2-f93b-4edb-bed0-1c0b8682093f",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "231e4b7f-4113-47ca-947e-9ab7c4e4f953"
        },
        "item": {
          "id": "284f0506-bb8a-4c02-adb5-55dd5dff6686",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "439cd5f4-93e4-4f90-bf9c-81453fd047d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3531c0-d290-4f3e-8d20-3219e6bc23de",
        "cursor": {
          "ref": "1e023625-d594-48e8-bb45-3df8796bea7f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8c7bbcc7-5e4b-4e41-b6df-0a187222cde7"
        },
        "item": {
          "id": "2e3531c0-d290-4f3e-8d20-3219e6bc23de",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a5151f17-e573-4c3c-b6a0-71f86c6a0f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8a12d4-3204-4788-83df-1d21c2ca9b88",
        "cursor": {
          "ref": "0f499dac-a7a7-4094-8b6b-29e79bc81fc0",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "413fa50f-62e7-4c64-b09d-79bba35158a9"
        },
        "item": {
          "id": "ce8a12d4-3204-4788-83df-1d21c2ca9b88",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5907881d-119c-49c0-b65d-53bcf31664b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37c8acd-c027-4b76-aeaa-5ba8253899c5",
        "cursor": {
          "ref": "63ef5723-d465-4398-abb1-6b69d23bb903",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "156c622e-e98b-46e6-9eb2-a2f7f90431a3"
        },
        "item": {
          "id": "c37c8acd-c027-4b76-aeaa-5ba8253899c5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1cc86d69-ad7c-4776-8ae6-ff16b22ba3bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730110cd-5beb-44ee-b4a2-12054a0709e5",
        "cursor": {
          "ref": "acc4b65e-e2de-44f6-881f-9af17ba157b4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a1af74b2-63e4-448d-b902-1cdd573b9e1a"
        },
        "item": {
          "id": "730110cd-5beb-44ee-b4a2-12054a0709e5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "58c5078d-1dcc-4283-821f-f3215f322cf5",
          "status": "OK",
          "code": 200,
          "responseTime": 2272,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce10247b-503c-4657-9226-a8d29b91b9b6",
        "cursor": {
          "ref": "e9be0eeb-79d8-4447-9516-f92cb24793f4",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d6ad2f66-0aab-44bf-a5c4-558b80e48eb3"
        },
        "item": {
          "id": "ce10247b-503c-4657-9226-a8d29b91b9b6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "72a3a304-1b74-4ca2-87f8-3756f0bbcea9",
          "status": "OK",
          "code": 200,
          "responseTime": 4005,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef93bba8-4618-4e35-b4c4-fdc4147d9a17",
        "cursor": {
          "ref": "d65bf521-dd7b-4f8c-b155-b5a82c844aba",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1e5dabea-7a78-4ea2-ab29-772a76c7bbab"
        },
        "item": {
          "id": "ef93bba8-4618-4e35-b4c4-fdc4147d9a17",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "749b673a-d4a1-47d0-84cf-80fd295aa9a8",
          "status": "OK",
          "code": 200,
          "responseTime": 3986,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b452970-2a4f-4bb4-9459-4280d9ae4450",
        "cursor": {
          "ref": "d230b167-0e83-47e5-9bf1-fae9d3ea988e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "38bc22ad-d524-46d5-8b30-a709fdba406e"
        },
        "item": {
          "id": "7b452970-2a4f-4bb4-9459-4280d9ae4450",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4dae0c1c-0126-47f2-8c90-86f0d168a046",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b452970-2a4f-4bb4-9459-4280d9ae4450",
        "cursor": {
          "ref": "d230b167-0e83-47e5-9bf1-fae9d3ea988e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "38bc22ad-d524-46d5-8b30-a709fdba406e"
        },
        "item": {
          "id": "7b452970-2a4f-4bb4-9459-4280d9ae4450",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4dae0c1c-0126-47f2-8c90-86f0d168a046",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567bf071-d3a8-45ec-94b0-98667db98942",
        "cursor": {
          "ref": "4091696d-45d6-4acc-86ca-6b91aee26fd0",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b90e8e77-66ee-4f65-a67e-c587233c3af2"
        },
        "item": {
          "id": "567bf071-d3a8-45ec-94b0-98667db98942",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cfd8b5e0-dad4-44e4-83e2-0fec14747660",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca0a785-e936-4439-b094-aa2cf624e642",
        "cursor": {
          "ref": "affd7492-b6ca-4d75-b6f7-0f55a7516590",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "53fbf762-2310-44f1-a9a4-371cbbc1539d"
        },
        "item": {
          "id": "eca0a785-e936-4439-b094-aa2cf624e642",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3c960081-5e4e-4a43-8240-6c67a1567db6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}