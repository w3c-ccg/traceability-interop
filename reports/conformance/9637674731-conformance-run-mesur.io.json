{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b066ac48-f900-4330-82fa-93da6be3de2e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4799a546-cdd7-4d97-b336-85b80d810069",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cac3544e-d3bb-417f-973e-f26de9a4db24",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "45b78ffb-0992-4f08-bdbf-9eaae18029d3"
                }
              }
            ]
          },
          {
            "id": "765e16f2-b80b-47e9-8c3a-954c353f892b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eabbe4c2-c3a0-4194-81f8-d223b711ce00",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "349c2c17-fb8a-4fae-bf80-d039ba006d3b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e8cd82fb-8072-45bd-8c81-00ea67785279",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0f0bf185-932c-4794-a09e-db2e4a0f2d66",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd88dbc1-7648-4dbb-afd8-da50617ff267",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e0f432a-d15e-449d-ab50-6335af9ee2f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4be6dd49-1017-408a-b124-f23efad36be3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "03ed4215-21b5-4b88-8d0c-775d7fb3a3c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9bf9f9dd-f46b-467f-9c35-6f48c630ec69"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b383aa87-431b-4598-a165-fd28da8f63fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2263452-4519-4cd7-82df-d20291ea4da0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64235ae2-ba97-49d9-9c05-58dee939b5eb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3be83c8d-a9eb-44fd-b9ee-cc0dafd81599"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2139f247-fb45-42c9-b46a-34051d451dcd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7378ee65-d28c-428e-b33f-59fb9264ee13"
            }
          }
        ]
      },
      {
        "id": "182ff874-ac95-45fb-8b88-87d4a2aa0c0c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1bb24d7b-f036-431e-abc8-5e1fe318b662",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d9c2874-e65f-41d3-adde-fbaf0bc007e7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "536a1d9c-9d8e-4a75-8ec4-4278ead3337a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618387a0-3731-4ef9-a21e-8686c5c77475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6eabfa96-0f57-460d-99b1-435f72e578fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8589e91d-405f-4b86-8f5b-fcf150565434",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed4ea6a-ba6c-4f8d-8e66-6bd1ab969088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "264ccca1-cb5c-4c1f-9967-8afd9a2a1c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251c9459-8735-48b8-9c04-27d6c2687e14",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd71379-e0b1-460a-b2c2-2e371c2f2be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1716726a-fd4e-468a-b085-0fb28d368ad9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5594ca3c-4826-4813-977e-51b89e954e5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e974f016-f652-4b79-a069-fe061a9e6733",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ab640c-1f92-4724-ae87-368b9a14b62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db7d5735-e55f-4ec3-b1c5-6f18f176dfaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16592d34-bb58-4ad9-a0d9-ae45e727af35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479eec9c-c8b8-4b9f-b0ec-26b241b48b73"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7727af4e-93be-45db-9274-22a1ff672ada",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7a157113-533c-4a97-a77c-9c4f8d383448",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b881a31-6f8f-4440-9cf1-2a9ea1a54e50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9954a1ac-389e-4db7-8294-59eab48047d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c12fed52-ae6d-4c2b-a62a-85e4a364585d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "eb6a1ed5-9ff3-452c-85b3-35b000009faf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dae3a72b-8662-45d3-9203-22f551f7543d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68aed317-13c6-4f0b-83a4-f17304046d3a"
            }
          }
        ]
      },
      {
        "id": "5c28a6e6-e595-4259-bc0c-32178a8156a3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "055a55d1-a027-4a11-b244-c6cdc10dba07",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9715d46-5c2d-4115-bcdc-1898c4cf1797",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "dd906a88-e493-4888-b5c7-6f9e76255c5e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468b891a-a611-4354-bf43-8a0829e7637f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf07710d-c937-4a21-9d70-fe310dff0aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45922be-d733-4e3d-88fe-103d5bbd3a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f57265bc-1846-45b5-85d7-e0f98b4ebcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc37b370-8d51-4b43-b6e2-fa93f908adbb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a5ffad-a74f-489e-bb9c-73753d94d9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3d6a61-c300-44ba-9bf1-d607c4962157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3931fa6-f2c8-4c20-bf67-9d8f78da3cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fbb44cc-fac2-4539-b140-20fe17ba00a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce2b244-4bb6-498c-ae04-37f633d05ca6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dc8023-d939-4263-94ad-7289f9af8444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc53ced-a244-4a67-a6f2-8b52aa7809f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bdbf17-3989-472a-9448-8ac2d6ab3123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb8d5e40-c2fc-4373-94d7-bb256d221099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f686fe7-5ccf-4d1d-9905-062d7ebf8602",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586831e0-a5a2-4c7e-a34f-f488bab7fdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d23948-d52a-4846-b2b3-ae551a5df3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433c4272-eeaa-49e4-a781-afa220c8ea41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "463349f8-d73a-4217-98b0-554d67377a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c4d35c-c53f-47bb-8322-16c56cbca4b4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9262991c-8598-4542-b338-750446feeaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2874003-ad5b-4790-bbd7-3f100d826ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936ebe93-86c1-4f90-8030-2efb79a71bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9910cadf-6d15-496c-8b51-682b910df0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fb5e53-ad33-4ac0-9cea-9a30aa116892",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775db5b0-d8e3-4678-b9b9-d8c89b439227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c556226-55a5-4b5a-8adb-e2b739c8a437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dde118e-7185-4a79-b3b3-a2f6f7ccff02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1cfde4e-457a-49e1-a67e-08267ea4b572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4b73e6-971a-4623-93ad-994994df51a8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c9f49c-d2ab-456f-8108-c55dad4d2baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8377d5-d6f8-4f3a-b848-6bf08826ae86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57229e78-4c8f-45a8-ac9a-6faf3db6e2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c18d6bc-8892-4b77-833f-057a75dcbf02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba71419-6f49-4b37-8231-7c37c8d18972",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f2b92f-3be8-4968-a20a-74a80832291d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d854399-34a7-4096-885a-016bb8df9c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a5d9b0-0921-4f6f-82d4-27e73a87ca33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f772c62-e522-4379-b182-e4d2de17cb79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfbda3b-665c-434e-8cc1-817332489f2e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff55adee-5379-4875-9b62-5ddbdf5715de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27028168-d9ed-4264-a298-a790fb15f85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab17937-282b-4d43-8440-41674678fa5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bab4a8c6-10c3-4d4d-971c-75ab66cca1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4ce19e-47b1-45f7-8607-db171c51f14a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012166c6-6e7a-4a28-ac40-62b824dacf4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bd487f-7af0-4298-a8ee-4e48ab95e36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad6f197-6622-4244-b366-ece2bc2de586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adf11655-63cd-47ff-b1b8-3b68c442c88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62455a8c-8ca7-499f-a51a-74e1b392158c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df25706-bf96-4f09-8bc1-f52bccc164de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68b2730-a6ff-448e-ab62-ee65818748b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c378a50b-15d2-421e-9c79-a5689d52f3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "944cbc8d-3b67-4733-adb2-cd3ec8bfa405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40f8e92-af10-4285-856c-e0fc5e1f7e98",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add9c6bb-5778-4fb7-88ab-cac84bc43ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e99655-270c-452f-b666-fc93cf08c27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e2c9d2-7e2e-4c66-bcf7-b21795e308aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80545a5e-efbc-4389-a822-b594a278edf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498d5397-6965-4edd-b393-0562639573a8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afa38d0-5869-499b-8c0a-fe7edf334eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a2c994-5ea8-4dd7-b637-f8a319dce2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b30a43-121f-4a6d-bc41-b920b50a72d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bc18fba-4745-4d21-bc61-74ec18936cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4a2a61-7c43-439c-82c5-889e4775e7a2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f65dcab-36b0-456e-8b5a-67cf6126cc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6a9a06-876e-4cab-a48f-4ffe0150f80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961c7e18-fa40-4feb-98ef-35dee82335ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3caa033-0475-4a8e-90b0-2119b230da91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343ed595-6014-49fa-a362-ca4c847daca8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c5583f-227b-49a3-a476-c1e02ae19bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b7a5b5-d103-4583-97b6-19ff761f6095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ea19f5-f2bc-492a-85a6-00600609a81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be025d9f-daf3-4505-8d64-c403220dc744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a8350e-9108-4c05-8080-e179ffffdb46",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3d31bd-18ff-4a2c-956f-29f92573c340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d95f6d-7e2a-423d-a70b-7ac9916c4377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e73b2fb-c844-4ec1-9c7b-f46b7312b027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02ca8b90-1d95-46f6-b3b8-ed48fecf591d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ded3a4-3508-4058-94d2-55bb8090460b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e500f32-f36d-4c45-9d62-1940863b109b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c143868a-1b78-4e5f-8985-bd5c6be65779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47b9836-9eeb-42af-8a2f-4890efbff321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36186bc0-f681-4bda-9d75-a32377580b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe87f7d-bb44-4041-a46c-c19bf4dd378c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d405a5dc-2df4-4284-b82f-d79651a6990b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1396b8f1-e749-4169-ac66-9a2ebc73b492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248930c8-26b0-4349-b4fc-eaac6cc1f619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a404a697-b8e2-4627-bf42-9760d7746ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e2ad34-1647-4fa3-b9d7-64bb8de5a84f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878e86ea-28c9-4e08-b47d-b15d41ba7579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211338ca-e3a1-4f7c-8d49-831631dd7576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86da8ea1-0b85-4f00-8350-f17ec2304027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ad007b-cd0f-4dab-b430-0bc19d4e5d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ab3b5e-0b7f-4e1c-8a56-4fb09573c2ae",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5602576e-2b79-4a79-99da-5d03f6bd2228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2c7ebd-aaaa-4a89-8bd3-f6403c4aeb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784843de-686f-4e1b-a99d-cbfdc622cc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55e4bf0d-32eb-49fc-9123-62dffc43675d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8c2562-6896-433d-86ee-b5c8a7a2009b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8a911f-25c7-4188-8d43-0906f922df5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d42af1-48d7-46e9-b6ea-11640ccc6823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dab7b6-2c03-4213-8c5e-d0979a884d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aeef83c-9389-4c9e-a0db-e81eda8ea7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a734edc9-9dec-43b7-b3ec-9324051771b1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0befa4ce-1c23-4450-975c-5a3520fc45af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246d776a-7eee-4e07-a4a7-9a5c263737d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a417df7-46ff-4e44-92f7-60f41577398e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0a36fc-d7b1-429a-945e-96e53744028f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30efd91-f63e-4234-85e5-a5bf500b32a8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7a9aee-60c7-4cd2-81a3-993c5dedaf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405ae01b-9407-4a01-939c-d109f5d98c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3756edd-2383-4593-a8f6-f35a49c539bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca4cfa6-22f1-4585-93d1-bd5a9348f6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ac8584-d6de-4122-8ad9-63eeddad4454",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fb5991-3287-4d51-abf5-b8cc11aa0383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670398ae-8193-47e0-b55f-edebfca8c926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cee3825-95df-4045-bfb9-13c3f8ba9de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "736482da-b404-4f3b-8ee4-02012cdd4c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc86a62-198f-4147-9af7-c72ce2ce9348",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee444a7d-5d11-491a-8390-02be53f72a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbc3325-3c02-48a8-b679-b150b8347dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cff6a2-72f4-4793-a52f-4406246b75a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e23c171-14b0-46b4-bd45-21213982dcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8621cf83-5f90-4b74-944d-da133d3203eb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d009c6-8397-4151-ac9a-474a5a4804ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b743e9f-a25d-4c5f-a90b-5db76abd683a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d9b2a9-af84-4f91-b851-32aeccdf05ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f402bd98-0cfb-45a1-8511-20ff5bf5f66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989f38cc-2157-4245-a062-10e66abb65ad",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8ec1bb-334e-486f-83a7-7f5951d8ddab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65aaf7c-be42-4816-b66d-ae5486d2a9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e040da97-cd76-41b1-ade8-d50beb33d1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2d7ec3-3408-47fb-aade-5eafaae7d3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6633a5b0-415d-4ad1-af3c-8ac851c1cc2c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e369176-d4d2-4ea4-8a1f-f9237998645b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91559b08-c970-48a5-871f-c20483fd7812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7393cef7-7ece-49b7-8852-b333e6e3430d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fffdbe2-e496-40a4-bcf0-c695200b4a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd3e5c2-ff65-4e30-aee7-a2fa6b402ac5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da6e91c-0dba-4c60-ba3a-13f93c804bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e341734a-9a05-483a-8686-9ab60fab7e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf8087b-9908-4a82-bad4-f05a4c7ed57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00056f0f-a942-4460-9467-926edef25b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2f0e1e-bd46-4f52-8863-ac47c3b999ad",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a43c47-cd00-4af5-ac88-391e31a8a1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dab156b-9dc9-45d3-ba17-52b646e84985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a267afa-f524-4dcd-b8bf-e77627320a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "83bc6b02-56ee-4654-b890-0f4ca6336f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d35dbad-0d60-4b28-84d6-08cc1e95cd8d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ab40c4-ef3c-476b-861f-f81d1bb18c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467bcf81-2ba6-4d26-b214-aebbd65726b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bcfda7-dad0-418c-b712-9d89b4806fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d14d3ef-7c8d-49ac-96ea-1249270c743d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362a7990-e102-4883-8cf0-f256d62e53c0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505344fb-cbdd-4f5c-8957-d069360c26a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b9a73a-62ab-437c-a8f2-0d608f074bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e530192f-82d0-4f9e-b30e-e0bc1ab2b686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7b4a1c-c7a2-4885-a13d-54ae4c1e663c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483978af-7665-4e31-b1be-4f1b62717420",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f73ed2-a667-4c25-8e51-37ea79da1eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5008257-d512-4bc2-a29c-42dafe283e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cf0b8a-2c6c-423e-a18c-c0db8cce1251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0421b0-3670-49ea-a2e5-2775950374a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d055eaae-2030-436b-9b18-a2ddf733af7e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a54c06-9e04-4e8b-bc09-bdf4b7cb6be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c1ace8-a565-4dbe-b2f1-c505b74c34c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3742e770-0ae4-4663-abb6-6810c620bb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc94578-908f-4e45-b1de-c34f9b3af03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece3db78-0f35-4a51-8846-b3bfcb5d3940",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecd67d2-5e7a-4b74-96c1-e7358af47c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73adf0d2-4d47-4378-a0f8-a8346a862d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19fb6ed-2a84-44a4-bec2-df2e082c5d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6ebf54-0423-43d8-8e4a-ad30316129b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ad3d18-e844-413a-bd80-ce7afcc9e732",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87fad16-d4ac-4a2b-8190-7772e5510d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "356c56ad-0b1b-4728-9106-d5ffbf5d0548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2522c5-c40d-4d35-b382-7e76afc54dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f2ab5e-b6c6-4363-8fd5-39df02a47de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946a9ce0-f7e9-4bdc-891d-535707a1fe24",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4181178c-31ab-4d8c-a564-aff881a72375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28b6c3a-9f23-49ed-a2c6-77170efc9b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1afac4-24de-4558-a846-502eea0ede5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf81931-0c05-4c25-860f-8acab7085ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fba06c1-956d-4887-888a-1df92fbb3168",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bdce1e-f13d-4c08-b5db-4d8f8d7b88e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5727ac1d-2303-4075-9f20-4ced3cb406a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b11ffa3-458b-49a9-adc9-da736f15b13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d252962-2d8a-46ef-8f7b-962e602b150a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0bede8-a592-4d91-ae7e-449b0d7b2017",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b007da-f203-4845-9112-3e89688a4857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4942fe-f229-4e5b-a0fe-a0467f51cda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e143b70e-48a3-41bb-a209-8dbb4a8d3f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a54c925c-73f3-4fd4-baf9-d2cf64b7ba3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f03504-81b9-474b-b578-bcffb25f6d71",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae20b888-eb76-45bc-9b14-484b3a811f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2fcf9e-c62e-40ea-a1ce-2c44d289b134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41dcb409-7c37-4be3-bcff-551c898bcfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "32648fc8-c71a-485e-934c-d226f627c158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4da6d0-9efb-4324-8083-81a05ebca690",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13f98f0-1d4f-48ae-8d3f-07a74846b8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78f95af-f01c-4b80-b4bd-76cc1884e96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36570a6f-7ce3-4058-b066-e54d2751b528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d44e52f-55b1-4dbd-b882-2af2ca25fe2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e241f0-1c92-4c7f-b4bf-1bdfebd4256d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89595c1f-64a7-4324-9b33-d25aeaa8a61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b712023-1525-41e2-8ca2-bb8079a2c954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e3d3ac-edde-4f10-9994-2fdf1422b66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "581b2a8e-1915-4921-ac58-54b82565dcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f301c95-339d-40af-8fd9-7dbba8dcd4d0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ed4b4e-05c0-4e45-aa23-1001c3871388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a915062-51ec-4e9a-96d9-600a2217b717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f3ac2d-9cf8-4838-b2a0-4a2ff5a8d92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "82f6ba96-6575-427e-af2e-09130cf6912a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91a0ec3-a210-40b5-8fc9-a3787351af41",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33af2793-6a43-406e-9147-3e25ce7f0367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b24a952-f556-4a05-81a9-c72feb56fd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01307963-01be-4003-9387-bf2819f511ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c655d53-c92f-4751-a5c4-54bb21ee7beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedf90cc-0e63-4ec8-89eb-8ad9c48b1be0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f76c8a3-05dc-4bf1-a65b-cd929e12b941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac8d165-e5b3-4615-85b5-203427275a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c147f2a-b3d8-46cc-84a1-e7496efa7168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4da8a8d7-f39f-4527-bcd8-f0d9373b7e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003f9dc4-741a-4ab1-aecc-7c59ca55963b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a23e330-0743-48b1-9852-633f88f3b18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfcee26-1421-4a00-b6ba-ca96327d725b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8ea67d-9893-4c3c-ae61-b9496a182694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9dc27d1-4ee9-4abd-b7a3-25b3c081aaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53128ff1-fac2-49c4-93c1-e66922dd2ba5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a973f8-2531-4f43-b87c-fb1a16fc7981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fe738a-20d8-40bb-bc7f-fa12c68d5bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b725e6d6-e783-46b0-9971-f2f73d2da543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "346a34fa-81d0-4d19-b2a1-1bcfe171e21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb471ee-8f64-4795-b180-8bd80eb40229",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c76ac65-6534-4655-ad28-d376997f17f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82d0ffc-584c-48bc-af2d-9d57c36836ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8fffde-945a-4434-b826-22cb5182a0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7dc600-a82e-4198-a8dd-2ee10c3c541a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63463a3c-c7b2-4d45-a941-636315217c27",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2086bc6-e799-403a-b465-f625a6cdbf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e94fbbd-22dd-42db-94be-a1fe96718623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d52fcc-42a0-47a9-902d-ba8d617ad666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed83e74d-913a-4825-a876-4ad08709f3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0386587-0bca-49bf-a848-860c8f7270b4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71eec001-d949-49c7-9637-cf9773c31f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342066bd-c474-4126-9349-dd051a6e326f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bddcc35-13c0-45ff-a69f-105c48d7cf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3e5837-c9af-4993-8360-3dddf489614f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16e1e53-3aa3-4334-b594-a349d83c9b69",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd75bd0-c0af-4de0-8aea-5d17e397b523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf618d5-489f-4e19-a778-9d65f9d38725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9aaf2c-23d0-49db-a231-2a927933034f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a3def8-d29c-4b29-acbc-04900edf5e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248c09b0-3e10-4701-8d90-0928a9582843",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972ed6a9-589c-4b45-b36c-e201d29388ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925756a6-92a1-4752-84c1-faf7c28e6fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11333e8a-0254-45dc-a6da-19f9a4093334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67eef734-ed29-45b2-8c25-6e3196f5262b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22e589b-0bb7-465a-a383-63327e45e195",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e22dc1f-03d9-448c-be6a-7b9b324a442b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017dbdec-354a-48ad-aa01-850d100cdbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b151dfde-23b1-4ed0-a990-c15cdc524b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17eef22e-97c6-4d8a-b966-5607ed2199e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89953145-bd36-4d6b-ae57-aca035bf8f78",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cd49d5-7843-412b-bac7-40f4798860ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb87ed1-1ef3-48f6-9042-32d04d64b6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8f1a9c-c375-4a1f-a2da-fd7da84a907d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5ae47a-57ed-4ed5-a061-e22f7825b714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5670eb4-1aa4-4895-b69f-d7005b7acafb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91293f24-2a66-487e-a6ec-ccbb653b8faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a984d4-9357-46d2-b2a7-9c4b9ec31069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146e04e3-ed08-465c-97de-d5a088dc4342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d05ce5c-3c8c-476d-9075-208c146d3dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af982eaa-59fa-49a1-8681-c41113e59d9d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2386e03c-fe19-4de1-a731-e1721c6b6dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3ca6fa-6d3a-4966-ac3f-85a49dfab395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779556c0-8467-46f0-b963-a21c77f5bd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "801c6432-d2ee-4d8f-81a7-6576436e72f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34c8f44-3821-487e-ade8-20227d0005e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70994a12-c569-4422-bef5-464030eef4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de2351b-dc66-4740-a1b9-54c4c3af271f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9e542b-5d40-4f32-a4b4-f0546ea0f62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba81c266-bdfc-46e7-86cd-f95ba19d3722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7776e2c-904c-4b58-8699-fd15ddb84374",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3ec5ef-b70d-49a8-bfad-56dd5432b567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a57cde7-32c4-4361-9a0b-af5093299cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcc3d22-f1d9-4f60-b816-84fb10968106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc671dbf-89e6-43e3-92c5-d4e4212917b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f33552a-5d66-4322-85f6-f4eacd7b8bd8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85801d04-4dd8-436f-aabf-06bab50802ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0023940-871d-4cf8-a9a4-f1bb64dffc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633ed08c-931f-485b-9368-2a0deca97836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "61ab3e51-0627-44f6-9752-0c2eaa2c3af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3879f6bd-a059-41b9-a7f4-ee73ade4f30f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db381a5-215b-4396-9dc5-d0fc4eadce6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cede6873-6585-4008-a56f-c9b905084d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09fe2f5-150b-4d5f-90dd-0df2d25677bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbedb9f0-f9ce-470f-9eba-fec3b767438d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2fa16a-f537-41f7-aa5b-8a4e8ae23eb9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a939bd-85dd-47a4-b61d-3118a5c8fb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c49aa8a-7693-4300-bfb8-1ac3f20e2e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1a9dbd-fffe-48d1-968b-6bfc8d644aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4791ee70-a076-4811-971f-3bb0776792c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af58ecb9-4599-4097-b04d-95662965f341",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fab2e63-cecd-457b-bbd6-3ad23136cb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35046f90-882f-4206-98da-07d88c084500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18530463-8853-4c1e-b3c4-f9d168aa580f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd39aa7-2273-4d7f-9b57-a47787c58fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c04eb2-39fb-4d9f-bc4f-df930b52948a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4df013-8840-44fd-8ce3-8f20a41587ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b355c85-8bc5-4a1b-aa91-f432382aad76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a800dbf-dba5-4883-93f7-04c13b151144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9738c45e-44cc-4d80-8b5b-7200362908f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cde810e-4f61-48da-a874-e84923074611",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999327b9-dc5f-4175-b4f5-779fb784a4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb847f1e-855c-4894-989b-a7f9ffd526eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6290b2b1-6cba-4017-b8e0-25545477be31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13dadf21-b337-4787-9722-d60f790ea799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12717fb-f4b2-401a-8566-975df3d9ad0c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e79d8d-c3ff-4d27-b052-68b32c984bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab5bac5-dcbe-4dea-9bab-a8336a17fe6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc80194-3ccf-425e-9512-eb4ce60192a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4296b7-36a8-4384-94ee-9b0ee1fd4302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f410c0-3d77-4b16-9094-23738b2937ce",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d5c7af-1701-4e11-a5d6-3fb4a50ecc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbf3094-ae80-4567-9dcc-9cc5d3ff6329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6eb8e7-9600-4eba-bab5-95572815b5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75c63fb5-65bb-4e94-b7e2-636a3f1853a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf306df-1540-44f2-a43b-8c6b44a29864",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc6c81c-3024-4f93-a5dd-ff13250b6c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2679f08d-8e1d-472c-9d7b-226e2fcf4345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8554f5-8ca6-4a07-a4b7-3a9051dedab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79be1712-c4ba-4812-a776-f8ac466bb9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac9a6de-9073-4d7c-a360-d7f783f5cb9d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1497d2-2568-40f4-ae27-395477dca7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f953b69-0f61-4745-b07b-6e5f212ba0b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bafeb2-b69b-4f08-84ed-934441a71833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8221cc84-68cd-48cd-acc1-c92e62496505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e0c3c9-7795-4542-bf23-0d159f080ade",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06b71a7-dfc1-4b70-8a1a-ae48ff9812c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ed0ff1-4f0a-4bca-9535-347ecf4ca327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8292700f-575a-4538-ad23-cacf7db54071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "182a1797-4d4c-4c90-a681-d0f33c3eb3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b938ef-fc49-4e16-85a8-fd3a6e3d99c6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbac373-786b-4b53-8880-f9b760686ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1eccf31-32e2-4f4e-9b48-5ff70e4a7231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c52e845-36da-40d7-aaf2-3ca69ea3096e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b4acce-7c24-4a7c-9bff-5fdf9d9f4851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e996547e-eaf2-4f43-bdaf-ad42bed9fe25",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b672147-96b5-43ed-8da9-17b58e53bc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8800d4c0-d138-460a-adb7-bd16d28f60e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94ea0c6-392b-49f6-9fc0-6fa9884213df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d56cbaf-e12f-4f38-802e-83fc4089b608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5891fc-b6e3-4a7f-b41c-42cc859593e3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09752637-b910-4156-9880-9cff2dd56daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede3b867-3539-4632-8f7d-75b02f1f177e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbe6184-f571-47ba-be3d-4e7729cfad45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b052864-26a8-4dfa-90b0-15ec04ed1c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c3d666-e609-46d0-986e-b50c1fc7fb90",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abc416c-4a85-4425-bebd-b3d458c03856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c953277-53ae-4214-bd8a-89fe3ff4df0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b67af2-cfa4-4d6b-88be-b1e7606c5d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3456f2a-8145-4318-9d37-768d257d2022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70b9d59-1271-45c3-8aac-179616a2e59d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce913ebf-1d8b-4233-9a7a-928bc4f7d0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee46c156-b6c5-4b1d-83dd-3798a3c01471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468dc2d3-da8e-449a-a2e2-a16bc93d8a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5e8cf0-3dcc-4bfb-a315-71c0dcdaadff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c2df97-c0fa-4838-8617-e4c52b5682c0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd6f61d-db8c-470e-ad2f-23daed426f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82854ee3-3c15-4ac4-b8cf-cfb6addd56e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c2ce38-1f57-421d-8f10-f318ead297ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5adb1efb-f918-4499-a502-841a6bb9b004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea499982-a826-4bc3-ae40-497e120a15d2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5178ae77-06e9-422e-9145-73a8fc0df5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739bccaf-a575-4cba-90e0-d25af9db7915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c5a34b-403b-44df-89e2-9d45997b4982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe56471-49f4-4014-9c52-d082d51dbed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd797f20-1a53-4a94-9b8d-80d828037622",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d95470-4ff3-4c04-9846-7924107b1da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49f4e96-e871-4d53-858b-f286e62af788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8978664-c18b-4251-9f55-6873f14aacd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4dfdcd-f126-419e-b07a-80959f9f680e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7138cd8-aa9e-437e-880f-b17f2ab4d9e8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e293e0-d860-406f-bf04-6c8e5917d494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1454ce-55ed-46e2-b851-d05328e03450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70c654a-9799-4c8b-ad00-26360b80d40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e97e841-95b7-4deb-b50b-571295363439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e68f0d-2f75-4906-ab18-284990a52175",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe0084b-4b2d-4995-8904-4fb9323fdbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb23f06-6f78-4402-8fce-c14fe7c92da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7255a30a-b843-4753-b0cf-8f6b84fad4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30379812-1f78-4500-99a8-50adda0b9895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4e24e6-6746-4057-91c5-a75da27adf9f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59cae83-9c36-4dc6-924e-6263dcc0bf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3deed0e7-15d8-4f96-8f8c-5965de800e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a4028a-a48d-44f9-af4a-ff3df2dfc2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b57993-52a4-4fca-8a51-99dc6c049de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5305b7fe-5fff-4b3a-983b-9981655789d4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37efa8ff-9880-4ca8-b567-02507e48c09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103c02c4-f1b3-4ebf-8dd1-e7c9bccdd219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3b058c-aa6f-46b6-a4c3-0e15094154a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e122df39-9fb2-4f41-b6c7-701e49c18c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019efca0-5258-4a81-937a-88b84de18b48",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a30c64-64df-42db-823b-53b284cd731a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7431bdc3-671a-40b8-b174-fbae3bb08ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cc4da6-4173-48b9-ab02-07df615345af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fec6861b-8d31-477f-bcab-aaf96764f97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493a1eeb-96c8-4cc2-b5e8-f4881532444d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb8f979-1784-48c4-ac54-908a309b4e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af8ed08-280b-45cf-b4e9-49355ea6e812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6d9bfc-4521-49fa-ad87-12ea9bf0aa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ac0aa0-525b-47b9-abef-4ea65ad1703c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b97d590-5745-4468-9306-338bbda0310e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758e8f36-a647-4f7c-8684-9a3f2f23079b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3301c8f4-1aa3-41f3-a056-92ba9b4c58c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce270579-a5e0-4b86-b72e-4045f02b553f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed51082-da90-4d60-a711-109c8a51c9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae79be0-0423-46bf-842c-c8c565159625",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8025cb4-8039-4cfe-b484-c013e63d1c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c8e742-2de1-4cb9-a197-7a1c576db723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0469730-28cb-49a3-8999-7eb5d344cf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7aea94b-aac1-4a66-b968-cc782fd44550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd0844b-38bd-4647-8aca-bc8e9babe604",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be27218-42de-4603-81d0-bc931e814043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0503776-b81d-4ade-a0d4-390bc0d4f0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41145bc0-20aa-4ba5-8fe0-e28a903c58b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe47e00-db3c-45f1-8425-3d2caa2269e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de82338f-3f58-47e4-8c10-dd1269311a88",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896eb85a-3d00-4842-9da2-d2341ca4e4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb85fd2-d1ab-4890-b3bb-ba289ab257ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6825f838-8051-4449-8003-381d827399e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b20443f4-ca52-424f-986f-aa0f9f1680e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb7b385-2ba5-442d-9d95-c481ce12ce3b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442a908b-07d1-409a-95b1-acad5bff6072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c767dd7e-a9b6-4e77-b074-1b0bd69018e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ebdea7-5ec4-445b-8251-0ec8aec9640d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "77fedd48-8006-4624-b6f9-bc709985a49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456602b3-3358-48e3-920c-0ed31e42f8ac",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1150cb3-0183-42f4-86c1-67879f74dcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb2214d-a4de-4726-bd80-207e152bc4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4e43ee-96bb-4239-84ea-f491c4801281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "667da54c-9f46-46e3-8a91-f8a7d65bab42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d45925-057d-4d68-a77e-454909be0771",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dd49cd-b740-4d38-98e5-f0b68ca84e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1c7b59-4e7e-451e-87f3-5a4d23b87f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4af6d7-f2bd-4f72-a009-549f1eccc287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e15ec8af-be5a-4fe9-931e-d5a90c53299b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb86d0d-36b2-4516-96c7-06ac8873c3d1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e632718d-dda3-41e4-87d4-2cc0fa3dcb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d62e029-7eee-4897-9a8a-ac16b547a3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787583ad-c185-4522-a1b2-ac394a79ae70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bea73cb7-0092-4607-8039-4f92d0d48384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba873fb-6970-45f4-a478-24712232db4f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f41f6b-1e95-4a4f-93d5-b4479ca93826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0f6af2c5-7f98-40ac-abbb-38fd6f076631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1273940d-b563-4046-81db-d12892dd6bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "902a052f-cabc-4455-af6e-5add66838923"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1007fac7-48cf-4c31-bc0e-7b1dac411d57",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf161c56-f148-4975-852e-fa03f4ee435b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7c0e91-0853-4096-b590-447eb20ec97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19eca4e8-d39b-461e-bd8e-ffb66a72fb59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc79edf-1e0d-420c-adaf-eb4421e5515a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f8a4afc-6d66-4dc9-8bec-6de8b3c84761"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ffc85b9-52ed-4030-9e75-69a52a4d6eba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06db4e6d-e12b-4f03-963b-be897688339c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d16804bd-4820-40fc-9ce7-6fab50f863a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f01ffa61-0c87-4102-8057-7df31b2482ba"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4143b58a-067a-44f0-8f40-7d356198cd21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "145dfa17-3451-45bf-81ff-0e10b187fcfe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4f1d37b0-25f1-4a9a-820b-297d838f670f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49b8df5d-9985-4815-85bf-18d1726f5059"
                }
              }
            ]
          },
          {
            "id": "ae8022bc-dbf4-44ef-8755-b35422d1e2b9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "828754b1-7669-492b-9b57-5c27bff0ab9d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "72bc1bb5-519f-4f93-a561-866b9d819cd1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84412780-acb5-48e0-9e3f-86a516ab2a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f8a69e94-56d3-40da-b7ff-cb80032aa759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490c66de-0329-4531-bcc1-359acfa2015e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7bdcbd-fe26-430f-ac83-d1f2ce89f0cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab4171db-e303-491c-928f-35cf1f22543c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0aada82-2c66-4dce-84f1-3d2a3dd7b747",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ed3e62d-b5ca-46df-8710-5d01f54a0142"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f0fb29a-7753-4a11-ab3c-4d4f2af6858d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8562fca8-8e67-4e27-b4a9-4509137892ec"
                    }
                  }
                ]
              },
              {
                "id": "fc10d0f9-1911-43a8-972e-2f89d0a871a7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8341cc9f-0ff6-4b85-a5ab-5642f0d4006b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8c0b694-de5b-4ce2-af89-4b81e9a3eee0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d715a87-e422-4de3-b067-ed3689296054",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5991345c-8d5b-4f97-9683-f9c305777bc2"
                    }
                  }
                ]
              },
              {
                "id": "4844d7ef-051c-403e-a82b-dac5a8f72076",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8668238c-33ea-4893-8874-7461363fa695",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f75eb8de-7a37-4356-b111-4d0687c0c43e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9801876f-420b-454a-a8b9-3f39043fc15a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2577efdf-d8d0-4fa9-a9ca-dd8911db311e"
                    }
                  }
                ]
              },
              {
                "id": "47c3c8b8-0a7a-4258-aa58-54fd77744884",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5c7bbf5-1c09-4861-bf3e-5157a0b487f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78fc1f31-ddc5-41d7-a6c4-430a338bdfd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de58f1fa-14d9-4923-b975-04eeeda1210a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "49fad26e-ac0a-4451-8f27-2d7da6146ab6"
                    }
                  }
                ]
              },
              {
                "id": "68ada66f-0cce-4848-884f-76535a977df5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e3b9db1-ef98-4dd0-8f5c-9da38022461f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e98e4ba8-0122-488f-beb6-cf6af94960cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13bc91d8-c7ed-4393-85ac-dd9b06805cce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7aa26350-b5c4-4592-93fb-a22f192e403e"
                    }
                  }
                ]
              },
              {
                "id": "f6d042b1-fd41-4cba-bd8e-4f9d12a1743f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da2f49e5-25b5-4f44-88c5-29d1e727d328",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42643f98-8bf9-44f4-a1a4-eca8bca4dc4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7019e0bd-329c-4e9a-9382-9ed189bef0d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d95a6ec0-7632-40e2-adb8-3fddb72443a8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3608811-bc10-4b9b-bd61-88c63683be41",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05c5f314-454f-4b48-afbf-d35ec241eff0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b89c75d0-b5ff-4dd2-b362-9db2e0a1dd3e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "744cf843-471a-450a-b9f6-675be9444b62"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9117794-cd73-41c6-aede-83fea4c57404",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cdfd75e9-67ca-47f5-b0de-085bb2af3d64"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf09c309-7859-4160-bda0-8d8b2fa04f8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10473e7e-714c-4b2f-bdae-57d0c5b25d94"
            }
          }
        ]
      },
      {
        "id": "ec40d25c-e9c1-4ac4-83de-237ea4d367cd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8bc87c05-2cab-4868-be85-38fc4612ffb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4775e8f-a762-4530-a1e8-70024e0f473f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "30ff939d-c288-428b-b6dc-c877acb1f144",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60dd87b-e886-4a81-b5b0-f530380585a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac7ae1c-69c4-40e0-ba94-677f20619535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb6d30f-d42a-483e-ac89-637410e090c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6567bf-e33a-4ad9-aaa9-6a0f8761744e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb26f925-b38a-4bd1-8c34-67d4d52d97e7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc23ddc3-91d7-4507-9e27-0107e482111b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc30fcc-817c-4492-9d77-acef2c129438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0173968c-bb08-430b-943b-6bdd6ec94a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcbb1de5-6ff2-4cc8-a645-b0a0f02dc7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b25e3b5-402a-4749-8776-dd0175080b38",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912d935b-039b-4c3f-a71e-ea58dd8be45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6a0cfa-9255-4ca0-98f0-34889a03f9c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e64374-a673-4611-8e21-e6b05aab589f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9bfc49-b863-4343-ac4a-b662a9bd673a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402a764e-2548-4011-b106-3c6bf9a03530",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7aaf07d-ecb5-43bb-8570-e7b9c3303f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092b4dec-2147-4295-bf7f-4ec8c058cbd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae934272-b268-4a1b-8f88-03e1c9725b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "825fbb91-76ef-407b-ae16-c6603f2beead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1bf5e6-60a0-4632-b51b-f61f1eb542d0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7780ef-51a7-426e-80c9-c233b4f227d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7d529e-b92e-42ad-910e-23952232cede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfade63-048d-4946-aa63-2d9b5504af00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8af8983-f938-453c-aed7-4904cc236cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedce176-a503-4594-b19a-c3cfee742b8a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8873d446-3bca-4b04-8745-c41760eaf896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb27225-a133-4efc-9105-0d80c7841ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09486714-359c-4a44-88cc-1b110ca1a9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02d09e1e-f6ba-4bac-b192-dc8b65747ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718d214b-a0d5-4c3c-91ed-82349087fc71",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2094367c-5906-43d2-8c31-cb212e4b91d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1763bc-75d6-4d7b-b753-41d920d894af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29765a3-fee0-4dfe-b0d4-f06aa87d27e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3c66f1-ccd2-40e7-904b-4559deb58553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7660f80-4178-4fa5-b661-b86d554770b9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bbf8c2-c81b-4f83-a51b-04d381c26293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45e903d-7b51-4412-8e7c-34caf3cbfd36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061b8b96-b995-4588-88c0-b5a724f6e73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2a229d-1a42-4547-8df1-b8608d8e6a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d7d4da-8761-4bc9-9532-d93becb968a3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd71d4b-c7bc-4d9a-be48-6c15bc238df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0289922-0822-42f6-b2e2-0da6c2c6174e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107b39c0-4f3c-470a-ba86-7ae2da498d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28feb855-244d-490b-bf16-a4665aa58475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8279b0ad-e8ae-4921-abf9-52543293d57b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c6a063-1a7b-41e9-95ec-18570b4a7a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e73ce0-4f76-4b17-a04a-479bed0bc745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116b06d8-c6e7-45c1-afc5-9b200175ad42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dac0faf-7b79-442b-b684-553d19fa9d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd6b749-54e6-4b46-b456-dc33cad8000b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541fda2b-9aed-4895-a01a-10d357e875fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58f50a1-756f-47cb-b80b-c393289a8a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb30402e-a424-4c2d-b141-801029a353e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ef094d0a-f8e8-4448-b9b1-9a8502efd35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f2f377-831f-499d-9a7e-d5bf57977c41",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a29e54a-b9a8-4d24-892f-e8c61a2a36d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda1d996-c266-4efc-8a7b-1220eda053e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755dfa63-2c83-46da-a585-407f06143438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "890a5041-ff51-4160-9030-74716dfaa39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59864e97-755f-4a47-9d0a-db1b7ccb9768",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d0a5a5-cb23-4c60-b0c2-ef8892084f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44eecfc4-74b6-4e76-924f-9959c3955a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52af6552-8f7b-4af6-b397-75fc883f9926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9478117e-fcc6-4a04-a628-d77cc139eaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829ee2c8-8998-45bd-a997-15dba9be08a7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b958887e-8818-425e-b1aa-56c69c511f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deead898-d3f1-47fd-877e-9e33a3df7b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5231daed-2fd3-47f6-acdb-2e3fa0f10467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "11b629e9-5266-452c-9b2c-b67f877e6311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd27bc9-bfef-4525-b21a-33f8dcd1d6f2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b214ba9d-bf01-4e28-b2e5-e8adbc0c51d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10af7a67-8f4d-492f-8ddc-e17616fca470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668ef5ce-b671-4120-83b7-173e7f1c7a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5262d22c-79e7-48ef-bdf2-fa5dd79c40df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d518d5c-ac6b-429c-8756-4cffc42d1d79",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897e19db-8d86-4ed7-b80f-d075d0a9834f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46715ea2-e71c-429c-986f-6f29580d0f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88593dd5-9c23-4233-8dfa-207f910cf675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcfd54ca-c3a8-4e54-8cfc-fa117179e3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a02ce70-cb0a-4264-9c2a-7b7a31965119",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cd3004-6e2a-48ee-bce0-800c41cf77ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0eb43e-a9ca-4795-abc5-9f3dbeca9258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a8c3b9-5aa0-44b6-8775-81c5339707cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1381f251-098c-4776-b521-3c9d6cba3cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da229b1f-7af9-4f45-9510-6a7854e17942",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b12eed-5bb7-456c-acc5-dce5b31bc243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a79f151-26fa-4566-9f87-a86095ab8b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc778050-ed3f-4049-a40a-2dc95793a016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2432df2a-8a10-447e-9369-28a6cd005347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403d7c7f-364a-49f6-a186-6db9caeabc32",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba711dd-5e3f-4067-9e58-13e2aa92dfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24fd127-8140-454a-bf27-3795251c5765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e152e5bb-1c58-42f3-bf1e-4902fd86dbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "987cbce3-f926-4598-ae04-5094a8020c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fd0398-5b3c-4d1e-9b0f-709cbb2e6900",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0978959c-4421-4b74-a3a0-b0d6b282fcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a181be70-b3de-4925-b35f-253a325836e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2071e4-82aa-4730-bee3-54d7f897437b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e024b1e6-7482-4112-856c-4c5b71782d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf47a2f-c423-49e5-a6bc-122a2e72085b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95caabb-25c1-422f-8540-6991ad944d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a5f829-0907-45c8-97e7-7aacd95789fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7bb2c2-8751-4b71-bff8-4312c5817135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afdca032-129a-4df1-82ff-3bd77d7c485e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1da95d-21be-4e51-a7ce-473abb865efa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfa32bb-8dfa-4646-a87e-2787fb5576e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796c0962-677e-4ae5-a5ab-c19c078837c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe614c5-00e8-4b15-83c2-aea4b3e9cdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c215f29-b843-44a3-9dd2-2bddafe5a12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e93b08e-4a35-4cb9-bea1-76c615232bf5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b99aa2-902d-400a-9077-1396e4ed06ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a190ed6f-c72e-40f0-968e-ab883d9bdc52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac85a74-1b97-43f7-8e92-8c1ee0ce1679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37bcf322-0a6c-438f-a51d-e296ea1e4e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d130d20-7e5b-4969-a253-4399fdbaf8b3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de041bd8-b8b9-46ca-b693-4fc80e5620e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d0b6c1-002f-4656-b451-ff40455cc7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef75afb4-43d1-4cad-b1db-4563549f3920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a247b759-ae17-47ce-8534-fcd0d4681695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e86a6e8-a20a-45dd-a7d5-d47f83f069bd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40db5173-2560-4f0a-b74a-e347b4f8b705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d961cda7-247c-4cf5-84d8-403dc018c9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8639fa-fce0-40ec-8829-6790f9ffb2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d125c50-5eb4-419c-98e2-7372e9bf4759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a64da8-68bc-46b4-82a5-1907d83226bd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc39ebb-52c9-420c-bf04-cf97118d0162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76263f5-6d9a-4a22-b00d-79a0b7c251cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcaf9f83-46d1-405e-a886-f64872edc2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c54617e1-164e-4fd2-a53d-e3cea3eba5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ff9415-a833-4479-819e-f93f6a4c6737",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21001eab-f1d2-4e7c-bafb-135baedbe2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849c2007-ed0d-4b06-8a99-e16ce659f112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d5ce3d-c217-48bc-ac61-de5e23e11f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55ef54a2-32c0-404a-b838-0ac85bd37376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb517b1-bee1-40a0-bb7a-100d05aaf278",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f24ade-5531-4ccf-8117-3725a2cf5ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bacbc59-4933-4c76-8f9d-e6de4336b902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b21fe4-79b3-43f9-a38a-2224bd1ee294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c89f7c03-32d1-4145-8fe1-b52afe2a99c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f72c2d7-b747-46d3-8102-ea884fa88375",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8c5f6a-81e8-4ef4-8700-33431e42cb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6252ea25-599b-4563-a53a-a5b8effa2998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4776879-69ed-409b-8a14-d24a6717abb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31ac6f9f-7f1a-4cda-a63e-97f44bb53897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f106ad0b-8dfe-43de-9733-8c625de3bfd9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149e97f7-7833-4e22-9fb1-f54b351effb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f0c148-af2d-418f-a661-0830152eb7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4aaf11-5cf6-4af4-a0e9-a97015b21ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1583716-9ff6-4ce7-8369-d320c7a13fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946c7687-35dc-4e7d-977c-1baa10e85375",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b407811-40fb-49a9-a23a-2997d493e742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e421c3f9-aa19-486d-b695-53619273e43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a0654f-0304-4834-ad9d-ddd29039c42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc049a46-dafd-445e-be87-529491bc751d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb5a9df-98bc-4b37-bc1d-20bb496d0232",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21e413b-1d66-469e-91c0-f6b5bc147d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d047cc-d9a9-4841-b32c-f1711c7fe60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d41f46c-14f2-4d5d-9447-70e83c25462f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd25ac49-bb06-4905-9ed0-19bc48f1ffc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bfa84c-d3e9-49a6-b2bb-21cb419892ee",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e347df6f-f21a-47bf-8cba-b0052dbb9fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0392d9c6-3e9a-4df2-8344-2cfe058d960c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee255966-d9b4-4329-9786-4debcef4fc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd9a4f9-33f3-4c65-b70b-c5af177757b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cc962c-e710-4e23-9439-01e8593b642e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f67c7c1-0561-440b-8a20-d006f7d9d9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0253b53a-c59b-40d3-b77c-54f6e3e0d890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e92119-e31f-4e10-b0ca-0a5e99bf2170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4534526-e352-4b28-9d89-3c5d1fe3e1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac02d5b-2cc2-4217-93b1-78a4afb511f6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5645641e-ae07-4f3c-828e-cfad45721e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65be77f-66e9-4e92-bcb9-47b0ce929898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98563322-39a8-44bd-9b3e-54e3ee55cfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d94fc070-93dd-4efe-969f-0ba843da458b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8940727-88d5-443a-b8f4-a886058f24cd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e860c5b9-bc4d-4369-87fa-87460c60d07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93969566-805f-48a7-b4b8-e126316dddb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622f7ed4-ab6b-4c61-9aff-a5a1979240c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb349eb-2539-406e-9a43-c163c753e900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef42e0a-23fc-4b9c-a0c6-1ae25bc102ff",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea520b53-fbd8-42de-8f90-e794ee82c5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27f3ef5-0c7c-42a5-bd6d-0a76eb1cdac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20ae76f-e60b-4c31-beb2-7956fdcf2fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "921d221a-cbb5-478c-9f57-74b68f8df926"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a6135d83-3595-42f1-9ba9-29c8094ed81f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71edae1a-69b8-4948-bb10-ade528727574",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecf8842-0fa9-4d90-b27c-46a3ae31d956",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9392c0c0-3ff0-435c-804d-3e014ff3444e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e4b013-5c97-486a-882b-b5fa380caefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b8e74d3-e0eb-42b5-ae6b-f98e0c63c025"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "606fd191-a09c-42f5-8243-143d3447c5d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f3aa132-ff00-4cf5-86da-a6eb0a57f5ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26aca7c3-a425-43bd-8d52-36ef4411030b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d38fc9f-e75f-413b-805b-3546beab09a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce2506b2-3658-4a35-849b-5c9e31029c19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ebbc19e1-cd04-4c09-8d5d-16785b6d9897"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aabc4973-ad52-4035-b511-974bd00d7bf7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63f7f143-6504-48c3-89db-2a7b9f927dc2"
            }
          }
        ]
      },
      {
        "id": "1d3e2442-e87e-4c5b-baba-a49141f9bfd2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3679f4dd-6091-4c6f-aec4-fbd74fec0d81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edde6b18-4dac-4a18-b71f-874265019cdf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ea2d4551-4c55-49b6-bbc4-3c649df88065",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48817606-f485-4653-a0a7-3d38dd5788e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ff6103-e712-488f-ad02-d4d8cf4d88e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5a9863-9015-4fd7-902f-4ebdd1bc240e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a3e1ab-12fd-485b-82af-cee3a1c67f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24eec83-bee4-4e4b-8d45-99b726a554ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80553458-d8fa-4cfc-a156-9712e5eabf9b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8368a3-61c6-498b-8cad-6ffed2301341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a50c41f-2c1b-4fd5-939d-3991a20bf790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e27bd14-01aa-4b64-bc19-d493bec0d839",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4c95b8-0326-47e6-98a5-6b8cca23bf4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd09549-0fda-405b-adbb-2d0a8f805eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff08517a-4226-4ca7-ae13-b5778cb9e837",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493d750e-6860-4e86-aa3b-344a8540dff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee98997-1993-425c-b797-16fe8f9b58f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028c7736-c0b5-4d63-afb3-e925171e038c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c9aa83-d7e7-4a8b-aac5-b4e9bee6f9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389f85e7-7084-43cc-b8e1-29c2956adec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bc8891-41fb-4e11-b6aa-06cd940fb689",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a0391b-d062-4383-bb42-fb9852f9a101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e64e8e-1787-4215-9a94-ec53920a715e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daea2f52-7aa3-49a3-82fd-db9451c5b30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee69b977-f0cd-49d9-8aef-c78df882866c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d527e84-80e3-49e3-a383-5f31c8ed0219",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98b26a1-83aa-4d3f-b7e2-d3b7bad4be5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42ae63cf-1e86-477c-b4e8-a61a5d50c8b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076f0f3e-55c2-4af2-8818-18c47c1c0ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3555d84-068c-4308-9712-1ae6be332aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b0151a-d5b6-4427-af48-4f83ee2851b0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfb34c3-f2c0-4edc-8070-4ce8709a1cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6197b32d-fdc2-4da1-8e59-27f397d55231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d7241b-67c4-47a3-8cfd-7a152d0b8f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7936f217-0cbd-4bc6-b545-4a25d7b06c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed62fe6-ecb4-420c-98b1-d85be926079a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea3ac62-b1ae-47e6-b3ae-dce8aa76a7ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b7beeee-bfdb-400c-9bbf-aad781e75055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51fa627-25a2-49bd-be1d-0dfcffc339a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9e45a6-9664-4cfe-a1cd-543405599b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d149920c-a976-45ec-b942-f98d38684948",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd06f8a-50e6-4501-bcf8-8cdc6b7a5e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db57d3d-1e11-434b-aa00-9085249f8a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0ab728-7143-4aa9-b667-ff081521c21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f21940-7fa3-4176-b212-610d7e086303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eaafa7b-3727-4e2d-b6e2-cdc90f498f6e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693e864e-1cac-4471-ba5f-eb059e0441ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c30657f-e15b-4598-a6ba-5528b5cfaf66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5810e3e1-c90b-4fb1-82c1-38bde365b787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575ec4ec-2e70-4586-97d9-e6cfdd99e1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909bbd14-2930-44fc-8a11-c1f2f0b54f52",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cb2bb1-22b0-430a-8b3c-f176cdb95d0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb019eb5-f421-45ca-90ae-30f382a1f5f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e385756-ecac-4da3-acff-4d932d4fab47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec8e6f3-36fc-4542-9199-b7d5d2a58f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886d8082-ae11-4464-b739-58ab9c031488",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ef7d81-2a1d-4d0d-8ddd-7209031a9c78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5edee6b-97cd-4b1d-a357-a07d34d244d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7c9fff-f516-4e88-94d8-9c44889ea1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5dd5a7-8658-4121-8928-04efe7a0d969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fafa39-14d4-42ce-bdc8-3aafe459dd6e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64df8be-bed7-4920-9ee2-21a97f586171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff306ede-0f0e-4510-b03d-ed2f970eedf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59397a82-b539-4c43-b0f2-3b948da8c11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "566e4935-cb74-4dab-906d-817a738c9c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d543dfc5-5c11-4c06-a035-237964c7aae0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b84f8c-1196-447e-b8ad-bd2842852200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "951463fc-807d-4edc-8525-518c9269ff64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305e3d97-3f2b-4a83-bc6a-843ae0751fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65599a74-bb64-4351-a72f-36c13c4bfc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d538e96f-4b0f-4eda-89a8-f425a179b68f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ef36a7-520d-46b9-9b64-73c719142143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cc2098-32d9-4f7f-88e0-473c04b5d4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02d4811-0b7e-410a-a48a-81e9b26435a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a884f4-56e3-44f2-b763-8e84a161a165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f15d11-1b6f-4c71-9209-01e760fab5de",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46698a1d-e5ac-4573-93f5-668c606130a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957734fa-8fc0-4bdb-9e08-0c86de36c2dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3107a7f-f1ef-4acd-9410-d68d743958a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58ce7bf-f9a9-4f49-8411-f4d125b22755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f28ac1-cfb3-4e95-8fad-dbe05288a799",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239248ef-22ea-4163-bd6c-c705da6af806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abd8201-1326-4dea-8287-bb29c5b39c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542cb0cd-ae00-4af7-86db-058f19f84d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abb0b85-f3d1-49ca-b9ec-7027828e7b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf77d40-1088-45b8-b164-cbcd0d66a1f5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde9dcc8-f28a-4eed-84e7-e46d6b50c035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a02afe-e81c-4663-9e5d-9728d9448bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18be6d6f-6dc7-47ba-8a43-76a2f67e94e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d426287-3da1-4325-8fb4-1998d4b77f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e9eb01-a39c-45c0-bd68-1798424f3815",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bdc59e-edd2-4e68-b7d4-28d564b20582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1267b1bc-a88d-4ca6-8162-d6713f5efccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "619a328c-8079-4737-ae2b-c650becae611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9371eb-9d20-4cbb-8505-59582b75f089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbea8ba-0a44-4fab-9d98-cf206a98f0e7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b53ad1-7c47-4cb4-aae8-faf85218a10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a96554d-865a-4432-b33d-2d5a634f4f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41fee0f-5b3e-4930-a176-c5f79f8439fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd38fa7-17bc-48e6-ac8f-f0311512b747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d890c12-efc4-4a83-b07e-a57c66142fde",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a27546c-c499-4122-9476-d553cf79d746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc9bdcd-b481-44ed-b8fb-a14d60b8d579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1018dd3-d76a-418d-b4c6-ab734698f2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de907dbb-2d22-4490-bae4-52f7a0cf0386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bd42d9-a8ca-4fdf-9a94-2f5af2ebaf7a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be58b4fb-04bc-4a72-a521-6b1ca6af0f78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b79570-3218-4dc5-989c-f77e8e5bf7bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad24ddb-649c-4238-b905-09e9d4f704be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29115a0-3ded-4237-a6cb-599f23cbec29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622886a5-8710-4859-af7d-e817e8db1df1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c54e50-7a45-4455-bd94-0353e26c2adc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b1785a5-4281-46b5-ac33-aed5f5c0a872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd88743-989c-4a32-b64b-87f36e54be54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3d7854-1b7c-4a3f-9657-a21de92dd1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb4d1db-ea65-4145-aee4-11e186cd0be4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0550299d-8eb5-48dd-8740-a8c366c5bd28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64e31c93-1ab9-4662-9772-ecc0754318bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d28929-7052-4cb8-95f1-18eed521eb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e81a6d-f86a-4395-a67f-5b39e5ea4dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413af840-fd00-4f79-8e55-d44a0053cd32",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c011dbf9-377a-4a35-a918-07669fe86a0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "100fb2a8-ec07-42f7-9565-8a023fe74ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0effc861-3b68-4167-b206-0b7589ce8ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ad7a6c-af5f-4bd5-801c-278f8d99cf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bed047-efbd-4090-9530-8f7a69907219",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9b9aac-df5b-4a4b-9fe4-fde2e4a2b6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d5ddd9-da8d-4499-9ef1-ba97d335fcfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a85a24b-5691-4e38-aadf-2d95e65f86b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7e0c8c-6e59-4311-af84-ed880d73a38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ccd9c6-b06c-4a0b-a718-39939cc82138",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb77b432-da0a-44ae-bf2e-7874285afd84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4003eb-53bf-4be0-9a2b-aade24e6820d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ee9fb6-2fb4-4906-b638-5d0bed5b5d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08e28cf-625a-4f97-a6af-5501e5bab69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81dc013e-1d66-41cf-aaec-dc093d862dfa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23bc53d-3f08-4a65-9349-9e3219cce146",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c85da5ef-e505-4318-bd16-76eafd0da4f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12cd43a-711d-489c-9106-6630528f0a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854123b7-408b-4c72-ac56-3c6d6ae4ea41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a276db-55ad-43f7-bd50-406830177dc4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18051108-4c72-4751-bc93-450a35e063ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3fa4139-e6c7-442d-ad32-6e40be5b4675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d673532-060b-4bff-b19c-1eb12dca8410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c238bf9c-29e3-47d5-a1a4-d3012523c94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a96a35-7757-4421-8349-620015018f27",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651e9c25-ecce-4e63-a1ae-000dbd816021",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22940efa-7f1b-4b4d-87bf-b6204e860805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44793262-bfd2-4260-83d4-0819e7c0af71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e515b8a-6e6d-4391-a208-fefbcf750179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9681de4-df4e-4fd4-91a6-342f6b573b4d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff7c47a-0747-4ee0-862f-0e0454aa85ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31af9114-0a58-4103-87c6-59e5028a5372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3928b86e-cef7-4ec1-b5c6-4290dfe025b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6c63c4-9759-4b66-9fe6-9ec93f3136b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dbd003-864b-4a65-b397-0d2d0b0bb281",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34494d36-85cb-4f96-8c15-cd65eaf5cb71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "683a2cca-7cd3-40a3-8f85-50b846f1a326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788478a1-4116-428a-b21d-c1a7dbae6f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4fe214-41a0-46d8-a0e6-a255080a5beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954e9123-0fd1-4aab-aefc-bdb394964196",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f6888c-9a2a-40aa-b24a-6a9ff0700473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ddb349-5b0b-46ed-8edf-1706623f373e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "323d8b21-cdff-4df8-b8da-20a81ab000f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cdb749-d4cd-48de-8a35-42847ab26c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54ba61b-c7c9-4b79-b730-645d9e6a8710",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca6d457-5747-4ddf-b2e5-95c92b8731d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2e3a35-8298-4814-ad56-0b8eaa128af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75732a9a-e367-45b8-9f92-c2ba4c196430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fdf9d9-58fe-42cc-a978-b076169e6482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c14056f-8afd-4d4d-8cd2-e4bdab97eaec",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde2cb1a-4191-43e9-8bcd-f9541aa9783b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9543415e-8bfe-4ecd-81bd-259361874114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde5c34a-cdf7-4aea-ad3e-08ca5ad13de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a136282f-8775-41e5-8e22-65a2d803fb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864631bb-c73d-4d53-bf05-12c32d135b35",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbe4d22-f3f2-459a-bfb5-ada38bd5e833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ec8b10-d9ff-4306-a55b-1879638e56aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b509610d-26ba-47be-82d1-a83c2affc734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f17d28e-2df2-4703-a313-f2580f9f697b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db565f8d-c064-49e1-bee6-253f2dbc470b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9a22c2-d408-4c3d-a7c0-1aa12aa3369b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e9c165-7ae5-4d2c-a809-f604d2ad50cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39553ded-487d-4b2c-a0ed-810051472166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3bc104-8414-4e6a-ba72-63b8c623050a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4948f501-8366-4dba-86f0-b1264c2a4ba9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363ef381-ac61-4f78-a1ca-a43d9d14060f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efff6b1-7998-45c8-9d71-bb45c337f49a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d20da67-9a3d-45e0-ae80-29cdbc8ab7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76431fe-b970-4cba-9b06-656adf370346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71499e8-17f1-4ce8-9147-098d026c55b4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccb808a-9ff5-4423-af7d-497a81c6c1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334c5339-80f9-433e-9b19-ad766be07ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73512db1-7965-4fc7-b9f6-0f695ce3976f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24574c8-9947-4329-8a93-cafce822ff0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2d5f5a-3b6e-4fa1-bdd1-a4f102dc0c03",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db49564a-8b2b-4e6f-b9d0-f8e62e58b41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844d86d4-647a-49d8-b9b6-f4011235a20b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adfbf07-845d-405f-9197-264d0948d949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930a08d3-5f7b-46bb-9431-ef9325c21505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2406afb-4439-48b9-a9f8-d1b6f03650c8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2521028-f088-46c4-bb48-50b09136e578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf18ff0-7527-4f4e-9e0c-467edbc22447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01dfb55-b3b3-49b4-99da-7de26ef0ef4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9927829-5010-48e8-b53b-2a627dc4be44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700dd8ee-9f81-437e-95f6-3b95d5ed9a81",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f3659e-dcda-4507-99c7-d855cd3eeaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9ff72a-0599-42a8-94f7-4b1d2a2a0abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f693cd8-7bd4-4cd2-87e0-17b1dc6d12e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164cf903-f7eb-4358-baca-2c533095627d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1311f6fe-c1ae-4318-accd-e4dbb6a76358",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a947ef-5784-4fc0-ac56-e7104f392de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc188f9-60af-45f6-9414-4f14f1d8db3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8dae0d5-1512-4e52-89d7-dd1b3bc227f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8cc493-8002-4a88-8e0b-9f58c25b4ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee034e9c-3897-478b-b180-1c09be04ffdd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b2e7b0-2b29-48b4-b80c-8ede2973ff9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12691515-5354-49d2-b02e-94fe02b137e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0275beda-705d-4df1-8b6c-c18221cf6a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64bedddc-4f0d-4f84-bebd-6ca2950ea7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33d6c51-ab6d-44a4-910e-189eaa2178e8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbba3170-7a5e-4948-ae4c-a58052962604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16cb3873-9336-4f2b-b0a2-3b01d8d23b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44bd0e7-d1d5-437c-9058-3f653f1e0f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9a51bf-3873-4d4a-9d51-4417dc151c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960c28e7-7485-4559-b072-1be5fbb54f7b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e08d96-9dfe-4fbd-b317-e6d2ff44cb37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa69195-547c-4513-a79e-7dcf5b0f38a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5b5285-f61a-43d2-9d33-19782fa95b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec4acaa-927c-46e9-9c62-a1735ba3fa98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df02573f-508e-4518-bb0f-94f7c88780c0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5331feaf-552e-4774-af90-9e490a15bc74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8540466b-2dc5-4bc9-8aaa-88f765824166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19fa3ec-1afd-4568-8c89-323e86df2b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd57915-b62e-4153-b5d7-ae800bfd387e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10e57ad-c02d-43e9-87ba-004561517236",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29043e5f-aff7-4581-97e8-d18658f51448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be570cf-a3eb-433b-9e41-15eec64fb15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63b2915-b18c-4dda-aeae-f33e0669ab35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c57c9c-5631-45db-b187-59375c4f66b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7b1cae-3eb0-4aa8-98ce-167ce651bef0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75060f2-273f-4e73-8326-19551fe897bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389b91e5-88e3-439e-b96c-9b0c06d5eec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b41ffb7-e69d-43ba-a962-fa69ca767a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b2af3c-3b6a-4648-bb98-a3e9f49157f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47dc9613-3caa-4e7d-81de-59ded4b05cad",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57358f8c-d18a-48eb-ba1b-05ca75d8ceaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5f40dd-27b0-464b-bf74-06ad42318225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1c80d8-713e-4f84-8953-d97b37ed0e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba0f5bb-3cef-4015-af87-77813556c377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5c203a-83c9-435d-a3a4-098077be39bb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c01c4a9-374a-44a2-affa-4bad455f8b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b23405e-3eff-4555-b8cb-9bd712f855f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6039cbfb-5794-4c96-8a39-86d581087aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c990ca-1d69-423f-ba83-2d61a6715414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e7b5d1-d966-48b8-8702-816452f9bde0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09060901-5f3b-4161-989a-c27c41912967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ecc3c9-c94c-47dd-88f9-7c415ce066f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7a2973-c08a-40f1-941f-ba77f1e4e59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82fb662e-b745-4b40-a9ba-52d81085e60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c36c35-a247-4d4b-aae4-0307b16d850c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8028c4-f682-460f-b257-b232bc52d879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48bd7e4a-c14f-4fc1-bed6-a31faa16065e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67b033a-31aa-431f-9ad6-29cdba6aa99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65975745-2fa8-4888-9961-75c8e853ac4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e8f045-f2ff-45c5-9730-2e264e79d662",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b904f8b2-2e7d-4e21-a848-8e74573cdaea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4242c095-2cb8-462e-ac27-6fafd24a8bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfe6d19-68ba-4fee-9d2f-c529c68c7a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda1b4db-391e-46a5-9ba2-4ae37f20958f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e00fc81-76a7-4c3f-933a-28c5b19cc3d0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b3bf9b-6145-4779-8527-67271840e20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a4088d-30b3-4bcc-b9f7-fc6a47071358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb472354-dece-48d5-a754-32671b7a0615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202dce98-e405-491c-9829-140ab5765af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f16b5af-faf6-4ec9-b86f-99453cdee933",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551ab83d-4e99-4d52-889f-9cf91fac076d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57de084-8103-4d5b-be6e-9e6001245f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb40b1d-7021-483b-93bb-d07f97ed6f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd67c8b-18b9-409e-b1e1-7b53964156ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b12534-b442-49e0-aee3-0092793c22a1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6553b3c0-547f-4be4-b8ba-c9d087f389d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da180c96-8209-4c0b-b60a-039373a441aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9b522b-02df-490f-86f3-157d2c12d023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1ea976-78b0-4138-9ca4-3b78b9663c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e65f2e-bc0f-45b4-a3bb-6ac4164392a4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7bc8ab-15b6-4162-b001-f0da74ab34ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28b7a15-37bc-4325-b463-cdadd9d9f4b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af63a44-f966-4604-80f1-28907bd3169f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffb0606-2063-403c-b8e1-e6d9b91b6b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b9b984-942f-4501-948e-d3790cbaa8a1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e5d115-5485-4ec6-8515-b900c73a3ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea773974-4be2-4135-88cf-f8fd43c75d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb063b9-847a-48f7-94b4-9c668bd79fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f3dfc6-c5f0-4275-976b-d544f41641a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635fcb33-9c80-43bb-93a0-473476aaa410",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8250c5dd-596e-4bd9-aff2-13218ea91331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73fda70-6c2c-4a07-8a2f-4cc2008b20ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb8c2de-1ccd-46d6-93c9-6d33d8e11549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6904dceb-3a79-44fa-ad52-376dcc022e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c482abb4-9b62-4346-8ce8-30bb2e6c90db",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3771ab09-74aa-4db0-9e55-2d3cac52295c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feed77c3-ef11-4aa1-a164-6eb897472336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24910317-a76c-479b-900c-77e9373510aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8444fae-73b1-4b75-81ed-7c524f8f2f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b49bf7-400b-4a76-a13d-bdaf39696752",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8070c0-1d3d-4b7f-90a2-7b3999fe1f8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d7e168-5726-44c4-97ec-b5501f8f10b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cf09b7-0f09-4575-ac09-81645ef67493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6985b520-06fe-4587-a3f0-6f541157ab21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c849b8-ad67-4711-9e8b-182ec52af97e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a02845f-652a-489f-a455-57b9644beb67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cf17b25-6f5f-4eb1-8b99-b426ea488194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c981580d-1b69-46e4-b8e7-cb8265564535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af40b246-7596-4f29-9507-e4bad15e1307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1712f94-4811-4cba-bfe7-3613c19f5bb6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6783347e-143b-4883-bdac-2d87bbac2c22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c86af06-8b03-463b-928b-d05f5564e684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce743749-6393-4009-8b41-0b3cb58706d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7c09bd-d9e2-44d9-aae0-8469a5fcb05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d28909-3eab-4de8-bfd0-129a2aecf8ae",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41421c86-e8cf-487d-a944-94f607d1d29c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1faa0ec-0614-486a-ad66-449bb8a3e96b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e843e8c-3347-4217-a817-ad616f599432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dd780a-1385-4e19-add3-57199905d432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed4e311-a1e9-455b-b528-caa178248e0d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6abf3f-6ec1-486a-b408-8ff5360af6e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f61a5273-7b7f-447c-8b24-a52b9f1abb17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da2002e-8d71-4746-8c2e-19e6067fe2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5501096-9ec0-461c-824d-575ab4b4732b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5a3a16-34cb-4d2c-bede-0bf158d02b89",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f69b48-f860-427c-bf1b-b739bed47793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd9d905e-322c-4955-ba7f-d6a59fc05f49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b28fba0-4b40-41d3-8ddf-fbe11eac2f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05d30b3-f7af-482a-af88-9cbb1dae21c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b35318a-513f-47a7-84e9-c2c60a38af6e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecd0417-896b-4fc7-968f-705caebbdb5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd23252-59f8-4e23-9d7a-263e933b40fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c5727d-6e0c-4615-ba89-6ee4f510d1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ab8c5b-a12f-4f89-a5ae-124dc1a3bc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e7d6bd-8906-4b38-bd4e-2af9a295fa49",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57892cd0-4f1e-4ba8-a959-33680164abc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6d228d8-c056-4153-94cb-477dbbc801ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8142e43f-ffc8-40bb-bd69-bc7aa93562d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6250e650-b359-4bce-8cb9-b1bb70a3e58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59031535-ed6e-45c8-8275-c735a98e4233",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc06f9c-0489-4fde-b835-3d0dc0a2e575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4186c15-43e2-4c13-a1a9-a6a61021e36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db413c45-71ea-47bb-ac94-5a40c48cd18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a75d8d-fe2a-4f5c-95fc-6afb5e6e4808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f32f610-23e6-4a2e-9552-7daf93a60f51",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c591396d-7098-4828-b550-b30ae8fb19a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dac4968-d965-430d-befc-e198de89b332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5dc5d2d-4eb2-41c1-9106-d569592c350f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c631d794-2214-4948-baa9-a28422ed4255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c99305-0d66-48cf-817f-0773b9803942",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a7b8cd-e3ef-4074-b955-8abe04982ebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e08f7acd-a867-44ac-b99c-4c1e333b042d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a78ae9-3347-4a81-868d-d6e4d426396e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a481a0e6-5c28-4126-b1ba-eaa03ac26cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b059fe02-2257-4d91-9310-77c259d8decf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aca6621-2a8c-488a-9b25-154f8d86e407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74fa7c30-503a-44c5-a560-f78b1d7cc0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f53667-94a2-4849-af19-513c54311a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a115f9ce-886a-40cd-bd3b-3d7cc1d2bf4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651ff19c-6b82-433c-af3c-3a56309c88ae",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ccb029-9f91-4c73-8061-54ad3f763dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c014506-7ae4-4494-8178-b3eb67daefed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd69e67-671c-4d81-bcd1-1ac61b2ec847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3e80c0-343a-459f-a98f-01af64f3c1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c237d115-8835-452d-980d-adb6d0d7df71",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c430aa43-ea70-4c7c-871e-764db83b80ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c402b877-05aa-4f8a-8b92-1afc2fd644ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0ce040-4402-4ef0-b41c-fda6afd68e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64256028-ff02-4dc8-ad77-ed7652acbd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d555a401-3406-4581-8f45-1e7f75bddac0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efae91ed-38a0-4904-93e2-bab626b72eb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8afba5f4-aa2f-4e76-9f1b-389426d2e298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41367aa-76be-4232-8c09-b6250fd2b6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6aaf33-4db5-445b-80fb-ee9fe49700d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb8d185-50f9-4aa9-b3d0-9e94e60a60d3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b4f9ec-85eb-4f62-8f68-878553b23626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32047ad1-82c0-4423-bb2d-ff91561cc945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94f2fa8-4359-4c95-96d5-63943d9930aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f87137-363a-4ba1-a140-ab7f30720ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c957cb0-382c-417b-b228-84b353e8a93a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cc4902-a1be-4d11-b69b-8c54bca81249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e641a0b-a1d8-45cb-be61-1c1521aeef5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3963c8-7241-46ee-9be3-fda652d08bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5894a27-c5c7-49a5-8886-41ef2503f9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38a2382-a7ad-4f52-9761-88a1307de261",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca0f241-cc41-4b69-b9c6-c2ea450e54ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46120105-0c6c-4ceb-baff-6135198f4aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0bea02-7a0f-44b9-83d9-2d9de5902007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c51411-6187-48f3-839f-82d74c856bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a6a952-16fa-4c78-bcbe-727288e0c2ef",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5129632a-51bd-451e-b09e-5c6fb8cfb7e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "851f0e57-bc26-4e5b-a3e3-abbbc8653379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d24802-ba81-4909-bfd0-d2bbeebea07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aeef083-156b-44a8-9ce4-28fab731e801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b3374b-376b-4a2f-9cd4-77df143210d6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faea2527-9d17-43dc-9383-2741eaf26414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bff6ecbd-5a17-4b02-a788-35f831ff2376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ec2b29-3016-43ec-9fcf-ffc595b94eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79979c23-02ba-43f4-90a5-5a786b6ba272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96b7258-fe2a-4b0d-9865-7ee62396965a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e398c8-84df-42b0-b818-80cc40bd04d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "896c5b51-9700-44b9-a34f-492b328acd8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc83c70-b2c9-49ce-b8f9-00d2ec6ad122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b18e25-c133-4af0-b9f8-a1a0421fdda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba4ae68-8fa3-4681-aa31-9017fdc42116",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaac210-ea8f-4156-8063-6fa33047811e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ee7b441-3c0f-4853-aafa-a22f08d4fcf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8d2e91-1537-4871-b250-39edb03477de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bae869e-deb5-4f2c-ad26-57e26c8bf72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fe42e5-c12a-4c04-bd4c-03deb0c82911",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a73edc3-3497-49cf-921b-1e773de40e9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5a227c1-d657-4f95-bb89-914a9a3ab7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60282f3-5973-4d44-a4ac-44634e7e6fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba4f5ae-2d6c-43f7-b7cb-1e0c6baca254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e6d230-63e5-418a-8f85-d72e8487d921",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f81861a-e5f3-4fa9-b5e3-2af90e786f71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45293877-2714-4477-bbef-b95baac64227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c686d908-26bb-412a-8415-f3c05096c81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c72c54-6e4a-454c-aa1d-903b89238a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96e0bfb-079f-4790-a921-56a869c7594a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56df38df-f649-45b3-8ec6-53bc08382098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53aa3aad-bf0a-49ab-aa99-438b95642cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d123a71-3ba1-4ef9-9e23-de31e5da49be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc1e743-a161-45f9-b494-805166f1a9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2268f2b2-58f9-4a75-a87c-572cf52952f3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa66a329-7871-406e-ae43-d0d9c8f2c635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c42b52f-4e1c-48df-bb81-4b8b2c3e0d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd90d2bf-a386-40be-8b95-70271b217cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be54350-0d4f-4d76-b01c-30aa28a46f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed868338-76d5-4a0b-b018-c3e384817b68",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4424b2f9-773b-435d-a371-aa63d674fd21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed635b03-8f32-44e1-8fa5-726c2fe0a808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7360016-b58a-4bbc-8119-410b504b8050",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485bb0e7-540e-4b4e-b546-17dcaef98249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed0c720-ae4f-4d81-b92b-1c30c6e83378",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e963c2c9-8e4b-4456-b4b3-0ade78b99a36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11457f69-899a-46c3-a28e-244f941a1828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1964b76e-93b0-4039-bd5a-1871d4f799be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981d3127-095e-433a-b128-52c18d3bdedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e3235b-c338-4f0d-b509-310b0fa6825a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8216e4-9060-4add-9689-c2c4fad50985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62bdf620-600f-4beb-aea7-36343cc8abd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d878a5-a26b-44a4-85e4-a9172cc17969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e3e7bd-f34a-4147-aab0-c69cb282e4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d500b06d-9a35-44aa-98de-e83909834708",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978bb088-5f0b-45f4-961f-233e27422df4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a4c2791-23e7-476a-b77a-c0303b2c5dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062a9993-1b3d-4060-89f1-5bbb53a5af6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401ab142-e25d-4aa6-bc8a-fdf68dffa0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99498102-5180-4d7d-870f-9d65fd99ebec",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4246aa07-0399-4509-a852-3903831ac74f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f1796f-6ea9-477b-a489-05f914ca5254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15d14c4-3449-4a70-bc06-4c6181ee3761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f06f45e-9177-45ba-bb7d-b09c6111580c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4a148e-1972-4d54-9f0e-d5abd0ac34a3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fd33ac-1f6e-4ca1-a117-e4685849c359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9404a7f6-e59c-434c-bd5b-2b3487737412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9e3557-1f8d-4a89-94d9-26da0393a1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0317de-b99c-4b3a-b0f0-13e9e85e7978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5ffecd-e658-4061-884e-8063c73cba87",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d7988a-d180-4017-b8ba-f852de1b3f14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83ee2212-ff3b-4922-bb41-1aa8bfb5d63d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2ac29e-e8ec-48d8-8465-d4d8f9d2e5dc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f50ba53-5de3-47a4-96ee-af62e7c8e4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a1b3e4-de29-49fd-88e4-b0fbc165e0bf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0336cb65-6854-4462-8fe2-c7e447dd5128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "750d1836-0787-4941-8678-0cba3b7604a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2a8c04-4f80-4ae1-a206-1f08b20f9083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2bd9cd3-6d66-46ad-928c-33880c0c2111"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "209b2927-9408-4482-a4c7-8902fbebc9c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bdd88bd-342e-4e62-a4e3-a6378056e2b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "557ad38c-0cd1-4eef-801e-9d070301175e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88095d34-1eca-4e74-a2f8-6d1a3ef495f6"
                    }
                  }
                ]
              },
              {
                "id": "e80b8e2d-568d-415a-af34-9b0e7ec3382c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c20ab8f-2304-4bf2-98e8-8081f235ff59",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48870d9-21fb-480e-938f-d66c7b00072a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c87a6d7d-ee2c-4cfc-9c26-a627066ee425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1919da46-2b59-4dc1-acc0-ebe8663f34ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6adc8273-e2e8-4939-b693-05ee84a3af15"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5e7950a-962c-4256-813e-a1bd2ba010a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ce57942-75b8-4d70-98fa-5e731d3f5450"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a961c5c7-1552-4c71-a021-b0008a069c5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77777ecb-5425-463c-9b77-6d78e34963bf"
                    }
                  }
                ]
              },
              {
                "id": "b6a49de1-810a-4952-94cf-930fb45b2025",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1d07fc24-c120-4c7c-9753-d10ed46583f5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2db966-6ead-495f-a540-b4187563b02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5802af85-ff4c-488d-8e08-aaa733942039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc37129-6c82-4909-a768-ae8c5b585af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebe9706-0c44-467b-a6c0-4eb07c113137"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d34dd1d4-6f79-42f0-8b90-ea24bb146ef7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e8cf38e-e311-4833-8686-db51d8a7d6f4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3a7ccc9-7ecb-4f80-97e2-e33378307c1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "559b3fb9-a60d-413f-9d2d-1bb934d71ad6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e412d01b-2996-4054-b7bf-8133c362e469",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae266c15-0bc7-4098-95ce-3f33c375426c"
                    }
                  }
                ]
              },
              {
                "id": "04aebfbf-1df7-4660-9e94-3feae9ab18ef",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b89960ee-1453-4828-9a61-917b57e96edc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f875868e-adf3-41ab-87c0-4a563dd1d6ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "580ab928-62bd-413c-b18f-1dd4e88cd58f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1313994c-dbfd-4006-bd49-70e123d40d17"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19ed482b-0448-4424-aa43-a6f2964d990c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f5a5eb72-c366-47ed-a497-2556e26ed9fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab59059a-1091-4535-bc63-a35532413252",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77ba1ad4-c839-48ac-a414-97d2a869b911"
            }
          }
        ]
      },
      {
        "id": "2367d8fd-41f2-47b8-9a50-819624099ffe",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0bf8143d-bf8f-404e-b06d-1c5dd52f3566",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e549e4d-1ef7-4784-9904-ffe0eea8711f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39a120ab-8991-4cbd-b981-698a20d58459",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046d67f2-9587-4669-a9eb-acf863ca094d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7d50a4e9-24ce-477c-83da-23ee4ddba451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3c87c2-8bf4-4124-8cc5-d55a6a7ff1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4222307e-a7e3-4922-bdbe-5ad946df6169"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dec4f699-009a-499c-b467-1261ecd09e40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6941e041-a30d-4bd6-9d42-113b6a4ebcc0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f3b5240-3405-4916-a7bd-83fcfc4c4af8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79d9fff3-5343-4fbe-a559-41709bb682bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f73e2cd-533e-4b3e-bd83-d3eaae1843bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e1146490-bcfb-4d5a-a131-b0a1960f9c5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a930c69b-4d8a-4c46-b18b-b3bee2260fa7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d8f5e03-bea2-4c66-9514-3bee2d5a4b2d"
            }
          }
        ]
      },
      {
        "id": "f4c07329-ea02-46ab-8b30-b5884f061e56",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "27026e49-e882-470d-8595-69d32135d7fd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "611514de-ccf3-4183-a8e6-b9dabda75140",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55206032-b976-4006-a9f5-f30d677a3ec5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05308d0e-60b0-49b6-b8e8-c100c6b9c652",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5f5cf53-c475-43bb-9d93-2641fbbf2e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6383842-1e1e-43ea-84be-51121f3db9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "164d3fae-a727-4c97-8a4e-1e3dde9b39cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "547e54e4-3852-4d40-a4ff-0075237b8839",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6777be8-c512-4fd2-a533-d75f6afee4d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8892e222-3eab-4020-80cc-dce31431fc43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "419360d7-9cd5-465a-ad87-2be56f00ed47"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b70578b1-f184-4aa9-a8a4-d558b49d4fe9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "77bb9084-689a-41ab-91c4-e530f4985364"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbc59ce8-b314-47af-bf1e-17a4a37aa96c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "157c9c6e-2cbd-4c0d-b6b5-41603e91d145"
            }
          }
        ]
      },
      {
        "id": "c7e6a5c7-e445-4d28-9d60-caa5dfe3e508",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6f8bd0ad-16bf-47b5-b225-2d76aa4511c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee38953c-177b-4b3d-a7a8-93c8cb58fbf6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aec1df19-f3c8-4ae0-a381-2c02888a1119",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0544d5dd-21c2-4286-97be-b3933545f710",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be79e616-8322-4824-b201-808c0b07244f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d233eb4-e4e7-402c-9a7b-412d3f3a031e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7bf57f9-b058-4c66-9b56-c912a48e4925"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1da843a-6e58-4258-a55c-f6eebee3b344",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "432ffe04-8dac-4b8e-92c0-e94fa10c61ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e035a2c-3cf5-4ca0-9aca-f0aa9c1038e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9bff60a-806d-4fe0-a9d9-217f09aa0145"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75d0a586-110c-4f3b-855c-1110b81379d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "072f6bad-dd21-4f6c-90a1-be71327ae36d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bff6e314-c74a-4fba-8a03-104e8c5f4e20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "faaf9d9c-aa81-44fc-b50a-648e2b93dfc7"
            }
          }
        ]
      },
      {
        "id": "918c1be5-08ee-485e-bc28-967c78d736aa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18f58e26-acd9-4b2b-aa3f-7432518af64d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40d8c414-5bb0-43c8-9e5e-11324847467f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8a7ed45b-7141-4b4c-ac11-e1fc0873420b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "657fdc04-3707-4532-b856-794d7811673a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea721982-34df-44c9-9500-3804e3ab8a53",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.76984126984127,
      "responseMin": 3,
      "responseMax": 274,
      "responseSd": 25.70487653641972,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719189598214,
      "completed": 1719189608290
    },
    "executions": [
      {
        "id": "4799a546-cdd7-4d97-b336-85b80d810069",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dc986f70-0d8b-4d30-9b73-f058090f7710",
          "httpRequestId": "91ba9aa3-141a-476c-8412-4f0d9d56c33a"
        },
        "item": {
          "id": "4799a546-cdd7-4d97-b336-85b80d810069",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1a9e85fd-8fb4-4085-938c-7c499b4a732d",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "765e16f2-b80b-47e9-8c3a-954c353f892b",
        "cursor": {
          "ref": "bbff1496-cdb2-4b28-8d50-6413d1261ac3",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8432ce0d-d7b5-4eea-9324-c095739b4b67"
        },
        "item": {
          "id": "765e16f2-b80b-47e9-8c3a-954c353f892b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "adcfe574-0c0c-48f9-b6dd-6db2f94b37f1",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "bd88dbc1-7648-4dbb-afd8-da50617ff267",
        "cursor": {
          "ref": "6d5c649b-68f3-4d62-a866-c3b852cadbc7",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ccdd13c5-0441-4e4e-bda9-0077edee9112"
        },
        "item": {
          "id": "bd88dbc1-7648-4dbb-afd8-da50617ff267",
          "name": "did_json"
        },
        "response": {
          "id": "d99b9b6a-ac67-4460-9769-48fc9d33e84b",
          "status": "OK",
          "code": 200,
          "responseTime": 206,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536a1d9c-9d8e-4a75-8ec4-4278ead3337a",
        "cursor": {
          "ref": "87e76daf-d025-4a01-a288-c3e478cfbb34",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "82df0107-b87d-4ad2-a18c-e6d974ebf99f"
        },
        "item": {
          "id": "536a1d9c-9d8e-4a75-8ec4-4278ead3337a",
          "name": "did:invalid"
        },
        "response": {
          "id": "4bc0d264-1e0b-4616-8152-90c47a58120d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536a1d9c-9d8e-4a75-8ec4-4278ead3337a",
        "cursor": {
          "ref": "87e76daf-d025-4a01-a288-c3e478cfbb34",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "82df0107-b87d-4ad2-a18c-e6d974ebf99f"
        },
        "item": {
          "id": "536a1d9c-9d8e-4a75-8ec4-4278ead3337a",
          "name": "did:invalid"
        },
        "response": {
          "id": "4bc0d264-1e0b-4616-8152-90c47a58120d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8589e91d-405f-4b86-8f5b-fcf150565434",
        "cursor": {
          "ref": "4139d82c-7e2b-41f8-ba9c-b0cb83dc444c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b5bc1a49-26e0-4937-925c-5d6786ea5eb5"
        },
        "item": {
          "id": "8589e91d-405f-4b86-8f5b-fcf150565434",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c8aaebc6-58a3-4070-bb2a-c00a4e294e41",
          "status": "Not Found",
          "code": 404,
          "responseTime": 77,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251c9459-8735-48b8-9c04-27d6c2687e14",
        "cursor": {
          "ref": "ad4fb839-e298-4265-859f-a2d9e2840408",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6067d152-49d9-47bf-b7fa-a398459eca31"
        },
        "item": {
          "id": "251c9459-8735-48b8-9c04-27d6c2687e14",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e639bb04-d5fc-4630-b26e-dbe2dcddb90f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e974f016-f652-4b79-a069-fe061a9e6733",
        "cursor": {
          "ref": "5a6ac062-6a9b-4463-8eea-8be3201ed380",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0ac8eaa2-abde-429c-8e30-853ff9759fdc"
        },
        "item": {
          "id": "e974f016-f652-4b79-a069-fe061a9e6733",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dd7cc2e4-8e4e-4cf7-8801-911335de08ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a157113-533c-4a97-a77c-9c4f8d383448",
        "cursor": {
          "ref": "d069e1bb-3427-4749-a16b-358eadbece35",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5418a55c-f768-4a75-9f3f-0083bd8f069e"
        },
        "item": {
          "id": "7a157113-533c-4a97-a77c-9c4f8d383448",
          "name": "identifiers"
        },
        "response": {
          "id": "4f10a834-6900-47de-b0b0-3632a4136e7e",
          "status": "OK",
          "code": 200,
          "responseTime": 219,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd906a88-e493-4888-b5c7-6f9e76255c5e",
        "cursor": {
          "ref": "897023bd-9e45-49ec-a3cd-2c4584f62b7f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cf6e08a2-7160-4a82-9f8a-c04902ff6701"
        },
        "item": {
          "id": "dd906a88-e493-4888-b5c7-6f9e76255c5e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ac0a0fda-25ee-45da-ab86-a0f5d518edf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc37b370-8d51-4b43-b6e2-fa93f908adbb",
        "cursor": {
          "ref": "87e5bd3c-4e84-40e5-82ed-e7a82c612707",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c9bd4930-8e9a-44d2-829d-78f3793bfb25"
        },
        "item": {
          "id": "bc37b370-8d51-4b43-b6e2-fa93f908adbb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2fa0b90b-cdf2-4998-90df-e772d3a77f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce2b244-4bb6-498c-ae04-37f633d05ca6",
        "cursor": {
          "ref": "0ab37eb4-0609-4ed7-8ae1-43c0c262e48e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9a91091a-a9b6-4940-8fbf-4296eee3703c"
        },
        "item": {
          "id": "9ce2b244-4bb6-498c-ae04-37f633d05ca6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "24aaecfb-a972-4641-a80f-00524ba4e4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f686fe7-5ccf-4d1d-9905-062d7ebf8602",
        "cursor": {
          "ref": "afcdf8df-3888-4a74-8296-7f3028e2b32b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f413bfc9-e2c6-411d-a510-13c1f2717f7f"
        },
        "item": {
          "id": "0f686fe7-5ccf-4d1d-9905-062d7ebf8602",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6e6e912e-fb08-4224-ab8e-02f4ac9cae69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c4d35c-c53f-47bb-8322-16c56cbca4b4",
        "cursor": {
          "ref": "98cf9c30-00be-44f3-b4ed-9e5109913634",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e2c03e9d-cd31-4c55-8a6e-9e4fbdb49e55"
        },
        "item": {
          "id": "c6c4d35c-c53f-47bb-8322-16c56cbca4b4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "88cbb62f-10ca-4fec-a96b-e48aaf8f40c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fb5e53-ad33-4ac0-9cea-9a30aa116892",
        "cursor": {
          "ref": "19d28d29-0e87-434b-a87e-014109097b02",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d482cb19-f565-408b-8f0e-ac786e6f1c2e"
        },
        "item": {
          "id": "09fb5e53-ad33-4ac0-9cea-9a30aa116892",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c17ec2ce-4585-4ba6-8b54-8d3d09617bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4b73e6-971a-4623-93ad-994994df51a8",
        "cursor": {
          "ref": "4425067b-76e3-4598-abe1-175cbd4f8caf",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c9d230b3-c20c-4cd9-8cdf-bca4206371a3"
        },
        "item": {
          "id": "1e4b73e6-971a-4623-93ad-994994df51a8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "89a6d998-d40b-4bf0-8ffb-5a2a54deaa68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba71419-6f49-4b37-8231-7c37c8d18972",
        "cursor": {
          "ref": "d30a92ec-60c2-4910-8fed-0b0f339d4b99",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cf4f41c3-1762-41be-aea2-5d7742739d5a"
        },
        "item": {
          "id": "6ba71419-6f49-4b37-8231-7c37c8d18972",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d256394c-b31b-48a3-bcc9-6869431321f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfbda3b-665c-434e-8cc1-817332489f2e",
        "cursor": {
          "ref": "37b579eb-6bca-4cee-8b68-52bb6936e73a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "11d5886c-d888-43bb-8321-7d77b9fc96d1"
        },
        "item": {
          "id": "7cfbda3b-665c-434e-8cc1-817332489f2e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "855bdbc8-84e8-49f0-b902-826bd8ac6561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4ce19e-47b1-45f7-8607-db171c51f14a",
        "cursor": {
          "ref": "b29b3649-6148-4f2a-928e-ccc4a3e07b82",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "50604687-2554-4d7d-8653-98069d3973b0"
        },
        "item": {
          "id": "6c4ce19e-47b1-45f7-8607-db171c51f14a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d4b7d303-4587-4d54-ae66-65cccedbcd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62455a8c-8ca7-499f-a51a-74e1b392158c",
        "cursor": {
          "ref": "0edbe261-9748-4c44-b8f6-4fd6b52c1157",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b7ffdd8f-35d4-4ad3-9eff-24696e2bca1f"
        },
        "item": {
          "id": "62455a8c-8ca7-499f-a51a-74e1b392158c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e5e1cf0d-154b-497f-9915-8451b1d7c0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40f8e92-af10-4285-856c-e0fc5e1f7e98",
        "cursor": {
          "ref": "23fa4450-72a6-497d-a486-2cc1ccda4dd9",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cc9a5775-119b-446e-bdab-92111160f006"
        },
        "item": {
          "id": "d40f8e92-af10-4285-856c-e0fc5e1f7e98",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1961e00b-cf85-43de-9231-2a69d0426949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498d5397-6965-4edd-b393-0562639573a8",
        "cursor": {
          "ref": "fc9c74ab-3bb7-42f3-b437-08042635d366",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3d84714f-f24f-4d43-a25b-f8d7f41e34ea"
        },
        "item": {
          "id": "498d5397-6965-4edd-b393-0562639573a8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6a2b315a-822f-42a6-a56d-e978b03073d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4a2a61-7c43-439c-82c5-889e4775e7a2",
        "cursor": {
          "ref": "8ef515f8-aaf3-4f53-81b6-38031f48746c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f045a3b4-b782-4da3-9b50-d9decd633d92"
        },
        "item": {
          "id": "3a4a2a61-7c43-439c-82c5-889e4775e7a2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "eff7543b-9f76-489d-8464-74b04be9ebd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343ed595-6014-49fa-a362-ca4c847daca8",
        "cursor": {
          "ref": "8961bef3-84aa-4741-acc5-4a45b86547d3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6ca6de62-fd98-4173-8cf3-4e4d203e9b8b"
        },
        "item": {
          "id": "343ed595-6014-49fa-a362-ca4c847daca8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5e9e645e-70fc-4131-a1d9-4f378679e24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a8350e-9108-4c05-8080-e179ffffdb46",
        "cursor": {
          "ref": "33aebf2e-e95f-4ad8-904b-4047cb726aca",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cb252b06-8a4a-4015-9388-7124a3332e63"
        },
        "item": {
          "id": "85a8350e-9108-4c05-8080-e179ffffdb46",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9093fdab-61a0-451a-922d-d179cd44ad08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ded3a4-3508-4058-94d2-55bb8090460b",
        "cursor": {
          "ref": "169ee794-90c8-44db-b893-5de5b01ab424",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "857a3a62-5f1d-4cee-a467-b276cb9384ae"
        },
        "item": {
          "id": "f0ded3a4-3508-4058-94d2-55bb8090460b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "16eb2264-9b09-40f0-88ff-12f679bb00eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe87f7d-bb44-4041-a46c-c19bf4dd378c",
        "cursor": {
          "ref": "d314bf46-84e3-486a-8fda-864cf076ec1c",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "42ee60e6-4f44-4d37-bbb0-4a46a17ee840"
        },
        "item": {
          "id": "afe87f7d-bb44-4041-a46c-c19bf4dd378c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d11e2c7f-7e0a-40a8-b491-b6c3232ab760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e2ad34-1647-4fa3-b9d7-64bb8de5a84f",
        "cursor": {
          "ref": "7afbf5da-89b4-494d-95b9-ab6a6ffc69b0",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "76a436fb-2335-49ed-b570-5cdf8809913c"
        },
        "item": {
          "id": "f1e2ad34-1647-4fa3-b9d7-64bb8de5a84f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "59937d47-ea1b-4030-a82b-81d9e09832a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ab3b5e-0b7f-4e1c-8a56-4fb09573c2ae",
        "cursor": {
          "ref": "6b35b3e1-c1ba-4f79-a9bf-4d4daba1f936",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2ea513e5-6a96-4dd7-bd86-f5f45f27fd83"
        },
        "item": {
          "id": "a0ab3b5e-0b7f-4e1c-8a56-4fb09573c2ae",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7d9e574b-0a00-4b49-ade5-f127bd90468f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8c2562-6896-433d-86ee-b5c8a7a2009b",
        "cursor": {
          "ref": "69eb2a3e-c486-4451-b372-0a92e7d368d5",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "564c1a47-8dbe-4e34-87c2-db581109a782"
        },
        "item": {
          "id": "ca8c2562-6896-433d-86ee-b5c8a7a2009b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "71d77215-3dd6-4f36-9b5b-a820e674cb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a734edc9-9dec-43b7-b3ec-9324051771b1",
        "cursor": {
          "ref": "4d8de5c6-a67e-4b14-ba45-6127004ecaef",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d537d508-740b-4fb3-b906-58203b95f33b"
        },
        "item": {
          "id": "a734edc9-9dec-43b7-b3ec-9324051771b1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "34eb5d50-61c4-4b3f-8ec8-db6514d5334f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30efd91-f63e-4234-85e5-a5bf500b32a8",
        "cursor": {
          "ref": "1a6b8472-cc5d-4370-b45d-acc3b94e3440",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "93750eac-82d1-41d6-a6ed-5394ee6a6d2b"
        },
        "item": {
          "id": "e30efd91-f63e-4234-85e5-a5bf500b32a8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f630ba25-de92-4621-a4da-9dbe4df3cf05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ac8584-d6de-4122-8ad9-63eeddad4454",
        "cursor": {
          "ref": "f36e63d0-197e-45ab-ba85-0f62ae827490",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "81d3e40a-3f1b-454d-af9f-7cd79c7a5719"
        },
        "item": {
          "id": "26ac8584-d6de-4122-8ad9-63eeddad4454",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "620ab2fa-6354-4fff-8343-d24531a91c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc86a62-198f-4147-9af7-c72ce2ce9348",
        "cursor": {
          "ref": "d1701dda-dd42-4777-86b4-318d5ca16ce5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d54d7ad6-188a-4d30-8014-0bb6dd3b082c"
        },
        "item": {
          "id": "6cc86a62-198f-4147-9af7-c72ce2ce9348",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c2b50afd-d649-444c-8576-90bcb7f67e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8621cf83-5f90-4b74-944d-da133d3203eb",
        "cursor": {
          "ref": "17fe8d8a-54cd-451b-aa5a-c376307b5a0b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8574a9dd-ec73-40e3-a25e-f222c7081deb"
        },
        "item": {
          "id": "8621cf83-5f90-4b74-944d-da133d3203eb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4cd2267a-266c-4518-a868-c4d731de16b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989f38cc-2157-4245-a062-10e66abb65ad",
        "cursor": {
          "ref": "6756d496-1af1-4a19-8534-904a162724eb",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "39caceed-3964-4a43-b4ed-4f51208877de"
        },
        "item": {
          "id": "989f38cc-2157-4245-a062-10e66abb65ad",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "caf8ec36-2633-485a-b422-eab24b04947e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6633a5b0-415d-4ad1-af3c-8ac851c1cc2c",
        "cursor": {
          "ref": "1f8270c6-dce2-4daf-bcaf-ae9cca2a15e7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "84bb8086-3fa6-4ecb-b49d-9000522979f7"
        },
        "item": {
          "id": "6633a5b0-415d-4ad1-af3c-8ac851c1cc2c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "61db7deb-4140-464c-b552-97d61c166ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd3e5c2-ff65-4e30-aee7-a2fa6b402ac5",
        "cursor": {
          "ref": "12354655-f542-4200-9600-a03950623fd3",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c54ef43a-ede6-48ac-8481-7dc917448c96"
        },
        "item": {
          "id": "6dd3e5c2-ff65-4e30-aee7-a2fa6b402ac5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7bfad0e7-5a7d-4d8c-954f-a403e106c4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2f0e1e-bd46-4f52-8863-ac47c3b999ad",
        "cursor": {
          "ref": "6f63a8c7-4bc6-40f8-b270-f13ec92b3020",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e6d3cccd-3dab-43ed-b349-f61c6a239b24"
        },
        "item": {
          "id": "af2f0e1e-bd46-4f52-8863-ac47c3b999ad",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d6337256-9f9f-41cd-900e-50e9ec1fb52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d35dbad-0d60-4b28-84d6-08cc1e95cd8d",
        "cursor": {
          "ref": "cc7ade84-54a7-4ab8-b86a-774b7d81b8b0",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5e8acd76-a1d4-4f7f-8893-d45e2a6d6793"
        },
        "item": {
          "id": "7d35dbad-0d60-4b28-84d6-08cc1e95cd8d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cd577bfa-4048-4e74-a757-7c6b49f15dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362a7990-e102-4883-8cf0-f256d62e53c0",
        "cursor": {
          "ref": "479f94d9-54b3-402b-afde-336fb9723398",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3d8e04c1-d7c0-4f97-b005-d1c87c69f999"
        },
        "item": {
          "id": "362a7990-e102-4883-8cf0-f256d62e53c0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3a5e0a03-e8d1-435b-8f1d-6093e8b3312a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483978af-7665-4e31-b1be-4f1b62717420",
        "cursor": {
          "ref": "4fc6ef77-bc40-4818-9b41-e62c258c1e6d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b2232593-7bbe-4b00-915f-d0df8ea4d402"
        },
        "item": {
          "id": "483978af-7665-4e31-b1be-4f1b62717420",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f5335fa8-7da0-4df6-bb06-65e146344ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d055eaae-2030-436b-9b18-a2ddf733af7e",
        "cursor": {
          "ref": "a7b1924b-b8f9-48ce-8d0e-b2976900064e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d7a1bbd8-1d6b-4cd9-a712-47ce8cf5ae28"
        },
        "item": {
          "id": "d055eaae-2030-436b-9b18-a2ddf733af7e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7b29eb45-f35d-4f37-82e1-add37e314e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece3db78-0f35-4a51-8846-b3bfcb5d3940",
        "cursor": {
          "ref": "d7f0dea3-5f1e-41b5-9dd7-61e86b806534",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5eb598bf-3920-41b2-9271-5eee37b1083f"
        },
        "item": {
          "id": "ece3db78-0f35-4a51-8846-b3bfcb5d3940",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fc9955a0-b951-48d4-8efc-471e19697996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ad3d18-e844-413a-bd80-ce7afcc9e732",
        "cursor": {
          "ref": "bdc78fe8-6831-4d68-ad64-4c3f02e67b0d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5400850c-824e-4521-91b3-f8257f36c599"
        },
        "item": {
          "id": "33ad3d18-e844-413a-bd80-ce7afcc9e732",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "21effd4c-9319-4e92-a1a3-703fc7951f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946a9ce0-f7e9-4bdc-891d-535707a1fe24",
        "cursor": {
          "ref": "70098ec0-87e7-406e-8dc2-cc9a6efbd74c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b82e9fe8-5cb3-47d6-802c-ec0db8092dc9"
        },
        "item": {
          "id": "946a9ce0-f7e9-4bdc-891d-535707a1fe24",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "99f5bd71-1d09-471e-8e35-83a323be76af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fba06c1-956d-4887-888a-1df92fbb3168",
        "cursor": {
          "ref": "0cf213db-872c-4123-99ca-2981f82572cd",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f9fe90aa-c179-4543-b178-09248211175f"
        },
        "item": {
          "id": "2fba06c1-956d-4887-888a-1df92fbb3168",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2341818f-aca7-4f9b-9e2d-3a692adfe2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0bede8-a592-4d91-ae7e-449b0d7b2017",
        "cursor": {
          "ref": "0a15789c-9939-40c0-ae12-3ec93b9b830b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "aecf34e6-dca0-4207-b4a8-878cacf44643"
        },
        "item": {
          "id": "cd0bede8-a592-4d91-ae7e-449b0d7b2017",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "07fc72b4-c758-4c07-848b-d5738eed87a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f03504-81b9-474b-b578-bcffb25f6d71",
        "cursor": {
          "ref": "34f11fa5-569b-4c5f-9988-83879df3c67f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d3698b64-8456-40d4-ae15-20302bf75b3a"
        },
        "item": {
          "id": "e1f03504-81b9-474b-b578-bcffb25f6d71",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "85d99abb-8fc8-47cb-9ca9-f4ac22ca9be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4da6d0-9efb-4324-8083-81a05ebca690",
        "cursor": {
          "ref": "e19bdea4-b4a4-4f9b-9180-897439d0aca3",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bc01370e-6bd6-4a96-819d-6c8c4540be3c"
        },
        "item": {
          "id": "ba4da6d0-9efb-4324-8083-81a05ebca690",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0376a215-244b-448f-867b-520a150eba6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e241f0-1c92-4c7f-b4bf-1bdfebd4256d",
        "cursor": {
          "ref": "d466ab31-5599-4833-8cb9-fa628f72472b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6bddc816-3d38-40e3-9c1e-7ff77d16bedb"
        },
        "item": {
          "id": "81e241f0-1c92-4c7f-b4bf-1bdfebd4256d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d6a242bc-6b9f-4e6c-bafc-7ec98ab2b2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f301c95-339d-40af-8fd9-7dbba8dcd4d0",
        "cursor": {
          "ref": "f27807ef-21e8-40c0-ac41-97afda5cdfd7",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fe84298d-3722-44f9-b7a8-2dc4285b7bf9"
        },
        "item": {
          "id": "1f301c95-339d-40af-8fd9-7dbba8dcd4d0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "84035533-e356-40b8-9f95-b2f677a28272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91a0ec3-a210-40b5-8fc9-a3787351af41",
        "cursor": {
          "ref": "149e6cca-6abf-43b7-a01c-a957d885b210",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7cf41bd0-68b1-4028-966c-77c2f2b12721"
        },
        "item": {
          "id": "b91a0ec3-a210-40b5-8fc9-a3787351af41",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "65e346cc-90cb-476e-88eb-5f9ee5bfe126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedf90cc-0e63-4ec8-89eb-8ad9c48b1be0",
        "cursor": {
          "ref": "3923406c-cc1e-4cad-8be9-c359165974be",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3d4955a1-6387-4220-af5d-9813988d84c0"
        },
        "item": {
          "id": "eedf90cc-0e63-4ec8-89eb-8ad9c48b1be0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "aff1d7cd-d91f-4c64-a9ca-91aa78ce2bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003f9dc4-741a-4ab1-aecc-7c59ca55963b",
        "cursor": {
          "ref": "1c39d7c7-a03d-4ac2-be52-d1b8ece6aee1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a3207353-d1b1-4a39-bde5-a0c8f43d83b8"
        },
        "item": {
          "id": "003f9dc4-741a-4ab1-aecc-7c59ca55963b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f35ab3b3-f5f9-42f1-8148-f08e31dd28b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53128ff1-fac2-49c4-93c1-e66922dd2ba5",
        "cursor": {
          "ref": "8f0d9eca-b8b5-4e66-afb7-02dc11744626",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "49990551-0952-413a-9c80-61b9ed87ee7a"
        },
        "item": {
          "id": "53128ff1-fac2-49c4-93c1-e66922dd2ba5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2a93ce4c-81c6-4fbf-bd1c-89dffef3e7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb471ee-8f64-4795-b180-8bd80eb40229",
        "cursor": {
          "ref": "e84c6565-e54f-4c8c-a1f1-15d0b9e1ceae",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6f8d1eb9-a1dc-421d-8c97-f89a874e3f6b"
        },
        "item": {
          "id": "0eb471ee-8f64-4795-b180-8bd80eb40229",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "08d37427-3ded-419d-a6aa-11b3b305d656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63463a3c-c7b2-4d45-a941-636315217c27",
        "cursor": {
          "ref": "b686f75f-1877-4372-9d60-d6d6c5ba407e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "18d83dd5-7992-4f51-bcd1-104710e26ba2"
        },
        "item": {
          "id": "63463a3c-c7b2-4d45-a941-636315217c27",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8ce526dd-7919-4183-93ac-eeb9b8ee3c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0386587-0bca-49bf-a848-860c8f7270b4",
        "cursor": {
          "ref": "3e5b8f05-dde6-4d56-9996-94effc814e93",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "82a1176e-02f3-44fa-ad18-6ff6998181fa"
        },
        "item": {
          "id": "d0386587-0bca-49bf-a848-860c8f7270b4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "09335b3e-de75-4263-86b4-6cc95e0b8298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16e1e53-3aa3-4334-b594-a349d83c9b69",
        "cursor": {
          "ref": "55d2b55d-b631-489b-baaa-5ed9cf6837e2",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "87542814-36c8-49eb-af97-f5a3eec9e750"
        },
        "item": {
          "id": "c16e1e53-3aa3-4334-b594-a349d83c9b69",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "74e0d3fe-b8e3-4bbb-83de-f81dbfb4f58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248c09b0-3e10-4701-8d90-0928a9582843",
        "cursor": {
          "ref": "dc0d45cc-d236-4f2e-8b18-f5ee3fbb1f27",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a1bf3374-a491-4ceb-a4a4-0de0ab03ae6b"
        },
        "item": {
          "id": "248c09b0-3e10-4701-8d90-0928a9582843",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7b7cb806-e48b-4498-bf08-5fa0a45eb097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22e589b-0bb7-465a-a383-63327e45e195",
        "cursor": {
          "ref": "d0c76b86-6393-406a-86c0-ae730174e52b",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b59701c3-a782-4edd-bcc2-2439487a4faa"
        },
        "item": {
          "id": "f22e589b-0bb7-465a-a383-63327e45e195",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "40adfa5b-b96a-4cc8-ba4f-e332b913dab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89953145-bd36-4d6b-ae57-aca035bf8f78",
        "cursor": {
          "ref": "b153fd66-c78f-49ff-a2fb-b580038d11c7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f8601492-16c3-4411-bfd4-94f00ce58e7d"
        },
        "item": {
          "id": "89953145-bd36-4d6b-ae57-aca035bf8f78",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "17fb0c60-c546-4e36-a590-71f4574ea36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5670eb4-1aa4-4895-b69f-d7005b7acafb",
        "cursor": {
          "ref": "910c5301-8dad-47cb-a3a3-f9931e962198",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "81721efb-ee31-4397-826b-910e92a18cab"
        },
        "item": {
          "id": "c5670eb4-1aa4-4895-b69f-d7005b7acafb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e4f5038c-8aca-4c37-8ec0-980546d8dd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af982eaa-59fa-49a1-8681-c41113e59d9d",
        "cursor": {
          "ref": "4b9741c7-f9e9-4f8c-a1a8-0a4a5b6e2d61",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c7e80d0e-1e8c-43fb-980b-a2a2d8bc9ba1"
        },
        "item": {
          "id": "af982eaa-59fa-49a1-8681-c41113e59d9d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dd0fbe40-219c-4cda-b715-021bdee93417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34c8f44-3821-487e-ade8-20227d0005e8",
        "cursor": {
          "ref": "b805452f-34ae-429c-afe1-fbafba1d62fe",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c035f67b-e457-4804-8337-ed935d0b9fd5"
        },
        "item": {
          "id": "c34c8f44-3821-487e-ade8-20227d0005e8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0778e352-df61-4834-9730-20a71f09d86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7776e2c-904c-4b58-8699-fd15ddb84374",
        "cursor": {
          "ref": "e60e5f31-d134-41d4-8de9-05f6906f08d7",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6fb077da-7b13-4a34-8891-95aeea23a4c3"
        },
        "item": {
          "id": "b7776e2c-904c-4b58-8699-fd15ddb84374",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6631ecde-e611-4939-9c65-5d76114e82c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f33552a-5d66-4322-85f6-f4eacd7b8bd8",
        "cursor": {
          "ref": "d0efb02f-d866-4161-8a49-0c1e23d670d9",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ce041a60-5602-41ef-abc0-e455dde6786c"
        },
        "item": {
          "id": "8f33552a-5d66-4322-85f6-f4eacd7b8bd8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "df6923fd-01f7-4ce0-80fa-56b19fb11d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3879f6bd-a059-41b9-a7f4-ee73ade4f30f",
        "cursor": {
          "ref": "e7f6f1d9-6f63-4c6c-bb30-efaf57c6cd30",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a5ca5833-0bca-4cc6-a848-b505c1a2d29b"
        },
        "item": {
          "id": "3879f6bd-a059-41b9-a7f4-ee73ade4f30f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c39cc1fa-53ba-438f-a238-3c47c2ec9a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2fa16a-f537-41f7-aa5b-8a4e8ae23eb9",
        "cursor": {
          "ref": "5519a62c-6e92-4b16-b3f5-874fb26c96d6",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3496dd70-01c6-4b15-80db-2e2c14e0ebe3"
        },
        "item": {
          "id": "8e2fa16a-f537-41f7-aa5b-8a4e8ae23eb9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "043fc438-b56e-4cfe-9646-32da5b596b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af58ecb9-4599-4097-b04d-95662965f341",
        "cursor": {
          "ref": "eaf0e8e8-9430-4a58-9652-8a2306e5d38c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fd4666c1-4574-4d35-a1a1-ef7612606048"
        },
        "item": {
          "id": "af58ecb9-4599-4097-b04d-95662965f341",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f6485cfe-9c23-4c1d-9742-7eeffa8bfed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c04eb2-39fb-4d9f-bc4f-df930b52948a",
        "cursor": {
          "ref": "223a016e-4177-4e80-9d1b-d9a0c2e6a536",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "868a4bde-0a3e-423a-a5a7-97c6e18f7056"
        },
        "item": {
          "id": "f4c04eb2-39fb-4d9f-bc4f-df930b52948a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "870a3488-0b08-439b-b364-cd07d8c61822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cde810e-4f61-48da-a874-e84923074611",
        "cursor": {
          "ref": "4f2b1b2a-e70b-4c70-94c0-6b67c67a75b0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8b3c7e1c-4854-4099-9ae2-c03db134e40a"
        },
        "item": {
          "id": "8cde810e-4f61-48da-a874-e84923074611",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e7c9cc29-f6db-4246-b377-158588ed44e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12717fb-f4b2-401a-8566-975df3d9ad0c",
        "cursor": {
          "ref": "3ec2d0ae-b84c-4fce-aa40-c1f6bd4201cc",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "71734b12-fdad-4bf4-a536-f4d6ab1163a5"
        },
        "item": {
          "id": "e12717fb-f4b2-401a-8566-975df3d9ad0c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fd597b95-b1f4-4036-9e5d-6aba49f98115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f410c0-3d77-4b16-9094-23738b2937ce",
        "cursor": {
          "ref": "7a50e82d-e6b1-4fab-a9fe-e700bfced2e7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "86c309ea-1e71-4669-8a5a-9801a06da161"
        },
        "item": {
          "id": "d7f410c0-3d77-4b16-9094-23738b2937ce",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "95806029-9233-48f1-ad57-b62f025a0df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf306df-1540-44f2-a43b-8c6b44a29864",
        "cursor": {
          "ref": "185c15d5-1646-42c9-ae5f-57f5a5c14255",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a7c6b4ee-a5eb-4b4f-b21b-652ad8ecdd59"
        },
        "item": {
          "id": "ccf306df-1540-44f2-a43b-8c6b44a29864",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "72d1f459-6f63-4898-a4be-3e3fbece46b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac9a6de-9073-4d7c-a360-d7f783f5cb9d",
        "cursor": {
          "ref": "04f21c7f-9b3a-4c31-a6b0-5832580506d5",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "65c40570-51c5-406f-a1fe-f0b63cbdc236"
        },
        "item": {
          "id": "5ac9a6de-9073-4d7c-a360-d7f783f5cb9d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e2e029e0-3d79-4d48-bdda-3319e02f226a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e0c3c9-7795-4542-bf23-0d159f080ade",
        "cursor": {
          "ref": "55359e76-6e31-4be0-b754-d9b88f594abb",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "17ecae6e-e752-470d-98e9-69b7a2eafa20"
        },
        "item": {
          "id": "e7e0c3c9-7795-4542-bf23-0d159f080ade",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6bd1f845-56b4-4cc3-8db3-9bf7d7fbc255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b938ef-fc49-4e16-85a8-fd3a6e3d99c6",
        "cursor": {
          "ref": "f04bbf47-32e8-4ef1-b776-c981a2877d08",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ae74bb47-6101-49c9-ac3b-ef391d2417f1"
        },
        "item": {
          "id": "00b938ef-fc49-4e16-85a8-fd3a6e3d99c6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ec27d0c0-e119-4aa6-8d4b-f1aedec56b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e996547e-eaf2-4f43-bdaf-ad42bed9fe25",
        "cursor": {
          "ref": "78eb5574-7bf4-427e-80a4-667b19cca2e6",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bdd9a9ce-b766-4b3c-ac6f-b89e393d6e37"
        },
        "item": {
          "id": "e996547e-eaf2-4f43-bdaf-ad42bed9fe25",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dd53af04-59c4-4343-9369-998281189ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5891fc-b6e3-4a7f-b41c-42cc859593e3",
        "cursor": {
          "ref": "f8c08329-6787-4857-b510-fb472e61a6df",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "54806628-5971-4380-b66c-a8ffb705909d"
        },
        "item": {
          "id": "9f5891fc-b6e3-4a7f-b41c-42cc859593e3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b7dba83f-ffd5-4bc6-8a9f-5cacaa67226d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c3d666-e609-46d0-986e-b50c1fc7fb90",
        "cursor": {
          "ref": "99f30a66-9854-4c8a-819d-31121bff18c4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dddf0372-9a4b-4ccc-8816-512cc160cde6"
        },
        "item": {
          "id": "57c3d666-e609-46d0-986e-b50c1fc7fb90",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "eb87ac17-482e-4823-acbf-b6579935c1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70b9d59-1271-45c3-8aac-179616a2e59d",
        "cursor": {
          "ref": "d51617e5-263f-4088-b2a7-49f6d41cfbf7",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "300b764d-6a3d-498f-a4d1-49231217e17c"
        },
        "item": {
          "id": "c70b9d59-1271-45c3-8aac-179616a2e59d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f500a21e-cddf-4c3f-aa13-960eb31f1fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c2df97-c0fa-4838-8617-e4c52b5682c0",
        "cursor": {
          "ref": "72bd18e5-bb26-45dd-a98d-3a9cbdc3333e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "163e7149-48bb-40c7-8742-a4f34f793482"
        },
        "item": {
          "id": "06c2df97-c0fa-4838-8617-e4c52b5682c0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5f1db7e4-de02-495c-8ea7-23722e66589b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea499982-a826-4bc3-ae40-497e120a15d2",
        "cursor": {
          "ref": "183f5013-bf8e-4202-8212-b5d717e031fb",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c2ad4e6f-669e-4cc6-b68e-17f6229b8a86"
        },
        "item": {
          "id": "ea499982-a826-4bc3-ae40-497e120a15d2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "eb123b34-a742-48ae-b729-87d07fd78037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd797f20-1a53-4a94-9b8d-80d828037622",
        "cursor": {
          "ref": "7ab5a4d7-8e46-4000-846b-46de9339c26b",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e0827631-afbf-409d-aba6-dd17614fd14c"
        },
        "item": {
          "id": "cd797f20-1a53-4a94-9b8d-80d828037622",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b3859ec6-052f-4bac-a1b2-342fc656c4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7138cd8-aa9e-437e-880f-b17f2ab4d9e8",
        "cursor": {
          "ref": "b10b8d68-f800-49e1-a04f-60d77abe35df",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0e224021-0f80-4188-9468-557cc4783012"
        },
        "item": {
          "id": "f7138cd8-aa9e-437e-880f-b17f2ab4d9e8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3b33c506-8963-4e5b-aa99-c5cba08a1faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e68f0d-2f75-4906-ab18-284990a52175",
        "cursor": {
          "ref": "0b1177f2-edbb-4f68-9b2f-dde4cb606cc1",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7d03f773-d7d1-45b8-82e6-7e7b1a2ebf3c"
        },
        "item": {
          "id": "b3e68f0d-2f75-4906-ab18-284990a52175",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4962d44d-6ee3-42cd-9f25-495cdde724e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4e24e6-6746-4057-91c5-a75da27adf9f",
        "cursor": {
          "ref": "ce808e21-0f78-4057-9278-9ad187778798",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a7c3b429-0004-4b4d-a276-bd10ac29364c"
        },
        "item": {
          "id": "0d4e24e6-6746-4057-91c5-a75da27adf9f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5061e677-dd8d-4073-b274-e093171670b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5305b7fe-5fff-4b3a-983b-9981655789d4",
        "cursor": {
          "ref": "9406b8f9-a514-4c3e-9d1d-55ed4915a310",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "319c36df-2f07-4b75-af1d-c247b72a3fc1"
        },
        "item": {
          "id": "5305b7fe-5fff-4b3a-983b-9981655789d4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "83e3b22a-3511-415f-8ab6-c5d21eed8739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019efca0-5258-4a81-937a-88b84de18b48",
        "cursor": {
          "ref": "099b49e2-aea3-4c1f-9a25-091da1a0fe66",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bf21b2e3-6a61-4b93-b14a-3c62024d56ae"
        },
        "item": {
          "id": "019efca0-5258-4a81-937a-88b84de18b48",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "28494c30-ddfe-45f5-a917-9f6e38ef426e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493a1eeb-96c8-4cc2-b5e8-f4881532444d",
        "cursor": {
          "ref": "272e3316-05d6-45b4-99df-f2638d5db1f2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c6fdefdd-7130-47c2-8537-13a0a3d60a81"
        },
        "item": {
          "id": "493a1eeb-96c8-4cc2-b5e8-f4881532444d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8a45dc4a-f8aa-4228-a804-3da7b3e956ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b97d590-5745-4468-9306-338bbda0310e",
        "cursor": {
          "ref": "e95ed771-9473-4a09-a0c8-48ba1a8a69a1",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2c0da99a-aabe-4d99-b4e5-82a8f38a02c6"
        },
        "item": {
          "id": "6b97d590-5745-4468-9306-338bbda0310e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dd7a8679-a856-4dc6-b88b-70005137c759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae79be0-0423-46bf-842c-c8c565159625",
        "cursor": {
          "ref": "80ee1638-c157-4ed2-a3e8-5523d9575959",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9a42b621-a6c6-4228-ab15-8aaff1a80651"
        },
        "item": {
          "id": "4ae79be0-0423-46bf-842c-c8c565159625",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c899eb89-8162-486f-b563-9821e2117001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd0844b-38bd-4647-8aca-bc8e9babe604",
        "cursor": {
          "ref": "3bbf3eeb-ab1a-44bc-91ea-112b7f5ec6c7",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "abfaac60-e56a-4d56-ab0e-caec1a38e443"
        },
        "item": {
          "id": "7cd0844b-38bd-4647-8aca-bc8e9babe604",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8f87334f-3b40-4306-a9c0-ff19925505f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de82338f-3f58-47e4-8c10-dd1269311a88",
        "cursor": {
          "ref": "8187d968-d95a-471b-9ab0-fde8748eb646",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "aca90c05-f64f-467a-a819-60f86340be7a"
        },
        "item": {
          "id": "de82338f-3f58-47e4-8c10-dd1269311a88",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d164b8e5-a7bf-4f61-b82c-1bd2786a3b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb7b385-2ba5-442d-9d95-c481ce12ce3b",
        "cursor": {
          "ref": "6a772a7c-de1c-4304-8b10-cd2df9e3d8fe",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "69059b2f-db8d-4a58-96d4-fd194692b1ca"
        },
        "item": {
          "id": "5cb7b385-2ba5-442d-9d95-c481ce12ce3b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "91424327-a7cd-4c90-8b14-25bba1b6e2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456602b3-3358-48e3-920c-0ed31e42f8ac",
        "cursor": {
          "ref": "f98d8fab-e00e-468d-9f1a-9804a1120a53",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "04a17916-d3fb-420a-908b-680bcad1fb0a"
        },
        "item": {
          "id": "456602b3-3358-48e3-920c-0ed31e42f8ac",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f28ad9e0-b570-4669-8b92-4cab6ffc7a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d45925-057d-4d68-a77e-454909be0771",
        "cursor": {
          "ref": "f5b25d3e-3660-4e06-9b53-c6f401afbc82",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c46c0b6e-5867-4380-b887-a123088d1b77"
        },
        "item": {
          "id": "b8d45925-057d-4d68-a77e-454909be0771",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "af4a5b46-e597-4395-af09-e10c56e3eee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb86d0d-36b2-4516-96c7-06ac8873c3d1",
        "cursor": {
          "ref": "cb109b7a-d444-4aa9-a965-90ff93fdbac9",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a889690b-01e1-402a-9b4d-790042dd93e6"
        },
        "item": {
          "id": "cfb86d0d-36b2-4516-96c7-06ac8873c3d1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "98863635-ecfd-4c11-b6b3-71d1356290a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba873fb-6970-45f4-a478-24712232db4f",
        "cursor": {
          "ref": "393d1101-5346-4f0a-9d0b-cd14eaa37f6e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "46b6fc22-d875-4e52-957e-8bbf10ba5fb9"
        },
        "item": {
          "id": "cba873fb-6970-45f4-a478-24712232db4f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5e6428fc-eaeb-4b28-b1b7-29a0df97ab73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf161c56-f148-4975-852e-fa03f4ee435b",
        "cursor": {
          "ref": "7968d780-3c2f-44f3-b250-654b04c96598",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "21ddc755-6451-4d2c-993e-3eb1b4e1cce5"
        },
        "item": {
          "id": "bf161c56-f148-4975-852e-fa03f4ee435b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a40442ee-5e89-45f1-b262-187f6fcd7519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bc1bb5-519f-4f93-a561-866b9d819cd1",
        "cursor": {
          "ref": "6a936b5d-9b9d-479b-b75f-8377382a2af8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7e2a587c-9ce2-47fd-83c7-06578be6165e"
        },
        "item": {
          "id": "72bc1bb5-519f-4f93-a561-866b9d819cd1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f8789cd7-067b-4b30-a973-ee4c98c334dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ab4171db-e303-491c-928f-35cf1f22543c",
        "cursor": {
          "ref": "e6f1f64a-8541-4a28-9467-0560af8bfd4b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3a29840c-63b6-4be3-bd55-9e2286464574"
        },
        "item": {
          "id": "ab4171db-e303-491c-928f-35cf1f22543c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1b73e508-c895-4160-868a-67675cfc2018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "fc10d0f9-1911-43a8-972e-2f89d0a871a7",
        "cursor": {
          "ref": "c5d5b6d6-d8db-4959-b69c-1ae1fd2b3b49",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f88c480c-f531-4987-8b76-ac7a182d3c66"
        },
        "item": {
          "id": "fc10d0f9-1911-43a8-972e-2f89d0a871a7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "91b77e72-fe36-4334-a834-2e718cc8b8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4844d7ef-051c-403e-a82b-dac5a8f72076",
        "cursor": {
          "ref": "964a4ee1-3177-47e4-aaff-f16393f30c25",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "996bf2de-7653-40cd-b7a9-4ca524811cfe"
        },
        "item": {
          "id": "4844d7ef-051c-403e-a82b-dac5a8f72076",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "906b2335-eae9-4cdd-bb32-6b7fca9759e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "47c3c8b8-0a7a-4258-aa58-54fd77744884",
        "cursor": {
          "ref": "1dadc41a-e3c4-442a-a4bf-d98111a50006",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e0a488ab-d928-437b-96b4-40a49abce762"
        },
        "item": {
          "id": "47c3c8b8-0a7a-4258-aa58-54fd77744884",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "35505aa7-ea8b-4398-8b64-08b5132e5da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "68ada66f-0cce-4848-884f-76535a977df5",
        "cursor": {
          "ref": "0bccc4b0-92a2-4832-a11c-090df3ea5928",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7139630d-a10a-4f35-a608-3c1b9dc19c7d"
        },
        "item": {
          "id": "68ada66f-0cce-4848-884f-76535a977df5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e51c1560-00a1-425c-8f71-57b5c20ae905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f6d042b1-fd41-4cba-bd8e-4f9d12a1743f",
        "cursor": {
          "ref": "601e8a12-f94a-4d7f-a43e-4c7381a087f1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ccf6d8bb-3fcc-4143-b841-7b30f951c18d"
        },
        "item": {
          "id": "f6d042b1-fd41-4cba-bd8e-4f9d12a1743f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0917baec-9af8-49f1-8dc2-fc5fdad5739c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "30ff939d-c288-428b-b6dc-c877acb1f144",
        "cursor": {
          "ref": "eb6a9d2b-45b8-4e6c-aea1-a8b628531914",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f654d4dc-e82b-4133-8e4a-4884eec79abb"
        },
        "item": {
          "id": "30ff939d-c288-428b-b6dc-c877acb1f144",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0ea5a5b1-9c43-4840-8e84-18ac20b154c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb26f925-b38a-4bd1-8c34-67d4d52d97e7",
        "cursor": {
          "ref": "c9f1f5fa-9568-4411-ad1c-bbee8b69c3eb",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "563aa009-fa35-4ca2-a368-94b3334bac4e"
        },
        "item": {
          "id": "fb26f925-b38a-4bd1-8c34-67d4d52d97e7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ecc17238-4eca-44c4-ba25-6e73f3783a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b25e3b5-402a-4749-8776-dd0175080b38",
        "cursor": {
          "ref": "52ddb10c-8b66-42db-8e17-92af9307c9b8",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4956b72c-86a4-4747-8671-bce716016dc8"
        },
        "item": {
          "id": "8b25e3b5-402a-4749-8776-dd0175080b38",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a539a991-5c5c-4cdf-b98f-0865be847645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402a764e-2548-4011-b106-3c6bf9a03530",
        "cursor": {
          "ref": "b374c327-823f-4bb5-9911-26559ae98111",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "96411c5a-c444-4e77-9eca-abd40388f52c"
        },
        "item": {
          "id": "402a764e-2548-4011-b106-3c6bf9a03530",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bf9f478b-5b0e-45db-a499-09beaceeeeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1bf5e6-60a0-4632-b51b-f61f1eb542d0",
        "cursor": {
          "ref": "9e3ab0b1-b528-47c1-9803-012422460206",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d4ac4382-260f-489c-931b-1fd281ca1211"
        },
        "item": {
          "id": "5f1bf5e6-60a0-4632-b51b-f61f1eb542d0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "77e5a3d7-eae7-462b-95f5-a053ef3d8153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedce176-a503-4594-b19a-c3cfee742b8a",
        "cursor": {
          "ref": "edcecc61-c77e-4ddd-815f-e41279a7ec28",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ff7ad414-ce10-4bcd-968e-58932288f34a"
        },
        "item": {
          "id": "eedce176-a503-4594-b19a-c3cfee742b8a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "951950c8-9f01-45a6-b78a-fa57f3c97686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718d214b-a0d5-4c3c-91ed-82349087fc71",
        "cursor": {
          "ref": "80f94a86-430f-4b1b-a2cf-ad251a43d4d9",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8cb80ada-b8c0-4257-b177-efb13a897f27"
        },
        "item": {
          "id": "718d214b-a0d5-4c3c-91ed-82349087fc71",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "66e0233d-8ec6-4fa0-bc75-833c9be96c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7660f80-4178-4fa5-b661-b86d554770b9",
        "cursor": {
          "ref": "0f767a61-63ad-4372-8055-c3c870dfca83",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "204a426c-f99b-4fbc-880d-b55cc058016c"
        },
        "item": {
          "id": "b7660f80-4178-4fa5-b661-b86d554770b9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a99516bf-f9d2-4524-8d82-7ad044c7e5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d7d4da-8761-4bc9-9532-d93becb968a3",
        "cursor": {
          "ref": "f008ca9c-0c85-4d39-ad3f-552c92cb3595",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "37568156-adf1-4c3b-8812-c9e5e8c5e99a"
        },
        "item": {
          "id": "d0d7d4da-8761-4bc9-9532-d93becb968a3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a9e43224-978e-474c-9372-61df31cc3d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8279b0ad-e8ae-4921-abf9-52543293d57b",
        "cursor": {
          "ref": "288c3f0c-d4b6-438a-a5c2-6249e44236bd",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7f1195bb-8167-4a5b-b506-f30e57bf4099"
        },
        "item": {
          "id": "8279b0ad-e8ae-4921-abf9-52543293d57b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d1088056-763c-4241-bf89-af3bb700c60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd6b749-54e6-4b46-b456-dc33cad8000b",
        "cursor": {
          "ref": "cb47bfc4-fcef-4cf7-af82-2ddae9567751",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "116fa866-a93a-4465-be02-e31bcc07ce82"
        },
        "item": {
          "id": "7bd6b749-54e6-4b46-b456-dc33cad8000b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3a655d4e-0972-4bad-8aa8-ae20c7f6784e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f2f377-831f-499d-9a7e-d5bf57977c41",
        "cursor": {
          "ref": "10558fb7-685c-4b53-a317-24b17501209b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7cace389-c586-444d-9edc-884530fd97ef"
        },
        "item": {
          "id": "97f2f377-831f-499d-9a7e-d5bf57977c41",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "663e08a5-5987-4e56-8713-ff9f83bc7151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59864e97-755f-4a47-9d0a-db1b7ccb9768",
        "cursor": {
          "ref": "afb74e8e-0e7a-4176-86b0-6153ced437fd",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0b6542b6-c2c1-4d2c-ac98-7a06dcd8e920"
        },
        "item": {
          "id": "59864e97-755f-4a47-9d0a-db1b7ccb9768",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cbb31e25-fb16-4a29-93b7-3a0c5a4a13a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829ee2c8-8998-45bd-a997-15dba9be08a7",
        "cursor": {
          "ref": "7b7fae1f-863d-42dd-b257-5142b23b4eb2",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "34c8790e-a92a-4089-acee-3563a23632e1"
        },
        "item": {
          "id": "829ee2c8-8998-45bd-a997-15dba9be08a7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fcab96b4-29e7-4742-9de8-cf9617f816d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd27bc9-bfef-4525-b21a-33f8dcd1d6f2",
        "cursor": {
          "ref": "51718ef9-7ff1-4b4a-b021-fc154a69bb43",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4380660c-34e8-4737-9db6-2920e37805c3"
        },
        "item": {
          "id": "cfd27bc9-bfef-4525-b21a-33f8dcd1d6f2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e2240a9e-b3cc-4938-b8c2-30e591f167d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d518d5c-ac6b-429c-8756-4cffc42d1d79",
        "cursor": {
          "ref": "f0bc0eb0-9226-4567-b86d-1794752da7c6",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "24cbbfeb-90e2-4772-bd97-1ab1ae6ea9f7"
        },
        "item": {
          "id": "3d518d5c-ac6b-429c-8756-4cffc42d1d79",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1e140078-cee9-4fa3-b238-c3723980e77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a02ce70-cb0a-4264-9c2a-7b7a31965119",
        "cursor": {
          "ref": "066f1248-a585-4d4f-bce7-a3600a2a2391",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "df5a2614-273c-4b10-82d1-8b26bb05e421"
        },
        "item": {
          "id": "0a02ce70-cb0a-4264-9c2a-7b7a31965119",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "637355d2-f9fb-4dd9-abe9-6df53fe7daf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da229b1f-7af9-4f45-9510-6a7854e17942",
        "cursor": {
          "ref": "1460eb4a-3d6c-4ed7-9601-1da2f4f44dc4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "166ae435-19f0-4838-849f-27114fdb03b2"
        },
        "item": {
          "id": "da229b1f-7af9-4f45-9510-6a7854e17942",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "92096c41-c6ce-495e-8874-625317f78986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403d7c7f-364a-49f6-a186-6db9caeabc32",
        "cursor": {
          "ref": "9a22ed2b-71d4-421f-9695-2aa9be84dd71",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4dd0801b-648f-47c3-a197-d3cf7250f220"
        },
        "item": {
          "id": "403d7c7f-364a-49f6-a186-6db9caeabc32",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8f94ba5d-130d-4bdc-92f6-bd17f4802900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fd0398-5b3c-4d1e-9b0f-709cbb2e6900",
        "cursor": {
          "ref": "2e3fd3c5-2a38-471f-ac6d-e4bb0686de41",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fc545c0e-3170-445a-aee2-8bfdfe6580eb"
        },
        "item": {
          "id": "02fd0398-5b3c-4d1e-9b0f-709cbb2e6900",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c79395d5-ad07-4fa5-8559-b20126415143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf47a2f-c423-49e5-a6bc-122a2e72085b",
        "cursor": {
          "ref": "10324570-2699-4212-9c54-0c88fda90851",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "28b20151-dc92-4c5b-b8ef-241a6ab5e1fc"
        },
        "item": {
          "id": "3cf47a2f-c423-49e5-a6bc-122a2e72085b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "09d7b50f-6a55-43fa-b702-213f53616c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1da95d-21be-4e51-a7ce-473abb865efa",
        "cursor": {
          "ref": "60051466-ca36-4102-9342-accffaae7f76",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "783511e1-8abe-44d1-833c-9ef69dd4eb45"
        },
        "item": {
          "id": "6b1da95d-21be-4e51-a7ce-473abb865efa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3dd6debb-19ae-4757-8295-27d6d3f96e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e93b08e-4a35-4cb9-bea1-76c615232bf5",
        "cursor": {
          "ref": "20bf30c1-67d5-4da3-858a-9bcf2ea65edc",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d0ec9eb6-81be-4ec5-bb18-f1ccb2ef7666"
        },
        "item": {
          "id": "1e93b08e-4a35-4cb9-bea1-76c615232bf5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fb486c10-57ca-4f6e-a283-c5505810de64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d130d20-7e5b-4969-a253-4399fdbaf8b3",
        "cursor": {
          "ref": "bdf1fa07-3c00-4cae-a4de-d0bde5e05e6f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fdcf3407-dcc0-412f-9e8a-247a28f96255"
        },
        "item": {
          "id": "3d130d20-7e5b-4969-a253-4399fdbaf8b3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1e75f616-c8c3-451b-a6f2-71b99b6f82bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e86a6e8-a20a-45dd-a7d5-d47f83f069bd",
        "cursor": {
          "ref": "448fffaf-6543-43bf-8066-c4025ab6a46a",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fc328118-02eb-4c80-bbef-30326a183970"
        },
        "item": {
          "id": "6e86a6e8-a20a-45dd-a7d5-d47f83f069bd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "34481b00-424f-4a35-9cf4-320fb345f79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a64da8-68bc-46b4-82a5-1907d83226bd",
        "cursor": {
          "ref": "ebd7cf7e-a1ee-47fb-9e54-0857df37775d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1e6f449f-9201-4e3e-8081-38f1846b5ac5"
        },
        "item": {
          "id": "14a64da8-68bc-46b4-82a5-1907d83226bd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "126716a0-9424-4dea-b0d4-554709eee27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ff9415-a833-4479-819e-f93f6a4c6737",
        "cursor": {
          "ref": "5b35d0f4-7ca7-45d5-af59-46863ab99c26",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d748539e-ec38-42e6-8520-aba369234ddc"
        },
        "item": {
          "id": "63ff9415-a833-4479-819e-f93f6a4c6737",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e3735a99-ec62-47e8-b71c-536bc5245fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb517b1-bee1-40a0-bb7a-100d05aaf278",
        "cursor": {
          "ref": "869dae99-7124-4af8-b9d4-c902be9b8d31",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9d16e9da-51f1-4bfc-8284-1218bfbc4f46"
        },
        "item": {
          "id": "8cb517b1-bee1-40a0-bb7a-100d05aaf278",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0de56ecb-aabe-4ea3-8d61-0f72f24575bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f72c2d7-b747-46d3-8102-ea884fa88375",
        "cursor": {
          "ref": "882b18b0-ba44-4ba7-b891-c320102e8236",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "994bab74-6722-4147-8d35-b24e53b3707a"
        },
        "item": {
          "id": "7f72c2d7-b747-46d3-8102-ea884fa88375",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e6c95dde-5972-4a17-b2e9-a0d397b326dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f106ad0b-8dfe-43de-9733-8c625de3bfd9",
        "cursor": {
          "ref": "f379b43e-f000-4b2a-b8ce-4a524b5cbde3",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b61f9436-6b8e-42c0-a75a-d0c2cd981e69"
        },
        "item": {
          "id": "f106ad0b-8dfe-43de-9733-8c625de3bfd9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bae0f111-66a9-4b09-aad7-01d19481bc8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946c7687-35dc-4e7d-977c-1baa10e85375",
        "cursor": {
          "ref": "c61cdef3-57c4-425a-b822-c3dd28ce37f2",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "16b1a326-96cd-4efa-912e-54227d4403e7"
        },
        "item": {
          "id": "946c7687-35dc-4e7d-977c-1baa10e85375",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c89ab0ea-5589-432e-b821-12d60d4df9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb5a9df-98bc-4b37-bc1d-20bb496d0232",
        "cursor": {
          "ref": "91ddd975-a908-44da-a3a8-3e793293265e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "45c579f3-6eea-46ae-9bed-a207c6856b1b"
        },
        "item": {
          "id": "deb5a9df-98bc-4b37-bc1d-20bb496d0232",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ec0c906b-5255-4df7-999d-cfda415b26d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bfa84c-d3e9-49a6-b2bb-21cb419892ee",
        "cursor": {
          "ref": "3b07d865-abe5-4522-a0e4-50165941d1b6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a6041504-371c-4b84-8c1a-778db274f2a6"
        },
        "item": {
          "id": "f0bfa84c-d3e9-49a6-b2bb-21cb419892ee",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "19736a25-79ad-4559-8b82-dfac9532b0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cc962c-e710-4e23-9439-01e8593b642e",
        "cursor": {
          "ref": "65f4eed8-091f-4499-bbd2-79256965920c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ab1bf375-4379-477f-b617-4b5843450ae0"
        },
        "item": {
          "id": "23cc962c-e710-4e23-9439-01e8593b642e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6b7da847-d8f6-439d-b7d6-ba5cffff1aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac02d5b-2cc2-4217-93b1-78a4afb511f6",
        "cursor": {
          "ref": "a214fcb1-4a00-4528-b7cf-89ff85268d4c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "afacfb3e-0f3a-46a4-b8fb-d239a8089385"
        },
        "item": {
          "id": "fac02d5b-2cc2-4217-93b1-78a4afb511f6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6a047899-0b5e-4ce9-beff-ced0769ebf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8940727-88d5-443a-b8f4-a886058f24cd",
        "cursor": {
          "ref": "72fa32b3-60b6-47d1-8505-bdf03fbf3038",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "56dbde6b-d7d0-4e7a-9d91-1941c59bb8c8"
        },
        "item": {
          "id": "f8940727-88d5-443a-b8f4-a886058f24cd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6a7a7020-d310-4a5f-96f1-b41cf80ffb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef42e0a-23fc-4b9c-a0c6-1ae25bc102ff",
        "cursor": {
          "ref": "aff912aa-d932-4320-aae4-0587a3ac70fd",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "efa694b1-55f1-4365-a70b-4b85c0defbfc"
        },
        "item": {
          "id": "4ef42e0a-23fc-4b9c-a0c6-1ae25bc102ff",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "536b8e1b-948c-4565-beda-25fd00941703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71edae1a-69b8-4948-bb10-ade528727574",
        "cursor": {
          "ref": "e796822b-b980-4725-9181-0d9fe58523dc",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "caae9199-044a-4457-987e-e27c0a632ef2"
        },
        "item": {
          "id": "71edae1a-69b8-4948-bb10-ade528727574",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a17e2284-78ea-4e75-9e01-e619adb84324",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2d4551-4c55-49b6-bbc4-3c649df88065",
        "cursor": {
          "ref": "cd3c186b-aa13-4669-b8d3-283bb06a4b1b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "50ad4166-14da-4bd2-bec4-e90d58109cc4"
        },
        "item": {
          "id": "ea2d4551-4c55-49b6-bbc4-3c649df88065",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4fcedf55-5423-40fa-83b4-012273291d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5a9863-9015-4fd7-902f-4ebdd1bc240e",
        "cursor": {
          "ref": "e77a388e-3274-4c44-9e10-0c9878b87dbf",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ea5d5ed6-275d-4743-846f-0bc734e533e7"
        },
        "item": {
          "id": "be5a9863-9015-4fd7-902f-4ebdd1bc240e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ef84859d-1711-4359-88d5-5eae356303a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80553458-d8fa-4cfc-a156-9712e5eabf9b",
        "cursor": {
          "ref": "b0930f24-c47b-4f4b-9061-676a8acb5219",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "eecfcdb5-d525-4b16-9d21-a4463b01a403"
        },
        "item": {
          "id": "80553458-d8fa-4cfc-a156-9712e5eabf9b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fd7a6b29-9869-4ee9-bba5-05733e20576c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e27bd14-01aa-4b64-bc19-d493bec0d839",
        "cursor": {
          "ref": "2210a35b-d112-4ed5-9825-1fd4b5e1368f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ce0de44d-1b67-49f9-9dff-99314f9afa14"
        },
        "item": {
          "id": "5e27bd14-01aa-4b64-bc19-d493bec0d839",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1087ab32-c903-488e-a49f-7ed0d7b21035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff08517a-4226-4ca7-ae13-b5778cb9e837",
        "cursor": {
          "ref": "8ada1df9-2db2-488a-a7d5-1ca4318c215e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "548faf33-d9d2-4255-b1bf-163392772d1d"
        },
        "item": {
          "id": "ff08517a-4226-4ca7-ae13-b5778cb9e837",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bd78413b-4f6e-4e06-8c4f-5b55aa0a438a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028c7736-c0b5-4d63-afb3-e925171e038c",
        "cursor": {
          "ref": "e0268fe4-1154-49bf-8ee9-621439057ad6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "17221e95-5699-4018-8eac-b8852f6e7517"
        },
        "item": {
          "id": "028c7736-c0b5-4d63-afb3-e925171e038c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "59dcb998-4d27-41ac-ab14-deabfd6d0629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bc8891-41fb-4e11-b6aa-06cd940fb689",
        "cursor": {
          "ref": "046a3a2d-a858-4e63-9725-eccb2ca46e2d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "34f85b4f-6c15-48c9-b190-09b7593e7944"
        },
        "item": {
          "id": "e3bc8891-41fb-4e11-b6aa-06cd940fb689",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6f839dd1-8093-425b-a45b-d7109332a689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d527e84-80e3-49e3-a383-5f31c8ed0219",
        "cursor": {
          "ref": "6b1be793-cb7c-4ef1-a5df-0989f7ecaf34",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "87c7e70f-ec6f-452c-be29-afeee29ae6a6"
        },
        "item": {
          "id": "6d527e84-80e3-49e3-a383-5f31c8ed0219",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "529a23b7-2584-4511-a8c9-381300ffa9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b0151a-d5b6-4427-af48-4f83ee2851b0",
        "cursor": {
          "ref": "f09adffa-a178-4563-bfbb-42920f74fc31",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a3ae35b7-8c0f-4d65-99b6-819f3b3301de"
        },
        "item": {
          "id": "42b0151a-d5b6-4427-af48-4f83ee2851b0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "eb97f0c6-4760-4c6c-92d8-cc3eb982b28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed62fe6-ecb4-420c-98b1-d85be926079a",
        "cursor": {
          "ref": "26c19c0f-6969-43bb-b45f-83eae7a22f21",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1251ece8-66e3-4937-8e3c-7ac9fc8f54f9"
        },
        "item": {
          "id": "3ed62fe6-ecb4-420c-98b1-d85be926079a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2f3b6c15-a38b-42da-aeaf-2568c5e8e5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d149920c-a976-45ec-b942-f98d38684948",
        "cursor": {
          "ref": "56b40c8f-ebdf-40ec-9a52-bfe9abd62e97",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a7726b1f-a90a-4e0e-8c18-96374b3f3a81"
        },
        "item": {
          "id": "d149920c-a976-45ec-b942-f98d38684948",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d8b0f8d5-63b0-4602-939c-e6a3951d6152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eaafa7b-3727-4e2d-b6e2-cdc90f498f6e",
        "cursor": {
          "ref": "ad89975a-80d3-427b-872e-c009f9048aa1",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6eb5f8b0-a779-4a94-b9e4-2cbe7635e4f5"
        },
        "item": {
          "id": "5eaafa7b-3727-4e2d-b6e2-cdc90f498f6e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a67345da-e1ba-4ee2-801f-817d11cc446c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909bbd14-2930-44fc-8a11-c1f2f0b54f52",
        "cursor": {
          "ref": "b0db8517-7874-4cbb-abfc-5c236f6ce3b9",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1b50b5ee-b008-48fd-b554-8c836d0c02b2"
        },
        "item": {
          "id": "909bbd14-2930-44fc-8a11-c1f2f0b54f52",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a3ead5c0-7910-4756-96fd-6a1186e1a508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886d8082-ae11-4464-b739-58ab9c031488",
        "cursor": {
          "ref": "86df5c3b-5b2a-4590-8bf3-b4f935d3e1cf",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "de82b4ab-8263-4027-892a-f5590f074350"
        },
        "item": {
          "id": "886d8082-ae11-4464-b739-58ab9c031488",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e03199d7-dc03-4f8c-891d-0215034a4fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fafa39-14d4-42ce-bdc8-3aafe459dd6e",
        "cursor": {
          "ref": "5e888363-9cdf-4a0f-89af-24da687ad626",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9badcb07-3039-448a-940b-bbe2fedc7d75"
        },
        "item": {
          "id": "89fafa39-14d4-42ce-bdc8-3aafe459dd6e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "875a2135-9372-44cb-9ac3-5e1a5fe699b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d543dfc5-5c11-4c06-a035-237964c7aae0",
        "cursor": {
          "ref": "025080e1-0465-418f-9d14-dacac4ce0cc4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b9173795-da7a-4260-9b32-30ccb3fa28c4"
        },
        "item": {
          "id": "d543dfc5-5c11-4c06-a035-237964c7aae0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "81fbc3e1-6b67-43e7-83b7-b8b108e4f771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d538e96f-4b0f-4eda-89a8-f425a179b68f",
        "cursor": {
          "ref": "f413527b-e564-4547-b8a7-b8be12b7b4a2",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "635a79ee-fa99-4d58-ad0c-ed554c58e651"
        },
        "item": {
          "id": "d538e96f-4b0f-4eda-89a8-f425a179b68f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6830947a-9dae-4e30-bba9-bf1a8220a1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f15d11-1b6f-4c71-9209-01e760fab5de",
        "cursor": {
          "ref": "5608bac1-d59c-4ea4-9699-1bcdcf72dd03",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3728c376-0ce5-4b48-bf9e-5d46a6d0ed69"
        },
        "item": {
          "id": "93f15d11-1b6f-4c71-9209-01e760fab5de",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "470b0d99-a34c-4b64-b6b8-dafb927ec073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f28ac1-cfb3-4e95-8fad-dbe05288a799",
        "cursor": {
          "ref": "ca5dbffc-3504-494b-bb2b-094c57a4e135",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b073993e-970a-4c85-b4e4-2543e96a44cd"
        },
        "item": {
          "id": "e5f28ac1-cfb3-4e95-8fad-dbe05288a799",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "175075a7-ff92-4e04-9c67-23e7353da0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf77d40-1088-45b8-b164-cbcd0d66a1f5",
        "cursor": {
          "ref": "99751a3c-551d-4f0f-b5b6-eab84e7fa599",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d1d44ebd-b55a-4d9a-affa-b30a1426c371"
        },
        "item": {
          "id": "3cf77d40-1088-45b8-b164-cbcd0d66a1f5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ebb348a8-535d-4dc9-a5a9-4e14d913c4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e9eb01-a39c-45c0-bd68-1798424f3815",
        "cursor": {
          "ref": "0d516df7-8b29-433b-8cf6-fad0edbf7748",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a721d58d-b6e5-4fbf-96fc-5dcd7073b28e"
        },
        "item": {
          "id": "32e9eb01-a39c-45c0-bd68-1798424f3815",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "459bed98-e897-4e0c-a498-40034dcb4e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbea8ba-0a44-4fab-9d98-cf206a98f0e7",
        "cursor": {
          "ref": "9d7257d2-d3a8-4faf-a85c-75a44a6c482a",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "93a81739-12d6-4260-9707-d81ad330228d"
        },
        "item": {
          "id": "8fbea8ba-0a44-4fab-9d98-cf206a98f0e7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "257eb896-da28-4b61-b520-d1690704c072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d890c12-efc4-4a83-b07e-a57c66142fde",
        "cursor": {
          "ref": "310e5d0e-a185-41db-9456-24963d787ad0",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a6604196-f3c7-44d4-be95-9faeb2b60a01"
        },
        "item": {
          "id": "8d890c12-efc4-4a83-b07e-a57c66142fde",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9c344656-7d13-44f5-ad61-ca91d3c7629e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bd42d9-a8ca-4fdf-9a94-2f5af2ebaf7a",
        "cursor": {
          "ref": "85942d06-c788-41b6-93f1-1b344b730b57",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d9e92743-6783-4eaa-9133-53fa99a6e93d"
        },
        "item": {
          "id": "17bd42d9-a8ca-4fdf-9a94-2f5af2ebaf7a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0dd14e04-5f4f-4192-a81d-cdfedc869e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622886a5-8710-4859-af7d-e817e8db1df1",
        "cursor": {
          "ref": "cebdee35-f622-42f2-a965-8992b19aed4b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "33db1dc5-b305-47bc-b19f-89e688f40086"
        },
        "item": {
          "id": "622886a5-8710-4859-af7d-e817e8db1df1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "436f9d22-e0f3-4212-a435-51563f219893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb4d1db-ea65-4145-aee4-11e186cd0be4",
        "cursor": {
          "ref": "6677f829-20b4-4015-8762-163b22046990",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e15cc397-7751-41cb-a46b-a2f7f3aca894"
        },
        "item": {
          "id": "ecb4d1db-ea65-4145-aee4-11e186cd0be4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "851f8485-2891-4ec6-82b0-b7e4301c6a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413af840-fd00-4f79-8e55-d44a0053cd32",
        "cursor": {
          "ref": "d373eb60-7dcf-4629-b9aa-65d4064887b0",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "705c2843-d6a7-4139-831b-6892250d1083"
        },
        "item": {
          "id": "413af840-fd00-4f79-8e55-d44a0053cd32",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c277c6cc-2e28-4546-8827-a03bc44a4203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bed047-efbd-4090-9530-8f7a69907219",
        "cursor": {
          "ref": "50c00a63-1259-4aac-b7fa-df4ee3a947d1",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "01d9ccee-e3ca-4190-8cb6-42b3a4c1319c"
        },
        "item": {
          "id": "50bed047-efbd-4090-9530-8f7a69907219",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "56b2f60d-04b7-4356-a210-ee34328d4580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ccd9c6-b06c-4a0b-a718-39939cc82138",
        "cursor": {
          "ref": "06435872-3397-4b10-b013-c72d46a9fdcd",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "899d0011-edf9-4730-a736-4d958d2749c0"
        },
        "item": {
          "id": "f9ccd9c6-b06c-4a0b-a718-39939cc82138",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d99c155f-4854-4814-957b-02c45e272b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dc013e-1d66-41cf-aaec-dc093d862dfa",
        "cursor": {
          "ref": "5aa50e38-5e8b-41ab-9313-dec766e43d7d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7575d9b9-a13e-4a59-8a08-6d42c713cf7d"
        },
        "item": {
          "id": "81dc013e-1d66-41cf-aaec-dc093d862dfa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "89569fcc-ae35-47f9-b35e-3a2dd2c122b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a276db-55ad-43f7-bd50-406830177dc4",
        "cursor": {
          "ref": "f0197037-e0d3-4378-adaf-e508424347c8",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1a9984d3-e015-43b4-abd7-32338eed7623"
        },
        "item": {
          "id": "31a276db-55ad-43f7-bd50-406830177dc4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "720eff2e-cde3-4097-b071-0e89118ceb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a96a35-7757-4421-8349-620015018f27",
        "cursor": {
          "ref": "85a37117-3b7a-4f30-a0b2-ce20bfccaef5",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1c97053e-ac69-497c-8c6d-0a3ca2a8037c"
        },
        "item": {
          "id": "f1a96a35-7757-4421-8349-620015018f27",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "01102269-984b-41c3-8ab7-15618444f6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9681de4-df4e-4fd4-91a6-342f6b573b4d",
        "cursor": {
          "ref": "cf63efc6-edb2-4b3b-9e19-29838714392d",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f42b72ec-5d0d-4f3a-bf8a-f5b3dbff0f9d"
        },
        "item": {
          "id": "b9681de4-df4e-4fd4-91a6-342f6b573b4d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7d9b37f6-13b2-46a0-9cdb-e1757bf449b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dbd003-864b-4a65-b397-0d2d0b0bb281",
        "cursor": {
          "ref": "ccea9656-b68a-479b-b728-9a1cfd336ef1",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "db78e890-9ed2-4867-8823-01953662e313"
        },
        "item": {
          "id": "a4dbd003-864b-4a65-b397-0d2d0b0bb281",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "753eb258-a4e4-42cb-89f1-de65214a7171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954e9123-0fd1-4aab-aefc-bdb394964196",
        "cursor": {
          "ref": "cc3974d3-81a7-4ee4-b3b9-50d5fc6a11a7",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "929218c8-bad5-4660-9ef2-e038faeeb0b8"
        },
        "item": {
          "id": "954e9123-0fd1-4aab-aefc-bdb394964196",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2d0efc8b-431f-4d71-ab1a-7c21df6762ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54ba61b-c7c9-4b79-b730-645d9e6a8710",
        "cursor": {
          "ref": "3b8c1e7d-c694-46eb-9e2a-e9040b7a5936",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d2b04b74-8fe6-4b7a-98f7-7ccc0966d01d"
        },
        "item": {
          "id": "c54ba61b-c7c9-4b79-b730-645d9e6a8710",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6d711d85-db98-4c01-8ca0-b037b2e40e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c14056f-8afd-4d4d-8cd2-e4bdab97eaec",
        "cursor": {
          "ref": "328cbdd4-0d71-419f-9cc4-d675014d1e94",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fd5a527c-e740-4c3c-8f11-c9a7a7fd8447"
        },
        "item": {
          "id": "3c14056f-8afd-4d4d-8cd2-e4bdab97eaec",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9fdc82b9-67cc-4ba4-bb52-df9cbd3915f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864631bb-c73d-4d53-bf05-12c32d135b35",
        "cursor": {
          "ref": "b301365d-050d-4fab-a5a9-edea67b79d8d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0e53d10e-a47c-4d95-ae34-12681fb177d5"
        },
        "item": {
          "id": "864631bb-c73d-4d53-bf05-12c32d135b35",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "89e97d31-8132-4b6e-826a-7ae398398169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db565f8d-c064-49e1-bee6-253f2dbc470b",
        "cursor": {
          "ref": "1ac26cf7-3527-489b-b741-32e0ff59589c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a93aaa5c-623b-48e0-99ca-dae114a27b09"
        },
        "item": {
          "id": "db565f8d-c064-49e1-bee6-253f2dbc470b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2d06958b-de28-427a-92c8-76d0d5850e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4948f501-8366-4dba-86f0-b1264c2a4ba9",
        "cursor": {
          "ref": "31576a00-15a1-418e-afc5-06340c35c635",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a77ab036-7f35-4576-aab7-a103f0d208ab"
        },
        "item": {
          "id": "4948f501-8366-4dba-86f0-b1264c2a4ba9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b16deb61-53f0-4568-b300-e9a298f981d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71499e8-17f1-4ce8-9147-098d026c55b4",
        "cursor": {
          "ref": "3ac83b66-2fd5-4179-9282-a1d0433729a6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "903fa6fd-1dc3-40d0-b717-9c9abd75a063"
        },
        "item": {
          "id": "c71499e8-17f1-4ce8-9147-098d026c55b4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6bfc3c77-3d16-4647-a5c5-a7c1eeabf2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2d5f5a-3b6e-4fa1-bdd1-a4f102dc0c03",
        "cursor": {
          "ref": "e6acb47b-4762-420f-8071-da4c0cfbfcdf",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9d2e4089-dd94-4694-8713-c67425b4fe33"
        },
        "item": {
          "id": "cf2d5f5a-3b6e-4fa1-bdd1-a4f102dc0c03",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cdbe664e-a71b-4e7d-be58-c402cef4cc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2406afb-4439-48b9-a9f8-d1b6f03650c8",
        "cursor": {
          "ref": "071a695b-8161-40ee-bb0a-332a449bc9a8",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "afba2f19-9152-4c01-b2b4-e883152fd043"
        },
        "item": {
          "id": "e2406afb-4439-48b9-a9f8-d1b6f03650c8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "82e30c96-612d-436d-a1af-c1e2e36e0b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700dd8ee-9f81-437e-95f6-3b95d5ed9a81",
        "cursor": {
          "ref": "37ade90d-cf1f-4fcc-aff2-b4b09646dec8",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "91ace988-8d83-4e99-b7c5-331845fac24d"
        },
        "item": {
          "id": "700dd8ee-9f81-437e-95f6-3b95d5ed9a81",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e4676d0f-056d-4914-bbd6-abf4a0f52de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1311f6fe-c1ae-4318-accd-e4dbb6a76358",
        "cursor": {
          "ref": "5336f931-71ec-4861-8769-b4b759f1aea0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "193ba871-11c5-4bf3-b7e4-92fe437da701"
        },
        "item": {
          "id": "1311f6fe-c1ae-4318-accd-e4dbb6a76358",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "491d5f52-b59d-4e73-813b-622c6c179c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee034e9c-3897-478b-b180-1c09be04ffdd",
        "cursor": {
          "ref": "c1fe3b3b-6ac3-47dd-a1ce-d1755d39bf99",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3eec7139-46b2-466e-a4d1-b7b268d6686a"
        },
        "item": {
          "id": "ee034e9c-3897-478b-b180-1c09be04ffdd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9e6d13ec-8bb1-446f-9ed0-01bb00c890b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33d6c51-ab6d-44a4-910e-189eaa2178e8",
        "cursor": {
          "ref": "98c4c739-8560-453f-b802-f276a5dfa460",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "231bbe8f-69fd-4f33-bf4d-9be067b3a7ce"
        },
        "item": {
          "id": "c33d6c51-ab6d-44a4-910e-189eaa2178e8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "04660458-515f-4f93-94d7-03a898314b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960c28e7-7485-4559-b072-1be5fbb54f7b",
        "cursor": {
          "ref": "23b3262b-975b-430b-83db-4a6c8251b150",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2323b182-2508-42f5-97b0-87bf79b6bca8"
        },
        "item": {
          "id": "960c28e7-7485-4559-b072-1be5fbb54f7b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f5880f4a-c657-42f8-bd1e-05d25a432c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df02573f-508e-4518-bb0f-94f7c88780c0",
        "cursor": {
          "ref": "cbc3d3c0-1933-41ee-a2ee-00293c9043c0",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8f0bb4f1-6238-4a0f-ac95-eeb76bef2bfc"
        },
        "item": {
          "id": "df02573f-508e-4518-bb0f-94f7c88780c0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1754e6ac-5adb-4430-9715-63b56bda7ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10e57ad-c02d-43e9-87ba-004561517236",
        "cursor": {
          "ref": "6e9b5ff4-f018-4c38-86fe-20f68d99ccb5",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4337fa8e-4c3b-4345-b4f1-526f3af9638c"
        },
        "item": {
          "id": "d10e57ad-c02d-43e9-87ba-004561517236",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cb44aff3-89ab-4eb9-8948-e72d79bab357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7b1cae-3eb0-4aa8-98ce-167ce651bef0",
        "cursor": {
          "ref": "ee3bd845-88a9-441e-a7a6-0da367990a46",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5d904679-a9b4-4c2d-a283-fcfc14a517a1"
        },
        "item": {
          "id": "ea7b1cae-3eb0-4aa8-98ce-167ce651bef0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d952049e-5c28-4818-b81d-9b19927ab605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47dc9613-3caa-4e7d-81de-59ded4b05cad",
        "cursor": {
          "ref": "a95efb73-228f-4e6a-8430-bd260f3c18c1",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "352144e4-426c-45d9-901e-d543084a4424"
        },
        "item": {
          "id": "47dc9613-3caa-4e7d-81de-59ded4b05cad",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "610d691f-3d5f-4b68-a612-e84ec01b8aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5c203a-83c9-435d-a3a4-098077be39bb",
        "cursor": {
          "ref": "495d560a-1b81-4554-89f7-75fdc2ae69b3",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b1569c3c-609a-4aab-aaa2-413c87410fe4"
        },
        "item": {
          "id": "7c5c203a-83c9-435d-a3a4-098077be39bb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "99fdf131-c8e6-4065-9297-0ec1d0a66f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e7b5d1-d966-48b8-8702-816452f9bde0",
        "cursor": {
          "ref": "d7afa326-7c87-4ee0-8df8-3b6b6fe8e640",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2ef611d7-4008-48f7-8c50-7c5be3cf36c4"
        },
        "item": {
          "id": "22e7b5d1-d966-48b8-8702-816452f9bde0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2b45698f-dc66-4326-ac1b-b26f5c77173f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c36c35-a247-4d4b-aae4-0307b16d850c",
        "cursor": {
          "ref": "071ab69d-5d09-4a10-90bf-f3352364b6e7",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "afa95542-e4fd-42d7-9108-05085d1024d5"
        },
        "item": {
          "id": "c8c36c35-a247-4d4b-aae4-0307b16d850c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "689ce234-73bd-45ab-8cdd-9c7d30ad220d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e8f045-f2ff-45c5-9730-2e264e79d662",
        "cursor": {
          "ref": "584088b2-f425-48ad-9c03-d709549a4801",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7f8e480f-f318-42de-b7b4-d1519c0c6a20"
        },
        "item": {
          "id": "46e8f045-f2ff-45c5-9730-2e264e79d662",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "409f7029-47d1-483c-8a1e-a61496d3abc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e00fc81-76a7-4c3f-933a-28c5b19cc3d0",
        "cursor": {
          "ref": "36bc577a-e06a-413e-9e07-22abe85a3e65",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a3e4eb61-adff-46dc-b296-25acfd1f7c7b"
        },
        "item": {
          "id": "3e00fc81-76a7-4c3f-933a-28c5b19cc3d0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a3250f18-f8c9-4f7c-b142-aebd49ee42c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f16b5af-faf6-4ec9-b86f-99453cdee933",
        "cursor": {
          "ref": "4825e999-09ac-42fd-80f6-5e2b1cc93024",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a2d83160-c4f3-4810-bb66-66d6b03343e5"
        },
        "item": {
          "id": "2f16b5af-faf6-4ec9-b86f-99453cdee933",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "317112d9-3475-438b-bec8-6b45e5689886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b12534-b442-49e0-aee3-0092793c22a1",
        "cursor": {
          "ref": "4bcd1dec-647e-4094-a56b-124cd61d8bfc",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2b7388a4-86bf-4638-8b8c-c9ad7a043cc6"
        },
        "item": {
          "id": "c8b12534-b442-49e0-aee3-0092793c22a1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5ba1fffd-fd94-48dd-b374-349df16bd748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e65f2e-bc0f-45b4-a3bb-6ac4164392a4",
        "cursor": {
          "ref": "f88eea59-828d-450c-bfd9-c8ce70e57428",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d11c2234-552f-4042-8368-10430638ce54"
        },
        "item": {
          "id": "41e65f2e-bc0f-45b4-a3bb-6ac4164392a4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b9d8c01a-4e5b-4e28-af42-d223ff98fda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b9b984-942f-4501-948e-d3790cbaa8a1",
        "cursor": {
          "ref": "6c6e7fb2-04fc-4937-b32f-1d840037513a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9e9eada2-f98f-459e-a4f8-fa71cc1e5986"
        },
        "item": {
          "id": "d1b9b984-942f-4501-948e-d3790cbaa8a1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a5340df3-2559-4775-a112-678c171b4a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635fcb33-9c80-43bb-93a0-473476aaa410",
        "cursor": {
          "ref": "cccab8f0-9d20-459a-bfc4-fe52467e5c95",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cbdd3b13-b571-4d39-99ea-b7af3796caab"
        },
        "item": {
          "id": "635fcb33-9c80-43bb-93a0-473476aaa410",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cddc9aa5-336f-4f0a-a9dd-a4880f5fd059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c482abb4-9b62-4346-8ce8-30bb2e6c90db",
        "cursor": {
          "ref": "eb4bd18d-c484-4437-bb55-2f280a9a5462",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8cd41f70-d944-494e-8a8a-6aec1a75f44a"
        },
        "item": {
          "id": "c482abb4-9b62-4346-8ce8-30bb2e6c90db",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c2342c60-1cef-4c77-b333-00376bc4fb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b49bf7-400b-4a76-a13d-bdaf39696752",
        "cursor": {
          "ref": "398f9e31-a03b-429e-8b17-85945829c156",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "56a6a6bd-8c57-45e7-b3cf-b112971c9cc8"
        },
        "item": {
          "id": "b2b49bf7-400b-4a76-a13d-bdaf39696752",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e06b564e-194b-4fc2-a572-ceffabafdfaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c849b8-ad67-4711-9e8b-182ec52af97e",
        "cursor": {
          "ref": "9b641e7a-cf73-4a7e-89f0-7e15c65d41b1",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "528f75a4-6232-4c09-86d3-745ad2f86e2d"
        },
        "item": {
          "id": "e7c849b8-ad67-4711-9e8b-182ec52af97e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "758eaf0b-f320-4ccc-ab5d-a9151a6e7183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1712f94-4811-4cba-bfe7-3613c19f5bb6",
        "cursor": {
          "ref": "d465bf2c-f90c-443d-8a81-df017707ccfb",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9ab878f7-f965-4c1a-9cc1-d3c2f12f8cf2"
        },
        "item": {
          "id": "e1712f94-4811-4cba-bfe7-3613c19f5bb6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8cb490cd-481b-44af-88eb-5000ca8ae417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d28909-3eab-4de8-bfd0-129a2aecf8ae",
        "cursor": {
          "ref": "5999a047-3a6a-4ac2-b771-8278170a9f8d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "579249db-a1d3-449f-afc1-7a9e998c8483"
        },
        "item": {
          "id": "21d28909-3eab-4de8-bfd0-129a2aecf8ae",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "af98a743-e51d-4f00-b6a3-9aa8b641f2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed4e311-a1e9-455b-b528-caa178248e0d",
        "cursor": {
          "ref": "5fab2098-14a0-4927-9cca-382dacb1c02b",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d7c90eda-6816-4e54-a2bc-d5cc86b894b7"
        },
        "item": {
          "id": "8ed4e311-a1e9-455b-b528-caa178248e0d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b23c710c-cbd6-4a55-b8c4-e795ff808cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5a3a16-34cb-4d2c-bede-0bf158d02b89",
        "cursor": {
          "ref": "366f9ba6-9d78-4c11-9ad4-b469e10c7061",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b8aaf3ce-a9aa-4344-9beb-3f3f05383941"
        },
        "item": {
          "id": "7c5a3a16-34cb-4d2c-bede-0bf158d02b89",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9d9462b5-f6b2-4268-afdd-11a357cd6675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b35318a-513f-47a7-84e9-c2c60a38af6e",
        "cursor": {
          "ref": "5b74f73a-d96b-4c02-927d-ab6f4c56197a",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "01687feb-2a31-41b6-9de0-f1d39275b540"
        },
        "item": {
          "id": "6b35318a-513f-47a7-84e9-c2c60a38af6e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7a794c34-761e-44ef-8477-c48c7ce349c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e7d6bd-8906-4b38-bd4e-2af9a295fa49",
        "cursor": {
          "ref": "6bf00506-29dc-40fa-88a0-e27cd4de44f9",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1bb009b0-c237-4695-b16a-fac5d6c7c1a7"
        },
        "item": {
          "id": "17e7d6bd-8906-4b38-bd4e-2af9a295fa49",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3b39f063-f294-4297-957b-bcd65b89df5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59031535-ed6e-45c8-8275-c735a98e4233",
        "cursor": {
          "ref": "4f2a5dab-df25-48af-9995-0fcc6c77cac4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4f46540f-57dd-4a41-a4da-815d12b034fb"
        },
        "item": {
          "id": "59031535-ed6e-45c8-8275-c735a98e4233",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "228430d8-bd63-40ac-8c56-1056b6cb0ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f32f610-23e6-4a2e-9552-7daf93a60f51",
        "cursor": {
          "ref": "98c8389f-89fa-4fa9-9f00-1a7da5b740c9",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bf8ee5ca-40b6-498d-bd0f-a05388940ee5"
        },
        "item": {
          "id": "9f32f610-23e6-4a2e-9552-7daf93a60f51",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "50872457-62a5-443d-b591-2b2d4bcf230a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c99305-0d66-48cf-817f-0773b9803942",
        "cursor": {
          "ref": "4b534228-ba1f-4f4a-af81-ea17d15c6c1d",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "701ca1b5-4472-43c5-8292-5562457ae111"
        },
        "item": {
          "id": "80c99305-0d66-48cf-817f-0773b9803942",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4932ddc9-e638-47fc-a6e5-7b31d5c3b265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b059fe02-2257-4d91-9310-77c259d8decf",
        "cursor": {
          "ref": "4bda3844-3fc0-440e-adfe-b9ddde0fe26f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7c23dc5f-b991-4f2e-8435-a33b645124f5"
        },
        "item": {
          "id": "b059fe02-2257-4d91-9310-77c259d8decf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "30ec80f2-59c4-494e-aa2a-8172fbd79dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651ff19c-6b82-433c-af3c-3a56309c88ae",
        "cursor": {
          "ref": "6c45d19c-cd69-451b-8d70-2bbbd2632a8a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8179631b-bc7f-4b08-b40b-12a144ee3bf1"
        },
        "item": {
          "id": "651ff19c-6b82-433c-af3c-3a56309c88ae",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2f0f00b4-9651-4cc4-8603-0d6056dd562d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c237d115-8835-452d-980d-adb6d0d7df71",
        "cursor": {
          "ref": "1f6273ec-1800-4528-bb0a-b72d633d7c5f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bdaa4f19-1185-4c4c-95a3-67a88938d33e"
        },
        "item": {
          "id": "c237d115-8835-452d-980d-adb6d0d7df71",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7b32ca45-4266-4db0-bdb4-9571be889d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d555a401-3406-4581-8f45-1e7f75bddac0",
        "cursor": {
          "ref": "674d2fe3-0bbc-4460-ba21-261f39662155",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "66baffe9-dc40-4f86-bf7f-63e3521b6c5a"
        },
        "item": {
          "id": "d555a401-3406-4581-8f45-1e7f75bddac0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d17a8b40-0573-43d1-acc5-4aa909c77dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb8d185-50f9-4aa9-b3d0-9e94e60a60d3",
        "cursor": {
          "ref": "fa93e8c9-0732-4040-90eb-f87d931c34ca",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3b64057b-8194-45b5-9edf-428a97d692cc"
        },
        "item": {
          "id": "deb8d185-50f9-4aa9-b3d0-9e94e60a60d3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "999afc4a-65bc-4ad0-a94d-12df51473bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c957cb0-382c-417b-b228-84b353e8a93a",
        "cursor": {
          "ref": "913d0752-1d24-403e-b4d3-803c0ad1448c",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "03762882-2eb6-4906-91cd-b384a5250a8b"
        },
        "item": {
          "id": "3c957cb0-382c-417b-b228-84b353e8a93a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7385541f-43c1-4835-9986-4fc7636a1a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38a2382-a7ad-4f52-9761-88a1307de261",
        "cursor": {
          "ref": "01cb04e2-5bac-4c5c-9e50-8d51e27baf84",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b5c61ebe-f733-48b2-b023-5972dc143c25"
        },
        "item": {
          "id": "a38a2382-a7ad-4f52-9761-88a1307de261",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "915f85de-4b54-409d-8320-c020c162f017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a6a952-16fa-4c78-bcbe-727288e0c2ef",
        "cursor": {
          "ref": "b0ec4094-5c3c-4a51-9a6c-085335d27317",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0a6e6074-ee97-467b-aa16-167e914e16c8"
        },
        "item": {
          "id": "52a6a952-16fa-4c78-bcbe-727288e0c2ef",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "14cd331b-6848-41c6-ab26-124fb226bfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b3374b-376b-4a2f-9cd4-77df143210d6",
        "cursor": {
          "ref": "20771df2-02f4-462d-b1c5-c5b465ff1a5a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a0c3fe9c-a7d6-4fa2-9db2-8d979332ad95"
        },
        "item": {
          "id": "96b3374b-376b-4a2f-9cd4-77df143210d6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "819a742a-4ebd-49c1-9c78-31cb2eb378eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96b7258-fe2a-4b0d-9865-7ee62396965a",
        "cursor": {
          "ref": "50ef1b8f-b497-4fd6-8efe-75debd56a6d0",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ab12425c-1ef7-40c7-8949-c2d6be253e3e"
        },
        "item": {
          "id": "a96b7258-fe2a-4b0d-9865-7ee62396965a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b3b4d782-5e72-4958-b6bc-285c1d9f1563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba4ae68-8fa3-4681-aa31-9017fdc42116",
        "cursor": {
          "ref": "a5c6c515-1920-49f2-bf2c-58c67ac76f46",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3927a00f-af62-45d3-8d86-a060541838d5"
        },
        "item": {
          "id": "eba4ae68-8fa3-4681-aa31-9017fdc42116",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "05fbe315-231b-409c-8e63-bade62be9d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fe42e5-c12a-4c04-bd4c-03deb0c82911",
        "cursor": {
          "ref": "0b216589-3c96-4775-a307-3611d49539a8",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "064e2f1a-b2dd-4665-8a61-dc98b41b88c1"
        },
        "item": {
          "id": "20fe42e5-c12a-4c04-bd4c-03deb0c82911",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a65042b5-f109-4daa-b293-c450dcb3306d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e6d230-63e5-418a-8f85-d72e8487d921",
        "cursor": {
          "ref": "6549a241-48f6-4670-a97e-8f4477a471cb",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "81e80d0b-c3ae-42d5-aefd-0dd22e16737f"
        },
        "item": {
          "id": "a6e6d230-63e5-418a-8f85-d72e8487d921",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b199c0ad-eb97-4d12-9daf-7d19ca14eccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96e0bfb-079f-4790-a921-56a869c7594a",
        "cursor": {
          "ref": "a36072a4-f428-4996-a6d9-4bbf4c63f77f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "248fe9a4-2139-480b-85be-0a7eed37da24"
        },
        "item": {
          "id": "b96e0bfb-079f-4790-a921-56a869c7594a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5618df84-f3a4-4027-8b7e-3d34978904f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2268f2b2-58f9-4a75-a87c-572cf52952f3",
        "cursor": {
          "ref": "ac497edb-285e-40db-a5ee-09e2349e6d05",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8b351585-0b90-4e2f-ad17-2b768ae6e6ff"
        },
        "item": {
          "id": "2268f2b2-58f9-4a75-a87c-572cf52952f3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f02a8d47-7531-4d10-88d2-d83710787357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed868338-76d5-4a0b-b018-c3e384817b68",
        "cursor": {
          "ref": "65d4f4fd-b760-4ce1-a799-d8e2302d088f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "752eac1d-0bed-434a-a1f3-bbad979bd649"
        },
        "item": {
          "id": "ed868338-76d5-4a0b-b018-c3e384817b68",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "253a554e-b6d1-4532-93ff-c5b5ed7c9b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed0c720-ae4f-4d81-b92b-1c30c6e83378",
        "cursor": {
          "ref": "3f079d5a-7e6f-48e2-8ee7-eaa99cd58fe1",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4e7c2324-0eb6-4fc8-899b-c1511a6b2ea7"
        },
        "item": {
          "id": "eed0c720-ae4f-4d81-b92b-1c30c6e83378",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6dd2313b-a4cd-4dd3-a6a4-505141f78d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e3235b-c338-4f0d-b509-310b0fa6825a",
        "cursor": {
          "ref": "c2025dc4-35d3-4a5b-97ea-6c32189f97a3",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6559cbcd-37f5-470e-8214-549806acf9ff"
        },
        "item": {
          "id": "17e3235b-c338-4f0d-b509-310b0fa6825a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b95e2eae-a1c0-4d50-b57e-d8fa4bf2fd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d500b06d-9a35-44aa-98de-e83909834708",
        "cursor": {
          "ref": "563584f7-8ef9-46b0-b6a8-04f323712d00",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e409cad5-4fdf-4eec-9854-1cfdd7e414d5"
        },
        "item": {
          "id": "d500b06d-9a35-44aa-98de-e83909834708",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "383f5895-3d2c-4ab3-a927-b2b9ca555eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99498102-5180-4d7d-870f-9d65fd99ebec",
        "cursor": {
          "ref": "86bd5481-c5c2-423d-a799-90a5d5264bae",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0a34b56c-0b26-4d49-ac6d-c00a2a3a50c8"
        },
        "item": {
          "id": "99498102-5180-4d7d-870f-9d65fd99ebec",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "44315367-ea9d-4135-b0f4-ea25804b9130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4a148e-1972-4d54-9f0e-d5abd0ac34a3",
        "cursor": {
          "ref": "e6d02395-4cd3-4f8c-ad17-075b792b6a74",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "281aa17a-df63-4e6a-932f-0dd6f3a49d70"
        },
        "item": {
          "id": "eb4a148e-1972-4d54-9f0e-d5abd0ac34a3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "11a8f313-7b1d-4072-9b96-9dcd2b18dc72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5ffecd-e658-4061-884e-8063c73cba87",
        "cursor": {
          "ref": "e95c5582-f9a7-4bab-9eb9-699cfca7a89f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2519b8b1-0c19-45b5-bdd0-69462635d60c"
        },
        "item": {
          "id": "df5ffecd-e658-4061-884e-8063c73cba87",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e4726f2a-366c-4ad2-acdb-97769afdd716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a1b3e4-de29-49fd-88e4-b0fbc165e0bf",
        "cursor": {
          "ref": "ff8a2abe-51aa-4126-97f1-54c943890d45",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b8071953-cd79-44e1-a735-7bc97dc218b8"
        },
        "item": {
          "id": "05a1b3e4-de29-49fd-88e4-b0fbc165e0bf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9144dbe8-8879-4835-91f6-803d42bd89f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c20ab8f-2304-4bf2-98e8-8081f235ff59",
        "cursor": {
          "ref": "9a149ae0-75c0-4403-a8b4-b7838091a6b8",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4f7e184d-4556-4753-b143-5bc0869151f4"
        },
        "item": {
          "id": "5c20ab8f-2304-4bf2-98e8-8081f235ff59",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9e47ffad-b8b7-4e18-9f00-b9e793605f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d07fc24-c120-4c7c-9753-d10ed46583f5",
        "cursor": {
          "ref": "56ef10d5-9c4e-4fa3-bc4f-9916fbf472ac",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c7c2d647-8a29-42a9-855c-8b4d58cb4a39"
        },
        "item": {
          "id": "1d07fc24-c120-4c7c-9753-d10ed46583f5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1c5dfbfc-7751-425d-90b8-32fd75beb1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "3e8cf38e-e311-4833-8686-db51d8a7d6f4",
        "cursor": {
          "ref": "8e693727-f74a-46a8-b229-3e764c75f2a4",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f4554cee-84d1-4b33-954f-97abf8b27170"
        },
        "item": {
          "id": "3e8cf38e-e311-4833-8686-db51d8a7d6f4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8a15159a-dda2-4bd1-9876-3a702a289056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "04aebfbf-1df7-4660-9e94-3feae9ab18ef",
        "cursor": {
          "ref": "7a029079-5967-4a15-95dc-bee2aab54a78",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4ee0a628-c9f8-46cc-af8a-b6a17d27eaf9"
        },
        "item": {
          "id": "04aebfbf-1df7-4660-9e94-3feae9ab18ef",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "efba5d5b-adca-4fe9-9b0d-2ddf246dab6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "39a120ab-8991-4cbd-b981-698a20d58459",
        "cursor": {
          "ref": "1ab673a5-57da-4d34-88ff-caec23b812f9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d08a7925-8ac0-4245-8a36-edaf073f8a5c"
        },
        "item": {
          "id": "39a120ab-8991-4cbd-b981-698a20d58459",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f77956e2-0de9-4574-a509-2c6fd7cf2625",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a120ab-8991-4cbd-b981-698a20d58459",
        "cursor": {
          "ref": "1ab673a5-57da-4d34-88ff-caec23b812f9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d08a7925-8ac0-4245-8a36-edaf073f8a5c"
        },
        "item": {
          "id": "39a120ab-8991-4cbd-b981-698a20d58459",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f77956e2-0de9-4574-a509-2c6fd7cf2625",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55206032-b976-4006-a9f5-f30d677a3ec5",
        "cursor": {
          "ref": "65939ef7-d6e9-486a-a995-c5dd4e262bd9",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0d1c0856-4e9c-4a6c-9305-a005e9e8b320"
        },
        "item": {
          "id": "55206032-b976-4006-a9f5-f30d677a3ec5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1992b07f-f243-4d51-a37b-bf6fed74d0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec1df19-f3c8-4ae0-a381-2c02888a1119",
        "cursor": {
          "ref": "cb485535-1d15-4964-a79c-e106ba8620f3",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4d6c2006-e5c6-413e-8429-7d0d5e142f31"
        },
        "item": {
          "id": "aec1df19-f3c8-4ae0-a381-2c02888a1119",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "049b5982-2122-4a6a-8759-d89cf7f9960f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}