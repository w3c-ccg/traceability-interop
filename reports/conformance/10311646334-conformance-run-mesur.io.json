{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c512a7e1-795f-4341-9dfb-a81c553e479b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cb941fd4-8f7c-4fa0-9a26-80a45a5f2f4f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "712efb5c-96b4-4ddf-9a24-a33525652af5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1136b207-eb6a-4c29-b7dd-bd2bef8cec10"
                }
              }
            ]
          },
          {
            "id": "9cf5e2f2-62ee-42f4-9336-e55adf2a7a12",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10e746a2-b463-4083-b56a-c5249ef56a69",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4b3791c9-7491-4885-9d70-3a654a376052"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "87e1136c-c83e-4bf5-9b21-9927acdf337a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8d3b983f-9c09-4119-af6a-54ddd8c5e8ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "816dddc5-ba74-4eee-92fe-fadff649ad3a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14f0f884-bd50-45dc-8043-6e1d01b4bc7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "062bc05c-1cdb-4a98-adb5-49a2330da82f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e25815b-c7fe-4870-947c-247f01058d2b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "781a191e-478f-44e7-9814-1d7d1e316130"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad500046-7a9e-4258-843e-a002dbdbb61f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3efe1fa-84fa-4292-8766-5733780bc790"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f02ba6b-6734-4923-8397-a9734397c89e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a1143740-0d1f-4516-a825-ca6cabbfa29c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46560bb2-445c-4fa9-a69d-c9d406b33eb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b1d4c89-4228-4d31-a4d9-59cb0eb9ac5b"
            }
          }
        ]
      },
      {
        "id": "81c000ed-3f66-4031-a473-c79870ff49b0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "de8e51c9-1608-43e6-a646-67137ff99c26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a5663c0-021b-467d-ae6e-40c4c38c7dc2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8b853488-7859-4edd-a8de-2ba4b49eb84e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28a1d26-433a-4a73-b1c3-6986c951e351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e61e2b09-3b2f-40a0-8e92-af44d9ef0489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961e46fc-8ba7-4b5f-b024-84249ae5205f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c83e6ca-1c48-450e-8322-ec90b3c2b075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d28eb29-311c-4ba6-91e5-38125cb93d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866bc318-7305-4f47-880b-9ba6c7da7ca1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171acaa6-e0a0-4fa0-b856-d3016545eed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d0d168d-3bee-47ed-8a9f-b6d4f1b48f23"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "37380acb-83e6-468f-9435-1ed5f0d0d1cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d34bf592-5c05-473c-8c5a-7b4becbc9184",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cc6a67-f9ee-416a-8812-bfe7d542c8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d454ac9-97df-4d72-b417-8352150eb58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b89b85-9643-4ce1-8258-2c7fc9a9c1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8d5a44-cdae-4be3-b20c-b9fb6d7987d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "07e497d9-0d84-43ad-a833-9ef3d78dd157",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0e17b6a3-7620-4ad9-88fe-da06716543df",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3cebe01-eb39-4342-9316-05606fab2141",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d9bddca2-4ed3-4048-ad33-4c8d4c1b9b43"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04d8bfa3-ee12-41e6-a7f2-ae79da67904e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "dd6f9099-608d-462c-9c83-3d107b401122"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57f33d06-0bd3-48ae-897a-33882a55c0d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45e9b146-135d-4c1c-8f73-87cbc5de0005"
            }
          }
        ]
      },
      {
        "id": "b0afd22d-20a3-4632-9f1a-c39ed30cf293",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1eb68e66-6b76-4f55-b2eb-1f9a11cd2a86",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c67de95-92e7-4166-b5ae-ca1a95beb464",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "37ac1892-86b3-41d5-8b9c-208b9aa93fb2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb6dbf6-be5b-48fe-a9a1-876c9e950666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf43d8a-a5af-43a1-8d38-8c75f007c054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fb5f7d-0020-4b1a-a082-e41fe38e5e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88cf50d6-2be2-4ddb-927d-5e6a610ea0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a2f43b-321f-4fcc-9513-f57e6fdccbe4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9fc398-61ae-4721-b4ab-c38209ee7741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad55be7-ccff-46c4-aecf-362eab5ff00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbc59b0-0689-4652-9b3f-417a638b5a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49fb9183-22e5-4571-92b9-833bfbc45ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812ebe02-86a0-49bf-b820-f9c528c26a2f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a875ac46-1f6d-4083-999b-f759d71abffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694601d2-7165-448f-a074-d3d3292b2582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd66f44f-792c-4754-86ed-1cb7e30e2048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd1035f5-196f-40e7-80ae-90b0034c46c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e038cf5-4d75-48cc-b157-b2366b47fbda",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e6235f-272c-42e1-b8c7-b227d0facca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f793dc-50e5-4bbe-b92c-d16882d0e07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e636815a-b632-4f91-84bb-9c07c63f9238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5d550f9-ee40-4135-8cc4-e49dfee972b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14830cc8-ffc8-43b7-8b30-69b8e5b36f0b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6976b384-78f2-476f-bbf9-e4d4592be552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba09a91-5b36-46f3-9bd9-702ec1e183ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65c721f-a0e8-40c4-aac1-5efcb3737fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a715a0d-0d9e-4fac-8403-2e7bbea43ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fa906f-c52f-4882-8234-e4acefbe7712",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584689c5-659b-4a1c-9dc8-7fe6f6b0b555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e584102b-42fe-49cf-9851-c6c31bd070ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43592422-75d7-402d-909c-3e1d821b0419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df266402-c869-4764-a88e-daaad1c3c620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e5666f-ef18-4b2a-8fb1-e342fa96f2a6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ca5585-98cb-453e-a581-b85f7cf27cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a83b452-dfbf-4586-a837-d75fa041c52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1590d3b6-495d-481a-bf80-9ce981b36d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09af0a7c-c0b3-4b28-99a6-2f985fd39900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baafd621-7b64-4d7a-ab2a-10600b2274c0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7a3068-3c40-4b14-83e7-f30fd4d045ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44026ab2-29a0-49df-8737-685c381357ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69757380-3388-492e-ac2a-b5f899137204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "463f5d34-75d5-4c39-a5f5-311b5f4be923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45a589c-51a8-4dca-849d-11d0ddca0449",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43dd0a0-b7c9-4302-a6a8-702a042636ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c015af-732c-4bdb-ba5b-651a1d0a51f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27efa32-a8a8-4ebd-88a2-3f042bca74c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5898ee5d-9095-4a5a-b57a-26d1eeaaa801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966e1eb7-ada5-47a7-93ab-c563c6db17f6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b2e528-657c-4698-bf11-e878cc4d3cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d6c96e-d3af-4ded-ba02-5fe7f0fd8d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9067fab9-09a6-4200-9861-e1c634632174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efc1da9d-0a1f-4db8-be84-b827a5dd8853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841c6e27-caec-4aef-9698-7fe4e2b5a13a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4219a27-4341-4e25-9054-c0fb71ca5e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09004a7-04ce-427f-bfea-a7b48a3194b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e340e8-0b5d-47c6-9212-1e2bed0dd5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0f221d1-b646-4ff4-9f12-fcbeee6f6edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8092ee0c-0b1f-4edd-acff-b96b327fe6c5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bda5cc-c19d-4199-a671-599d477e9414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8add1ff2-cc49-4471-8785-be178200345f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd9f753-25d4-4e8b-8d6d-41c34068fd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e9f6697-4615-45f3-ad02-95fb419af0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb4aa2f-486e-489e-bd28-8cbd3cf4c009",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb4ac3c-a0d7-48bb-a347-196c35786c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1eab6a-855d-4920-9a30-9da5b17330ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8940a15-3eb0-4b2e-9d3e-a4e92c5c4896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1b245c8-33ea-4309-9006-82757d825016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3caaa2b-87e6-4b35-ac97-c955a7aa1a03",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e694f3c-bba7-4f32-8ca1-374111d23722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5eebfc7-8263-4653-a99c-61bf559916ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40741f3a-5b60-4148-a657-5336cb2b9ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60e547f6-2bb6-448e-9a25-439368e0eae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884aa123-0d49-4515-9f2d-80ee12430931",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38cc4d9-f7ac-4ca2-bb21-0e821ebb2312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48425c12-7eaa-4b09-9c58-0f04c4a5e4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2379f3c5-2c1a-4998-8783-3937bd9b6965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1c5d1c1-7ad7-49bc-88e2-0309756e35a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e279b5-42c6-486c-a1eb-924250b3f033",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8061b82-fd3e-4779-ad68-91ea93304757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096d3526-5f22-4fd0-be17-f083ec62ad10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf499f4-f304-4f62-83b5-4dbebb07e122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a62aa589-3d78-4846-b963-3335bee19342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbba30e-e77d-4ba4-8aaf-f3ba448fa0f8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe94549-4de0-4c34-8c95-090da3533d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c25e3f2-1161-412c-be5e-752106529837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdca107-8104-4df2-8f1f-01344f8bc248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "726f38c0-cbee-49bf-a95f-922567d936f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31698a86-cc88-4302-b267-064c77550431",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d7310b-3e92-4d80-b50f-7fa6cc35714c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a569d3-50a4-4f0f-bb92-89ed5ad49738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d253c75-113c-48ef-962f-0645de50fcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c67f0da4-3814-4c4c-9415-c83f770d3129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d19c96-cffe-485a-bc7b-5d43457db0e0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0394a01d-e5a5-41c5-a020-1e3de7636282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de442a90-7862-4390-9658-52db31268bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f37220-cf6c-405c-aee6-f368558d3112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea83ec8-639b-47cb-b18c-805f22e05cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2628f84e-005b-495c-970a-55fd81b6815e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72343411-11d8-4292-9c2a-61bc65fdafa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f181481b-5122-4971-a4eb-63621fa3d2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1cd8c5-0780-4bbd-b30e-d41e82a952b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd068df-3438-4602-b8df-e3483f3f33f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c44635-bad3-4931-aa5c-f51e7e7972a0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af948a79-edab-4092-83e6-2a24a0ac0cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0c8299-d048-4073-9513-3c683b87b852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1421bc-e432-4659-be9d-394e8713660e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a3d6dd-ac0f-4b76-8c07-73c04fadc5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b1a282-4616-4e06-86a2-422255f8f09b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91f49aa-bba1-42a0-b42c-928cf339854d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8bdccf-c0eb-4cec-a0a7-49baee5d6475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41734b1-3c76-4884-9f6a-70211e0d3975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09ffaaa6-b3c7-4a9a-9a7c-fc144f07162c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78edc06-0488-4983-b71a-b4ef0f056f57",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e370f587-e5a4-4c4a-9bc3-67b24611b7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4176a601-a113-498d-af1a-c1be7a891f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d5fd5b-39ec-4ba2-8118-c296cfa3e49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6a3249-51c9-44e0-a9f7-7de59616e72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f7cfa0-ad1c-4df7-a33c-be9e73c2dc89",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486e864b-bd36-4f5f-984e-12a542533db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a1859a-407f-4e33-9d0d-b3e79fd9c7bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068939b9-8074-4e30-a246-3be5b632dbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "90556799-990b-4b92-aed0-6c15242bafc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1feaa3e-6e0e-4bab-8f8a-b23cb7bad9ac",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041d336a-4f19-4a7f-9870-566d2bcfd452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bf723d-6d5e-4b81-8b49-d1791477dc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c5a794-a177-4ab2-a6dc-6d1f9ca16858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b5a131-b98f-4e8f-a5b1-0222217ae770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd7a262-4d3a-40b1-abd2-98f5f59bdb0e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de521a24-e872-40f5-bc68-ae1f76acc7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68b12ca-3419-488d-9e59-a411ecf0189d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329e1d49-0a68-437d-b78e-9debe8508b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9f71de-b787-4d79-9508-79f754f5c65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b23dab-6505-4dc7-a447-7cb898ad37f5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fdacc2-cba4-49f5-a545-6a6eb474c7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23faa178-86ac-4e80-987f-5a3e87b41323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efff847b-2a79-45d6-927f-9818a0f4bf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70802f43-5572-4aed-82b6-3a8a6cd107a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bab40c-03fb-4d98-942e-7bfb39c35d32",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f65d03-48f6-4063-bbbc-2bf4c8d08e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d52c688-6008-43a4-bd98-41caef029df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17998c17-678e-486a-b3df-9f7533a0017a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4a96cd-f058-4e0c-917e-e4bcb62870fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f4d719-dcdf-4d43-8cd1-4a11d83ec9e9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350fb1b8-242a-4ed5-952e-abdde4550dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf29194f-d703-443d-aaed-b10aea698d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378fbd9a-118d-4a4e-84a8-38f5d0829468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ca0511-6b2f-4b0f-8adb-6753e5f63b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02c0bf4-494c-4cfe-b4ff-0eb11be1538d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e869676-89d7-43bd-a166-c4b9e3aa9d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e333a4-4fb2-4d52-b1e0-651dab604803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deceddc2-58cb-4d13-96d6-c798b069c1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9695d57b-ed47-432c-9eca-05f47eedfa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f54457-3e56-45a2-aef3-7b90d4ce16c3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da14f4f4-bf7f-4f59-bea3-97fce103c8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51d1279-893b-4cff-bd46-ad45bbc4fd67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f8c9eb-07ad-47b6-ad6e-c8da65b6faf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b3c451-1d00-45ed-b4e8-3e2d93d01cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60eb199f-74f2-436b-b460-0b926366c962",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd8f269-a00e-4792-a181-0e54c726afb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69721478-f7f6-43b7-8af5-8051ea86648f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3230c9a5-f2b1-457a-b02c-3f408092d922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a0f666b-dc24-4550-80a3-14103b6830c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98b3216-dab7-41db-bf44-cee7e294a7e1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f648087-962f-4a35-a11f-41136b72119d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220cca56-df0c-4004-96a5-bdfdf9892de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91db836f-350a-43a5-a008-11ace96e3e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ec607a-b025-46f9-ad85-92d40594355c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1177f7-103b-4c18-acee-9c410159c390",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c44a4ea-578f-4d2a-8f5a-36c90dad8d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f3dacb-a283-4e9c-82d7-6e19c2162939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bdc187-63ae-4d72-9d9c-a18fb4d14ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "631e6777-b228-4241-9f24-4024bb6cf81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94dfb95-f95e-4aaa-9831-10f1fa14fee1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368d8d79-867f-42a7-bf0b-93caa2e1a6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57b9abe-09d8-4ca0-b803-0e19444e8ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfda67b-e4cf-4074-9541-7b41c2801917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3078196e-ecf5-4dde-8a71-f4fcd5c1365a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2496577-6615-4f29-9924-65a8cb67ccbb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba2554f-a470-4d61-a60b-16c96c21906e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8257d215-269f-4d2f-b6a2-0e23c5ab95da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7754acb-1dea-4970-b068-d0e53ca6c2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b6b2af-e1ba-4bb9-b57b-12933e78a472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d859a10-7c25-437a-900e-3eecd8f3d0d6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d9211b-d370-47a0-adb7-1e25d6719dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740fad18-fd46-49c4-b0ac-0b70a9622b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b6f41b-f437-4db4-9e36-e018e1fe154f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "395fdb0f-2f24-4db0-bc3b-94f52dc9892d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17390c6-d301-448d-aa4e-ad92641ce6cd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c1f0af-24c6-4a93-b964-5e5a3e7059a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8352d71-9e35-471c-a135-f6d5d3416c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58132821-5f33-45ae-b448-892775c0ab67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "174eec28-5ea0-4dca-8396-15a228400afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230cbde2-33a2-4574-8e25-f9011e969f02",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdf9194-b368-43fb-92ce-a44ab257d7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a484f7d5-261a-4eb1-bed3-823fdde13d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58708c1f-3433-4601-b95c-7a17009aff2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2a1181-77e5-4ad4-afcb-7a7ef905bde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fc3ff2-a810-460d-bf92-e2a05e5fb6d5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90aa776-1dd5-43fd-bb2b-155a419c6885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05752199-51e6-45e0-ac05-183dde77461b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e0f1e2-fe92-4859-a0f6-e4ed467612ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "07ee76b9-43ff-4e03-b09a-549ee7f94fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818eeaf6-a2f8-479d-8d7c-914592ab6108",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca9cc7c-78fe-42ce-8206-c8a57fe8e65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93aec7c2-e5aa-4dde-bae0-ad1cd299e6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da39029-9966-4be0-a19f-4721ec2de717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9a1435-d573-41a9-b029-7b114d31e57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c3c310-5c15-4e03-a378-3431eff596e8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b562881-5ab8-4956-a540-375967f3037f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9df670b-c241-4e9b-ac10-5ce44e9ba054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cf37aa-01a3-417b-b756-23b4d5dd814e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0b0a86-417e-4cd3-8ce2-7433a84480b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aafad1b-1227-471b-8474-67216cee8f8f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816914d4-77b6-4ee9-b6ef-7417344d4e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6cba692-212e-4351-b880-efb6709568c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eae4011-20ca-4c70-ad89-dd80233dfa60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c67f3cc6-f19e-4d6b-88a1-1855dbf0f1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135c5377-38c2-4b07-9bd2-b57e71eb9b72",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b39b88a-74ac-4e06-9d5f-092c2d66e0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384f020d-73a6-4340-83ec-6fc702989c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c057f5-da12-4197-88fc-6f0e12cf6e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "83bf0479-9f62-4420-81a7-4ee6c19fc21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcaf0fd-8365-483f-8556-2697244e8f30",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7094cb-aad2-4587-bdb2-147f38e95f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae3eef0-80e6-40d6-a234-51010b66c750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e90345-a06b-454d-92f8-a6cde9424c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98c512a-688c-4990-93f5-493506d78c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd90ce19-a174-4706-9717-2630cd6a01f8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbda5b7a-7db3-4398-9b34-585e6f76d94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e46bd68-a548-4ee0-a124-07a9fc22c89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7c41c0-7e89-484b-925d-19c22c648946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcdf6908-eab2-4739-8ada-eba91d969a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae43fefd-feea-4858-9ac7-ed8d51ee681e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150cc16f-6ea6-4ca0-adae-a99efac99ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca84988-4a2b-4ce8-9be9-7c629b97bb0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6de4a0-a75d-4a51-b501-af700f496619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "519cb38b-ab00-4611-b9e7-a9a52fa8fe78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65979926-7177-4a0a-8028-7ba0c93606db",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92871b2c-c517-4449-a089-98abd1332670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ed4ddc-8f5e-4143-ac3b-b27fc047d467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad551e31-172d-4179-b0cf-b4938cbca1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e75105d7-7308-444f-8c74-65764a0f6d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef44d38b-b855-42dc-a929-46ce68b73fba",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8adaa66-64c8-485e-aa9f-daf703bf7069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1daa02-5f63-4f53-ac65-a231556fd6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cb4a97-883b-4e35-a742-2e6135e85a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15ede345-709e-4841-8d5c-5a863acced6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e77bd71-5eba-41b2-8aff-901b516edb3c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56656e2f-5274-4c1e-9a30-604826d99a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3466a1c2-c935-4f3b-8887-0f892b20c1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8352962-0a70-46d3-99de-2760cc4c3068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78b1122c-5641-46ea-a53e-8e46b5c42e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9bd922-6e55-4d3a-bb54-5cb002335378",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5711e43e-ffb7-4541-a37a-35e6739a35de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc04c709-5781-4dc7-a3cd-91d811129b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd70ebc8-35ea-4f80-b16a-e467362b27f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0833bb6e-fdec-4912-b3df-9f3441005e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e76e4e-9a22-48bc-83b6-974c48a8dfdc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eff7463-b388-40c5-a9f7-7b9b4f10d491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c3c03d-079c-4826-8705-b97dc85d37dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a050cec0-5310-4ceb-9c86-6af6c12f7d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1afa1240-f501-4225-9f53-2f8d1d9dcb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a865d016-7cd6-4b83-a2a5-e7bca095eea7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600ca719-4c2a-4958-9064-2ca576e7ef99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdcd912-a695-41c2-b0d3-989e59e69d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3036679-31d5-4fe5-b03d-2d7b3346315c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "987edcf1-5768-4b22-a256-f44f1db23c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fc7d04-9e47-4f5e-8458-8863d8940a9a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9efbb3f-906f-4397-96fe-eb916826e9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b3bddc-7229-4a7b-b3e7-40461bccea03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867e556c-a2e5-4691-ab38-d89e759b484b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4843c293-d84a-4954-8eed-ee625348074f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a17add1-e6c6-48c0-9fcd-215365723141",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540d39a6-1103-4e9e-bf47-30c903064ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37dd61b9-2136-450e-9963-6ef328a0087f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6fdc78-2c92-4b35-86ab-b9680b153046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4992745-777a-4b82-ad21-b80d764dce3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45881de4-7f97-492f-ac6d-90c239642ef3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f79008-a658-4f6f-8613-2af221357446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b68c5d5-774d-4bee-b8fd-36e5d49d3139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564ec451-c1b3-4ecd-9b7c-c4e526da015e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d5fc0e7c-bdd2-405b-a060-5e3aa4171398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292ef503-3f78-465d-98f3-3328183bb1fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392ae821-5d1d-4958-87ba-e91c0a64f50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd40d25-3367-4c54-bce5-9e1b9b5ecbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f71b30-482d-4af2-ba00-03582eaa088d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0879bc86-9f01-4b70-b97a-2255b1af5ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b53949b-1889-4fba-ae5d-67aa5144eed2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a66eefe-70a3-4691-806c-6d1aa1732924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8154fa81-2fa4-45d5-a300-29205aa1548f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3015ad55-9cf7-4381-8296-0d1c58dc8b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c58e333f-ae03-4aae-aef9-2e38d5a87996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6110320a-d04d-4d2b-a0e3-f26d515b91a1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b4ae10-4402-45f3-9a7a-6ba3ca187b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4e1ee7-1f3e-4e80-a5d7-c151a98d9c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39648d9c-0acb-4e5f-92a3-3d431d164e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "322e4941-ac96-4bbe-93f3-2f555488da41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43424512-bbf5-4745-b98b-3114f4c9e339",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4e7b38-7e1b-4fa2-b5af-33434142c168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a08807-bd8e-4434-9a76-30f958c71476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7fafca6-39fb-4721-ab34-23689dce2907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7eab61-88e9-4525-a8a3-4ac4fdd287f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad473e1-e016-4eb2-9e34-f971c2dde766",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8fe3f8-ba53-44d1-b553-bd70b99ccaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384a2046-787c-464d-9cfe-e79deb7c150c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e912338-9e2c-4bee-bf2c-5b97137f29f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "71a1194d-5633-4f40-9a54-200e29532314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3c3655-6bb6-4579-9a94-497aa7bb8f8e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8b9b7e-561c-4647-bb16-a491bec5a19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8420c72f-5526-47cb-a856-64a60e1e65a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0824a390-1761-40ba-bee1-f250d2dbb934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1da04093-83fd-49bb-902f-93aebfa759b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d149e7-98d6-475c-80e1-4bdd85c60f2e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec2a69f-61e6-4c97-b3a6-f681bd9980a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac278c89-70fa-47db-b671-a24b838de540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9747748-8622-4c1c-ae90-2d4f73544739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "18703670-b610-4ef4-8995-44965218e01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a156de-6db6-40cd-81ff-39853d243d90",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57bec18-89aa-44d3-899d-5cc19de564fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4113df-ea43-4b68-961e-c2f47b33194c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ba959e-8abd-42bd-9344-4d6559402f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1614f3ac-bca5-45db-8eb2-ea73778c20e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36146a6e-52ae-47fd-9cd9-cc930d09e1e8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3948fb4c-4873-41fe-ac43-f3ef65a8b7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e080d9-a2ec-4585-a635-7d172f846432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886c9b92-122f-41c9-b7ba-c9423b18cbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36192833-6c98-4001-abc4-ccb65a2dffb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9995e87f-e88c-4bb9-b860-204854f05e65",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f098b7-994c-4eb2-b1de-a74c785fbb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e199eec-f99c-4f2c-9a9d-ed1bc138a201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be0e695-ef8c-4098-bcbd-a9536a081dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "297624ee-9216-4ac8-8f6c-a06493c330ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9d370f-d8f0-44b9-828e-03bfe35671ab",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f859abc-73b5-4693-adde-8c0de497ffab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "768ed33c-d8d2-4712-bb46-fcc66cdaab45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fd2feb-7b99-4d40-899a-8a70e9792b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb14d96a-fe90-4fca-a9f8-f18a3ef8d8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0343d1c5-6e44-4ec2-8bca-4ae0037774e7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85922a4-42c5-4048-bd62-7acd7962497c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e6adba-3688-4c55-afcb-5aa52917c6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3dcb3c-dde2-46b1-9b35-a8b0881977e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9083008a-b965-4693-a45b-bbad49f42555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecf5d12-e8c1-4fb4-94fa-178fa5abcad9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fea246-b37c-47e2-8ad2-6764b0ab41af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57237b77-e8dc-4f7d-a06e-3caddeb4eb58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8dde57e-c7be-449a-8f33-169724b8ffb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "988a83a7-e724-4ef4-ac17-4fff4f8770dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ece456-9ca5-4d9a-ab3e-632b8ad1c1ea",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68864c0a-15e8-46e3-8233-238cfba21c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13123904-f5c9-4f9f-aad1-fe99835a51ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342180bc-26f6-4b26-888d-4047667121da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7763ba5-af4e-4c0f-8996-4d2b6720eb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379ec821-7be0-4bf7-8f46-feaf177ec39d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b6b7ff-b54a-4582-8903-897988440524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d86861d-2a94-4355-a1aa-24233df5c0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da59ce15-7b22-45da-9a22-afcb6344ba6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "711b1a72-77ac-47cd-9d1c-75fd7498aba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef923d0-af5f-413a-99e5-164c3b007636",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e9ecec-e153-4917-a9c6-97517043bc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4191a676-a3e9-4bec-af3e-7838dbc256cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e28d5e3-f11e-45d6-8a1d-bb237bd36822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cec0990a-c016-4b2a-9a92-39a79fdb4f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74af51a5-76ff-4899-913b-c058c159a024",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb24c1c-949e-40a0-9590-de6f8270edd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c4a2aa-40cf-4d26-9318-bbd0b63930e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a90a204-6588-4a16-aef7-0e27365e9df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a06341e-4794-4578-bbb6-e6795c4f7e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b7e03a-968b-48e5-805c-21019fb8ed6d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a476a1-3458-44d1-a83a-2aea4373657c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f68f13-0562-4ac6-b96b-08570847311c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa5e6d6-bce6-434a-833e-cc6b66666dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c678783e-398c-46bb-837a-a6553461bf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c2bdd2-88f9-4078-95b5-416b3937703e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615e0011-e28b-4c6e-be97-cc1eabcc8211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ae710d-4b13-425b-896d-d9894074edab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d910fb-89a6-4ccb-8c32-9b81dec37259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "904e41de-d25c-4bc3-9995-0b5e3efea668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a631f087-0921-4f06-8006-79cb566f4d39",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cea19fc-884b-4108-99a6-16fcf7a0da04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149e1d3e-3c57-45b4-904e-9eb2d3725905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9b17ad-496d-46ab-a866-1960b2fc3904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a86f0293-7e2f-4e47-b2ea-93a4bf810411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01491c02-a6e6-4716-bff8-99c5125f1ec2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bec6223-ee2f-49f4-a243-40bcd77ce626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5959937e-fed5-47aa-a1e2-bcd226a7faea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684bfa2e-df51-4dbb-b681-60926f11f493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e611663-9aac-444a-902c-f36ef64e2826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b732e131-5031-47d7-93c6-b471028c2232",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e5f7ae-72db-42f0-a6b1-c6363f5cb39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d18f27-4815-466c-b2e2-0bb6c4b70e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849d12f9-c1f3-4859-9e84-62b03831d0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61a439c8-98b3-4a6e-b6af-b91f76a3729a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbf4a9e-ff2d-4d66-bab3-c5a8e19d5a8b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2018f717-11f5-4835-b4ec-e2746a5e49df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189b70d5-a86c-4343-a4f7-e1ac1bb079a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c57ef8-4566-485c-b86f-2100d67efdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "730878b2-1eb4-4655-999b-9ce886af9904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c6d5f3-7158-4637-a2d1-79ccc24f7bc5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11456ddf-3904-4141-8aa5-40588c9d0a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbbd0bc-b76e-4a60-84ad-2497c8857ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b1f165-c1a5-49a3-a14c-3c8a69b499d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84f303d0-6bbf-477f-b901-369d5b6fcb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4814a982-a46f-409b-b0c0-e73b959787e7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16ff0d6-25f1-4184-81e7-f74679485204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44e31b6-3c13-4939-9967-54e6f7ee0850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2e38e9-47d6-4d7b-ae1b-24ccf71ce7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8297b56c-a97c-478c-90ab-037c7c22d6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ad3c40-696f-4fa5-8488-ec8478a5ffa0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e476f4-8486-47c5-920a-ca6432c9f44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f8c5bb-c90b-4051-95c4-d36e063bc56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9405c069-b119-4113-9aef-13c2e77c2922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4741aaf2-e169-442c-b5fe-da4d7443d9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c853925-c345-4635-b698-f3b7dde36b8a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6560fe-148e-4e84-b183-af0d7d5f3422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b96b22-0fb6-4350-b525-57b9fe14de07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edb8120-8018-4566-bf5d-d4525b46d7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a09debdb-f7c3-40f2-b3c5-7a8350b468c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872b6ef8-cbb8-464a-825b-7106e2d742a9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2cdc56-81a3-4b1f-9415-7bc333e5cb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40e21de-b799-4609-8b78-8a55e1059ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814e11be-0d24-4bb8-a2b5-a1edcc944727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b65a2482-151a-44b1-bb7c-8737362481a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ae09f6-98ac-4274-99b5-a0310a9f81fc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b03e89-cdca-4235-aa24-1218aab3b2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4907ade-9115-4f7e-ae6a-e3fcc29c0e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50000d94-7c90-4fd8-b5a4-1df3b7fc0d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd110abb-9dce-4c42-a42f-5732d33c0a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaeec3c3-bc8b-4c29-aa59-bb2cd84cc6af",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc9dd97-6b5c-45fe-b4aa-7fff6115c4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8677685-feff-4c23-8705-1a9c002c9db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fd9eba-83a0-4811-965b-2277a42e82a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "abeb67db-ca5a-4e9b-b56c-de239cc3d9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bdb392-a33a-4429-b00d-b01d46b5f7cd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1ca2e8-99a0-4e7a-aa9b-d3bea6663de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cdee287-ca48-4f92-b5d1-5a431d8b9f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd24e03-0055-4938-9353-4ca616a0da84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "91bc1af0-3d13-4069-aa11-1b5045f42639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f167a42-67c2-4563-9379-dc885038d652",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de556da-cdb5-49a8-91c1-40ce2a4a18a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec8cf98-2eb1-4a3d-9b43-3d799e662213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9497d78f-e97a-4112-9204-c99956dd5582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1f38c8-ce8f-49fa-89d3-ce34333486c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae285db-da1b-44d3-9809-6d94a520ae29",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b634dae-b6af-432c-aa84-e875780c64e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd44f29-1f51-4203-aef2-88cc510a4e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b81ccf1-b0e4-4fc9-a300-6bbfd8c9162c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6af494d8-339b-4ddc-8601-a5aae221ae59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcf1847-1b66-4aae-a0d5-16f9792e75be",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c43fd2-1c52-4fda-8938-47841ca28ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d9a721-91e4-4042-b4a3-a893bb172fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d55383-bf52-4595-8010-c38d6019f483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "80954798-d067-446a-933f-512617429f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e791bb-0b56-43cc-8cbc-8b139b6f45cf",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12eec41-4deb-41d0-ac02-03e03b069820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647a9a38-cb96-46c1-826a-9309d32e00de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a993a8a-4a5e-468b-aaff-b1caf42bd717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3264df5c-8f34-4a0a-b06e-810f0f873e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2553ec80-1816-4bcb-9243-599b48bb26e5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f554b9b-cb22-4027-8d24-b0a2a3efaf94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cc8f1dda-c8db-49cf-a0b4-68d7b1a39479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bacdf7-932c-49f4-b52a-f91cda2f98b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e7b823-5ad3-4a54-a817-14b859fce9c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "297723a4-c2da-4b06-b91e-311419efb79d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e935b7b8-9b1b-4a6c-a721-84da7cb13dae",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc1892b-477f-49d6-a2a8-6be61b0f4fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d36d90e-cc95-4595-be5d-6f596affc633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d6c22d-6f95-475d-8c9b-f232b6e20a9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13bf5a6e-cf6f-4d20-907c-cbd9faa7b7ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bf8f4a4-eed6-4f4d-b2d3-016a869f3893",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "926e058f-2f65-4686-a491-18d8af897821"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91d0a753-0e07-46c7-896d-4b4477fbb30c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d00e516-6260-4f29-ba50-48e1e4c8b04b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "57803031-0cac-4fbb-8f34-f7d96eb2ad6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f0f4954-a05f-46ac-a861-f51f73f7df16"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "93d21de1-3ed2-4ce7-880d-d82056373b91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c54bab0-b8b1-497f-89d4-3fd4eef266d8"
                }
              }
            ]
          },
          {
            "id": "50823e14-a7cb-4fd8-8de4-333ce19b2a76",
            "name": "Positive Testing",
            "item": [
              {
                "id": "afe33936-d898-4825-a134-5dbf4b515517",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b0079128-8a8c-46ee-8af2-1a02a20e9111",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d2f353-2631-4548-9905-0db9bdfc9402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "75f10093-28ca-44dd-9cdb-ea24dde4b156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467044c7-a07c-4b01-87b3-03492b50d4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19dcf92-eb95-44c2-bcc8-6a18bcc3b756"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "674444d9-f04c-47c7-830b-957fec53003c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da632382-732d-4535-9ccb-0fa63259545f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c0ee430-2b1a-482e-9910-0158e808803f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f04391c0-1f5c-4c31-abdc-4729016fb89a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4f250e24-99cd-47e5-be1a-497046424fdd"
                    }
                  }
                ]
              },
              {
                "id": "b7f2f33c-9849-4c18-a728-5c3891ce66a5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74a6c27f-0abb-4b72-b450-53a6432a8ef2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d90ab686-302e-44d1-8356-dd876f4eb024"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a88cc5db-aec6-444e-8b51-e2a15869d18c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4509e94c-205b-4e4c-94fb-098b02bd2c1a"
                    }
                  }
                ]
              },
              {
                "id": "dad4ed30-0445-4e33-9e08-da876538112a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc19c1f9-72d0-416f-be65-7e40dbd5c90f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a816c6ee-9bb7-42e5-91ee-dba2d3206e3b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62626777-b0d7-40aa-ae45-52fbb2eaaa7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4447feba-3155-449b-aa72-1abb5b89f18e"
                    }
                  }
                ]
              },
              {
                "id": "1cdaf7d6-6a29-4915-8649-f51158a082f6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70e9ee09-d2cf-4f6f-954f-4e511fdc6cf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "385ce84b-c94c-4ee0-b53c-cbdd98bf50a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad8ec2ad-031a-4269-b2b8-b34f6ab14311",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1a603567-e7fe-445e-9aff-66b13f2d2b56"
                    }
                  }
                ]
              },
              {
                "id": "26713418-0844-48ae-b099-8470312bd661",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "179eb41f-dd9c-4116-91cd-2184e2e46c7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c36f111f-0a9b-4797-841d-c097e668b0a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b64beb86-8f17-483e-8cf8-43c3fea820fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "15276e6c-6acb-46fd-8c77-43cd371c1d4c"
                    }
                  }
                ]
              },
              {
                "id": "b0533fa9-0f77-4709-a994-0b407659affb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "703b9f0e-d428-4fc3-a0f3-f1a612808b3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cbe35db1-fc90-4b2b-9af8-909d8e751ab9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56869b4b-8777-46d3-944b-f421be3e4457",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dcbd868d-c006-4daa-b7c7-dbda6db22258"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f67888af-36a4-4700-8560-f6dd0660041c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a69f4852-ad87-4c77-94ab-14c9e1b3a2db"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a8bd9ef7-0da6-47e3-81eb-58607522688f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91da06f7-94ed-4685-b4e9-e8719c9bb14a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4af32b3-e1bc-41d6-8ef3-78b0a52ba0eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d8457437-5662-4d6c-8dde-71c581f587d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ffc2be8-c63b-4648-96e4-1720ef7cb086",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "597447bb-491b-41d3-bdf8-4880e6b28232"
            }
          }
        ]
      },
      {
        "id": "20d0630d-d30c-4e0b-b754-d8f65bd7a95a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d10c048d-599f-4db7-9fb3-07424c65b353",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e6bbb90-86d9-4e4b-be0b-b5499e4ffc40",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ec52ed98-1fd0-469d-989d-1377ee61c509",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80634085-1371-4f3c-b6d9-29e7d393fc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac53ca7-84c4-46ed-ad00-d2e1ec912342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5b8ac4-30cc-48a2-9669-c8895eff2dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0bf6e6-027d-4d28-abf9-24cbe0b3eb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9c8f05-fc6a-40b0-a10a-622d6e040f1a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20b90ac-9328-4332-b555-e62b61333d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666ce66f-4877-4b2a-8fa1-870528acb18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff830803-a04f-4e38-9182-66bcb7aadc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e786e2b-a090-4dce-9316-8d43464abf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3b045d-2856-4b6f-85fa-c7030f526fe2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0659e453-76a3-40c4-ad9d-1bce8d1d9668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10d0788-9681-44c2-a584-2cfc6c1e47e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb602924-0e53-4d40-9259-8e4d51dda7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ff5ecf-9f2f-4d0a-a355-ffad71b219fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b2e520-383a-44c2-baea-28aea6372b74",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e82faf-4bfb-4a89-94d9-f053a37c9713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6aa0f74-ad4d-4d49-943a-0517097ddd08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc4d1f9-7160-437e-b56c-aa087ecbfe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2729861f-f9e1-4d38-a89f-449bda05fe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1d929c-f8c2-477f-9cd9-ec7394005576",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033688ae-e10d-44c1-a3ce-09f66e4359de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff2e392-17f0-402d-9676-85a72fbecacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0333c183-cb8a-4f6c-9364-67e8e54aa79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84aedf99-9873-4bd4-b606-8acb99a8d7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6368c09f-d4c2-4301-964c-1b6115505687",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf64805b-b0f6-4536-9f34-9c8f5161d574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67642327-5af4-4872-91d7-223aff65d69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e691b2d-80ca-4a77-9a48-b0c7542d660b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9dd8983-e61b-41d4-a850-2016dc74e63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43f39b5-73a9-47d6-8129-1546c53e32ac",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aef9a2b-e4bb-4890-9e83-c1de8483997f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5cdc818-5831-425f-83b9-aaf2f3f1baef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d947ee-496f-47a3-8593-3e2e24e14157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "06056965-d01b-4386-98dc-900c763ccbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4eceb2b-8984-40aa-834f-c6133131a442",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3686a9-c13e-4f54-be65-1487bf6405c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275e2db7-a49d-4e41-9ec2-913b8f5f4717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e880738-8614-4c9c-a784-326ac3f12515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b695b1d5-00ca-4c1a-b377-a582717f2743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9703150d-5ba5-4201-8ba2-6cd50969312c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1c2803-e7d8-49b4-930e-8577e97723cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01dae33f-da05-49d5-958a-1f2eb67a1d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73efdce4-4df2-459b-98f8-2fdd08309ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e22702b-70bf-48ac-8ad3-eccc9a044754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdcb694-edc1-4d3a-97eb-775b182bd0f3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6a50c6-b5f4-4ff7-97c5-bd405fd3261c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3628de21-498e-4efc-bf47-f2939a836859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c549e0-1538-43e7-ab74-8a1f90f8f423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a59f19e2-20b5-4b7a-971c-ec86b41b8142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a52080-fb01-4a8d-a888-9fd2965e2a1f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "babe7704-aa1b-4dac-aff8-f1bbdef091a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e60333-3ce4-4541-82a5-4430cc8baff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4863c94b-6629-4a08-be1c-79e6a1e45e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3f179bb8-b10c-45df-ace6-5cd542c23cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0baaf2-8b52-47a9-b8ab-23a32d93a678",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fcf21d-b4df-421a-9e58-28fd59c56d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3178caea-fb23-486f-9183-8be643941586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d82819-4038-4eca-9712-124e4083e3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73aa20d6-1407-4144-a6b5-31342ecbe5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aace8f3-59bd-4b91-825c-627c331d6a57",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0d746e-1196-4acd-8730-df3cf067d6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beeb0fbc-d776-4cbd-9f08-983807bf2df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb832fea-66d1-4bbf-a8e1-00e8f68c42d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6fe964-ba6f-4f7f-820e-ee9ce9939456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f5e02a-f983-4124-9f0f-dc103b64a20f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044ab8da-04e4-4266-b1ca-8e768d3b6c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c321e1-aee3-4072-a91a-14b3752b7ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6969409f-48cb-44b8-a263-4d38285673e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "74d866bd-9b45-4703-b8b6-ae7a07ceb195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cd366a-b63a-4305-81d8-c07eea067c57",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c220d0-7c95-44e0-a529-228608f9c72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003658b4-df51-4815-8c26-3ec5ccd419eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f943087-2e39-4336-8edd-dc70b25b498b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "04ae4cf4-505b-4965-928c-52fd9ba4aadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0093fbb2-e95a-4977-b56b-8d7c28dc30bc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdc8e8a-2761-4906-bf8b-5fb5c8e5edc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c68240c-9ac5-4623-b728-36a5bc13817f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72db9c99-ad34-4c8c-9c32-3c2c21a07ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e032de3-6513-4c45-9f3e-a89df3cb9cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3973f88-2e9e-433c-a289-a87b0dd2d76f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd15d50f-c721-4b83-8834-d34ea6adc7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c479fbd-11cb-42be-8832-2a08031ed6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2008af-6062-41e8-ab08-c63107143617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fab1fbf9-0bde-49c6-9032-246be6875d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33159ea-c9d1-48c0-8eb9-053802f1858f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500e698a-36a2-4636-9e38-9ccd92d3ad33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d93cc0-3c3e-4648-b638-20704fa7762b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35063c3e-7d94-4a5e-882a-ac70addf7e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad91085-075e-4d74-9930-96dedd308bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6866e8cc-c344-4f64-9cd7-9fdee3a345b0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a564aeb-b62d-4a1d-8df7-fa3ee8278730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7bd3f7d-b729-4aa4-be9a-b785da6c5831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35d2993-c7df-4091-963f-7b9732c07a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec2356a-def7-4897-92d7-59d62c4869df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238034fe-c5a1-4be2-ac98-4ea375d34de1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168f3601-a8ef-443c-914c-6be4263c79cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ed5246-46f8-41f3-9bbf-90bc44fd5459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611c0b47-f629-4cd8-b6ce-b853e1c83efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4d9750-cdc9-489e-87e7-4c60a4d549be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8db488-38ae-408b-bbab-fdce745d20a3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db898487-f89e-471d-8ec8-43e1e3f21904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25d6ed4-5072-47c6-8f59-b74d93601b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245d8d37-040b-4c73-a703-6e7055d0f90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed98368c-5c47-44ea-b6c2-d8468e8683b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059b0382-d26c-4117-b8d0-bf6dec7b8019",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331aab06-56a7-4708-8693-770a86260a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55ade28-98da-4b2b-aa90-c4f401fff4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255aab6a-3d5a-478c-9255-017342ec6e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39d3b07e-4275-457d-89c9-2cc4132fef9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2835cea3-2d6b-49ed-a9af-3cdfa5da94f1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c3f214-65ca-4a83-981e-81ed55e0cb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4829f0-a681-4041-babe-0e9dc22c73cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a1afa1-6f6c-4cfe-a55c-fa6c9c5a3a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc12230-99f1-4f4b-a35b-e955a1781f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b6b089-774b-4948-9b85-e32e4d14b237",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12571a9f-04d3-41f5-9af3-37b4cda16b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b7fd10-6697-4f51-a338-05d559eba59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2c16cc-7b29-4d16-afed-efc8a0f75abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fabccac1-2ecd-47fa-819a-8bf05ea778f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2432d9-9fbc-4cd1-8e91-b192a11c104a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8083b4-cd71-4688-84d0-401837dc9dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d090e66-7026-427d-9a21-3ab82a8644e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faae36f8-28a7-4075-89ab-0bee2df6df54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2da68be1-cdac-4b4b-9a04-b65a8f1f1d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50748e9a-48ef-4dc0-af08-78d05b5c00f0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3aa5b4-0165-4e07-b1c9-bd75f74f403d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef317eb-7e75-4e8a-b56b-14e46adcc49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0876f624-79e2-4009-9c6a-521f6bb057ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c08222-bbd6-44e4-9f7f-c527ff81be80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e90d9e-bb02-4530-913d-a2c903e6ea34",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04d0360-1791-4a10-9d69-7dd2e5d819ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1216a937-c909-4826-bfbc-830a75d45b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418774e3-91cf-4d55-ae20-fb219b163a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb32fd7-df85-4686-a6f9-eae8fc839a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60af00f9-62d3-4b32-89c9-ef565eedeec8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fd7fc2-2d66-4907-9747-04f69ba2cfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacae205-cd3b-44d3-be89-8aee5c101edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4605006e-5aba-40e9-a4f9-9baa25265bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b77f7021-92f4-4730-800e-69c673970526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b829061b-d881-45ef-9b15-b13697b6a182",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e5f75a-c022-4559-91c9-38b6a154c072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e475ecfe-8b44-4768-969b-e66d9982d74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c49d022-03de-41f7-9d59-7cdc04db9e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11b17917-3b3c-4802-b6e9-328327e92302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd86135-7e4f-4861-bef3-b32834a8fb63",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ba83a0-0776-4a72-8ae5-cd246f2a3cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae4be19-e7dd-4e57-8e24-1fd9ac5f0d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fc0031-844c-4aa1-a589-a440a326ddda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6754a86-e009-4f72-9823-05a293964879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1a08e0-8b6f-4260-8f29-20e4d3a16f83",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c8654b-d251-4898-a104-0496a4e10a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a307e157-87dd-41fc-b513-4d207c5ff92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940a3416-345c-4a3d-8219-602d5bcb800f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f851746e-383e-49b8-a9d3-fbbbffc0f8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8999a1-3f36-4867-b6d0-6ba6b8d664c7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdee64a-75dd-4579-9d6e-72e18a8bbbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6017dd76-2446-4b04-8e7a-866a0a400a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732fb224-2e93-421b-9a4f-ceb5e94a7097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed747283-8118-4152-a91f-96c7178b35be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b200e47-50c1-4e6c-b295-4a3d8c6e12ce",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05ebadf-18fb-4f90-b307-aa0c498221f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45adfe06-a76d-4a61-8185-cb5c33dd912f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2078e4c-52a6-45fe-bde2-14c25efe553a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6687e7e-3088-4bc7-a831-5e783632a66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c612850-057c-43cf-aa68-5648a3660fe8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa768c03-5f35-44e7-ae06-00336e47de18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a182f245-8e0b-43e7-a024-4200e390754e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dc820d-a0c0-4466-a59f-ce3025c28d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40b0bed5-5fac-4d05-8910-de9b8e9ae6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a3d343-1912-4e67-9a63-892f62a0d00f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fb8de8-3b9e-4fd9-86db-d564ce1a31a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c18200-6fd7-426b-9b58-63877583012d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9332d5-edfc-4591-bdbc-ccb66a959953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61c0a9b1-9302-4e9d-bc54-10bbbe8337fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52f4b23-e1ce-49d1-b9ef-2313d104e8c9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38a7041-2fae-40b7-8e13-890097a610c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc2efff-1a23-4ade-ad76-f598f0b9a02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7946f9a-a2b8-4e39-9332-d7cb7e10d2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c47641a-f46c-430d-a50b-17643a75ce39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5470f7-ab63-4ce1-8b28-04540e08d370",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe360f07-eed8-4a63-b6ff-95a8441e7164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f592e2d-aea1-43c0-bba6-3fe77435cc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11070ff-4e2c-4d83-9a7b-bb2a1f5ac1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01640d43-4340-428e-b92f-22d3946cdb26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fd2cd1c0-4e14-4833-bd3f-7ea06792dfed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "adc0f4de-4e4f-4e4f-8b8f-66cb54e06f21",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a3e7a2-220b-4880-b7f7-8a6bfe3524a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fc49cc20-3b92-4548-8d00-70ac71f22acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1987ec09-b8ea-49a5-b1e0-0870e68e6302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e913eda-e28b-4168-9e35-d1b59eedc1d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f49b1d8e-8c45-4c32-9e79-e40121bfbb1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7636443-c148-4577-80b9-98fc3d5237f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a15c53ce-79ba-4912-b14f-1ea9c467b985",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da94904d-5a3e-4854-b93b-c9d8d3758ce7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd2b91f9-0e6a-4f7b-9171-e8ce4649769e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4339b1ee-686e-461e-a3d9-33c72af584c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b417850-7559-4d50-a8d1-0b41654ebf62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "065e61bc-951b-4cd1-8b02-ea06e5b85078"
            }
          }
        ]
      },
      {
        "id": "e0fbba79-6e0c-4636-a3b7-4dec9617cce9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5d87c8d2-c8a7-4eb0-acaf-fb8b930315d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eff90e59-80c3-4a52-94e9-8a6c54c26ca6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cebf14b5-e55f-44a2-8f3f-31957ac9d966",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbac5f49-519c-4040-934d-c462934faeab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d7f36a-6472-4f5f-8dfd-55bd75f6fc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373a35fd-1e50-44ff-82b9-2260f2cbe701",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baffc658-447a-46cb-9ed0-f29a897dc23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760986ea-c362-4a22-b7d8-3b27e4aed133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703289d3-b6ea-4e31-9eb8-955e4ecfd8fe",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e9e09d-c2fd-41a2-9164-1da940cb0d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9574f3-7df3-41e1-971a-9b00638f7bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a33cb6-d9b3-4e31-92f4-f125c1be59e4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cedd15-7d35-471e-99eb-6579fe93d20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71cbc5e-c074-4c62-9852-f474c6a94b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c6f2e2-e3f2-45f8-9732-579bbc34c6d4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aca1ca9-8bbe-4c48-a50b-389ebc8c780a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cccbf632-7322-41b8-83ff-e7430adf99e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072d6436-90b4-4168-ad5c-c2e51040f124",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7077350a-3044-4849-a4ce-e2827af81ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdd5c41-2b72-471c-a391-15f2c3b963ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b1019f-47b5-4689-9d20-0ea414fb1c58",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca27830-207b-40d1-8ef9-31d11ba67d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c10b266-b903-49fc-8269-aabbdc116231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f617be79-2c68-4525-91f4-9cb98c124ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06cc2376-288b-4157-8f20-d601c635545f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae57a05d-9c77-4659-8f7b-df23004ef2a0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab7efb1-3ad1-4666-90f9-9da2eef56feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb483cf3-1087-4a70-a57b-8b51ba109478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3deaf9-2bf2-4c61-b019-35eb90d32228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707ae549-1f2a-440d-8a00-1413e7391124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8189eae-fbe5-44ca-b0f9-dc27fbfa536a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e0abdd-33e9-48d4-b784-db1f9de8e1d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db6f700a-c739-4cc9-a957-7b421b0c1053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e922ca4-13a2-41de-950a-56c5bcc5536b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6807f5f3-fa3f-4ae2-999b-3dc2f2b20864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019f0cb1-91f0-4c57-ab63-e4136582aa5b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5980fcb-f326-40fd-8346-7a283dfef40e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0765adf0-b740-41c5-bcd0-1a5d15b57ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb854bcf-9287-4530-958a-8ba65bcf0827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02f58c8-a087-47e3-ba03-ac39145d86ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885413d0-4a12-4393-88e6-d41d0438bcb8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a00cf9-75ca-4a5d-8d2d-83402e3a9e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e7bb7e-99b3-4877-a9d6-e0dcb817eb47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabec9f1-e18e-40cd-96d3-3242eac1ace4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd93c9f-6251-4190-974b-075f476044c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f2b57d-296c-48cd-827f-28249870a7a8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067787cd-997d-4111-b800-dead4fd0ea6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d7b256-cf61-4f60-b740-ea77ff1974b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2d5b3c-c3ca-4c15-8812-3629a8f0efef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c215cd0d-e6ac-4ba3-a1b6-19da22d1eb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6d4e12-24f3-4682-9011-7c9a99a11985",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184c80d4-c30c-4a0c-ba5a-9871b2157b2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2412083b-cf59-4714-b310-bcd4ab771ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "326eedc5-0300-45fa-a1b5-d1bee5eaf307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4cf9082-c100-429c-a6e5-075d9b4bc25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b937c48f-e900-44ae-93cb-866aae1f5b76",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16daf0d1-a872-48ba-97f2-5b4848876a07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb4b74bf-8683-4f35-82bd-850697b842a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157d2887-cdf4-46eb-87c9-0df269068a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe4c6c6-9ad0-4460-9ce8-da85bb1b512d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09605b9c-3efc-4d44-ad42-e998ec253a50",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab30bb4-25b9-4ed9-863d-e759c47cfb32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfdecb6a-e417-4b78-b359-769a97c0ed61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066efe08-aab4-4937-9363-fb72c799f7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7b4537-8eae-4502-b608-d85cdd7212ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2620a1be-f09a-4451-9071-64bfb49f267d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ca8993-1dd3-4c54-8d60-ba5d237d4a27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4fe37db-b35f-4c91-9dc7-5fa06a4d8ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc91802a-65b4-458b-8a31-5d0df8727d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a667216b-7580-4fa7-b6d2-dff12ab6671e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98172b0-b656-4a89-aac8-e7526592c165",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca43e9f-ffc2-4d93-ad04-d28fa2931258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63cce581-cd44-4080-8c9b-7d0d535a2afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b913a33-e3e4-485d-a3f0-271701e4b6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e1a52a-071a-40d8-bbf4-529661f62909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3952b24-1fbd-4ac2-949d-0043fa41c53d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e27d12-e168-4f51-8891-7b9273799594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ed04cd-4c76-42dc-b025-b96fd86e9021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e40035-20dd-43fe-af41-d0ea9cfbda05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2485a13a-f850-41cb-ba3d-71e21dd2951a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e7cd69-4824-4b12-be65-d9bd3b416483",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a57f59-e5d7-4dc3-987f-d91d4aa7c786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95928a7-6229-46f8-ac2d-611f91cb18bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7040e5-31fe-4b89-a3e4-0cd2157dbc82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d517cb-aab3-4772-ada8-5a00a33375b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15e558d-39a8-4afb-83dd-83e056d135a5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cb2d6f-97dd-4329-b7df-cbe9c826ddbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db59782c-71da-4b6e-9f82-dc292e0f61ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e81e74d-21e5-422d-923c-8ce2ba29bdea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e508e05-4fe3-4aa3-949f-f9e091b6cc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8f9d26-f801-47ef-8dbb-bf8897789301",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79745cf8-fce7-43e4-ae98-413ac7e86de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49407114-852d-4847-be09-3b54b4a5a549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bea899-a556-4baf-accf-18ac2e0154d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c44cf8-73a0-449d-83c5-bb80beae9842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93f71c6-4bd1-4fe6-a2b0-2c6268f7db75",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca7d3ca-685d-41c4-a54d-a4186924826c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47815d5-5977-4be0-ab0f-22417737ef6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d792ea37-302e-46f6-af7f-f6787591ea12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a96d10-f356-45d4-8c37-f10cfc4f3d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ab44fe-f18c-4cb3-86c2-829a066b3b3b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6daa5a-06b2-475a-8ce4-22800550aeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce057f83-be09-4966-8fbf-8b8459ef7a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c161777-183c-46e1-9560-57c2cec9d71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13247220-bec6-4941-a501-aebe1f6b548b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c033fe06-56d1-4011-9ed5-985fdced5214",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494357c5-eff1-447e-9b06-e167d107cfb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ba9e314-15f5-48a2-8700-ac3fb6a5f48d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37964488-5a00-4af2-842d-3ff1e11b553b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7d0271-be34-42f5-bdef-edd804e36941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190f293e-a0e8-43d3-8539-f7f109988017",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9573560-fafe-4901-ad89-4dd0cfd6888d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "629f5229-a4d6-4be5-aa34-c52f346855ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f396b9-129d-4bc2-9ce4-7aa4a7f8d2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812e8566-2bfb-4b9a-b555-38737db5a45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f1325e-74b0-4bc9-a089-be26dc6e645d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c993a70-aa0c-4b71-b55d-35924a2bb353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e23aa146-289a-42d0-8e26-64be21520703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4259c66d-6162-49a3-af57-a0e855beec71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83febb8-a464-48c6-8441-0acbf64cefa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf56b31-ef74-4885-a3af-480483bc3ee8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b91b77-e572-4705-8bfe-045a48d3cb72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bcd467c-a8a1-42ca-b691-0a3f5160504c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b34c9af-9b1f-4a4b-95f5-2fc528cc823a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a24e30-adaa-422c-ade4-a60e67d672d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9ae097-f25b-43ea-9b83-f00b9032ecc5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcf5422-92aa-454e-849f-0ad2e369c064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270d2ac5-cd93-409d-8bf6-730eabea41eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635ac726-f5fd-4ac5-b447-276e5e665d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db4ff48-7d8a-4510-ae16-326d0f6d359c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442f3c81-e84f-48ca-97ed-9a2bd099bd41",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a6bda0-4984-4af1-91ea-fd1cff0ba1bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d91890dd-27ed-40ed-b93f-4e25ddbd0c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cf36e1-31c0-43f4-87de-c891ed1e3c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0563de9c-c858-4fff-a9a5-62aa274b23ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3477c32c-4167-437d-be60-58790fa35a31",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d553fe5-22a9-44ff-ac4c-8cbe985e2644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71d4d75a-776d-4a21-8826-3645ae119a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1863d2d4-df9a-47f9-a5da-b807a1f4d7bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00320e49-a249-49b9-b397-48e1f73a1f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886a0826-56db-47cf-9511-8c63731266d4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd44b6f-1aa0-4506-9fd6-de0f5537aa84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb1b581b-e4d0-4cd5-a79b-eb0e53b2209b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1a0ecd-e49a-4a59-af9f-db9f45eba015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d66eb0-e6d9-42d7-9b9b-56c822acd290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71257fe4-0792-43ee-9471-4ce8d3d9c79f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074c20c5-f609-4b00-8327-4e044f42c86e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a00d9e0-5ba2-4488-88c2-7c6b8ce0b6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcb459f-e4d8-4436-9e31-045682c9425e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42fbc8a6-8768-468f-9e34-4070ec5c744b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0a713d-a01f-482c-967c-6090c999bc74",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5281769-ae53-4950-b5fa-b1ca7af1c62b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9437bb36-5c79-4b75-82ee-b7750f1907fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb50967-9312-4f77-b548-f2e7dcaed513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd40ff9-7516-4f55-8600-9ea4571f3237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ec8aa9-3c96-420a-9847-0209b2452d93",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f5b870-cfab-4ea8-80b3-810cea03be5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7ad72ee-844d-4276-bce0-e94e1e0c5e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da75bf66-6e78-461f-a410-142c2132aa6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79613991-de02-4a2b-b72d-92b55d09748f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f18c1f3-cd21-4575-a768-d90ce1fa77c0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5bca7f-7c27-446c-a678-c1a7738c6c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625d28f4-d831-4550-8b2c-bcbf15e5e5d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bc6c9c-286f-415d-883b-171c2dfa08b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b208ab9-8abd-426d-bbf9-2a0702a45f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1823cd59-d3ae-482d-856e-228189793cbd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b051b53c-3148-44aa-b239-ecece453fc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7499359e-1687-4b47-961c-b286fb1d7f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "352b529b-4053-44d6-b928-c9767e9b28f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba423332-b492-46fe-9f66-c33a5de67612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124df595-2300-4902-a9e0-b9a57de54c0d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9a7ab4-0ed4-4f65-b445-322c26a71723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466738dd-4909-4e04-8c5d-3d806abe4787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2658002c-e865-4bcd-8cc0-d6e1518af4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4bf352-6a3b-4fad-9e1b-0dac75644f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a8d7ca-600b-4e1e-bf08-d4391fcc2082",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc128e6-1135-4f50-a945-67db5724b286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd726e3-80f1-4587-ab92-8fda66ff05f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2b7b32-6377-407e-84a4-8b6a6459a317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d8aa47-9767-4974-88a2-54e3db78cfb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e427896c-90b8-4f0b-9766-2dfd44d24cf3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c3f0f0-0f32-4814-9c3f-17039adaf27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ee70db-dd6c-4819-bd36-c3e434ad8efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd085545-856b-4e56-9153-dc3d0580de71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1669646-a3fd-4e59-a15a-3fe5a5ac0884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6560d5-0955-411c-8211-292cdd06598d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03dc8733-0398-490b-ab5d-17f783ab49a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d55bef-4745-4a5e-89af-3d83d584d188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d603187e-b22c-4c01-9f4f-3eb11afcff44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f7204b-4220-4737-b277-016874724f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc13763-cbfe-434f-bb71-20e404c3f9c1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0672bbe6-a4a7-4524-a2c2-a956ed55c36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9797ac05-b6a7-4d3c-a0e8-15451ac63833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c707e1b-a0ef-41b6-993d-ca7220d8ac9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7a2657-ed56-46e9-b9a2-fdabc2709bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaca6b93-dd6a-4796-b033-ad1cfeb1c93c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c2c6ea-cc94-4312-88a7-b0fce14cdf6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40675b9f-28bf-4718-81b3-6995a4322d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b2c0e6-a6d3-45bc-b3cb-548251b4cb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaadc746-b271-4e36-9620-bbc701c1595b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440bbb30-ab54-4e21-b1bb-29a00b5a7aae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fe0166-d0eb-46ab-be09-f90ad5890dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639efb42-b31d-4293-a7a2-12073edc897f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a436e77-37b6-4293-bdaf-ec4355854232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5008e8-ede4-461c-97aa-ba993ec27864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca04f40-6b8f-45a5-8d2b-5a626124520e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3db43b3-75e4-421d-ad4d-3613ceffd2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af988c78-4934-4dfb-8ac5-dfe1ce3a59fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1e5b97-d098-4568-b04d-1cd7c71a17f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600f6be9-92d9-451e-a4bc-4422a84ef906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cb65c1-42c0-4ea2-b218-93d537226ca6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c8e88c-6302-4090-b11f-888c412370b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf62b816-9fe2-407f-806b-863270c07faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ad8c6f-2445-4ed0-856b-abec5f5e7d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649da225-d599-459e-abee-d6a85654af02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06f13b6-0b65-452a-b950-aa63e6899a6a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e51e54-1dab-4b48-9975-27c4e929c629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e888b637-30a5-4898-865c-069be4c9bdf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfbe161-9079-4cab-841d-e19c3a64ca44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c69fa5b-7f50-4200-8d0b-15e93c86f1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05b7cf6-3f33-4ec5-a3f6-46cfc0af63cd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c503b8e2-69d5-4811-94b5-87e398ec9f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729bf32b-6636-45b9-bedc-14702607b6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20024a6-62df-4b92-828a-93bb9ae663bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4eb11c-a7f0-466c-b4d7-13c6b93ea137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c66bbf9-0725-4202-9d38-34808fcd6cf4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70493bac-cebc-4da3-9eb5-93039271e70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6d4b8b-e375-4614-b937-33d0cc04772a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b416e230-a0a0-4ae4-9308-78891e77fcee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e07961-001e-483c-832c-4d3327fdf604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf662441-cf71-45a4-acc4-3080f56d9480",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b61154-99e1-48e9-a626-c701822cee28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdfd6afb-3cd2-4cb9-92aa-3c0a96a7df7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e16752-c4e1-4d58-962b-4d69c625dfe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325100c3-c03e-42b0-a7b9-f880c1c1baf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229e2c03-473a-4068-a3a6-25943a2cab65",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a807a4a3-897e-4d5d-bb7a-6c55983dbdb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5bfa23c-cdb8-450b-940c-df5002b084d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e209d3-0823-4a57-b854-496d9717f4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001712d5-1c37-4088-b807-6506c99716ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801f64e3-4ad9-4d32-a1dd-929fabd8d712",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423f8192-4aa8-4070-a156-0c5495dd93d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd3eeba-cd3f-4860-8d50-1ee6622423f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcd141a-afe7-436a-bf7e-7e321edcea9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d4fa67-4385-4b68-8234-b889800fe848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56cfe9c-93ad-4a66-94ea-00cdc5d94bdb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f13a7e-0c53-4cd7-9c36-94d97c908dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda9fb14-2b05-4486-82fa-d0605ee44ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e9624f-9791-4b50-8771-2f2d0ccb2d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c094f643-b42b-44fd-8fa3-b2337bea1480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46f983d-60fb-47f8-81ab-d5274cbc8cf6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4255bff1-5318-4770-b0bb-e4f3356a87a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99679d9c-d1c7-4355-8e33-00fb4cc5875a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3def5656-6da0-4a43-8ab5-0b88e18f0c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1758ea5-9635-4940-9cee-5f0121749974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2439dd72-ba70-4015-aaf3-2ce53fc05853",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a441b4-e74a-486c-a147-e92c085487c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db1be56-c202-4232-8272-41d803f20b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26240f0d-e4fa-4d35-a616-61727a4e1fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d11450-eb8d-40fc-a8fc-cbe32370efe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f3d06c-407b-499f-85b8-e76fa176afd3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bee5a6-fdae-43f9-ba85-e437caa9662b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33143414-293e-4eee-967c-bce962929483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8a23e9-60e1-48e4-a6f4-3cf03d6aac0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb8403f-48bd-46b2-9136-7fdf66d9ce24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90414ce5-883c-436d-91d2-ee49242902c0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4842c068-044a-4f58-8e7c-ce9a26e1d2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3d1873-256b-4474-ab82-159b31a63068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f6ef5f-f952-49fc-8d55-70eaf3670825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a950e01a-b0bb-494d-978d-30bd0f58d415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9030258e-6726-48cf-a212-f89aaf87e149",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd2d597-b56b-45fc-81a0-90d595c738bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29008f3-5ce6-4f26-84e8-9a3bed4585d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf4dbfb-2826-43a2-be8f-c067f8c39cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efb678d-ea59-4a94-904f-0ad16ae4fa46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70aee533-9746-48f8-91e5-e23129632f45",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57545847-5565-4ef8-b6f7-dc394480ecb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84398cb-7893-491b-85ac-ffe21fbd5acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd422a1e-036b-4315-b738-29f6ea794f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5a34b7-8642-4cfc-aaca-ca1a9dbacadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fc9aff-122f-40ea-af80-e38e87a4d808",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774ee86f-685f-4e11-a8f4-1ca09c40cec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968aed5d-cd3d-4e7b-bebe-f9d00331da6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcf25ba-0ca4-4b9b-a2ae-b8f08e31ebf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7c5741-660e-45da-8e85-3a1a1a9a29ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a84171b-dbb6-4df1-b627-791a4712de74",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ce9b4c-0e0f-404d-949f-5fe101fd2781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c91d3c-2521-4cca-a2d7-d8f602ab1722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be8701b-ef7a-4138-ab0b-660ead95f8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6875ec-1854-42ee-9952-7108b2880737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c025638-57da-42f0-8717-4fead4cb16b9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9ca420-a7d9-4c57-af1b-798a466e8fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425249a3-b768-454b-b116-87f48251d9ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b252a301-3b4b-4b28-84d9-552a38e2e922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d73324-0d27-4d2d-a81e-0cf06499fb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acd3e0a-01ff-4e8f-90e5-04b35d45d36f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e96267-29c6-4c20-b98c-eb1168b3510a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65994d29-6f78-4fb1-8671-e772d4723011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83873b8-4d20-4d52-91f6-4519c9966f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2e13cc-f6b8-47c8-876c-f0b41ed9e991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661f263d-e657-4152-bb86-ce23a55789c7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42547657-ea8e-4cdc-afa9-a8ef9cf6a79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44df354-6559-4934-97bb-8e499a86b6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6def2d56-07e8-436c-9ddc-b7d7e120b6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23b7e10-0af4-450e-9a32-ecd68eafc8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b27513-dbad-4e14-8eaa-97e7547e0eb4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509b9195-69b1-44c1-8584-a04d89f40e5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7df2f305-63f0-4752-a6d3-a9397f1586e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b103f9fa-d70c-4801-93d4-3c5cd4a52ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf367560-c775-4719-8417-ad514cde4baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103458ed-b723-42f2-a141-7525d846d57b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea86e0d-4f9c-401a-990d-e837c865e63b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ca2f8f1-257f-4329-8887-074046583d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8620ca-0199-4dd4-8f24-5493304aa21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053b6916-f7d2-4f6a-b13b-d06e4c63128f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10df7f98-e62b-4df2-8697-39fa35ba7e6a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad523f5f-2a8c-47fa-b9d5-93c54527658a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4da89b4c-fb25-43ab-9a08-9e0e7f8a92b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8810320f-2450-4323-91c3-7a3c32874482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c98d82b-4f85-403a-9cee-53c7f02c0e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b08c5bd-6b6f-4cb3-ab53-a0cc9ebbf7af",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19516b72-0a72-461a-a22b-74ce229a6fec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f619bc39-e3c0-48cd-a2e9-75d414b6a50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a5adc8-47f5-4731-ac90-e8dd240a9a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bdc058b-90a8-4132-8da2-eb0c5a245be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6901502-c766-4236-8de9-9ae2f3b5f8c8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8035ba2-49ec-471c-8c90-b7596fa12d9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25fa771a-8043-4a4d-b8a9-6871ac620faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "180b9067-f096-4a2b-9d15-6ea7aa2d39af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c302cf5c-e0e2-48ba-9cf6-d432ca40c4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc5767a-8a88-4f91-9a96-c6d3f4b334cd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f99db10-79e6-44f2-b0f8-cae944e96af7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49fa7610-5c66-4350-833b-19dc1888d937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a9b54b-e069-4c3f-a789-225556030b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f9e05a-e4c6-4b4f-8231-4c63a3ba6567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a57b03-08a1-4c94-aba8-f686488d03fd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32347973-7875-49dc-b7b1-84f82fe90c94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38561134-1113-4a2d-bc20-2b7c1c75e1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118eda14-207a-401d-bd50-d0bba248b473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf5661f-8838-4de4-b65c-aadbeea31446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a746b9c-18d2-44ea-aca8-84ac573f880d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d80d2bf-1ded-4766-babe-4fc4d3fdd9bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "160279c5-8b5b-4ebc-ae16-0ac1075ee467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee61f10b-7b32-4b35-afb0-7bc1ee623d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f61516c-cec3-4127-97c7-523d02c355f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef096be4-c2c5-43c4-bac0-7e832c9dd6f0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202b8f13-d934-46d0-9dd6-3b604a0e2ef5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f7f2de8-b910-4c94-b317-401dbc318dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a9a604-cb12-4183-8ecc-67a8274fbcc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253cb585-c6a3-471d-b8bf-6235d0d99da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa4586d-8e58-48c7-96df-2af958035cc1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9782d894-f146-465b-b8fe-fe5c5e6b71c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "538153fc-d54e-4b4c-bd16-cd890c346a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eb24a4-31c7-4456-b56a-85d562126a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e34930-e818-42ab-a04f-b6c3498adfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5684e7c-31dc-4b9b-baaf-d233abb60d61",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245bcfdf-8803-46a8-8e32-b2c1822c2486",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88ca5c35-0255-4603-ad40-34a0b62f4660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec19484b-ceb7-4baa-bf4b-be5344333d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bc4771-29e4-436a-b769-2e5f50788152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250062bf-08f4-44a0-bbde-bcbc37ae6db0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01872a7d-c155-437a-b1f3-1e701eb83d67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05a2d093-7bf3-4d04-be51-718bc0af62e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe504201-d928-4bf8-9238-ce97ffa39e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec307e4-86d9-422c-aa00-91c9cbb4fc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e1abc3-5e2f-4ae5-8b2a-00ce7a142b42",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d842b288-cfa2-4b1f-aba9-562995d28f20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9d862ec-6f97-44d6-84c8-89f4009224d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fa1b28-63bf-4d66-bece-bec5dcbdc2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f97d19-0743-4bf0-b070-4cbe5b1d2426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f35e81-0843-4a4f-890b-9a6d31880e90",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f48f35a-066b-4426-bb83-a020d9c07751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e65eed72-c76f-4279-a115-b126aad3ed27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c495be37-0931-47b8-afe8-1551a3eb6d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc155b8a-c19a-40ac-a680-faf196331083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cd2abf-6e61-49de-b9c4-5224652a0a5b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5520eb40-c721-4750-a857-d53ca6a52f7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "702a9583-a66b-4535-9779-bde0252f7377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f32c9e-bf2e-434c-ac13-45ccfdfd711d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194f45a4-b944-401f-a83a-0401e38e51b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62af436-336a-4655-8bcc-d0d779255320",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d24576-1468-455e-a155-58bddfe54723",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95b0f2e6-e68d-4a54-9024-7dd113a91d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c1191a-a0d0-4c0b-9d9c-f5390ae25646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f71ac0-748d-4fa5-9135-b465774b20f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97ef947-55a7-4511-9900-03be35533298",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b7eee3-59ff-4dab-81fa-36175c523cba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adeb50c0-c436-4ab6-8c0f-b49bf9da7947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b7934c-95a1-41f9-92dc-f81279718307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d892f51e-971b-404f-aaa0-bbec4c66e7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04d998d-9408-4fd9-a6d1-5744806baf98",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ed1cf4-4a46-4332-8d6d-3af81153909a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e8af814-df1c-4664-9594-c34e088eb264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9425216f-76dd-40f2-8c75-7172ce6dc375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc03448a-f4c9-4e4a-8069-c86182c4ae08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520feb08-46be-4e68-bc4e-661e91cb99a4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af74963c-5be7-4bec-8fcf-0d2432f53ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35c7da59-9c9a-4caf-9981-cd68c1cf106c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "113f6031-700c-4483-987b-fb007bd9eb89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c776b6f9-a496-4677-9582-98353df880cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf56b5f-6f67-4360-a32f-83fbedbdcb1c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555cb50a-ebdc-4406-9f0c-a7ea777c47d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aed17a4-14ae-4050-9687-f44570c8878e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e8515b-118e-471e-bcaf-3ae1ea9af827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bab8b52-e4c8-4dfe-b009-fa39375bdf32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc61561-496e-4aa0-922c-c8c63fb57f8e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e02e18-00fe-4df6-bbf6-850a0ed865d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dff0047e-95e5-41dd-8ce7-cf804306c546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c4fb44-aa3f-4c95-841e-85916bdea950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be5f81d-fcec-4c5a-adb8-9fe04dfb025b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aec23ad-720b-4596-995e-81715057e898",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db6e913-b62f-4dbf-8695-14b17f9e6f29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1ab5ab7-af14-4a5c-9af8-5e21418a2295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c629907-99e7-467d-b021-c4e25e16b579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374ebfc6-7d01-400b-a936-83da1e7ea833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a33c472-4ab5-4201-808e-99c575d0ec68",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff7e092-9b44-4acc-859a-2b9136e9df16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "249bfc1b-6d85-4328-b936-2c46d1154214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933ebbdd-5c1e-4c1c-990e-7565ba2616c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03cdf04b-444a-457e-8f28-035f75577390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5667af6-694d-4878-84ba-6bbf7e8269d3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caad8693-4eff-447f-aaf8-87ab5d85035a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc99e174-78a4-4e15-81f2-20bea5e624b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d577b64c-40f9-4a02-896d-c95eda5cffdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d9a0c9-36ad-4ccd-9c9c-352a757c9dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d650a976-ad97-4665-b219-25d203f683c0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9b0154-0734-4e12-9b7c-dc87ba3e3296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93cad3b2-37fd-4996-afc9-f44a11dec335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ecc2ea-a357-4b73-98f8-e522e2f5bbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf61971-c258-4b53-bee4-53bbc5e6c470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb39bc3-0a78-49ea-b06a-36aabe700702",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5d5228-09f2-441b-977b-c9ffd80da13e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3a5db50-8a14-4e76-a7f2-7b6a221fafa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e204a1ec-60b0-45cd-86a7-3853292f70fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2531ae65-1c65-4129-814d-298560597dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852065b3-76d7-4c9a-a899-7e301b1f8869",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0858a272-fe1a-4352-99ff-bb67cfa5fdfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8c58fa3-810c-46a2-a076-8aed81cf4552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e709b0-8a54-4c93-ba3e-4462145e3aa9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc94832-581e-4716-aa8b-7cb2751948b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d80e516-6cd6-4083-922f-c31ba1dde379",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5d4b10-687c-4ba4-805d-9724bfc6eba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f62b02-77e6-4eeb-a19b-89e879f87ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b93fa8-68ce-486f-b42f-458345c1ac8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f9170c-acad-4f30-b2a7-643fb7276594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b1d403-4ba8-458c-9973-cef823206d92",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a299a91e-dd58-4172-8756-e2b0f13a4462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3883983-f7e2-4e67-8863-863cdf3158bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12ff4fd-0d35-48a5-b7bf-c7f79fede04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b8c4f5-9421-4d97-b8bc-c4151df582ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf34248-5e26-45ea-9f32-d478b45cde12",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75377064-89cb-4740-a77b-660faed46fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa122f8a-b400-4899-8a3a-1b15817ef823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1332c600-5543-492e-9019-efbd92de06ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebdc42a-7de4-4804-b140-4c5f2ecab88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce54e5b-7460-46a2-9e89-e29c5ff04abb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2499742e-261e-4d43-8c1f-334d7f779dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8083bd91-9c78-49fa-88bb-e0c6eb6f2f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d33980-ba81-4f26-836b-0b3875babe7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8826416-97c8-481a-bbc2-f21e762cf064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb8f815-eba2-4ac2-b3f1-cdea0fdb2eb1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e33cdc-34c9-4f67-8e5f-d1e41ff63eeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42e05c8f-848a-4857-9083-4949746a3806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfca48d-5d40-4f09-8d64-6b93fc9929b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fcc071d-327c-4bb6-9cb1-094728417631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937c7328-dc2f-48b6-bc44-4f544d04f846",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aac3558-64fb-4551-82ee-3680efcde013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b984c1e5-5361-4f15-a904-7356a79335d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b32dd86-6776-46d8-9765-d206a1af4ece",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e7581c-2a95-4ad0-9839-52779ef8e9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5025130-123f-4b57-961d-eb653abfd7f5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95d0b31-fe58-4873-b1e6-25ad318357e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8bab97a-d1aa-4221-b176-1fafee5fe0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11851439-e270-4e13-ac13-33331b9e472c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90dc10f-a64d-4cf7-9357-8d1cba0244d8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a60bf24-9519-4fdf-bba7-b172a643d7aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "712278c9-d0bb-4948-857f-9cd399094c05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7608b96-21d9-4ce8-ba48-676c34d464c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a14dd12-c46c-4773-93c2-e6874cb14c93"
                    }
                  }
                ]
              },
              {
                "id": "a80ade9f-3281-4fb0-a693-b6484abc925a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9551ce22-a830-4dca-85b1-23a43784c6f0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694267a7-b861-44ec-9185-b6ebbb4edc9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "22af260f-c34a-4a55-823f-d08a0f854709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19690760-860e-4440-abbc-065a17d92cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c1b0ce2-f5dc-487b-85c6-3f7a7aa41dc6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bc7c5ff-5968-490c-9928-2486e01290d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1498e039-7d80-46bd-b4ba-385bc2571de9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a98ab6d3-22f3-40c4-b03d-9b4e1296cc65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d9cf62b-0c3c-430d-85b9-e7b64c82baaf"
                    }
                  }
                ]
              },
              {
                "id": "c049196f-19a9-479a-a1a6-427e6a3b2610",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b1505065-2764-4af6-a0fc-66ff1d6e748f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b68718-7845-41ab-8059-81d3c975fe69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dcdaa879-244d-44bf-924d-b1b7048fff21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebf7452-1df3-4ab3-a9d4-ec6ebf1177eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f4dcb1-eabc-441e-9261-e6586eeab908"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d8bb5cc6-a559-4c42-825d-d6bb1522a28c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8c693c32-0694-4057-8728-f3d4cd13cef8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ebe282d-4f48-4c6f-a34c-18fc82dbcd08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ebc24599-43bd-4281-8329-56d87b472803"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "777d69a6-a81c-4714-881b-e55e52014143",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "836756f4-7faf-4f95-993a-96939cee3326"
                    }
                  }
                ]
              },
              {
                "id": "67a565e2-f747-47fa-b7b9-6a6630c61cd6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "affa72b4-47de-47d6-bd9d-d67ec15d0294",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2f18a72b-15a0-4da3-b63d-05bca954e544"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6c1e5ed-3b16-42d6-b2b4-7d80a4c89365",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2adc9548-2e8c-4cbb-b9e6-74cf031bd185"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "021a9e97-f2f8-4470-990c-33681902bdef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "52e4a59f-98eb-41bb-9791-a5ad186f0d58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9bb0ae5-c2e3-477f-9b4c-77e6b12075d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "962c2ed6-7a9a-48bc-b905-fda7c2b218ba"
            }
          }
        ]
      },
      {
        "id": "cc5c0ebb-2f6d-4713-a7a5-f21cbd0b60ed",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "510ea036-30b2-4de6-ba9b-a90819b28ba3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1273dae9-cfbc-429c-9637-93ff60521d1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ae0e23b-9430-40fc-9bf6-d1cef8083cfd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb517ea-7edb-444b-9ed0-638c689631d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "560dc89b-f542-4d20-ad13-2e642cb540fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78bbe18-72fa-4e77-9fe9-e99aad540c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac1f425d-045c-43bb-81d8-3116e4087a05"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8e78430-b3f7-41f3-b1f7-04a000605bbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d694c62e-dabc-41ca-bddd-1d4582b97f2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b2aad72-79ca-4bfd-a5a1-7c0377c086c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0fd45ad-c9ad-4b49-885e-102a05f8c047"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48096281-d5e5-425b-97ec-0aad68391b28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "14ca7ac3-0469-40ad-b38a-4d4fe644ca60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "231a350b-f7df-4a08-932c-72fea2526ff5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "417dde73-0bba-4915-9013-1ee87002237b"
            }
          }
        ]
      },
      {
        "id": "6a50fc34-f579-4849-92f8-261f5adf1afa",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b9701a31-cac0-4f4c-97b9-697f06ef09ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95c59f73-3053-4455-a3fc-98698625226d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "582fd7a4-16a4-4d6d-885f-dcecc972c4eb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a866dc11-6c96-404b-b4c8-7aa59067afc7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c53fb489-4578-4857-8aa0-e7468ff72c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766331c7-31df-4a01-964c-8ef0bfbdf054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a51e029-3703-4f79-8144-78335a9f4c58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30048007-4ef9-4740-aa73-281cda65722f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "658f6823-9793-43f3-8165-f30ced2d31bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84b56b83-92e6-45ca-8884-f5cf764266a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee3a8fd5-bc8f-4edb-9b79-cc7fd5f0fd60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28f009f2-baf8-4183-b97b-96f99434e41e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fed4aa64-60f6-40ff-9cdc-bec090489fcd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37b20658-53bc-461c-8a01-0801f0b97ecc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd3cf787-8702-4fa5-ae14-61a22b238f2d"
            }
          }
        ]
      },
      {
        "id": "bbc5999f-b0dc-4376-967d-51976a45bb82",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0815ea22-408c-4e2f-8e92-34cd876415b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64abe093-88e9-4c9a-83f6-b3aa0a197909",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aebd7d82-396d-40ff-a3f6-667f5574bc80",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9e3f36-4353-4e32-a5df-1325328f4e57",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c47cdd7a-562d-4ded-afcf-18cd3723570a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d2c612-8208-4bfb-890f-1f57f31b2d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fe326cd-3143-4d40-aafb-b82f2181180c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c10eb40-7f9a-45d3-beb7-7ee8e11aff69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf2a61b0-a1ce-41b6-a474-7f6ee5099206"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b301fe06-bb0c-4c0f-9808-26edc9aaa118",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1e3980b-0d03-4bea-aae2-77dedebd8ee4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fe6c81b-7248-4034-b36c-a5261a0c992c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a0f531f-e168-419f-815d-137731008825"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01c5b7bb-9bd9-46f1-ab6a-8f70b99ded40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d42dd53-d012-4efd-a8e7-ad9fc6546265"
            }
          }
        ]
      },
      {
        "id": "46a670b6-7d6c-4ffc-a4ef-33518cd94a39",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa6dd989-f47e-48b7-aef8-ca864ab675bb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43ac7868-a434-4a5f-ab6f-91ebb38b16a6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "767b44f5-3f0f-4893-a8c0-4376d600796e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2704c84-f2ba-4838-9951-fdab765688ca",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74725ce4-07b3-49bc-abbb-37827cd78b1c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 71.89682539682536,
      "responseMin": 6,
      "responseMax": 353,
      "responseSd": 26.13452055280651,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723164057695,
      "completed": 1723164083992
    },
    "executions": [
      {
        "id": "cb941fd4-8f7c-4fa0-9a26-80a45a5f2f4f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "74e5873d-1f45-4aec-b413-c9303d6360fe",
          "httpRequestId": "9e8f0902-0c1f-445c-b7d4-be7467407b69"
        },
        "item": {
          "id": "cb941fd4-8f7c-4fa0-9a26-80a45a5f2f4f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1892ea8b-9f3f-4440-b467-f2084cb6faef",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "9cf5e2f2-62ee-42f4-9336-e55adf2a7a12",
        "cursor": {
          "ref": "dce5c570-3910-44fb-8e62-fd2afd3ca291",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ad71e213-5cad-4d30-922b-12a188a13143"
        },
        "item": {
          "id": "9cf5e2f2-62ee-42f4-9336-e55adf2a7a12",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "353b128c-4862-4006-bcb2-aa56f1654405",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "816dddc5-ba74-4eee-92fe-fadff649ad3a",
        "cursor": {
          "ref": "742b34c0-f461-4965-a2f2-b6de264378e8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6c08a5fb-8ded-4075-8b4f-5721550e5d6b"
        },
        "item": {
          "id": "816dddc5-ba74-4eee-92fe-fadff649ad3a",
          "name": "did_json"
        },
        "response": {
          "id": "18d2b1c9-2b2f-4698-88be-11371239a611",
          "status": "OK",
          "code": 200,
          "responseTime": 322,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b853488-7859-4edd-a8de-2ba4b49eb84e",
        "cursor": {
          "ref": "cd7e58bc-57d7-4093-870e-985604f8516c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ff3eb890-1d6f-4d96-9051-3b9956d7f591"
        },
        "item": {
          "id": "8b853488-7859-4edd-a8de-2ba4b49eb84e",
          "name": "did:invalid"
        },
        "response": {
          "id": "6ca1150b-c36b-4e25-ab77-59c4d5b11543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b853488-7859-4edd-a8de-2ba4b49eb84e",
        "cursor": {
          "ref": "cd7e58bc-57d7-4093-870e-985604f8516c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ff3eb890-1d6f-4d96-9051-3b9956d7f591"
        },
        "item": {
          "id": "8b853488-7859-4edd-a8de-2ba4b49eb84e",
          "name": "did:invalid"
        },
        "response": {
          "id": "6ca1150b-c36b-4e25-ab77-59c4d5b11543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961e46fc-8ba7-4b5f-b024-84249ae5205f",
        "cursor": {
          "ref": "d737c75a-8b47-457e-9c4c-5cead8b8734b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d87e3992-3b23-467c-8922-49bf7e04e8a4"
        },
        "item": {
          "id": "961e46fc-8ba7-4b5f-b024-84249ae5205f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7ea0d990-fa9a-4b97-a752-52ffcdea2436",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 353,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866bc318-7305-4f47-880b-9ba6c7da7ca1",
        "cursor": {
          "ref": "7e4d72ab-e53b-4b83-949b-0c3f95a76c0c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "664de96a-c523-4603-a6ed-1e1231bf3957"
        },
        "item": {
          "id": "866bc318-7305-4f47-880b-9ba6c7da7ca1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "598b0140-ddcd-4ca4-8abe-73c790961e7a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34bf592-5c05-473c-8c5a-7b4becbc9184",
        "cursor": {
          "ref": "b688ba66-b940-438b-9ce8-bbeade2e2918",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a9f4f8a0-8ee4-45b3-85fe-39d2a0ae8ff0"
        },
        "item": {
          "id": "d34bf592-5c05-473c-8c5a-7b4becbc9184",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a7b771c5-12f3-49fe-ae3f-3ac102c004a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e17b6a3-7620-4ad9-88fe-da06716543df",
        "cursor": {
          "ref": "b4448af3-435f-4142-8001-ed76731d1ebb",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "17189705-8066-46d7-b28e-8d5ff3dd8e8b"
        },
        "item": {
          "id": "0e17b6a3-7620-4ad9-88fe-da06716543df",
          "name": "identifiers"
        },
        "response": {
          "id": "f54f9e84-233f-4164-bd20-667793424d35",
          "status": "OK",
          "code": 200,
          "responseTime": 131,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ac1892-86b3-41d5-8b9c-208b9aa93fb2",
        "cursor": {
          "ref": "1029654c-b2d7-4cba-b006-a9288427fd8e",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "700fca2c-9376-491c-b40d-5e9351b5c742"
        },
        "item": {
          "id": "37ac1892-86b3-41d5-8b9c-208b9aa93fb2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d9d5b8ed-81a0-4af5-996f-a5b7fdc21ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a2f43b-321f-4fcc-9513-f57e6fdccbe4",
        "cursor": {
          "ref": "67cc25ee-5ac4-48c4-9a77-e20990495ad0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5cd10279-96db-408b-ae59-c1b037062c2b"
        },
        "item": {
          "id": "15a2f43b-321f-4fcc-9513-f57e6fdccbe4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a7a51887-a6cd-4cdd-9e53-96ea7a2cc80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812ebe02-86a0-49bf-b820-f9c528c26a2f",
        "cursor": {
          "ref": "9b2454e6-49f4-41dc-8e6a-794fb0ac4ebd",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f09bf1f3-5268-443b-9faf-1f7cb494fb95"
        },
        "item": {
          "id": "812ebe02-86a0-49bf-b820-f9c528c26a2f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5acd4171-dab7-4365-a440-3f0384dab4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e038cf5-4d75-48cc-b157-b2366b47fbda",
        "cursor": {
          "ref": "f6cfdb51-cbb2-43a2-ae43-68275893ab54",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0d4e2754-4d46-44e5-8eb1-cd5a135a691a"
        },
        "item": {
          "id": "4e038cf5-4d75-48cc-b157-b2366b47fbda",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3bf92207-3c32-4868-aa25-fd017f35dd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14830cc8-ffc8-43b7-8b30-69b8e5b36f0b",
        "cursor": {
          "ref": "c36f281f-0bd6-4e74-a7fd-13cd3ea7070b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3694c8e9-f913-41c6-9b09-6d97bb53f0b1"
        },
        "item": {
          "id": "14830cc8-ffc8-43b7-8b30-69b8e5b36f0b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f1017eca-7a51-4df7-8d14-e4ff6f276b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fa906f-c52f-4882-8234-e4acefbe7712",
        "cursor": {
          "ref": "92f45888-97d0-4bfb-b849-e3649f346351",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7b3f27d0-1d8c-4693-b33f-6db38a329b84"
        },
        "item": {
          "id": "b9fa906f-c52f-4882-8234-e4acefbe7712",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8c654e04-3f1f-484c-aa1b-fd367d93995b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e5666f-ef18-4b2a-8fb1-e342fa96f2a6",
        "cursor": {
          "ref": "f50036c1-abe2-4594-9848-83e2fe52f154",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b74583ff-49fb-4cad-ad58-26d180cab046"
        },
        "item": {
          "id": "53e5666f-ef18-4b2a-8fb1-e342fa96f2a6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "85288b26-20dc-43b3-a019-fd6e1da5c225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baafd621-7b64-4d7a-ab2a-10600b2274c0",
        "cursor": {
          "ref": "d6aff134-2514-4767-afb7-422e44929a7f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "844dae66-d3a7-4aa3-a831-52f965a20d7f"
        },
        "item": {
          "id": "baafd621-7b64-4d7a-ab2a-10600b2274c0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ac36e45a-89d9-4fdc-9396-a30d0ff528ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45a589c-51a8-4dca-849d-11d0ddca0449",
        "cursor": {
          "ref": "c8cca640-b622-4f64-815a-44e73b6a26d5",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b3f4f698-501c-41b6-8d44-cc5cf702a116"
        },
        "item": {
          "id": "d45a589c-51a8-4dca-849d-11d0ddca0449",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "00d9e977-1f0a-4a21-87da-1d3a055579e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966e1eb7-ada5-47a7-93ab-c563c6db17f6",
        "cursor": {
          "ref": "9f5c0131-69f1-4a7d-a94f-609a906665b1",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "800328e3-d0a7-460d-9639-ccca4a13ba00"
        },
        "item": {
          "id": "966e1eb7-ada5-47a7-93ab-c563c6db17f6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bfc22f38-6bfd-4bb9-a578-85118324524f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841c6e27-caec-4aef-9698-7fe4e2b5a13a",
        "cursor": {
          "ref": "ec11330a-05d4-46b1-ad35-81b53862a66f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f0c77028-62eb-431c-a168-69db4686082a"
        },
        "item": {
          "id": "841c6e27-caec-4aef-9698-7fe4e2b5a13a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4d4e71cd-fbba-4a59-b309-5a3285639e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8092ee0c-0b1f-4edd-acff-b96b327fe6c5",
        "cursor": {
          "ref": "89e79082-7007-4fbc-bf32-54e52ca5c9b5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e22702fc-d35f-46e8-9ee1-4aa985526c9a"
        },
        "item": {
          "id": "8092ee0c-0b1f-4edd-acff-b96b327fe6c5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2c26419a-ed15-42cb-a6e1-96b85333f7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb4aa2f-486e-489e-bd28-8cbd3cf4c009",
        "cursor": {
          "ref": "459d2748-04d3-4cc6-ad57-b89b7b286123",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e382b504-c347-4b67-8cc6-97585d261994"
        },
        "item": {
          "id": "4eb4aa2f-486e-489e-bd28-8cbd3cf4c009",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "66dd6ea8-326b-431d-8b15-8affe40a15de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3caaa2b-87e6-4b35-ac97-c955a7aa1a03",
        "cursor": {
          "ref": "213f4dbb-9efa-4caa-aa7a-e3949bb0ee88",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "10bc3421-6114-4874-8d31-a8e237d9b0ae"
        },
        "item": {
          "id": "b3caaa2b-87e6-4b35-ac97-c955a7aa1a03",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "56aa22cc-3e8b-46ad-9936-e1243cffad00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884aa123-0d49-4515-9f2d-80ee12430931",
        "cursor": {
          "ref": "93ed77ee-d20a-4230-a7ec-84eb41c00aa6",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a62f9b5e-27ed-4862-8fd3-fe0c7fe14f3d"
        },
        "item": {
          "id": "884aa123-0d49-4515-9f2d-80ee12430931",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6a021662-7fd2-4cb5-b7be-465305e8c366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e279b5-42c6-486c-a1eb-924250b3f033",
        "cursor": {
          "ref": "6553094f-d121-427a-8dc0-56b87f73dd91",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ee95143a-3dcf-4b50-9ccc-639b080534e0"
        },
        "item": {
          "id": "11e279b5-42c6-486c-a1eb-924250b3f033",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ca027cdd-0662-4ddd-b1c6-0933979c6135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbba30e-e77d-4ba4-8aaf-f3ba448fa0f8",
        "cursor": {
          "ref": "35b85925-505f-4ba8-a7e6-c74148d550c4",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a057c873-c05c-4002-9cab-b4e9dcd6d938"
        },
        "item": {
          "id": "4bbba30e-e77d-4ba4-8aaf-f3ba448fa0f8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "188c27e6-2d4d-48c6-8f5c-5248ab4274e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31698a86-cc88-4302-b267-064c77550431",
        "cursor": {
          "ref": "0a4269aa-86d3-4793-9cae-db946b73f691",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "508ce1b7-78cb-4bff-a6ee-d20366482113"
        },
        "item": {
          "id": "31698a86-cc88-4302-b267-064c77550431",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6c5b6a76-b228-4c4e-8a88-566f7131f645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d19c96-cffe-485a-bc7b-5d43457db0e0",
        "cursor": {
          "ref": "477279cd-179f-4910-88e9-954e77d2b6f0",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "15b43c6b-0c6c-49ad-b54b-e603114434be"
        },
        "item": {
          "id": "37d19c96-cffe-485a-bc7b-5d43457db0e0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "709b36ad-e493-4446-a665-8af380469054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2628f84e-005b-495c-970a-55fd81b6815e",
        "cursor": {
          "ref": "b4871892-f5c1-453e-889e-d115489465ab",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "faf41762-7fa1-4207-a8a8-b75a2a8ad8e7"
        },
        "item": {
          "id": "2628f84e-005b-495c-970a-55fd81b6815e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cbdd2702-1825-4640-aa6f-6bca636a9810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c44635-bad3-4931-aa5c-f51e7e7972a0",
        "cursor": {
          "ref": "78ac9226-8fd2-4ecf-a0ae-ce9cc9f24e77",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "36886823-ffb5-469b-9c82-d17f8e2837b2"
        },
        "item": {
          "id": "d9c44635-bad3-4931-aa5c-f51e7e7972a0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "10d15f8f-5e0d-4100-98de-c2f49dd6889e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b1a282-4616-4e06-86a2-422255f8f09b",
        "cursor": {
          "ref": "58e3ec97-229e-45c7-9162-e73bd5cba7f2",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "50d527c4-d000-4f0e-9bef-253d510f871e"
        },
        "item": {
          "id": "d1b1a282-4616-4e06-86a2-422255f8f09b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "43c1c8bf-38ff-44bb-b619-7dfaf2b3d49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78edc06-0488-4983-b71a-b4ef0f056f57",
        "cursor": {
          "ref": "d7546a50-d5e7-4d72-9f22-c509af535099",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cdc6f003-4279-4887-85f1-3e28551aed15"
        },
        "item": {
          "id": "d78edc06-0488-4983-b71a-b4ef0f056f57",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "80b9c61f-4691-4cde-981b-3ac81bee6738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f7cfa0-ad1c-4df7-a33c-be9e73c2dc89",
        "cursor": {
          "ref": "a315d26b-9f77-454e-9393-c639533403ac",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d55a13a4-0355-40c9-9c0c-a442eb63af56"
        },
        "item": {
          "id": "38f7cfa0-ad1c-4df7-a33c-be9e73c2dc89",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e82c68de-b710-41e4-b6df-7cf925231ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1feaa3e-6e0e-4bab-8f8a-b23cb7bad9ac",
        "cursor": {
          "ref": "5db64d70-2dcf-436b-b623-e2079e540138",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b43e0ad1-a6b2-426a-bb76-f4b1816fd76b"
        },
        "item": {
          "id": "e1feaa3e-6e0e-4bab-8f8a-b23cb7bad9ac",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8f2f358f-9698-4d56-b4ee-bcacff30957d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd7a262-4d3a-40b1-abd2-98f5f59bdb0e",
        "cursor": {
          "ref": "0fb21d1c-8b76-4964-8a46-e78fa4720571",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0909676f-7099-418e-ac84-be750b09abc1"
        },
        "item": {
          "id": "4dd7a262-4d3a-40b1-abd2-98f5f59bdb0e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f0e5bab2-7866-4300-96ec-8f0adb52cf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b23dab-6505-4dc7-a447-7cb898ad37f5",
        "cursor": {
          "ref": "c949e358-08f1-431d-b34b-5d8b9cc4905a",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6fcd70f7-591d-4002-bd9b-0148c36a1deb"
        },
        "item": {
          "id": "f5b23dab-6505-4dc7-a447-7cb898ad37f5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "40d8f74c-8a87-47c6-ab35-ecc1c7e130a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bab40c-03fb-4d98-942e-7bfb39c35d32",
        "cursor": {
          "ref": "6ee7fb18-cb33-4c70-92af-016c07bba0f8",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1da330c3-4b72-44ee-9889-7eac45500caa"
        },
        "item": {
          "id": "59bab40c-03fb-4d98-942e-7bfb39c35d32",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "532ff04b-4194-4fa4-8271-48a18e0ae276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f4d719-dcdf-4d43-8cd1-4a11d83ec9e9",
        "cursor": {
          "ref": "18ddf665-e09b-44e2-ab39-e31f59321a3f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d3c057ab-1dc4-4d1e-868a-e1f3bcdfbabb"
        },
        "item": {
          "id": "b9f4d719-dcdf-4d43-8cd1-4a11d83ec9e9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5fa3d400-5cd4-42a1-8a1e-5b97482678b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02c0bf4-494c-4cfe-b4ff-0eb11be1538d",
        "cursor": {
          "ref": "17675224-12c6-4e8f-91fd-67669eb4ec19",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7cde501b-5268-4b08-aac6-903b99fdb1b5"
        },
        "item": {
          "id": "a02c0bf4-494c-4cfe-b4ff-0eb11be1538d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "186276e5-822a-4e53-8d02-315aa5982684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f54457-3e56-45a2-aef3-7b90d4ce16c3",
        "cursor": {
          "ref": "aae8a804-f430-4109-b2be-872211350b6b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a7220189-9a80-4e90-995c-e6e33a75460a"
        },
        "item": {
          "id": "b9f54457-3e56-45a2-aef3-7b90d4ce16c3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5cb4cea9-f138-4e3c-a155-56904a2d58f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60eb199f-74f2-436b-b460-0b926366c962",
        "cursor": {
          "ref": "018b8f0b-78c7-4f71-b7f5-f78928fcb658",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3b482288-8ba6-446c-b0eb-736781cd44d9"
        },
        "item": {
          "id": "60eb199f-74f2-436b-b460-0b926366c962",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d3775bee-75d5-46b3-9625-1262744f0111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98b3216-dab7-41db-bf44-cee7e294a7e1",
        "cursor": {
          "ref": "edcbb691-763d-410f-b9e3-5799dbc08f2a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8cd43802-6caa-421f-bcfc-0cacdde2c5b1"
        },
        "item": {
          "id": "e98b3216-dab7-41db-bf44-cee7e294a7e1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "326e5063-065b-47b0-af2d-436702474975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1177f7-103b-4c18-acee-9c410159c390",
        "cursor": {
          "ref": "3750a877-4c4d-4757-828c-3904d6244456",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3024ef97-7235-456b-b73c-742bb829325b"
        },
        "item": {
          "id": "0f1177f7-103b-4c18-acee-9c410159c390",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2cb089f6-0d13-45fb-8f67-87e8c6d13e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94dfb95-f95e-4aaa-9831-10f1fa14fee1",
        "cursor": {
          "ref": "86d45ee5-9c84-4e18-981b-64c6965b22f1",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4efbdd5b-f065-481f-ad47-c3e2a98b75c5"
        },
        "item": {
          "id": "f94dfb95-f95e-4aaa-9831-10f1fa14fee1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8e0d2efa-6b5e-4db8-95de-63e12d059b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2496577-6615-4f29-9924-65a8cb67ccbb",
        "cursor": {
          "ref": "8faf7f21-9d45-440a-93b2-b3175afb1628",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "de70a596-c69e-4f86-b446-84e7b74e3d22"
        },
        "item": {
          "id": "b2496577-6615-4f29-9924-65a8cb67ccbb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9b8821d0-b8ec-4275-bbba-e9bf19bc8317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d859a10-7c25-437a-900e-3eecd8f3d0d6",
        "cursor": {
          "ref": "b81efb8c-75af-4e64-98ee-af1a842b42dc",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c045dcd8-1eef-4526-b2d8-187f14069da6"
        },
        "item": {
          "id": "7d859a10-7c25-437a-900e-3eecd8f3d0d6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e33023f4-9ffd-4fec-b75e-69bdffb4d2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17390c6-d301-448d-aa4e-ad92641ce6cd",
        "cursor": {
          "ref": "6c1e69a6-7b10-4fec-b22c-3a7675fdd75a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "13ae8390-db4f-47bf-8cce-4db26bbf1ad3"
        },
        "item": {
          "id": "f17390c6-d301-448d-aa4e-ad92641ce6cd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bb7ff84a-0af0-47fe-8c7e-9efe88e9a0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230cbde2-33a2-4574-8e25-f9011e969f02",
        "cursor": {
          "ref": "12f719cf-fbaa-4aec-940d-1922a136b365",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "14296e47-9a3c-49d2-954e-bb55823ab606"
        },
        "item": {
          "id": "230cbde2-33a2-4574-8e25-f9011e969f02",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8e23cb91-6679-48a0-9426-165c9a2421c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fc3ff2-a810-460d-bf92-e2a05e5fb6d5",
        "cursor": {
          "ref": "c2f0d98e-2fbd-4c0c-9f2f-607c92b4fc10",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5894a323-e4a4-4f9f-bc47-89539af003fb"
        },
        "item": {
          "id": "d9fc3ff2-a810-460d-bf92-e2a05e5fb6d5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "932b2540-7ab9-4733-b6db-c5785c03c42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818eeaf6-a2f8-479d-8d7c-914592ab6108",
        "cursor": {
          "ref": "5c43bb6c-7922-4ac8-a11c-b0f97cfb80b7",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1d46fc75-1e39-4ea8-9b38-8b063c1788f8"
        },
        "item": {
          "id": "818eeaf6-a2f8-479d-8d7c-914592ab6108",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f01b077a-a829-4e30-87f9-8404a57b51ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c3c310-5c15-4e03-a378-3431eff596e8",
        "cursor": {
          "ref": "336dcd88-78a7-47d2-a5f5-48c66c93c77a",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "13b9b54c-6134-4ec3-b24c-051a5c6f4295"
        },
        "item": {
          "id": "68c3c310-5c15-4e03-a378-3431eff596e8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8cef7675-a2be-4b2c-b430-773b5d42efe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aafad1b-1227-471b-8474-67216cee8f8f",
        "cursor": {
          "ref": "29bfb6ec-cbd4-4ee6-bc52-41f5be3bc231",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "615d20e7-8eb7-4d9e-a840-7598ef835f97"
        },
        "item": {
          "id": "0aafad1b-1227-471b-8474-67216cee8f8f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0fc4b38d-00d7-4b75-b157-215c84465c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135c5377-38c2-4b07-9bd2-b57e71eb9b72",
        "cursor": {
          "ref": "43d39f7a-337f-41c7-a939-5b34462424dd",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "05bfa02c-14b7-46ec-9a9a-7266bf226006"
        },
        "item": {
          "id": "135c5377-38c2-4b07-9bd2-b57e71eb9b72",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c69fab2d-d517-4d8c-affb-c33d09fd4dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcaf0fd-8365-483f-8556-2697244e8f30",
        "cursor": {
          "ref": "1d0249a1-3152-4b47-9e9c-570afabe6c99",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3ab6a5d9-a57c-4c6c-b36e-2da7bb1cd6ea"
        },
        "item": {
          "id": "cbcaf0fd-8365-483f-8556-2697244e8f30",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e0258549-fa3a-4cae-9b57-0eedd59c310d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd90ce19-a174-4706-9717-2630cd6a01f8",
        "cursor": {
          "ref": "cfba506b-7c11-4dfc-a67e-550788c47c91",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "969dd006-790f-4841-b84b-958596f81773"
        },
        "item": {
          "id": "dd90ce19-a174-4706-9717-2630cd6a01f8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "994b5afa-ff1e-4315-9657-1e94d7b7e396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae43fefd-feea-4858-9ac7-ed8d51ee681e",
        "cursor": {
          "ref": "684e22a2-a4b4-45f4-ba17-a041216a4a28",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "596eaaf6-aa8f-456e-8a2f-1483a55c9779"
        },
        "item": {
          "id": "ae43fefd-feea-4858-9ac7-ed8d51ee681e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a91aae9f-974c-4840-8721-e8ef619033ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65979926-7177-4a0a-8028-7ba0c93606db",
        "cursor": {
          "ref": "893b13cb-5715-4f45-b830-dabd7ed5d073",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "07ba2f53-dd61-44e1-beaf-b8f010579469"
        },
        "item": {
          "id": "65979926-7177-4a0a-8028-7ba0c93606db",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fc7af02e-a73e-4423-9754-92101a9a89bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef44d38b-b855-42dc-a929-46ce68b73fba",
        "cursor": {
          "ref": "ed442149-e225-4bbd-91f4-65c3fc95eb6d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2bd53990-54ef-4d85-ac8d-9821faca07f2"
        },
        "item": {
          "id": "ef44d38b-b855-42dc-a929-46ce68b73fba",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "29d1d188-cd75-4cb1-b8a7-6ac0899ef6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e77bd71-5eba-41b2-8aff-901b516edb3c",
        "cursor": {
          "ref": "80252963-2bc6-4a90-b772-61d311e2b887",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "65a5120e-032e-4c16-b853-8f61319c0257"
        },
        "item": {
          "id": "2e77bd71-5eba-41b2-8aff-901b516edb3c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2cd58f7f-9e9a-4b1a-8f3c-df7962fbc3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9bd922-6e55-4d3a-bb54-5cb002335378",
        "cursor": {
          "ref": "3ac06ced-7763-4068-81a9-a916dce1ec9b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7784d1fc-db09-4dc0-b09b-25b3647730e4"
        },
        "item": {
          "id": "cd9bd922-6e55-4d3a-bb54-5cb002335378",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c7e049d1-0c79-45bf-b697-28fd03c968a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e76e4e-9a22-48bc-83b6-974c48a8dfdc",
        "cursor": {
          "ref": "c89982a6-6373-48b6-91f1-e54070f41c54",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5d482e9d-b579-4ac5-8621-499e67bce4a3"
        },
        "item": {
          "id": "80e76e4e-9a22-48bc-83b6-974c48a8dfdc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2f41b5dc-4056-477e-a309-eed7d1681fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a865d016-7cd6-4b83-a2a5-e7bca095eea7",
        "cursor": {
          "ref": "229f36e6-008b-4bce-8537-3e1aa576e46a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "883eed3c-d849-4af5-a33d-fb26bbff9fa2"
        },
        "item": {
          "id": "a865d016-7cd6-4b83-a2a5-e7bca095eea7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e0ff2aa7-efde-43b5-b880-a0d0b04447c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fc7d04-9e47-4f5e-8458-8863d8940a9a",
        "cursor": {
          "ref": "44f089f0-a3f4-4ed4-ba36-7a1884b91f0e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d43ed326-39ff-4956-acc4-3e0efeff0fcf"
        },
        "item": {
          "id": "40fc7d04-9e47-4f5e-8458-8863d8940a9a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ffde226b-3751-4d78-bb2a-44b752b89f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a17add1-e6c6-48c0-9fcd-215365723141",
        "cursor": {
          "ref": "d25f1cb5-c0bd-4c72-bd14-083e95ea4c58",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "330d988c-0733-45ab-84ee-06500a64cd48"
        },
        "item": {
          "id": "3a17add1-e6c6-48c0-9fcd-215365723141",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "900b7dec-eacf-40a1-8591-139ea0ba31f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45881de4-7f97-492f-ac6d-90c239642ef3",
        "cursor": {
          "ref": "ca19cf86-51aa-40b9-b797-d7683d0f244e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "84a88a78-45b6-40f9-9087-26dfc1f932f2"
        },
        "item": {
          "id": "45881de4-7f97-492f-ac6d-90c239642ef3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ef0bfb4b-6bcf-4000-8727-8fa5f0d879c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292ef503-3f78-465d-98f3-3328183bb1fb",
        "cursor": {
          "ref": "f2e2905d-41e7-4df9-83ae-ed889c7033d3",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3c4bcc8b-f599-4623-973a-83ee24138179"
        },
        "item": {
          "id": "292ef503-3f78-465d-98f3-3328183bb1fb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "576b5d84-8426-4a1e-aa95-8fc08dcffcfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b53949b-1889-4fba-ae5d-67aa5144eed2",
        "cursor": {
          "ref": "2c9590b2-a2bb-46d8-9567-51005a0b8d81",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "286ad5e0-fd9e-465c-bab5-ea72e194efd8"
        },
        "item": {
          "id": "1b53949b-1889-4fba-ae5d-67aa5144eed2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "08376ad8-35e2-4914-80f6-7f266ade0c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6110320a-d04d-4d2b-a0e3-f26d515b91a1",
        "cursor": {
          "ref": "db6cd462-11ad-4cab-8b77-1672f56a1a1f",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7206b5c1-c8d0-44f2-95dc-38b497be4fa7"
        },
        "item": {
          "id": "6110320a-d04d-4d2b-a0e3-f26d515b91a1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c349c74a-43fd-40c8-8d44-372dd636e45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43424512-bbf5-4745-b98b-3114f4c9e339",
        "cursor": {
          "ref": "e1c7fcb9-b279-4cde-ab29-b1fe76286d4e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7c0b45dd-a16d-4b39-8c4e-0cad29d40db3"
        },
        "item": {
          "id": "43424512-bbf5-4745-b98b-3114f4c9e339",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4debb708-af6c-4a7d-9d11-1a4bf199e656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad473e1-e016-4eb2-9e34-f971c2dde766",
        "cursor": {
          "ref": "874c8cdd-f525-49ea-8881-1a2ebc779932",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2705afe9-91f4-4f9e-b2d0-b1ffd1bd40a5"
        },
        "item": {
          "id": "fad473e1-e016-4eb2-9e34-f971c2dde766",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8ef2f9e0-af3f-4653-9bca-9f4382f383fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3c3655-6bb6-4579-9a94-497aa7bb8f8e",
        "cursor": {
          "ref": "dd41da9b-4318-48de-9a75-6db2a9f37b35",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "89bc6f92-0845-492c-b3a0-0ccdc7ecc015"
        },
        "item": {
          "id": "3c3c3655-6bb6-4579-9a94-497aa7bb8f8e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b26e2185-4eaa-4fb1-8837-7f0b358c9941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d149e7-98d6-475c-80e1-4bdd85c60f2e",
        "cursor": {
          "ref": "21ec341c-3e24-4342-9679-f6d9cb126bea",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "231442da-4381-4fab-9081-9cbb5ed3f6d5"
        },
        "item": {
          "id": "96d149e7-98d6-475c-80e1-4bdd85c60f2e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "57646f61-fd31-498a-8b09-133a75a299d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a156de-6db6-40cd-81ff-39853d243d90",
        "cursor": {
          "ref": "a748c1d5-8014-42c9-95cd-a984820964f7",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b60c5538-0c29-4ab4-85e0-1dd962ee62a9"
        },
        "item": {
          "id": "84a156de-6db6-40cd-81ff-39853d243d90",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4a58817f-6fe5-42c9-827f-07e0d58efaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36146a6e-52ae-47fd-9cd9-cc930d09e1e8",
        "cursor": {
          "ref": "a72c7ece-6e47-4b11-944b-f882ce99c657",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6b599ac4-4a8a-4e7a-a8da-2d0d8e0ebec3"
        },
        "item": {
          "id": "36146a6e-52ae-47fd-9cd9-cc930d09e1e8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "deec2fd5-4fac-4e0c-96da-81698fb2ce5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9995e87f-e88c-4bb9-b860-204854f05e65",
        "cursor": {
          "ref": "21fbb3ff-2313-44ef-a802-42959a4866ab",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "80ef38cf-7fc1-4dac-950e-700877da7ff1"
        },
        "item": {
          "id": "9995e87f-e88c-4bb9-b860-204854f05e65",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3bd63a16-34e6-46cb-86da-558a0e2b58d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9d370f-d8f0-44b9-828e-03bfe35671ab",
        "cursor": {
          "ref": "ec383b33-6775-4a1e-b312-45ac8ff1857c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9de538cd-188f-4ceb-b9fb-3cd0e9469a4b"
        },
        "item": {
          "id": "2d9d370f-d8f0-44b9-828e-03bfe35671ab",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cc075e23-06c2-41f5-83bf-6cd0410007fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0343d1c5-6e44-4ec2-8bca-4ae0037774e7",
        "cursor": {
          "ref": "fe0fea67-457c-475f-bd83-890acc20e695",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "860ea503-8838-4777-8792-7cfb0cbb5b4b"
        },
        "item": {
          "id": "0343d1c5-6e44-4ec2-8bca-4ae0037774e7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ff5a0585-c86c-40b4-8ef5-8ce06b8cc02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecf5d12-e8c1-4fb4-94fa-178fa5abcad9",
        "cursor": {
          "ref": "18fe0e76-c201-4a8a-888a-faa9e6e239c6",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "20ad30e6-59d6-49e9-aa7b-e2fd71dd3eee"
        },
        "item": {
          "id": "aecf5d12-e8c1-4fb4-94fa-178fa5abcad9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5466b035-1d1a-4281-a5a2-bfa4427f21b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ece456-9ca5-4d9a-ab3e-632b8ad1c1ea",
        "cursor": {
          "ref": "dab680ce-be6e-40f4-ad29-b9cc6b2a8b39",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e075e74e-f257-485b-a50b-48fc4510882a"
        },
        "item": {
          "id": "56ece456-9ca5-4d9a-ab3e-632b8ad1c1ea",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "73f51cba-2575-4451-a0db-901d99fc77b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379ec821-7be0-4bf7-8f46-feaf177ec39d",
        "cursor": {
          "ref": "eba54045-bb7e-4137-ad87-bb3a75f1b83e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "df855fb3-1c90-4b94-8ba0-36400726b4f4"
        },
        "item": {
          "id": "379ec821-7be0-4bf7-8f46-feaf177ec39d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1e939c9e-63a0-4ce2-94df-fa770408fa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef923d0-af5f-413a-99e5-164c3b007636",
        "cursor": {
          "ref": "bcc57b31-022d-4f71-a1d5-238f175b23e6",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cf8b3544-a631-43df-b200-00c1bb668807"
        },
        "item": {
          "id": "1ef923d0-af5f-413a-99e5-164c3b007636",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "887698b3-f448-4cc9-a1e7-657597a9ff22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74af51a5-76ff-4899-913b-c058c159a024",
        "cursor": {
          "ref": "ecb13474-67c0-4f16-9979-25e1846c65ae",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d98676b7-403d-417a-a0b3-7c082989eaec"
        },
        "item": {
          "id": "74af51a5-76ff-4899-913b-c058c159a024",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ca6d0880-d6f4-4782-9155-e68c9d7c1a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b7e03a-968b-48e5-805c-21019fb8ed6d",
        "cursor": {
          "ref": "ded47c5a-8f5b-44ab-bdc4-f0472edfb739",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6bba2370-0f9b-4dbb-bcb5-0707c62b303e"
        },
        "item": {
          "id": "b7b7e03a-968b-48e5-805c-21019fb8ed6d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "295f87c6-a28f-4ff3-965e-1c7ca280a921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c2bdd2-88f9-4078-95b5-416b3937703e",
        "cursor": {
          "ref": "92aac50b-ba0e-4bdd-a15d-be4bf60de07d",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "22b230c2-82e7-4864-bc9b-c816669f270b"
        },
        "item": {
          "id": "c9c2bdd2-88f9-4078-95b5-416b3937703e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f6794525-532b-42f6-b6b4-ca1e06af71da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a631f087-0921-4f06-8006-79cb566f4d39",
        "cursor": {
          "ref": "61092d49-c94d-433f-92ce-fbebfca2bf9f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0dcbcbf2-85e3-40b0-b333-03c165eb4e34"
        },
        "item": {
          "id": "a631f087-0921-4f06-8006-79cb566f4d39",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ae00eeca-a862-4716-b3b0-52d9a8401ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01491c02-a6e6-4716-bff8-99c5125f1ec2",
        "cursor": {
          "ref": "d7025ca9-ecee-4daa-ac35-be5b554c1323",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c678a8ae-881f-4437-8260-abb6faf35e10"
        },
        "item": {
          "id": "01491c02-a6e6-4716-bff8-99c5125f1ec2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "58aa3b98-daf6-45f4-acf5-7f390f6571e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b732e131-5031-47d7-93c6-b471028c2232",
        "cursor": {
          "ref": "fb27c9f1-ab3a-43e8-a07c-94630ea644a1",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "17bfed52-fef3-45b6-a3a4-99d611015da0"
        },
        "item": {
          "id": "b732e131-5031-47d7-93c6-b471028c2232",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9222d872-0474-4319-8527-b25ee222d724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbf4a9e-ff2d-4d66-bab3-c5a8e19d5a8b",
        "cursor": {
          "ref": "38310ac7-9264-4b5b-8986-ef572f5140dd",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "42d05780-3b1a-4ab1-9544-25fe50dfda63"
        },
        "item": {
          "id": "8cbf4a9e-ff2d-4d66-bab3-c5a8e19d5a8b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "08e915e9-63e8-417d-a5a3-a51bd7045198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c6d5f3-7158-4637-a2d1-79ccc24f7bc5",
        "cursor": {
          "ref": "b2d13f4c-8275-4f05-abb2-36abf060cdf9",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1bd0c6d1-2154-4890-8ae3-7af2e63dea8d"
        },
        "item": {
          "id": "f4c6d5f3-7158-4637-a2d1-79ccc24f7bc5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a34de553-7d2a-4522-9cb2-ea690bbfe716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4814a982-a46f-409b-b0c0-e73b959787e7",
        "cursor": {
          "ref": "f0594cf4-ca74-492a-adc7-0fe0a93070ba",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7a62eb5b-b1d5-4a8e-9dc1-10f88b912414"
        },
        "item": {
          "id": "4814a982-a46f-409b-b0c0-e73b959787e7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d5d80dfc-31ad-4bd5-976e-8e62cadafae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ad3c40-696f-4fa5-8488-ec8478a5ffa0",
        "cursor": {
          "ref": "87395be3-169f-4568-87db-75e49f02d548",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4cbdcd7c-b129-484e-924e-42156c6984d9"
        },
        "item": {
          "id": "c9ad3c40-696f-4fa5-8488-ec8478a5ffa0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f69d9974-0642-4eaf-b96a-1095d75d1064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c853925-c345-4635-b698-f3b7dde36b8a",
        "cursor": {
          "ref": "e127aff7-ca31-486d-beaf-5179f8b494dc",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4deffabb-72f9-4e3b-92f8-891c58970da8"
        },
        "item": {
          "id": "7c853925-c345-4635-b698-f3b7dde36b8a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "44027f6f-5f96-4b04-b208-f6aa2accfe4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872b6ef8-cbb8-464a-825b-7106e2d742a9",
        "cursor": {
          "ref": "9b1e517e-a59a-4a0d-bdd6-13c597825000",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "37e7c57b-8f61-45e5-958f-1d82f5c65c66"
        },
        "item": {
          "id": "872b6ef8-cbb8-464a-825b-7106e2d742a9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c09291f3-2d7d-4705-95b3-20e6e082d0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ae09f6-98ac-4274-99b5-a0310a9f81fc",
        "cursor": {
          "ref": "1f4af6e5-6280-4d86-866f-54de19834428",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "44aba43a-6d05-435d-baf7-6fbbc4b3e834"
        },
        "item": {
          "id": "d7ae09f6-98ac-4274-99b5-a0310a9f81fc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6eccb08d-d05a-4a14-a2e4-790b9e93fa4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaeec3c3-bc8b-4c29-aa59-bb2cd84cc6af",
        "cursor": {
          "ref": "adf82a71-b3c0-4c7c-b31b-0a0de3a60283",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6053cad4-5fff-49c7-a762-1e7776230d4a"
        },
        "item": {
          "id": "aaeec3c3-bc8b-4c29-aa59-bb2cd84cc6af",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b4db69a4-ff53-4859-9af5-8a90fba6ab0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bdb392-a33a-4429-b00d-b01d46b5f7cd",
        "cursor": {
          "ref": "a993b322-9f4b-4508-86c6-8fa4a41d9ae9",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8ef2b8e0-3e95-4b0d-87ee-1f4718ce2f6c"
        },
        "item": {
          "id": "95bdb392-a33a-4429-b00d-b01d46b5f7cd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fcccd559-bc80-42f8-a3e5-e96c3a3e8f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f167a42-67c2-4563-9379-dc885038d652",
        "cursor": {
          "ref": "81391caa-b001-4bba-9622-e3d55b076662",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "007fa7cb-58dc-43d7-ab9f-ff63ed6d6c7f"
        },
        "item": {
          "id": "1f167a42-67c2-4563-9379-dc885038d652",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a7942dc4-ea12-4f46-97c2-7bc52b5ef33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae285db-da1b-44d3-9809-6d94a520ae29",
        "cursor": {
          "ref": "17633dab-42ec-4083-93ef-fa2592308114",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "178bfc4e-87db-44d7-87c6-100c683ad51d"
        },
        "item": {
          "id": "bae285db-da1b-44d3-9809-6d94a520ae29",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c12c9196-cbda-4856-9bce-698958f12407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcf1847-1b66-4aae-a0d5-16f9792e75be",
        "cursor": {
          "ref": "0e3c2b3a-484f-4970-a08b-23b58d8d08f3",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0a8c8271-b6a4-4dc2-ba42-6e41acdf16d8"
        },
        "item": {
          "id": "afcf1847-1b66-4aae-a0d5-16f9792e75be",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "14b74463-a78f-4706-9fe9-0febb2c7230d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e791bb-0b56-43cc-8cbc-8b139b6f45cf",
        "cursor": {
          "ref": "3f1e0eff-fc89-4136-9a35-4518896727c6",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "379abf26-f178-42d3-b620-fb30d353807f"
        },
        "item": {
          "id": "65e791bb-0b56-43cc-8cbc-8b139b6f45cf",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8f453c5e-1bb7-462c-8141-d4d0e777fdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2553ec80-1816-4bcb-9243-599b48bb26e5",
        "cursor": {
          "ref": "21decd0f-3777-45af-9f96-17c0df1642b7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7aa632dc-2425-44ae-905c-07cf4f3e2e1c"
        },
        "item": {
          "id": "2553ec80-1816-4bcb-9243-599b48bb26e5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "eedf8c87-27f4-406d-9093-31c3cc4d2de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e935b7b8-9b1b-4a6c-a721-84da7cb13dae",
        "cursor": {
          "ref": "606d59f1-7e96-4109-902d-4edaac14c85c",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "eae82846-71cb-4cc5-b310-08b28aead2ba"
        },
        "item": {
          "id": "e935b7b8-9b1b-4a6c-a721-84da7cb13dae",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d62c3b9c-bf30-4c59-b151-3a734cccec89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0079128-8a8c-46ee-8af2-1a02a20e9111",
        "cursor": {
          "ref": "6f2d543b-f167-483a-86be-64061ac2d900",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "30876341-799f-4216-ae11-df8a371919fe"
        },
        "item": {
          "id": "b0079128-8a8c-46ee-8af2-1a02a20e9111",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2fe78ca5-435c-4949-9512-a3b3b7559426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "674444d9-f04c-47c7-830b-957fec53003c",
        "cursor": {
          "ref": "e9e2231b-e806-4e35-85ac-a35b264e6ccc",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3ae6a8f4-679f-4a8b-9490-80e7c408bb83"
        },
        "item": {
          "id": "674444d9-f04c-47c7-830b-957fec53003c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cff630c4-c6f0-4ea7-81e3-469f23714b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b7f2f33c-9849-4c18-a728-5c3891ce66a5",
        "cursor": {
          "ref": "c5feeacc-ae85-451c-b5f3-2966dadafbcc",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "70beff4a-237f-4f3d-a15a-591919e09a8e"
        },
        "item": {
          "id": "b7f2f33c-9849-4c18-a728-5c3891ce66a5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "12d69500-a936-4ee8-80b0-dcc0f7a2c13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "dad4ed30-0445-4e33-9e08-da876538112a",
        "cursor": {
          "ref": "ec8b6cab-caaa-4ef6-afab-cb46ec7e99ea",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1ea24c21-c690-4c88-8f98-0a7c9f30c637"
        },
        "item": {
          "id": "dad4ed30-0445-4e33-9e08-da876538112a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d47ffcdb-75a1-4ba7-afc8-c6dfe7ed4a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1cdaf7d6-6a29-4915-8649-f51158a082f6",
        "cursor": {
          "ref": "1286ad43-c4eb-400e-96fa-aea9af31c5e6",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2069a007-4b8a-4606-b3b4-8a37cf3f6133"
        },
        "item": {
          "id": "1cdaf7d6-6a29-4915-8649-f51158a082f6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3ef1db3d-da40-4cab-811e-e04603022246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "26713418-0844-48ae-b099-8470312bd661",
        "cursor": {
          "ref": "76e6c6ba-c689-44f1-8a22-249073d61bd8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8c932569-a274-435f-a396-77e2bcca1bc4"
        },
        "item": {
          "id": "26713418-0844-48ae-b099-8470312bd661",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "614c618d-2b75-48a6-9dce-80429105e09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b0533fa9-0f77-4709-a994-0b407659affb",
        "cursor": {
          "ref": "c85353e0-50d1-4bd1-a830-24f800b0f46e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b8a7c56c-a6aa-45ce-aa52-08dbcfbf7f59"
        },
        "item": {
          "id": "b0533fa9-0f77-4709-a994-0b407659affb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a15333b9-a410-44ee-8ef6-04d22bee0ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ec52ed98-1fd0-469d-989d-1377ee61c509",
        "cursor": {
          "ref": "e4a75c0e-5ac3-4589-b0e5-5cc19a21bf75",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e084d284-6670-445c-8539-0d889fe4a69d"
        },
        "item": {
          "id": "ec52ed98-1fd0-469d-989d-1377ee61c509",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "413d9cba-3827-4f84-a4e1-96d3d682f0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9c8f05-fc6a-40b0-a10a-622d6e040f1a",
        "cursor": {
          "ref": "cdedbf5d-f82e-442d-9e66-533ad091730e",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c2eb0eb9-9822-4d13-8e7c-cf3d14e7c4ab"
        },
        "item": {
          "id": "bd9c8f05-fc6a-40b0-a10a-622d6e040f1a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8b08a372-9f90-4385-934d-78df08b618c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3b045d-2856-4b6f-85fa-c7030f526fe2",
        "cursor": {
          "ref": "f422bbc0-6b8e-4b11-ba71-1caa419511a7",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a72c0bed-a9d0-4c61-bf3a-50189c0896e2"
        },
        "item": {
          "id": "6d3b045d-2856-4b6f-85fa-c7030f526fe2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "40eb9576-ee0d-4a48-b030-4f04ff932f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b2e520-383a-44c2-baea-28aea6372b74",
        "cursor": {
          "ref": "f244337f-a286-497e-875d-1a5ae2841896",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2a2cd095-57f5-4ea9-a912-6c91809b4e81"
        },
        "item": {
          "id": "72b2e520-383a-44c2-baea-28aea6372b74",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6ecbe799-0087-4e1f-bcc3-04e8ad032e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1d929c-f8c2-477f-9cd9-ec7394005576",
        "cursor": {
          "ref": "b2152a01-c119-4b1a-b249-acc6effd8e0b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "665bcb89-e20c-47a8-80c4-5507a7dde4a5"
        },
        "item": {
          "id": "9a1d929c-f8c2-477f-9cd9-ec7394005576",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ddd52734-857e-47c0-b99c-b1e798fa5694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6368c09f-d4c2-4301-964c-1b6115505687",
        "cursor": {
          "ref": "88e436db-3211-4a22-a5c4-6c2a5559e0a0",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dd1bd12d-0dbf-42b0-835b-41bcfc685994"
        },
        "item": {
          "id": "6368c09f-d4c2-4301-964c-1b6115505687",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f826c7e3-391b-462d-8154-004a6754ec8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43f39b5-73a9-47d6-8129-1546c53e32ac",
        "cursor": {
          "ref": "e7cd544e-a52f-48f1-8a20-8c2f67adff57",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cd3fb0d0-d9ea-46f6-9f7b-2f340f052d3c"
        },
        "item": {
          "id": "a43f39b5-73a9-47d6-8129-1546c53e32ac",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ff661d0b-190f-40f9-8e07-e79e48e4cb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4eceb2b-8984-40aa-834f-c6133131a442",
        "cursor": {
          "ref": "04f346b5-b090-4720-8742-20c3f5c80c41",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "41b80173-7d3a-4459-89b7-6269f92198e0"
        },
        "item": {
          "id": "e4eceb2b-8984-40aa-834f-c6133131a442",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b2c5a8d5-eaf1-4e9e-a21c-087a7cd78e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9703150d-5ba5-4201-8ba2-6cd50969312c",
        "cursor": {
          "ref": "4129a158-7fba-4094-9030-2390a2c10f52",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d18f857e-9f91-45aa-bbfc-3359f56d4c24"
        },
        "item": {
          "id": "9703150d-5ba5-4201-8ba2-6cd50969312c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b0cd4ce2-9ee0-491e-9c86-db86bc229a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdcb694-edc1-4d3a-97eb-775b182bd0f3",
        "cursor": {
          "ref": "a54cf35b-1cfe-4668-8a30-f52b124bd93a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b5465b14-7704-4b85-a011-81d04b078588"
        },
        "item": {
          "id": "ecdcb694-edc1-4d3a-97eb-775b182bd0f3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e5835bcd-4ae2-4ccb-90ba-7db6d0c4dcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a52080-fb01-4a8d-a888-9fd2965e2a1f",
        "cursor": {
          "ref": "64cf4cc4-e463-4a5f-9897-303f48214816",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ffcf8319-0b81-45a9-868a-68ec967cde7c"
        },
        "item": {
          "id": "64a52080-fb01-4a8d-a888-9fd2965e2a1f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ab1f4284-be45-4a49-8c54-d37c918317bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0baaf2-8b52-47a9-b8ab-23a32d93a678",
        "cursor": {
          "ref": "cfb716ff-97ca-4ae6-96f4-4c25fcef8389",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cb72381a-74ff-40ce-9e67-ce1eb897be02"
        },
        "item": {
          "id": "6f0baaf2-8b52-47a9-b8ab-23a32d93a678",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0a72a58d-355e-42c1-b8ca-3316bfbc4312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aace8f3-59bd-4b91-825c-627c331d6a57",
        "cursor": {
          "ref": "39aa18c3-44f0-4c07-9623-bd45ef04beaa",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "49070f97-78fa-44f9-aad1-16fda1d2c563"
        },
        "item": {
          "id": "1aace8f3-59bd-4b91-825c-627c331d6a57",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1b9e0e56-6fc4-4b16-bc20-24d92f02ac03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f5e02a-f983-4124-9f0f-dc103b64a20f",
        "cursor": {
          "ref": "09ad7948-96b7-43df-8bbb-96ae0ceacdc2",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c6b78dcc-bfa7-4e38-a3c2-f3180fe465aa"
        },
        "item": {
          "id": "83f5e02a-f983-4124-9f0f-dc103b64a20f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c5baec1e-f83d-4247-8adf-e33e417c7912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cd366a-b63a-4305-81d8-c07eea067c57",
        "cursor": {
          "ref": "4c4fc42d-ddaf-4ac1-85b9-e4a733559054",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dfbaf97b-4ad8-4615-a2c8-c05eeb5fcfa3"
        },
        "item": {
          "id": "25cd366a-b63a-4305-81d8-c07eea067c57",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0245a0dd-c9a0-499a-b802-490f6f830376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0093fbb2-e95a-4977-b56b-8d7c28dc30bc",
        "cursor": {
          "ref": "e71024a9-be90-434f-bccf-60daa3da4460",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9ba20210-89fd-49a4-a933-3e7982b0a94e"
        },
        "item": {
          "id": "0093fbb2-e95a-4977-b56b-8d7c28dc30bc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1940db52-6a62-4080-b20a-27d5e11be4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3973f88-2e9e-433c-a289-a87b0dd2d76f",
        "cursor": {
          "ref": "f7a43dc8-10eb-44fc-8de4-051ca8f174db",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "90cd5cf5-ff15-4335-b77d-e4a0e0209a87"
        },
        "item": {
          "id": "d3973f88-2e9e-433c-a289-a87b0dd2d76f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5779d4f8-9bbf-4cc8-a175-672036c68f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33159ea-c9d1-48c0-8eb9-053802f1858f",
        "cursor": {
          "ref": "f4be0796-3a9a-4ea6-b24a-632f2208f4a2",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d54b1baa-c680-4506-a3f5-2f98d945f076"
        },
        "item": {
          "id": "f33159ea-c9d1-48c0-8eb9-053802f1858f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "73ff0e36-4c8b-495b-b838-c10b57491b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6866e8cc-c344-4f64-9cd7-9fdee3a345b0",
        "cursor": {
          "ref": "6ce25b23-811f-437c-a275-cf199dc6fc3f",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "07dbca13-5e06-44b4-a5ee-88d46cfcb76a"
        },
        "item": {
          "id": "6866e8cc-c344-4f64-9cd7-9fdee3a345b0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d53c63c0-1ebb-4bf7-b3db-0449584ab86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238034fe-c5a1-4be2-ac98-4ea375d34de1",
        "cursor": {
          "ref": "f6f3b6a4-a9a6-43c8-8aa6-54bdf768a636",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c5707527-928d-4c4c-a9fe-42afbf8206f3"
        },
        "item": {
          "id": "238034fe-c5a1-4be2-ac98-4ea375d34de1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2f8ffae6-a6e5-47d7-89a4-ef469304ea1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8db488-38ae-408b-bbab-fdce745d20a3",
        "cursor": {
          "ref": "d11241e0-1c8b-4eca-91b0-1226c3a716b6",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cfc8acb2-6e18-4f88-9d72-ae730a314290"
        },
        "item": {
          "id": "9e8db488-38ae-408b-bbab-fdce745d20a3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "553c3a68-5c88-4f38-8689-828f2120f0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059b0382-d26c-4117-b8d0-bf6dec7b8019",
        "cursor": {
          "ref": "99a6668f-2790-459f-b4a4-7baf14f86b07",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "25f54b42-4a57-400b-868b-d950bc38d1c6"
        },
        "item": {
          "id": "059b0382-d26c-4117-b8d0-bf6dec7b8019",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b2f80223-b20e-4126-b90e-83922b49c2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2835cea3-2d6b-49ed-a9af-3cdfa5da94f1",
        "cursor": {
          "ref": "f784d936-f33f-46bd-a01b-30a182833e7a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "780fc5e7-9ec9-4991-ae28-1952de01311d"
        },
        "item": {
          "id": "2835cea3-2d6b-49ed-a9af-3cdfa5da94f1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2a759187-e27a-48ba-8404-577b26c39877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b6b089-774b-4948-9b85-e32e4d14b237",
        "cursor": {
          "ref": "2045b283-0e49-409d-b1c3-91f8ecc64ce0",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d2ace4a3-64f8-4541-9093-6fd004f04d1e"
        },
        "item": {
          "id": "02b6b089-774b-4948-9b85-e32e4d14b237",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c823a79a-c81f-43fc-b01a-16235ef6a265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2432d9-9fbc-4cd1-8e91-b192a11c104a",
        "cursor": {
          "ref": "9eb55cb2-e12b-47de-b37e-2722cd3c4309",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4686d77e-643b-46ae-84b1-f543544ad4fd"
        },
        "item": {
          "id": "fb2432d9-9fbc-4cd1-8e91-b192a11c104a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5e6824aa-68a1-43ad-a06f-0b47b509111d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50748e9a-48ef-4dc0-af08-78d05b5c00f0",
        "cursor": {
          "ref": "416670ac-100a-4121-8d47-6bcda303aa23",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5bbe8c7b-4122-43e3-b99f-e25f0b237967"
        },
        "item": {
          "id": "50748e9a-48ef-4dc0-af08-78d05b5c00f0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d939b921-ec98-41f1-9520-da6296baedeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e90d9e-bb02-4530-913d-a2c903e6ea34",
        "cursor": {
          "ref": "00118cc4-7641-4993-8022-5ceb1cc594b9",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "329cf619-1e93-458a-bc5a-0468c1c02b61"
        },
        "item": {
          "id": "36e90d9e-bb02-4530-913d-a2c903e6ea34",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2220d9a6-7c13-40bc-a910-7a363266ae6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60af00f9-62d3-4b32-89c9-ef565eedeec8",
        "cursor": {
          "ref": "ddaa8066-3231-4333-8a4f-27331629362d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4d1557be-9a6f-4bde-8461-c15f87363872"
        },
        "item": {
          "id": "60af00f9-62d3-4b32-89c9-ef565eedeec8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3a38afad-d0b4-49fb-a492-a7b3a284c7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b829061b-d881-45ef-9b15-b13697b6a182",
        "cursor": {
          "ref": "4e885a8b-ff2b-45de-b821-1e5e3dd33642",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cff09055-359d-4ee6-a488-4d17810eab5c"
        },
        "item": {
          "id": "b829061b-d881-45ef-9b15-b13697b6a182",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4dc465bd-e800-46d9-a07f-16621e770e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd86135-7e4f-4861-bef3-b32834a8fb63",
        "cursor": {
          "ref": "838284aa-146d-4ffa-8800-5d6fcaef5422",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3fe28956-8f24-44f8-afe9-f90921b438dd"
        },
        "item": {
          "id": "8dd86135-7e4f-4861-bef3-b32834a8fb63",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fb069f38-eec2-4330-9819-01049259afc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1a08e0-8b6f-4260-8f29-20e4d3a16f83",
        "cursor": {
          "ref": "8216fe18-087e-4718-9a2e-557fcea0e3cc",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "be316e95-9afd-4845-a92c-9c0ebfe97076"
        },
        "item": {
          "id": "9e1a08e0-8b6f-4260-8f29-20e4d3a16f83",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "70e31dfd-e18f-4699-b189-49807bbbe06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8999a1-3f36-4867-b6d0-6ba6b8d664c7",
        "cursor": {
          "ref": "a3ea7034-d8b5-43b4-b43b-9bd8c013f9fe",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "42bc8aed-c893-4c25-8ca0-3abe2eaa12df"
        },
        "item": {
          "id": "5e8999a1-3f36-4867-b6d0-6ba6b8d664c7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4508f9bd-d833-43ae-a2f5-f4594c4a1bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b200e47-50c1-4e6c-b295-4a3d8c6e12ce",
        "cursor": {
          "ref": "8ce0622b-c64c-40ff-9727-c791009f96bb",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2b442c6f-e250-4309-a9bb-2c3459a0d881"
        },
        "item": {
          "id": "8b200e47-50c1-4e6c-b295-4a3d8c6e12ce",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "dd4c3fc2-f290-425d-afc6-e4e9ed9edc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c612850-057c-43cf-aa68-5648a3660fe8",
        "cursor": {
          "ref": "69b88069-3b75-4fd6-b7ea-b2c9d98735e3",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ba68ead3-6d5a-4813-914f-68218c5142af"
        },
        "item": {
          "id": "1c612850-057c-43cf-aa68-5648a3660fe8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6fcb616a-a6bf-425e-89da-513b2bbf2bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a3d343-1912-4e67-9a63-892f62a0d00f",
        "cursor": {
          "ref": "cd9b12be-ad70-4369-9d0e-1b90cd8c11cd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "91408653-1c45-47fc-b251-35d0df4cdc5c"
        },
        "item": {
          "id": "f4a3d343-1912-4e67-9a63-892f62a0d00f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "85b39dca-03ed-4082-90d2-d8017eb00ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52f4b23-e1ce-49d1-b9ef-2313d104e8c9",
        "cursor": {
          "ref": "ab694405-351e-49cb-b98e-5adca87fd6aa",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a2e95ff8-f043-4be6-ba52-e17658e39791"
        },
        "item": {
          "id": "a52f4b23-e1ce-49d1-b9ef-2313d104e8c9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6b208cbb-93f3-4a2d-81c9-8576d9d66b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5470f7-ab63-4ce1-8b28-04540e08d370",
        "cursor": {
          "ref": "1140f700-f9f9-4a51-a4b3-799b72385025",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f9a2591e-14c6-4964-96e4-c1805a12cca3"
        },
        "item": {
          "id": "7c5470f7-ab63-4ce1-8b28-04540e08d370",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5bbb205e-6b5a-40e1-ac66-054568c4a8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc0f4de-4e4f-4e4f-8b8f-66cb54e06f21",
        "cursor": {
          "ref": "5cd1ff55-bef8-41a6-afdf-a64f6f6e10d5",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f063f23c-2bcc-47f9-8685-f23c94d4ea2c"
        },
        "item": {
          "id": "adc0f4de-4e4f-4e4f-8b8f-66cb54e06f21",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "79e834bd-2505-43dc-8ea3-45f9ac7df413",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebf14b5-e55f-44a2-8f3f-31957ac9d966",
        "cursor": {
          "ref": "c82edd87-0506-4609-9828-217e7df82823",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "60b74770-189b-4cf0-9b40-074c26f69f71"
        },
        "item": {
          "id": "cebf14b5-e55f-44a2-8f3f-31957ac9d966",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e9a1f5bd-b919-44ff-9817-d28fcd324b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373a35fd-1e50-44ff-82b9-2260f2cbe701",
        "cursor": {
          "ref": "e2540d7b-11cc-49b2-adc3-ddf7b93527cf",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3f6c9b7f-f791-4962-8788-7247e30117b8"
        },
        "item": {
          "id": "373a35fd-1e50-44ff-82b9-2260f2cbe701",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3a7f6319-fcf5-4d58-82fd-dd395c609cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703289d3-b6ea-4e31-9eb8-955e4ecfd8fe",
        "cursor": {
          "ref": "84796bfb-2c93-4948-b751-4183518d47b8",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "404b22fa-fbe9-4c68-8c91-788991d88145"
        },
        "item": {
          "id": "703289d3-b6ea-4e31-9eb8-955e4ecfd8fe",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "20edc24e-cf79-4cea-87bf-ab2a3aa4c4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a33cb6-d9b3-4e31-92f4-f125c1be59e4",
        "cursor": {
          "ref": "9aec387a-eb54-48c0-920f-20cc420532a1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "40bf272a-a22c-46a5-b640-ed9b946cbb60"
        },
        "item": {
          "id": "e6a33cb6-d9b3-4e31-92f4-f125c1be59e4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7199c3ef-69a7-4376-bc4f-f85e3939b68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c6f2e2-e3f2-45f8-9732-579bbc34c6d4",
        "cursor": {
          "ref": "8274f768-1b8d-4543-8d3f-3eeb5320548a",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f74f3ec2-13aa-4fdb-a721-5bd2c044bf7f"
        },
        "item": {
          "id": "d8c6f2e2-e3f2-45f8-9732-579bbc34c6d4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5b35874f-6c84-4b8c-8d00-0ada8d275b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072d6436-90b4-4168-ad5c-c2e51040f124",
        "cursor": {
          "ref": "45fc8eea-4a00-4c9a-939d-53bd98d06dd7",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "acc70c09-5cd6-4747-bfad-2fd738d2a058"
        },
        "item": {
          "id": "072d6436-90b4-4168-ad5c-c2e51040f124",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a097e876-22e3-4d9e-b89f-9e399664b7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b1019f-47b5-4689-9d20-0ea414fb1c58",
        "cursor": {
          "ref": "a570f7c9-7843-4a6d-bfca-e616b2291123",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4530e8db-0ede-4d18-9f71-e011e03b7054"
        },
        "item": {
          "id": "b8b1019f-47b5-4689-9d20-0ea414fb1c58",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b704063a-0690-46ef-8d2c-7d8c5ad93f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae57a05d-9c77-4659-8f7b-df23004ef2a0",
        "cursor": {
          "ref": "3d3f88c5-0772-45b3-bd93-ce977ea6b5bf",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "83598c92-6af7-4dcf-b712-57627721550f"
        },
        "item": {
          "id": "ae57a05d-9c77-4659-8f7b-df23004ef2a0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1a07aed3-c0d2-4d06-a83f-1bf27a34c6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8189eae-fbe5-44ca-b0f9-dc27fbfa536a",
        "cursor": {
          "ref": "ce777a31-68ef-4565-9791-864ab6a335ec",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3c06d475-3f66-47de-9be2-203d423f90a5"
        },
        "item": {
          "id": "f8189eae-fbe5-44ca-b0f9-dc27fbfa536a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "75cbb6f2-39d4-4cc9-a7d8-13640430d6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019f0cb1-91f0-4c57-ab63-e4136582aa5b",
        "cursor": {
          "ref": "cd1ca649-54ba-4afb-9543-d66cfb8d5f61",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "24d218de-491d-42eb-9294-64c11380f883"
        },
        "item": {
          "id": "019f0cb1-91f0-4c57-ab63-e4136582aa5b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2f4c36e3-ee27-45e0-9232-ca01d9cdc3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885413d0-4a12-4393-88e6-d41d0438bcb8",
        "cursor": {
          "ref": "24477cd1-0372-4eb0-8698-4565bd32fcc8",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5ceb6170-ab8a-4b76-90f1-953728fc7846"
        },
        "item": {
          "id": "885413d0-4a12-4393-88e6-d41d0438bcb8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a44378c4-07b7-4d1f-b4c3-08561b011400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f2b57d-296c-48cd-827f-28249870a7a8",
        "cursor": {
          "ref": "2bff3227-7a5c-4467-a84c-11551fe544a6",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "87552d2c-2187-4398-b381-fe5cbe82b9d4"
        },
        "item": {
          "id": "05f2b57d-296c-48cd-827f-28249870a7a8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bafa9324-8143-49c4-a884-1784fff9d101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6d4e12-24f3-4682-9011-7c9a99a11985",
        "cursor": {
          "ref": "191d1a78-b9db-4d41-b368-fc07cc29c8f1",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0041a49a-d332-4ebf-986d-c106e18e6cda"
        },
        "item": {
          "id": "8a6d4e12-24f3-4682-9011-7c9a99a11985",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8248331b-d58f-44fe-9b01-68497ee35830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b937c48f-e900-44ae-93cb-866aae1f5b76",
        "cursor": {
          "ref": "b9d3b6f8-f2f1-4c0f-b3c2-e7ff99eb2da8",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f6b1c8c1-93be-4e49-9ce2-888d9e6b2cae"
        },
        "item": {
          "id": "b937c48f-e900-44ae-93cb-866aae1f5b76",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7e462729-82e4-467b-be7e-eedf8f32a778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09605b9c-3efc-4d44-ad42-e998ec253a50",
        "cursor": {
          "ref": "7a2d136b-b690-46da-9175-50393c51a83c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5aef1aa4-67fe-4c02-8e43-f752943e7899"
        },
        "item": {
          "id": "09605b9c-3efc-4d44-ad42-e998ec253a50",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "00b7e451-48ba-478f-927c-f4eaa47efa6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2620a1be-f09a-4451-9071-64bfb49f267d",
        "cursor": {
          "ref": "f717e124-dd3c-4e5c-85c8-b92f59f52c6e",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "60c13bb8-3232-4803-a26a-e0154c9361b5"
        },
        "item": {
          "id": "2620a1be-f09a-4451-9071-64bfb49f267d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "769909cf-16d1-47dc-976d-b0dcc2c05b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98172b0-b656-4a89-aac8-e7526592c165",
        "cursor": {
          "ref": "4bb98c3b-6625-4c96-849a-00a4ab01ce33",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7b3f810d-d51b-444c-bcf5-3acdf569bc0a"
        },
        "item": {
          "id": "a98172b0-b656-4a89-aac8-e7526592c165",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5c1faf5b-5c58-452a-842d-4e0d0e3366b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3952b24-1fbd-4ac2-949d-0043fa41c53d",
        "cursor": {
          "ref": "014fd57a-507f-4a51-9a29-558a33c11337",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5bed08ca-5a2c-4c91-8955-e3f4f17f5d14"
        },
        "item": {
          "id": "b3952b24-1fbd-4ac2-949d-0043fa41c53d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d92006bd-e0ba-4e43-8ae2-40597d45ba0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e7cd69-4824-4b12-be65-d9bd3b416483",
        "cursor": {
          "ref": "553ad115-8e83-4989-937c-3975995a6e41",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "696e7f32-3b5c-4318-bf95-b1365d7e9ea7"
        },
        "item": {
          "id": "51e7cd69-4824-4b12-be65-d9bd3b416483",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0ada9eec-40c7-4e47-9c59-542f4d7aa1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15e558d-39a8-4afb-83dd-83e056d135a5",
        "cursor": {
          "ref": "82028b22-fa2d-4f26-8ecb-c89b2ae2c15f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "963fcca5-f7df-48da-9b81-d4f95ea517d7"
        },
        "item": {
          "id": "e15e558d-39a8-4afb-83dd-83e056d135a5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "208759bc-812c-463d-bb73-d3856a6c6509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8f9d26-f801-47ef-8dbb-bf8897789301",
        "cursor": {
          "ref": "0182a3ff-1fb9-4cea-8493-9e152b093930",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "98224918-2975-4043-94c8-9dc460d8cb66"
        },
        "item": {
          "id": "bb8f9d26-f801-47ef-8dbb-bf8897789301",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8702112e-a75d-49ef-bb50-dbcd0114e901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93f71c6-4bd1-4fe6-a2b0-2c6268f7db75",
        "cursor": {
          "ref": "a0d296f4-7c2e-412d-9cf7-1773c3377996",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "eb84fa68-087e-409c-a84e-5a1a7836e269"
        },
        "item": {
          "id": "c93f71c6-4bd1-4fe6-a2b0-2c6268f7db75",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c46a7e03-31fb-475b-9e72-291ecbd2d017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ab44fe-f18c-4cb3-86c2-829a066b3b3b",
        "cursor": {
          "ref": "db6b8faf-9ee1-4106-9332-5c1528e6fb97",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c1ed488c-b571-4169-bcde-a348d6b73654"
        },
        "item": {
          "id": "f4ab44fe-f18c-4cb3-86c2-829a066b3b3b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6be401de-69ab-49f7-aabb-739488bc23bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c033fe06-56d1-4011-9ed5-985fdced5214",
        "cursor": {
          "ref": "2710b0c7-0c94-40e3-ba53-254ecf062ad3",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "59356e50-02b1-430a-a4cc-9bdea52c0dd3"
        },
        "item": {
          "id": "c033fe06-56d1-4011-9ed5-985fdced5214",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9f0739eb-9f6f-4c01-b535-e4cd6106145d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190f293e-a0e8-43d3-8539-f7f109988017",
        "cursor": {
          "ref": "1ef86e04-31e6-4d36-9fa9-431f74586ac1",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "81588234-bcb7-43cb-b7d1-4bc9b068c8e2"
        },
        "item": {
          "id": "190f293e-a0e8-43d3-8539-f7f109988017",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3d226f60-fde6-4a47-be61-806e381ea932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f1325e-74b0-4bc9-a089-be26dc6e645d",
        "cursor": {
          "ref": "a4470904-ecc2-47fe-96dc-d7738d6f7a9c",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "317374f6-3ff1-467a-acf2-7d2cc99ff7b1"
        },
        "item": {
          "id": "64f1325e-74b0-4bc9-a089-be26dc6e645d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7cbe33fb-adcf-4aab-8d4d-ef19353b844d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf56b31-ef74-4885-a3af-480483bc3ee8",
        "cursor": {
          "ref": "bbc51772-3842-4b81-a8bd-7d762cb3245e",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "44bdfa3e-344d-40f6-9035-936246d71cfc"
        },
        "item": {
          "id": "5cf56b31-ef74-4885-a3af-480483bc3ee8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1473dfcd-6061-4e8e-947a-0035b8d104cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9ae097-f25b-43ea-9b83-f00b9032ecc5",
        "cursor": {
          "ref": "e6621b0e-0a1a-4c87-86fe-25ecc000ba1b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e5440f58-0d06-4a03-b226-20fa76da0df2"
        },
        "item": {
          "id": "3b9ae097-f25b-43ea-9b83-f00b9032ecc5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6a6a2901-3b63-409c-a459-8646a1c4ce22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442f3c81-e84f-48ca-97ed-9a2bd099bd41",
        "cursor": {
          "ref": "8979172f-5f3f-419b-b288-ea983ab5c819",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8c1a6428-7700-407c-8cc6-800284db7d90"
        },
        "item": {
          "id": "442f3c81-e84f-48ca-97ed-9a2bd099bd41",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7adb8b6b-999c-4805-8368-e8a14ad60475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3477c32c-4167-437d-be60-58790fa35a31",
        "cursor": {
          "ref": "8551c1ab-ff67-4404-bf11-70459510b42a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "62bcca5d-0b62-4877-bf82-d76675a57fd0"
        },
        "item": {
          "id": "3477c32c-4167-437d-be60-58790fa35a31",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0fadda0d-245d-42b2-a7b3-cc3de6eba8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886a0826-56db-47cf-9511-8c63731266d4",
        "cursor": {
          "ref": "5834245a-092b-4477-acc3-0baa45e36c4a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "735b04eb-6c2e-41a9-9909-2d1ba3c9c985"
        },
        "item": {
          "id": "886a0826-56db-47cf-9511-8c63731266d4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "22e0aa79-17cd-4880-a51e-daf21955680c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71257fe4-0792-43ee-9471-4ce8d3d9c79f",
        "cursor": {
          "ref": "bfa83f24-9df0-473b-9341-af60d56aee2e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d359d81c-1fd9-46e1-8231-a23d6abcc0ea"
        },
        "item": {
          "id": "71257fe4-0792-43ee-9471-4ce8d3d9c79f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1bb3e181-a51b-4913-9834-e05295c590b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0a713d-a01f-482c-967c-6090c999bc74",
        "cursor": {
          "ref": "6ec309fe-9431-43d6-b8ce-bd3a96a07b1d",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "02430842-f0ba-4082-9b78-f089653832d1"
        },
        "item": {
          "id": "ed0a713d-a01f-482c-967c-6090c999bc74",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cf13e51f-9048-437b-a5c3-f5488bb4ad87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ec8aa9-3c96-420a-9847-0209b2452d93",
        "cursor": {
          "ref": "43b595c1-1fe2-49de-a4ea-dcf65db9d0d8",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7031373a-eb88-4808-be51-48ce30d5cc6c"
        },
        "item": {
          "id": "85ec8aa9-3c96-420a-9847-0209b2452d93",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "30ef59f4-e66c-4ece-885c-d6534b3403f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f18c1f3-cd21-4575-a768-d90ce1fa77c0",
        "cursor": {
          "ref": "c11c6b4f-cddc-4ff2-bc20-bed451ea8f29",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b07b02d8-0b03-4a97-953a-aaff1b14ba22"
        },
        "item": {
          "id": "1f18c1f3-cd21-4575-a768-d90ce1fa77c0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c199d6a7-589d-4e49-bd8a-982a74bc39a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1823cd59-d3ae-482d-856e-228189793cbd",
        "cursor": {
          "ref": "9b75a500-b98d-46ce-8a69-0e9ebb3c1ade",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6875d34b-7488-46ea-bbec-42a13d1669d3"
        },
        "item": {
          "id": "1823cd59-d3ae-482d-856e-228189793cbd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9dd1eaef-4af5-415c-b0de-142aed9b8fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124df595-2300-4902-a9e0-b9a57de54c0d",
        "cursor": {
          "ref": "f9611c4b-0310-4e7a-be7b-9dad8238a6b0",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4d29cce3-93fe-4d0c-bc03-98a6c29c5576"
        },
        "item": {
          "id": "124df595-2300-4902-a9e0-b9a57de54c0d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "676fab03-d996-41ec-9547-114fe5f320b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a8d7ca-600b-4e1e-bf08-d4391fcc2082",
        "cursor": {
          "ref": "864474a1-0dba-4f2d-a92f-40ccb6b18c2a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "86760ada-fedb-4715-b725-f9e48187093e"
        },
        "item": {
          "id": "d4a8d7ca-600b-4e1e-bf08-d4391fcc2082",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1d91acb0-5238-47a7-9f7b-f2991c1167cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e427896c-90b8-4f0b-9766-2dfd44d24cf3",
        "cursor": {
          "ref": "a0b03210-f265-479b-8cc1-86d77dcbd59e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6a30a7b9-8be0-409b-8ae3-d4d7fdd384fd"
        },
        "item": {
          "id": "e427896c-90b8-4f0b-9766-2dfd44d24cf3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3ac93efc-7d45-4c64-8ee4-5c5912eca0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6560d5-0955-411c-8211-292cdd06598d",
        "cursor": {
          "ref": "9df6e853-b43e-4bbe-8e37-d44e2149cb5d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0b32b88a-ac62-49cb-9613-94c34a88886d"
        },
        "item": {
          "id": "6a6560d5-0955-411c-8211-292cdd06598d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a1c2f998-b521-4d40-894b-203cfbabc113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc13763-cbfe-434f-bb71-20e404c3f9c1",
        "cursor": {
          "ref": "8c87d065-52a4-43e9-9bca-940893922df9",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9b7032af-d861-46cd-a8f7-2b529cf9d54c"
        },
        "item": {
          "id": "ffc13763-cbfe-434f-bb71-20e404c3f9c1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "786c105d-3985-4054-b771-4453e9072daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaca6b93-dd6a-4796-b033-ad1cfeb1c93c",
        "cursor": {
          "ref": "91cd3722-f265-4b91-8f8d-02402b69309d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b6294c76-4d3a-4811-8270-5f6b8b4889e7"
        },
        "item": {
          "id": "aaca6b93-dd6a-4796-b033-ad1cfeb1c93c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "815ce5db-18f4-4be5-b697-ca371aa4dfb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440bbb30-ab54-4e21-b1bb-29a00b5a7aae",
        "cursor": {
          "ref": "b708eae5-8aff-4eda-8fb2-de0639be2d20",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a762254c-10dd-4a94-9e85-02c54bdb658e"
        },
        "item": {
          "id": "440bbb30-ab54-4e21-b1bb-29a00b5a7aae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f259bc23-c8a4-4664-b546-e49370ad962b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca04f40-6b8f-45a5-8d2b-5a626124520e",
        "cursor": {
          "ref": "ea8e26b8-e608-4a2f-80cd-5254306de028",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0a75a3eb-213e-4e2d-8166-9d4abc1ff6e3"
        },
        "item": {
          "id": "aca04f40-6b8f-45a5-8d2b-5a626124520e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0f867d03-c103-4faa-a397-d183ac3808d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cb65c1-42c0-4ea2-b218-93d537226ca6",
        "cursor": {
          "ref": "d031a78b-8b8b-46cf-bad1-9036162abd01",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ed733aec-cdcc-4412-b579-d41980203b67"
        },
        "item": {
          "id": "a0cb65c1-42c0-4ea2-b218-93d537226ca6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3a07fcfb-3b32-43ca-85fa-043aea79fa3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06f13b6-0b65-452a-b950-aa63e6899a6a",
        "cursor": {
          "ref": "a7618abf-e302-4fb0-ab51-bca5119aff5c",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "09e962bf-f12f-4fae-abcb-1f0ce1825e9e"
        },
        "item": {
          "id": "d06f13b6-0b65-452a-b950-aa63e6899a6a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7c340899-fff4-495b-9411-9893c80cabf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05b7cf6-3f33-4ec5-a3f6-46cfc0af63cd",
        "cursor": {
          "ref": "deb573e8-60e4-4010-884b-e05379299fbc",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "130c0bdc-ec03-46ac-b766-88e0a861b326"
        },
        "item": {
          "id": "f05b7cf6-3f33-4ec5-a3f6-46cfc0af63cd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8a204477-43b4-4c7e-b9ea-48c3406257c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c66bbf9-0725-4202-9d38-34808fcd6cf4",
        "cursor": {
          "ref": "2d63dd20-cecc-4bc9-89fb-145f29575fcb",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7d530098-f856-4399-9719-e9fae9b98837"
        },
        "item": {
          "id": "0c66bbf9-0725-4202-9d38-34808fcd6cf4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "82575c64-85c9-4cbf-9b2b-bf24e8cfd2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf662441-cf71-45a4-acc4-3080f56d9480",
        "cursor": {
          "ref": "f172ab72-5688-452e-982c-f319cb587c39",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6f4c71c5-058e-4056-a86f-9c94c4446735"
        },
        "item": {
          "id": "bf662441-cf71-45a4-acc4-3080f56d9480",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "230cee75-2780-4a76-a662-5e223e5b955c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229e2c03-473a-4068-a3a6-25943a2cab65",
        "cursor": {
          "ref": "345f4a3d-aaf2-4619-8602-67dfd5b79eb9",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "22849c65-0c47-43fd-8c59-f5f4485ec8e6"
        },
        "item": {
          "id": "229e2c03-473a-4068-a3a6-25943a2cab65",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "207af97e-cccd-4f87-9fd8-c5615d7252c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801f64e3-4ad9-4d32-a1dd-929fabd8d712",
        "cursor": {
          "ref": "656a84b4-6568-4869-a55c-fde0ecfcf39c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "67aa4aef-ce6e-496a-bbc0-d86455c8757c"
        },
        "item": {
          "id": "801f64e3-4ad9-4d32-a1dd-929fabd8d712",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ed2e5d2a-01dd-4436-aa51-d36092970995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56cfe9c-93ad-4a66-94ea-00cdc5d94bdb",
        "cursor": {
          "ref": "466d73ca-0574-425c-a73b-e70d11fec5c2",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d4298de3-ee18-4adb-a8ff-f403a7cedff2"
        },
        "item": {
          "id": "d56cfe9c-93ad-4a66-94ea-00cdc5d94bdb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7a3ea2ee-9097-4bbd-886e-7d6822e78d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46f983d-60fb-47f8-81ab-d5274cbc8cf6",
        "cursor": {
          "ref": "a49ee9ee-0d3f-41b3-81fb-17ef64a60a44",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b2058ab6-7b67-4162-a827-84c2daf4d570"
        },
        "item": {
          "id": "d46f983d-60fb-47f8-81ab-d5274cbc8cf6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "40dceb16-602c-4283-86fc-ce50c9a73bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2439dd72-ba70-4015-aaf3-2ce53fc05853",
        "cursor": {
          "ref": "5a2fd34d-934a-480a-8d6e-c5fb7bb19342",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fa7e8bd3-565f-4e39-ba31-0c608607f558"
        },
        "item": {
          "id": "2439dd72-ba70-4015-aaf3-2ce53fc05853",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1641135a-fdfc-47bd-904f-d818094fd72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f3d06c-407b-499f-85b8-e76fa176afd3",
        "cursor": {
          "ref": "137fe45e-1e71-4740-92b0-565ade1ac17e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "090a0d75-0105-4e62-ab8c-b72e7e5a2f62"
        },
        "item": {
          "id": "76f3d06c-407b-499f-85b8-e76fa176afd3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a62a9bae-f0cc-41a4-80b8-33349ab524f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90414ce5-883c-436d-91d2-ee49242902c0",
        "cursor": {
          "ref": "96bff92a-129b-4234-96b2-273915ce5c92",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5078a1a4-27fd-4e91-aa25-f673d3ae7f6e"
        },
        "item": {
          "id": "90414ce5-883c-436d-91d2-ee49242902c0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3c0268df-8d0c-48b2-b854-a498bc583e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9030258e-6726-48cf-a212-f89aaf87e149",
        "cursor": {
          "ref": "dd4e0947-9551-4beb-bf9f-7b2d7e11ad2e",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "eaf2a117-033a-4c73-867a-352528e10464"
        },
        "item": {
          "id": "9030258e-6726-48cf-a212-f89aaf87e149",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8dc0c6d3-2324-425f-b13b-89ad9f86b90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70aee533-9746-48f8-91e5-e23129632f45",
        "cursor": {
          "ref": "62c12bc0-59a5-42e6-ad2a-2a91334e70eb",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ec84a653-c10e-4f61-9e69-4f6a74da2f96"
        },
        "item": {
          "id": "70aee533-9746-48f8-91e5-e23129632f45",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fb59270f-6b60-45f4-a6bc-004b4050df16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fc9aff-122f-40ea-af80-e38e87a4d808",
        "cursor": {
          "ref": "da7fc761-ae17-4b75-af69-05cbca2490d2",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ab9ba391-d70c-4020-a008-a4a19eee614d"
        },
        "item": {
          "id": "b9fc9aff-122f-40ea-af80-e38e87a4d808",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "265a4e4d-a61b-454d-8065-65d36b381774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a84171b-dbb6-4df1-b627-791a4712de74",
        "cursor": {
          "ref": "b9f74496-e145-4f2b-88ef-0f1792078f13",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5936bc74-98e4-45d3-b736-aa1c98f62f46"
        },
        "item": {
          "id": "8a84171b-dbb6-4df1-b627-791a4712de74",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "18eb3e92-52af-4a4e-9219-50a4d1765882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c025638-57da-42f0-8717-4fead4cb16b9",
        "cursor": {
          "ref": "f0fcb99a-ebd0-41dd-a1c7-2efeff7b067c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a6c27259-d659-4103-9af0-0d7cbd8d2ad7"
        },
        "item": {
          "id": "3c025638-57da-42f0-8717-4fead4cb16b9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3e08524c-940e-43a0-b0f0-4b9433002570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acd3e0a-01ff-4e8f-90e5-04b35d45d36f",
        "cursor": {
          "ref": "8b756336-dcf3-4139-952e-52b3d01bfeed",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "23d5e046-4f14-49cf-ac51-ae90cd05b32d"
        },
        "item": {
          "id": "9acd3e0a-01ff-4e8f-90e5-04b35d45d36f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9e72de60-29bb-4a86-bf37-a1e9c2469e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661f263d-e657-4152-bb86-ce23a55789c7",
        "cursor": {
          "ref": "a02d4caf-64c8-4c13-8e9d-49f31a9f7b57",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4bcec3d5-3e2a-4072-86e4-c215672f0e82"
        },
        "item": {
          "id": "661f263d-e657-4152-bb86-ce23a55789c7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "66f97a2d-f908-4b5a-a44f-1678b7a23b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b27513-dbad-4e14-8eaa-97e7547e0eb4",
        "cursor": {
          "ref": "a65058ac-2a94-4e71-b6e9-7674ae5fd76f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "78113604-1d09-41b1-bc35-e19b8f033b3d"
        },
        "item": {
          "id": "97b27513-dbad-4e14-8eaa-97e7547e0eb4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0f28c641-56a4-4958-98e9-4aead84a4323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103458ed-b723-42f2-a141-7525d846d57b",
        "cursor": {
          "ref": "2f30398a-52b3-40fd-9942-ea7843f42958",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2c316f25-3d2d-48f9-a108-dd716b687f6f"
        },
        "item": {
          "id": "103458ed-b723-42f2-a141-7525d846d57b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0769836a-0e01-48ed-acd9-3181f317a01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10df7f98-e62b-4df2-8697-39fa35ba7e6a",
        "cursor": {
          "ref": "97ec8b04-a05d-405d-b39e-420577e9c4ad",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a5986586-26e7-40c9-bcd5-9413eacb040b"
        },
        "item": {
          "id": "10df7f98-e62b-4df2-8697-39fa35ba7e6a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b75e723c-ebe4-4213-b99c-b406b384abf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b08c5bd-6b6f-4cb3-ab53-a0cc9ebbf7af",
        "cursor": {
          "ref": "4a0e2988-3595-4d2f-8b0c-622cabfac100",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fdeb99b4-60a5-4ddc-99bd-44a909d40582"
        },
        "item": {
          "id": "1b08c5bd-6b6f-4cb3-ab53-a0cc9ebbf7af",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "02d550d9-f659-465a-94c7-ed1e05d42eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6901502-c766-4236-8de9-9ae2f3b5f8c8",
        "cursor": {
          "ref": "4e978441-ab3a-4398-bccf-75c6bc4d3048",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f65f5a1d-122c-434a-9b26-29f9fcd50a61"
        },
        "item": {
          "id": "c6901502-c766-4236-8de9-9ae2f3b5f8c8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bbe8e41e-d841-438f-81d9-7369f91eb0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc5767a-8a88-4f91-9a96-c6d3f4b334cd",
        "cursor": {
          "ref": "c8d01ee5-c223-4eb6-ad6c-cb6828c9852c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9bb1eea4-2f18-4c60-9d56-00ce998e1a82"
        },
        "item": {
          "id": "2cc5767a-8a88-4f91-9a96-c6d3f4b334cd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f9b838db-3579-48b8-b26b-8255701c6512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a57b03-08a1-4c94-aba8-f686488d03fd",
        "cursor": {
          "ref": "336ac7ef-86cb-413c-baaf-51a18424e0b6",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0689aa5f-79f6-4551-92e7-bf7854b1869e"
        },
        "item": {
          "id": "18a57b03-08a1-4c94-aba8-f686488d03fd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "68cacd19-d089-4439-82ec-f2216d9f2240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a746b9c-18d2-44ea-aca8-84ac573f880d",
        "cursor": {
          "ref": "fa940036-db4a-4a1d-b612-89ad69666bcb",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e5692370-9adf-4369-abf8-d360a71da761"
        },
        "item": {
          "id": "1a746b9c-18d2-44ea-aca8-84ac573f880d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4b5f6d30-dc48-4c32-875e-38ecf4ac7f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef096be4-c2c5-43c4-bac0-7e832c9dd6f0",
        "cursor": {
          "ref": "6be15082-46ee-4bd7-ae06-9430de5ee308",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e45f5191-38af-4599-951a-c12c73b67dab"
        },
        "item": {
          "id": "ef096be4-c2c5-43c4-bac0-7e832c9dd6f0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7194288c-defe-47f7-9348-7e210f96734f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa4586d-8e58-48c7-96df-2af958035cc1",
        "cursor": {
          "ref": "5559ff8e-1384-4a6e-abea-2f611f1a1493",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ab25807e-bb26-442e-bdbc-c90143935716"
        },
        "item": {
          "id": "5aa4586d-8e58-48c7-96df-2af958035cc1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b9bbe23d-7a0b-453f-ada5-935f93a69f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5684e7c-31dc-4b9b-baaf-d233abb60d61",
        "cursor": {
          "ref": "37cfa9ac-b0c4-448b-bdb3-5ac4f44226a2",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cf4ac334-b8d9-4ed3-b84a-12c0ce17d1d3"
        },
        "item": {
          "id": "e5684e7c-31dc-4b9b-baaf-d233abb60d61",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c7cca90d-a863-4556-b970-e1e521a1c51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250062bf-08f4-44a0-bbde-bcbc37ae6db0",
        "cursor": {
          "ref": "92201cfb-600f-4b81-bbf7-a7bce24f3525",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6dcda0b2-25de-467f-8bfd-7a9537ff9a4c"
        },
        "item": {
          "id": "250062bf-08f4-44a0-bbde-bcbc37ae6db0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4486ae70-f73d-490c-b834-d92aa32af18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e1abc3-5e2f-4ae5-8b2a-00ce7a142b42",
        "cursor": {
          "ref": "6930c2cb-861a-4354-a0f4-d704d5785896",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d669857c-3c08-4f73-bd19-599adfabf6ba"
        },
        "item": {
          "id": "25e1abc3-5e2f-4ae5-8b2a-00ce7a142b42",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8a768b6b-7710-4cbd-b1e2-5bcc9d701bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f35e81-0843-4a4f-890b-9a6d31880e90",
        "cursor": {
          "ref": "3e727790-ac05-4be3-8da7-90d07c3ccb53",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0792eeee-b8d8-4329-821c-3d516987e657"
        },
        "item": {
          "id": "13f35e81-0843-4a4f-890b-9a6d31880e90",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a09c8561-083b-4cac-9e15-93feaf311930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cd2abf-6e61-49de-b9c4-5224652a0a5b",
        "cursor": {
          "ref": "9743f4e9-ad50-4320-9d2c-90b1c8462e43",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "728c48b8-24fb-4d7b-8313-5edd97fb8d03"
        },
        "item": {
          "id": "91cd2abf-6e61-49de-b9c4-5224652a0a5b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "871c97f7-d22f-49df-b4c3-9b849e208513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62af436-336a-4655-8bcc-d0d779255320",
        "cursor": {
          "ref": "7df57ab5-cf55-47ac-9ef9-d9e7123289da",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ff85bf90-3d2d-4b78-bee3-7d760957401e"
        },
        "item": {
          "id": "e62af436-336a-4655-8bcc-d0d779255320",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dacd559d-a0d8-4fd8-94c4-eadcdfdc1d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97ef947-55a7-4511-9900-03be35533298",
        "cursor": {
          "ref": "b7772da5-5952-4492-833c-0d35de78d353",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "08be7cc9-731c-41cb-adc0-c479450dbaf0"
        },
        "item": {
          "id": "e97ef947-55a7-4511-9900-03be35533298",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "92b6a626-2741-46fc-a3c9-1e3f10f42a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04d998d-9408-4fd9-a6d1-5744806baf98",
        "cursor": {
          "ref": "d6ea6e59-6163-48bb-871b-8464c535f4b6",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "eae6ed10-b018-4f4a-acd9-86885717e76c"
        },
        "item": {
          "id": "d04d998d-9408-4fd9-a6d1-5744806baf98",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a061653b-7258-49fb-b50a-e5bf6d21942d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520feb08-46be-4e68-bc4e-661e91cb99a4",
        "cursor": {
          "ref": "48a73a2e-d53c-45dc-8218-64e432c1d871",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e24ea43d-6ca3-4fab-b8b5-ba169610400c"
        },
        "item": {
          "id": "520feb08-46be-4e68-bc4e-661e91cb99a4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2fe563a2-61cc-4fa2-93c6-644925e6efd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf56b5f-6f67-4360-a32f-83fbedbdcb1c",
        "cursor": {
          "ref": "e4cf1f74-0c2a-4008-ab67-29bec83f2e0d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c9de5e40-47f7-4616-a757-b9f08b5c24b0"
        },
        "item": {
          "id": "caf56b5f-6f67-4360-a32f-83fbedbdcb1c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8948f943-73b5-4cca-bbef-4864b9236ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc61561-496e-4aa0-922c-c8c63fb57f8e",
        "cursor": {
          "ref": "508392b5-471a-493c-b13f-d470464e98e7",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1652d7a4-81f7-4649-bd82-483a9c0d54d0"
        },
        "item": {
          "id": "fdc61561-496e-4aa0-922c-c8c63fb57f8e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "895fd58e-c4bf-4847-b57e-5f74bcd1637b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aec23ad-720b-4596-995e-81715057e898",
        "cursor": {
          "ref": "202d899a-c9e1-42b1-8cab-f8863247931e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2667c6e2-41da-4fdd-ae64-b711fe9ced19"
        },
        "item": {
          "id": "0aec23ad-720b-4596-995e-81715057e898",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ca62b22c-6f4e-4b22-a081-d37f6aa39065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a33c472-4ab5-4201-808e-99c575d0ec68",
        "cursor": {
          "ref": "f2b325a2-55c0-466f-811d-8bdb31b44668",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fd1fa42f-7736-4e21-ab8e-b34521b72405"
        },
        "item": {
          "id": "3a33c472-4ab5-4201-808e-99c575d0ec68",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "33964cf6-e08e-40ac-ab7e-08590f8358e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5667af6-694d-4878-84ba-6bbf7e8269d3",
        "cursor": {
          "ref": "ca06cd9d-a831-48a2-b85c-2eb598659676",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1c20b890-9402-4539-88b8-b074a4cb11f6"
        },
        "item": {
          "id": "d5667af6-694d-4878-84ba-6bbf7e8269d3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "549c172f-5b3c-474f-9a88-703e81d90fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d650a976-ad97-4665-b219-25d203f683c0",
        "cursor": {
          "ref": "3cb20a80-ebed-4c92-89c0-ba618c291baf",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "57561df8-ab9e-4ea6-a82b-12dfaaf0bd99"
        },
        "item": {
          "id": "d650a976-ad97-4665-b219-25d203f683c0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8cffc2dc-5a65-48be-94a4-90f5a0d6e0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb39bc3-0a78-49ea-b06a-36aabe700702",
        "cursor": {
          "ref": "c1ffb7f7-40bc-4c5a-b340-d6174e2845fb",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "678ba6d5-a0d6-4139-b8cc-a802ac24a7b7"
        },
        "item": {
          "id": "6bb39bc3-0a78-49ea-b06a-36aabe700702",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c75d44ec-9b0e-40a8-b129-e57616f5eb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852065b3-76d7-4c9a-a899-7e301b1f8869",
        "cursor": {
          "ref": "bf2742bb-a8eb-426e-9b2f-59e84442bff2",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "94c31f69-d37c-4be2-9970-382e90c73737"
        },
        "item": {
          "id": "852065b3-76d7-4c9a-a899-7e301b1f8869",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "de1a0e88-2611-41a0-b302-d73ace677c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d80e516-6cd6-4083-922f-c31ba1dde379",
        "cursor": {
          "ref": "c21e4753-7c57-4442-b941-74f605ffd262",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "924b238a-e04b-49c1-9358-ef2a9d405119"
        },
        "item": {
          "id": "7d80e516-6cd6-4083-922f-c31ba1dde379",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "74e64358-e26a-471d-908d-d1922735038b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b1d403-4ba8-458c-9973-cef823206d92",
        "cursor": {
          "ref": "23acda40-666e-46a4-8dff-916f2fa473b9",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b6493df7-d739-4241-ae61-d2be7caac3b3"
        },
        "item": {
          "id": "11b1d403-4ba8-458c-9973-cef823206d92",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9fc985bf-24aa-40b2-9c00-0472f62773d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf34248-5e26-45ea-9f32-d478b45cde12",
        "cursor": {
          "ref": "f92af509-0436-406b-b712-382475d7d90d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "faf5eca1-1887-4c84-ace3-bc3c3112c6b3"
        },
        "item": {
          "id": "daf34248-5e26-45ea-9f32-d478b45cde12",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "81e0a31a-ec99-4805-97d0-a778e053fad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce54e5b-7460-46a2-9e89-e29c5ff04abb",
        "cursor": {
          "ref": "aa1839cf-9e3b-44fe-b561-2d4b0e5db66c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "26a1f41e-d492-44bd-b92f-44f97f9abfa4"
        },
        "item": {
          "id": "5ce54e5b-7460-46a2-9e89-e29c5ff04abb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b102c91f-8319-46c9-9ba5-c2ebb5f7ac83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb8f815-eba2-4ac2-b3f1-cdea0fdb2eb1",
        "cursor": {
          "ref": "cac4d670-f5b1-4f68-9996-4baebce6cb3c",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "92b573c6-8f88-4901-a0ce-355db93ac534"
        },
        "item": {
          "id": "5fb8f815-eba2-4ac2-b3f1-cdea0fdb2eb1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5c30087e-a9e0-42d2-8090-e7f50d9dcd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937c7328-dc2f-48b6-bc44-4f544d04f846",
        "cursor": {
          "ref": "521e5844-8ed4-4fb2-a1d4-fbb0270e58e2",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3b84e64f-cadc-496c-a426-7b967d0e69f4"
        },
        "item": {
          "id": "937c7328-dc2f-48b6-bc44-4f544d04f846",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "656532b5-1384-4e56-bbce-1fe437ac2595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5025130-123f-4b57-961d-eb653abfd7f5",
        "cursor": {
          "ref": "9f8da37d-0033-40d9-9367-e7949c0835a7",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "49627f4c-2cd2-40dd-82f0-946fbfc0490d"
        },
        "item": {
          "id": "e5025130-123f-4b57-961d-eb653abfd7f5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a6d21b71-a6ec-4f43-8158-77eee1ea2943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9551ce22-a830-4dca-85b1-23a43784c6f0",
        "cursor": {
          "ref": "35ce8c86-2567-4db9-aeb3-99b12fcf161c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d310c65f-eafc-49d0-8f05-ce75d6c805ab"
        },
        "item": {
          "id": "9551ce22-a830-4dca-85b1-23a43784c6f0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "03884a7d-f8f7-4a99-9a60-619202bd42d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1505065-2764-4af6-a0fc-66ff1d6e748f",
        "cursor": {
          "ref": "a44e5e1d-2c43-4314-8ce6-6d87b43f9bbe",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7f7e2fae-268c-4f26-81fa-ebb0e4fcfbc6"
        },
        "item": {
          "id": "b1505065-2764-4af6-a0fc-66ff1d6e748f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "78d615f0-ae11-44ca-aa66-1bca4fbb9f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "8c693c32-0694-4057-8728-f3d4cd13cef8",
        "cursor": {
          "ref": "4e71a1e7-2c69-4fc3-805c-440637a75bf7",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "075e7861-a3ed-4b80-94bc-5767bdf7de1e"
        },
        "item": {
          "id": "8c693c32-0694-4057-8728-f3d4cd13cef8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c7967fc9-8375-4f3f-b879-e3599a9d30a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "67a565e2-f747-47fa-b7b9-6a6630c61cd6",
        "cursor": {
          "ref": "1147dcc9-33ee-4354-8c32-55dadad65f2d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f9835a5c-0091-4f92-8ca2-def96fc0312a"
        },
        "item": {
          "id": "67a565e2-f747-47fa-b7b9-6a6630c61cd6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "67c0b027-c94e-44db-a23a-73942d13987d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "3ae0e23b-9430-40fc-9bf6-d1cef8083cfd",
        "cursor": {
          "ref": "62310658-cfbe-4932-aec0-e04a5974ee2d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "aa07ec96-66f6-478e-b660-65420edac3b9"
        },
        "item": {
          "id": "3ae0e23b-9430-40fc-9bf6-d1cef8083cfd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "67616477-08f8-432b-9e26-479603511fce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae0e23b-9430-40fc-9bf6-d1cef8083cfd",
        "cursor": {
          "ref": "62310658-cfbe-4932-aec0-e04a5974ee2d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "aa07ec96-66f6-478e-b660-65420edac3b9"
        },
        "item": {
          "id": "3ae0e23b-9430-40fc-9bf6-d1cef8083cfd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "67616477-08f8-432b-9e26-479603511fce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582fd7a4-16a4-4d6d-885f-dcecc972c4eb",
        "cursor": {
          "ref": "f49b6420-9988-4563-a841-9aa42c87bd16",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "34160f2e-03dc-4b94-8790-9d6f9bbf3531"
        },
        "item": {
          "id": "582fd7a4-16a4-4d6d-885f-dcecc972c4eb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2b8a658b-1952-4dce-b698-0a5d0f8c009d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebd7d82-396d-40ff-a3f6-667f5574bc80",
        "cursor": {
          "ref": "e80a7714-eb65-46d3-97d5-bb56e403b5be",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d5196ee9-d3e5-4159-9158-f6e52d9ecc65"
        },
        "item": {
          "id": "aebd7d82-396d-40ff-a3f6-667f5574bc80",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "36f2a9a8-d2c4-42a2-a0fc-bb1cb0fa7b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}