{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9de803e7-dc93-4693-a8ca-6608fc9a062d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c8a1b1db-ec79-4400-b419-28084ee14dd0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3cde632b-f725-42e7-8b7e-ae7b72f3da63",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3124e95e-73ca-44ee-81b6-1560f3b74f9a"
                }
              }
            ]
          },
          {
            "id": "37e3fa0a-b161-44ac-9160-3ce1bc132f62",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c4e0c9d-f732-44f7-93d8-1776ed747cad",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "52c5bc64-ecd5-47c8-843c-69c0a91e7a54"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "373d5470-f06f-45e3-85f4-bfc33409fadb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "71b42ed7-272c-4733-b9ce-e893850b1fbc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef4d44ab-9d8b-4224-94cf-c4c21721742f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbb1389a-c84e-4fb1-9620-f7595f77a44a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bedc350f-54b2-4e40-bf57-827a2d08e867"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f5b9e85-c728-4004-9857-8f43fb43aebb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5494e3aa-72a5-4cc4-84bb-8d8b5d2c1c48"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b99f9bcb-9fd3-40cd-9a59-2ec36a1012fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb8192c5-ac62-4160-82cc-7247f4330f21"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "391bc75a-6efc-4ec2-b97f-71877278aa0d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "11f69e3a-96ad-4068-9c11-9f88ffebbc53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b72aebc-9246-4ac3-a5e4-192127532990",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08366c99-c0ad-452b-a16d-8e8f21421135"
            }
          }
        ]
      },
      {
        "id": "dfcf4fa9-de68-4ec8-a5ce-813cae643a02",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "81dd5864-aab3-4b68-982f-6bda0f783016",
            "name": "Negative Testing",
            "item": [
              {
                "id": "376c71b8-dd0b-4fb6-b446-2fa489557e8f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dcad8f57-8c7a-440b-aebd-463531e36e3b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8301be-7685-481f-ae8c-8d0954fdef27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "852230db-c494-4da9-b059-6b99175eb547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d378466d-8296-4f06-bc26-266ba19c8c6e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816bbe37-e473-4918-987d-051013403852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48bc16b4-a0a7-447d-a54c-a8cb1bec8dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b901bff-0e4b-48e4-8ca6-a9fa30fbb5de",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812677bf-fe62-4436-85f6-99c7390ada3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cb3bb84-ff03-49bb-87ac-39122c7775ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a02a1758-3a11-4131-9dd9-16f419aa9f62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1eff880a-b106-4cbe-9879-4596b0ad7e85",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70aa71a1-7225-49e2-9c48-2eeb1a118e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89b56ea0-c60c-4a34-b9c0-6048cf3c4f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109ea708-43ac-4926-aff5-5534ddce323e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9091f2-a95d-49e9-99dc-b7c5805ea1d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f8962b82-cc91-438e-9860-5a2a0b28e8df",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cae86912-2f1e-4e6c-bd16-89fc9faa8104",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2be2991-ab97-451d-9e83-edb4585e5cbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "052c40ec-e936-414d-b2c9-ab0cd21914a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "324f111f-eb14-4b38-bda1-ac163c727e09",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "763f6b3a-95e6-464b-8eda-21551bfbd13b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "104e7a36-1e7a-4524-a37d-8a570d6bf302",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc263434-52fa-4f3a-a5f7-1b6f4153d8a4"
            }
          }
        ]
      },
      {
        "id": "ca8a5213-a3fb-45c4-9e84-2233ec8716c6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "91315040-1299-45ac-a875-77c73bd1b790",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db964c3b-8a44-4cd6-a792-9f242966041c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0d1b880b-0258-4f57-8403-013bf763e327",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d8b5b7-2677-463c-8622-5059cfd40f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955821e3-9a06-441f-b006-22463e3be50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d6235f-a619-402f-b322-f7f74d246869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "107fa632-64e5-49a7-a960-752626e52ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34120c6d-35c7-4ea5-b410-de6ea72d53ef",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dbe9b8-f1ab-47cc-b62b-ac9c2ada6cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a486250-1b48-42b0-aafd-71e362cf83a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de73a5b-1c61-4665-b29b-365b58515ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "012e4c07-ce30-42e7-bf91-50fb2400ab35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9661143-c598-4342-9135-63c3f6b93461",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd013ec1-3d67-49d9-b2ed-837ec77cd493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "befea36b-17b0-4dde-964e-3ea55719b258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e6fdd2-b231-4fa9-b4ea-e6de32a8de30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ac83ba2-4784-4497-9eaf-f154d42b7890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5a5562-ffa0-459a-8070-c02222080dfb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5aa29b-32ea-447a-8d1e-3301ec31097f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ef098e-e97a-4f46-9fe3-7c749adae98b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5c38b9-783d-48f5-9d20-d66841254647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dd5271a-5e15-4306-b8dd-e60e9cf2c612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa549822-7e19-4c37-bb94-48078ad41f13",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb35e9b-97e4-4e32-90f1-4a68edf7390d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7a666b-ddc7-4dc2-8f3f-e2d21a08ca28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5220f0b-134b-4dd1-a61c-e2fe11f0130c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7546d4c5-f15c-4c15-aeec-81c0bc37fbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f0ad8b-8045-4a26-92fe-5c5f0b8466b1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c56d9b-7630-44d1-951a-6cd13bf2c161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4abc004c-cf71-4406-8964-2d63a57bc09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e78f42b-db8e-4083-b5c1-45ed3783b61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60b076e5-46ac-42f3-81b0-7bf0adacb6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69ac835-421b-446b-9527-cee6649995bf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980f5318-b10f-4c72-b319-a28bcbba6c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2ad052-55dd-458e-88a5-d214e7c79f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0604341-e32b-4244-9008-cdbd4b3970a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32b9ebf3-aa47-40ed-9dde-2719842c57d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137fc005-2293-46d5-b833-5d3007c6ccb1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d100e965-6e88-4a5a-b8f4-66f828a99fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e42777-79b0-4455-9368-a22674fcf1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abffcb2-8aab-4e25-a558-fedee8b1fa11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "808faf79-2db7-4dbe-b6af-0e29f0f1e222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a13d30-f8d9-4574-a3b2-6306257dc622",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718bb03c-1b39-4899-8f51-9ed513f0ff25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15177181-16d1-4205-b242-8831ba88755c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceabf853-f90d-45e1-a023-39d0f508b3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db0c9821-fc56-4698-b489-5663960ee9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ed385f-a3a5-428a-a56e-830e063bd153",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59c6efe-4daa-4c19-a141-490fa7d42fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c1053c-e494-4ccc-a08a-9d3f334e41ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77a5e46-43a1-4f9c-9ba0-b4d56bdbb30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b37dcbe6-f28b-4703-9a46-d11c0125f591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eaa7a24-6602-4292-855f-6e6cf31059ff",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33622cf-704c-41a6-b790-b2f68c23229b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7a49c8-dc4a-4715-806d-8f7ffd307fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9ffc7b-2e28-4963-b035-a9a106c27ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36937aa4-c6ee-45c9-95bd-1ea13072ce39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289180f6-8b5c-43c8-a0ef-bbb8c1455338",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8babc691-0413-4bd6-89bd-ebc95ec1998e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ebe186e-6ea2-4215-8625-4b4cb3a052e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33ae664-5776-44c2-8ef7-7d465a20ff3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92c95e84-33ed-4b53-8c50-561161b41cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343e0709-f609-437e-a4a3-9ce3ba44bcd1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b433ac-e5e8-40ce-86c6-169b07174f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602ceb92-e851-4b39-8a3a-a4ef5d0f5511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fb2a81-3e82-45fd-888b-11a875ce1742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaee7940-452e-4cc6-b9fe-cf1e4043c34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2aa836-9a56-4027-b42c-610a222b6856",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27628487-2c38-4871-9274-a2beae04c638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69bcd539-fafb-479b-a7e1-d175f032b74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54627349-c09f-48ad-bbc6-727b8e08bcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "242cd161-e012-442f-8cd7-ff641b140164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ed08b5-3f19-442a-b609-f9a842076186",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6485ddff-8d38-4af3-a714-6f68bf1878c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a45d1c-fe62-40c0-b7be-9b69e957e8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f490127-7d67-4f45-b576-5d473b493b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47a85364-64a2-4de6-a603-bce6bb0203e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9b13e8-1e32-4c1b-af53-a1a87e043b25",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146034ec-34b1-44cd-9115-29f0459f75e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17bd8910-2377-4009-bf6d-c7158ce80ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb797500-9ede-43f1-a509-8194da4b4d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "138cb8ca-d5ac-4776-aab3-6e3ff850e255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3f3333-82f0-4c34-9b68-3cc71d52e6de",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5b47d5-af95-40f6-b693-6fe1780260b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30b6b55-217d-4d59-b23c-8c7808d70559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e073ebb8-c590-4bcb-a380-79dd6a396b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5909fcdc-bc5f-4efe-b2c3-4c7b54f57c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bccdab4-1217-4d4e-96cb-3748dff0d263",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc02c3a-cab5-4742-ad8f-22e6b072f603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a772ad40-8eaf-4513-9328-32abb049090d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b8c054-906c-4fff-9129-68576022310c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "000956d9-73aa-4e3b-a42b-f65905016956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04457d5-ee0d-4d81-b4c7-f1c7bd4aa2f0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f3bd74-5e32-43af-a312-50ea31b23c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bde888f-2bfa-4707-a0a6-a517a92de15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4856ccd4-2aa9-4409-b241-c4f4087d1d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e98b04a2-a3bd-4492-af69-0202e4da29c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d48dbef-b049-40c3-a789-2b6116b4df27",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f7dea1-4610-4dc6-b0c6-76ab773c6577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0616a4-2da9-4d93-8080-1c85f0abaa90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d557d1-5dbb-48c2-875c-63d7b71f9e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "765f3955-d258-43eb-8dba-d18ba35ddb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c5eb89-4600-4b71-abbf-9d962d1d5ab6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec77c41c-65cc-4d05-9be9-3d55e9f8eedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2807f895-71b0-4cfe-8d22-682661f7c4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f1a0be-dc52-4b99-b11e-cb982566e684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "949bca09-c04a-4ac4-8013-b9317cedc613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef06e15-d763-4016-8439-3113527ab302",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ce2c83-5ee4-4078-b0cd-ccf3f574d898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8599a47f-67df-48e8-9eb2-11f786d34baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f08a76-8ba1-4900-a925-7ccfdef44e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16b67032-8050-4fc3-887a-f53296685cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbe5bdd-c45c-4358-9142-5ebf728d6057",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3310a4-0989-4b7f-a731-f016a2d2bf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b39bd4-55a9-489c-a651-d523bcd1fd75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2892e33b-7978-4151-8aa0-8981232a78c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd9a5ca-dac0-4318-af2a-4aeea8b9f6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0fe81a-5ff0-4a2d-9d3f-3164b173426e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc887c3-5ae5-444c-87be-e24c303db8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d8299e-2f37-49fa-95fe-fa4d9ba20c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de98e04-d25d-40c9-9fa4-454a3b9d27cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "66be549f-93df-4bad-918a-7aca709fb594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee19bfdc-f859-4e17-9bb2-ba618f5e6d55",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f527bd-e984-48dd-8e03-1b7357d21026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ceb04b-b0cd-4bb7-9c0b-5ebaacd1a462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910b09d1-d829-4230-b13b-40c74b2a3129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14e9b0d0-ef4c-47cb-bcd8-62253994b579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4429b9-455a-4351-b5cc-4bab3d40295c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145f96d8-d58d-4113-a7a7-6f513b551acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de7732d-f090-4c07-b549-4b39660733f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5d9681-9aaa-4478-87c4-646744885c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37be73af-24ef-409d-805b-6d6379c9c5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60d6117-faa5-4f12-a07c-65d19c4933f5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4d096f-f0cb-4c47-92b0-cd15fc9fe2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70a940c-e198-4b46-8ef7-d6df756805a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26e01f6-6b70-4185-a7b2-4d38b0dcfb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b238cd8-c0d4-400b-86a5-16ece588b79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e634a9-28bd-44ab-971d-ab2aa5efa723",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a25a63c-d14f-4ce3-8d3a-6c984c73eea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad03902-8fb3-4e60-b5cb-e71388d09e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db68e838-06f7-405c-8468-17cceb457196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b4c11b2-f527-47d7-b162-b42f3182f9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242642ec-fb80-43f4-abf1-f0806a89d581",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70428c2b-7594-4465-a03f-6647d87e6b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e5e1ea-29ee-4889-af95-d29580d4eb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4533b1b5-1f10-4264-93ba-7103a994c47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7652e85-90ac-41d9-bf53-d42e0593ff0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dec4d31-f307-4edf-9622-f5a0f2306a2e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cfa5ac-6236-4eae-b8fa-6612efc2706a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f97fb1-1c89-4772-853a-5930598c9e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4574b305-3fa0-46c1-86b9-63a507305f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "71222af4-ede1-44a6-912a-4b9db00c7a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cc50c1-6dd6-4497-9b63-8aa2a33f9e8b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558b237c-184b-4491-959e-700d3ed4b381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d89eb81-d2f2-4915-915e-95caedc1d929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3760fd95-d271-439c-92dc-4576507f9a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbab9b6-0b24-4d57-871f-13472f4ab018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293f3daf-059e-4fa1-a55d-3eb5cfb2d8d7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7893fe9-abb5-410c-9c06-4cf3584a5180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a01e62c-1403-40ef-8848-253463cc9dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b19cd2-d34d-4b3c-b82a-6d1b05ac33b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec6e86b-0993-42ad-8fe2-ecd3fa2d6ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bc3c60-a1d1-404d-ab4f-672ed61115ad",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf17f9d-46ab-4d5d-a0ce-c8921b0b0fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71562249-d2ea-44ad-ab44-a9c184cee5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b755161-a4ed-4a82-a892-5969626c0b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cab0980-375d-4fe4-bc18-942b871fa0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a772bfe-974e-4fba-87c7-209ab3bb0a2f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f94fa40-abdc-48dc-971c-01093de2d2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26334b1-4d78-419e-8592-eb8c69acd290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d38a345-9371-4897-aca2-1f8da02ebbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb959f81-77dd-4080-9aee-c74360b48fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db826e56-61bb-4907-9e5d-cd434c8b3a58",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d75883f-8614-4bd4-bca4-1f8eeba34558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666e833f-cd8c-471e-8714-58a08c9caad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e46dc2d-6bf0-4adf-8053-b6cbb05ea120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "97ee0c0e-9dd2-48af-a992-78d88f9796ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114b15ae-9aba-439b-bb55-df911ae8d385",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dd472c-65c0-4179-a828-7a01b7b50cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40bf9ec7-981a-49da-844c-8a5858e438aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23134d25-4ca3-43c4-bc94-6c2f34efc33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72e8747d-628a-429e-b988-94552474675f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c532cef0-9712-484a-b350-ea256dec5043",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42711e06-7439-4b1e-b08d-3c311bb08625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3565e3e7-db8f-43af-a3de-c23cea7f1aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0df0258-9cc8-4f33-b930-909eade7fa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf377cd1-da7a-4826-aa73-6eff03a039eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b36240-1cf8-4c3f-9cd4-d0d5ddb0d74c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a05638-bfb8-4b70-8cc7-3a83d958f281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f767eff-794d-42a0-8e3d-e0991d2dd317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6505b2af-bce7-419b-aca4-907c27a9cbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0968960-9112-4d4a-833e-8c926fec0daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ddca50-cd6d-4814-9d00-ba5ad5098063",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bed175-72d1-4bbb-8716-e432cb81900f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6729f3-18cb-49ef-bd41-edd2e1b3f926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740d2b3f-6803-46f9-aaf4-a068cb8fe989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b12ccfb0-82f6-442e-8eb3-e73252a6e1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e267e03-c5c4-4149-b5cd-1175dbd5f726",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34a14a4-35fc-46ff-a926-008b536d34ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee08166-5dba-4d91-b0a6-45b03b8af13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41295328-0b2f-4457-ae20-e2fa0f6fc122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9317c512-ca9a-4428-a7f5-72b6894dbca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2aed42-6bce-4dbe-b2c4-3e835044c58f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981fa499-0aef-42a0-bc76-c4767462f1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160fa5e9-6fd2-49d8-97dd-b001dcf06a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0541cc4a-8d39-4e19-b17f-36aa6e26a43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb4cb22-0a27-4d74-8ad5-2954b16698a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f543d9-5a42-4533-aab4-45dd1c744e3a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7540b2b7-eec0-4b74-a789-6c549066eb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fb78a6-e0e9-447f-ac9e-44f63f41e90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e4dc2f-8c7f-4202-bf96-af1176b60191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "96062c60-da2a-4af2-8a06-5271565ba3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ca17ba-bff0-4974-9e19-f7da8e62d854",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7b64f9-b4c7-47be-813a-50f0b172d991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c9fd7e-395a-4d48-af7e-b386a5f0924a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47298106-b7aa-45b3-86f4-ad40ea002042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba89283-f7be-4a3e-9eb1-963c4fa698b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0dbead-6121-4127-9941-84dabe14c08d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6532e55b-9906-4638-afe8-34b81d20295b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3973855-a65b-45fc-bcf4-f6e9ee4b32ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660751db-67e3-49f3-9bc1-b164acc5af46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd841db-11ea-4ecd-95e9-48d185045504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25b9117-986a-4326-8dc6-56e81b3e0945",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b44505c-9f56-4542-ac09-17aa70170496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d3fdec-5b8f-49fc-9874-ba6b3a90893a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbf947a-511b-436b-9986-83bd3d73f5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24840221-2739-4fb3-b558-1c7a989d0dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae721b0d-a8fa-4500-b1cf-4503b3239039",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135cf4bd-b852-4bab-a4ec-90ab2d1738dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6d1741-3a38-45e0-a553-83b6114b1223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd49476b-2818-4838-8d40-1f138e84f09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7534e5bf-212d-4a82-97f2-1c311a9c92d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de63ab3-e9ff-43cc-8b3b-3bef77735baa",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e115494-e013-448a-b5b6-5eb9ecdc4a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d28719-5059-4351-9d71-83dfae103c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d2bee2-23b8-4e50-869a-25781292592b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3cdde9-43e4-4513-8921-9799d7d8bebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7ad969-359b-437d-b05d-d1db7b339c2a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187593cf-e725-44b3-ae27-031d4e5b2eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19611652-bfa8-4010-b908-d2e8c9525605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a83350-6b02-495a-a3e3-2a1482f35ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dde76f0-e2c8-4167-931b-84d9399d3dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f636b1fa-0ab1-47f6-8cb0-8262404ae5e1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49e853a-af02-4a6c-9266-2f94fb311013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a2fc2a-72b1-44c8-a148-76fc736d9973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e327314e-7394-4af7-a6d5-09a10479031a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "380b0bc3-dd97-4423-8f87-9ff020e29cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46db18a0-ee68-4ba3-b225-47713e3834d2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a681ecd-8513-4b9c-91d6-0863c0a8a077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f865a719-3d52-46a3-9237-b0e6cb6fcc01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5414a4-9203-41a3-b699-05d36fdadedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10e94672-1f47-41e9-b4fc-c30e998c860a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b2bde9-d20a-4670-bc3b-01960aeec175",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62cd1fe-db7e-4d73-8fbf-d15b9bdb6a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27614001-65a9-4cb2-a56f-b7558a27b7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85374ed0-fbef-453f-a21f-1966701c457c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6be09257-ea1d-4a2d-99f4-85641878a07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b30a427-0f3e-4a4f-8836-0fa1b1d883b6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289e8066-df78-47a2-b58d-16f205832480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d68d30-261c-4c79-b094-5b412418883f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99ec820-fb23-46f5-94b9-38e58af2307d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6581efe-6651-4d54-9036-26ca6ab1c776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe190267-0639-46f9-9c5e-b0be84425a84",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2214e154-335b-4d08-9083-3178beb5a8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff67ab3-72d3-4a4d-8ca1-5667e1ad52e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05c2f1c-fc0c-4940-92f1-d29928dd5a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfad367-b60f-45d0-b314-d593163dc950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123b6250-ed79-4b19-b49f-cd260f8cc991",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02533c34-4a5b-47ca-ae86-9ed0c48844bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55bdaf6-b874-4cd8-a802-2cb47e6f8d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2aac9f4-3465-4a5b-bbaf-0087da446e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a55017-7911-4fdd-928f-57e2ec9d9215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cef3247-8b32-4ab1-9592-6aeec6e8b1ce",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6dec55e-95f3-4b98-8cd6-7d5164314fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64f57d7-7cea-4958-81b4-08b21f2d1b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e58e61-8072-4e81-a272-ae03c9ffef75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bed6697-abbc-4c23-849a-1848272d8e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd01920-e2c6-4a79-b78e-f308d88f817b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3409e0-ab3e-48cc-b466-0c454349bbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77cd0d7-f4a1-46c5-9137-6bd4da85fcc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2345e03a-724e-4fce-8ece-d30f6a807c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdc009a-a0e7-4270-8433-ed6f31e2c066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fecd14-f148-4c5f-81e3-e9f1c1a2db1d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a29a56e-6ee4-4f95-8b65-2d6e3e73545d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9afc55a-0fa7-4e89-a13f-c6ebf38e3ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ce058d-014d-43ea-aff3-b5ff5c116b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "12b96a60-dbe9-4f85-aab3-56dfa7e1a3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e85077-ce7e-4754-acb5-c03cf8958e37",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88037cbf-75a7-48c5-b729-3530ba28e845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b970eec-195a-4ac2-9ca1-bb1742989eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d396c4-2ce0-4c2f-a500-6aebcd1e8998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6da3a5-900a-4cc1-ae21-4d9a987138c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c39cbfd-2d0a-40c7-9ec8-e21e63faa443",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a0b628-68f4-4964-b22a-409be5e6804b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51db881c-1e48-4c73-9bee-87b55e77d895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15af63b-4a7a-42aa-9c83-10d18e5ca698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "10100471-4f83-454a-af5c-0f57fe6c3c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce60d506-7926-4e7a-be9c-975e2c314fb1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce056bdb-dd05-4185-ab03-78059880bc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6cbaea-f36c-45b8-bb5e-cb4b8352cb82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a1c1c5-fa1a-4245-85f5-80cfb8b07e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1c80fb-48f0-406a-8bd1-2282ddaf72cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c64d6a-fa52-4c20-a8cf-38973212ef48",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c925b7-7e38-47ff-81eb-e09927bfbfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f5b3af-09f9-4b66-9389-5ac47e0a8db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea751d75-d429-411e-80a5-58787d302e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a16a9f29-e8e0-4ca8-abdf-c4b993351416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e89c16b-92a5-4995-a3be-b5f3aa24591e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfd132c-0ab0-4740-a5ce-dcc443b0edea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4d9c9b-305c-45c0-948b-7f5d5f02f683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c81259d-2e59-4291-ad0f-cda8cd4b06af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d096f651-8e28-4110-8393-c3cbbe3db3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af734400-241f-4fb5-a382-227152e8034d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322dac06-96f3-45e2-915e-55e0a380bc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f66457-50f5-45de-9fc0-00422052cb19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b519898a-ac5c-4f6b-92a7-8a3a29875fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ef22da-9760-4854-8899-5d950e985973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cbd132-ba57-4155-912a-8ed1bc691ef1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48f568a-3602-45f5-b4b5-68dab1ee4ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0513fb1-e8d6-4966-9910-a410ddda8933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254f063a-22e0-45a8-85ab-75016ba1a720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46c30d9a-2b8b-469c-83cc-72b49113e21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074a9fec-af5a-4bcf-a9cd-1de2a7755414",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f1f688-bc90-46e8-a98d-5fe88a172bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a7d36b-506c-40c3-a130-c7c87a451afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ae819d-1798-4baa-a96b-a6900c9ff550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6171fd2-d759-4a3f-bad2-4265c58df40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47994212-85f0-47f7-a8ab-b31c7a32f126",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f3b72f-c636-40db-a49e-1c0b2496bf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387439e3-ad4f-473f-bd86-f8be3993e98d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ec96aa-494b-4a10-b319-0c76a1d13225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7da4617-4dfd-4256-9ce0-af763485bed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4776e64-8adb-48a0-b907-3aacc348855b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e574d329-4d42-4f0f-ae65-ada2c852dd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6806ed-5565-4264-b06d-c4de6c20625c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bdeb01-f354-46c6-ad8d-35191ec174cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "582ea9cd-0f2e-4dff-91c2-70443913a318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35768967-d4f1-4779-ac6d-d7f52b1e6c2b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751dd3a5-de21-4fe2-a7f5-5e29b566ba10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b967d7-73d2-4d07-946b-c78d690b889b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7fd87a-21b1-4dfe-9f64-c2e9b676deed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "07fbaf03-cb34-422f-9c42-e690b95f9636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8707d5ad-5702-41e3-a4c3-3fc630f4f3df",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e8b70f-fd1f-4350-b484-261a6f5606f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170b3fcc-10d1-48ad-845e-544db8b2b1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0e5afc-623d-4eb4-99e9-96514e840da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b937def1-a131-462e-9ffb-22474c69937b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa1ca3d-8633-4576-95e0-97f0c05f2130",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99dd1b66-cba3-4aa8-b953-0db8773f3987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f090175-4876-41d1-981f-252fee9610ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b359d638-ee70-46c0-8728-d6e39e932858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34e7b56-7b4d-40db-9bfd-1e2931eb7959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a537aec-1f56-4a04-8cb3-f401678b464f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0eeed5-c7bb-4862-9d5a-0816ec2faf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101e82a7-53f0-4289-a261-97c22c3a57cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d731fa-2fde-40cf-8c4e-3a48045fd495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5232c0-19d0-4625-824e-bc9d28f9a6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edd975c-6e39-4ac3-9baf-ff46fae19501",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2560822b-0472-4d01-b586-242e4f432149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3105566f-476f-4b31-87e3-c8267540ea70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741b1595-1781-49c9-a296-09524517953c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "101027b0-b20a-4785-b21c-a63721e0380b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17da67cc-6f8f-41d3-a790-0f369c700524",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9611fc-892f-4617-874e-43586de23e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c2ff01-2e9c-4f3d-9457-c6e1c00bebe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b93396-8022-4f98-9ea2-c315d2908646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ffad90-60b6-4e19-851f-75aa0e7a351a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e839289-d1d2-4803-a94c-24e56cd2ed6e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee29531a-cf50-47ac-a9c4-46172c43a6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c206452-8912-453e-aa83-0d32467c28bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36196c65-b74a-43f4-b97e-97c3c355135e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9d46fe-5f4e-428c-b225-d02087c8a942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16824f05-fe2e-40b4-8c69-306ca3cc0f27",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c087f8-146f-48f1-b37f-24b4a3fe7a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b840e70a-7cf4-470f-a8b0-c29df7eac8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80867b6d-4bc8-4e6a-ae5a-8e418f10952f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "328ab678-7b2b-46e4-bbd4-23a5ac0354b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd21145-f448-4a13-8b46-0cc7e8999fdc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440e1b73-6028-43a8-a267-e9ddd2ab9b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce62a935-0b15-4410-b24a-82104435335d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d879138c-8559-4bdb-9aca-22e81d6e1052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cdc3a8c-c2c9-4bf7-9ca8-9d0fea76ba80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15dceb7-d937-4c8a-b9f8-60b1900b4997",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c009a91-b772-4bd7-b2d7-d8fa4cea7f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b246da8-4ceb-4ca6-8205-da3ea4c6d5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904667e0-f8b0-4749-b5f6-05c330cab796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2b7ea1-65ec-490b-b352-5912fcf8515e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037bb7c3-b29b-4d0b-bc24-f08d7af8d8fb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bc789c-c4c4-42e9-9adb-c9b8c94e96f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4172776-e2f4-4d5c-a3ec-1251c98323b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674ce542-0a1b-4869-834b-12e25074d588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb44112-c7ae-4540-a01d-fc679ae059a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845d5214-fa2b-499e-bf64-11c7debe43d8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b4fafa-afb0-417d-b422-a29dee761df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504465fb-47ab-41c5-b79d-43b21afd455b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166aa2b0-d68d-4830-a349-69b0739e8b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3360aa1c-fe3a-4cd4-8773-052577180a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0c9d30-8edd-4773-82fd-b70b4c965404",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d0ce51-a616-4543-b993-e20e3f270ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a200c77d-0607-4900-9b80-28997b00a773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06568283-4a9b-455c-9797-9ce8b36e54ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7f26cb-7bb6-4dfb-b81f-8bcd3ce6828c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccc9912-6643-416d-85ac-49aecd2cf2c0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8650f6e-acac-429c-b651-39dbd89d0ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1afa57bf-bc70-4534-ac44-814a7a39494c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca184ab8-b32f-4be3-b810-1102720e4e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "125d1ab1-e5b1-42a2-90f1-f2b6f70ed5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc6b82d-9927-4a84-b099-35ff85ae0d21",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d510ee-175c-4a5f-9e41-b0ff960ce5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff43d7a-bf62-418c-9585-51995b673dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc178707-b57c-40cf-befa-d8536127efd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e39dbea0-550b-4f21-84c2-17f45415145d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98f9ee3-b785-4fce-828c-857859d30ebc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cf1a69-61b2-4490-9de1-cbf8518f05fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed9b0cd-c2ba-489b-9fe9-7f5d6dbe731b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dadaf06-6a79-4010-90dc-9bbe8988bc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba388caf-d0ac-46d1-bcdc-5237c0bdea61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05385522-d0c9-4f0c-93ec-956ed566fcef",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a836c3-009f-4dac-9520-aded5a4bbeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ecd4e0-204e-4ac6-92f7-29c60374a04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2b0aab-1389-4255-856c-acb09f4cc03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0111390-f5c3-4537-922b-1996d158e47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d76aac-7772-43d3-bc1b-aa6fc8659cc4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab5f2f5-0709-4bc4-b207-4fabed4ea716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b0c301-5043-44e9-beda-7c7bd41e26ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fdf981-6766-409e-8dd7-d25813b62904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96fcf911-7f20-4562-b6c6-758bdcf65d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e235c6-5baf-44ca-a953-9a0279b9163d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecb57c4-a25b-4d09-b552-63b2f2558d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d53873-dc79-42f4-b66f-7cbd283e0658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff89b432-c56f-4e83-b59a-bf618e29610f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31faeb33-9a3d-4d07-81c1-f748dfff271a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34d7e8b-c0d9-4e28-b83f-da4d70bd7f77",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdee27d1-fa08-477f-ae8a-3e5ab35a9531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be6557a-f7a6-4354-bd33-cc2bf38b3ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e07123-c402-4ccf-9ab9-6afa8ba6eb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f607e3-c264-436c-a78c-afaf57f0d284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fa091f-20d4-4b97-9a08-3977300dc918",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b305ea-b51a-4d6e-a9da-e61f3abb21dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427db94d-7d54-40fe-a468-5fe9767283b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7923dc3-0052-453e-b972-8bcf9dd51399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d098c666-66e4-457c-b41a-4f80de751c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd96c47-2c50-4cfe-8402-2bb0062f0dcc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994ec189-4892-4b7d-97e3-310ebc6952c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b921a3-0285-4555-8441-7106ed9834cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4b06d2-c939-475c-a7d2-151ddc2215d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d9c095-3e57-4bb5-a1e1-1edc67b74b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25403fe-1505-406c-b88d-70a9d37f179f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885200d1-e99b-419b-9038-1c6f16d5014c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6d21e5-98bc-4315-860f-83fcc2310091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da02b0a2-4d6a-4473-84ef-c725cf2077c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf4e4a3-9a21-4c02-84aa-c9916cb56830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520d026b-3148-45f7-8014-67658deb31df",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e94d5a-d8ab-4841-ae2f-62e2f66e13b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b0dfdd-51cc-40ae-8e57-fc7f05125a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1427f6a-8452-478e-b487-a430bc2e6742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "caba0e93-021a-4983-97cc-e744f36985c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b3bb23-cebd-427d-8a38-410f5f0327da",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ad3564-d55c-449a-bebf-766b3293a701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a9591933-11a8-488a-9989-13d72e097f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c6a3ec-3b5e-4cfd-ae7a-197814941307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "00b5e980-c938-4cf6-b282-807acea841b9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25aa6fa1-59d3-4063-baf8-953d082fa462",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0b7028c-8e54-4fbb-8f87-d97dd6b7f2c8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0182a5c4-15a9-46db-bee1-4cf70e31b8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffd9efa4-6b13-4a21-ba27-d648fe5ef97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e449fc-d2b4-46e7-b746-9bf37fd572aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "421eddb3-4566-413f-953d-f12ba1b992d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcc0e2b5-108e-447e-9dcb-55791100c765",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0618818-28aa-4ad9-ad8b-98e3d76e694a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52bd3f77-4978-4786-b9c3-e9dee26119ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80373756-0282-4087-b248-2f00372f1454"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "340b2a23-13ef-4b3b-90a0-3db41970c165",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8cbf712-dd6b-4548-bb1b-1430f6e7da20"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a4fad7a6-014a-4be7-aa7d-3e7396c99d8f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e8d9f6a-43ce-4401-8673-c6ecc005ccec"
                }
              }
            ]
          },
          {
            "id": "84704393-31c8-40a2-8844-869b0bd05fd6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2d1a377f-9328-4a07-8960-979e78a3f7ab",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd811e0e-52a7-438b-b6c8-1225a947ea1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a39bddc-c38a-4e4e-90ca-136a995c530f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4339376-cc30-4538-9ddb-ebed63c741cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2d63f2aa-601b-4000-9e84-d0379836dc2f"
                    }
                  }
                ]
              },
              {
                "id": "d22705d4-a926-4f2b-9283-6579d39c5739",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1f1a7b1-6708-4677-acbc-9f3ba9d1bf8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a0cb105-50b2-4a60-98b0-0bc3f33a1598"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3dee873f-d23b-4aff-a880-643ebf904975",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ef18d89a-8891-425b-b04a-4df282abf233"
                    }
                  }
                ]
              },
              {
                "id": "7d9ab0c2-5762-4b4b-ac43-0b2d3c7cd260",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5537abac-0910-4c14-9b05-10d23610d54a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f999d98a-b1dc-48e2-9aac-20b9a96d8cb3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8310c5c1-ea8f-4b77-bae9-1361db80ca7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0cd80a82-aae0-425a-b19e-1bc4eccba753"
                    }
                  }
                ]
              },
              {
                "id": "893be673-ef1c-4188-b626-69c20e74171c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e017e60-d3ce-4b50-8d8d-894128febf4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29285900-9418-4191-a109-d4811833ee4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72b6e1a4-d16d-4ecc-aab5-780f8921812c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cdc03f6d-d73e-4acd-85ae-1449461f0f54"
                    }
                  }
                ]
              },
              {
                "id": "967db149-68a6-49ae-b002-0a059dcd14ae",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe1cbbdd-0781-488c-91b4-573bef884f8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3512b1c-b0fe-4597-bae5-f771623b572c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92c37d25-abf0-492f-b5b3-dc11edf0b44e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f8f3f447-91bd-4dc0-bf1a-a00a538c0a26"
                    }
                  }
                ]
              },
              {
                "id": "b6ca09d5-f6dc-4c1a-8ed4-50b5f0e922cf",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3dce7f3-d3ab-4fe3-8acb-6297084e2def",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97f46358-b375-4637-b8ac-b33f4a7393d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b30d69a1-4325-4a87-95a1-3b33840c6125",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "20aa6988-c0a3-4c9a-be18-2352c6a37004"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "42e6714a-fb91-45d9-8193-3a31a02dcd98",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91d5f160-a2fd-4e17-9c04-f7936db1c019"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "de9f9066-5cb9-469b-ad8d-663ed4127b61",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "43c4f767-f572-4860-acc7-e2b82ec5eefd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c74ecc3-0bd2-4771-9329-a1a61cd97a12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "38078838-bdbb-40de-99cc-5ab7c5433866"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bc49f27-9ca1-4fbe-84e2-9d93f78c5392",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05fb2623-5139-4dc5-9081-3121024bb843"
            }
          }
        ]
      },
      {
        "id": "89d9b499-4d60-498f-9536-82a489f8f1af",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7cb8e52b-dc9b-49fb-9d9f-02aee7599d95",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c451dd9f-20cd-4bb9-8670-7ac724cf0068",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5ab44b7e-f953-4f31-9fab-69a5633e9d96",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25e2a5d-907b-4416-b024-7fa3b433ed87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d398681c-25b8-4345-ad62-4fccedd4bdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb65899-6407-4cec-ae77-e815732a9e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9839a33c-cdd8-40dc-b303-d15f2e12237b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7cd4ed-2324-42ad-a85e-beb614f46c1d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc6f323-5473-4536-8b4a-6a13960f19db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9024342-e027-49db-bea3-baa994b728a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d45ce2-c585-4b52-83fb-3be83d5a5c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "924071b8-c9d7-4379-bb59-441ad9531305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b616d70-66d4-49ef-895d-b061bad3847b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b8129e-5361-44a4-beb5-2648b1fe695b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396f6f15-ee25-4704-988b-d3f889294655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adad0f2-ebd5-48e9-92ec-c457cece7856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67cc7562-c6d2-47c3-931d-ad21e1333a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a12f1a4-0000-4edf-8448-e3df5c351230",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35c730e-c67d-455d-854d-407d66d3aa14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a1cd37-889f-45b0-a98a-64102e71499b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab22a54-1677-44a6-8745-0fdb734426e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79d80568-6c30-4858-b3ba-9d962f863786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef47eec-a89f-42ea-be91-2b2a7e4c9f23",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8562e9-ba96-496c-82c9-b7e31e4f2796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afde329a-56b6-45bd-86f8-9a832f7f1d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc90a429-8f80-4279-9fdb-33ddfc9a6be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afb650aa-0f97-4d1f-9dbe-1217e08f708e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d695eb-56f0-4dc0-b70e-018684205684",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c83032-6709-45c6-a373-fe28158f5229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d612f7-1d07-4697-a3b8-682ce8d9e076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a0cd56-5435-4640-a9ea-a435b16c5611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ee6f02-eb90-46b5-a90d-a94635b22b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87262f96-7940-41ac-98da-72cf3df56b17",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c54974-d308-488e-a20d-b7b64e58c1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c81d2b-5631-43f0-82e4-56d1c811b4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3df0b8-a7c6-46a1-bb94-a00da2e082c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bccfbb6-6946-49f9-af5e-411032d4ffb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989c3110-fe5d-4193-8b3e-854f93bd0da3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322a3a8e-2e5b-49f7-a41a-2b49bc145017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a044cf5-7a2d-4443-871e-068b265630c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53aa191d-7c81-425e-b630-58f13561867f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb001a00-2e79-4d58-8628-7e93a9bfd826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0950d7-2239-4a48-be50-0fee6f52d916",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc02e131-2e72-44f9-ba05-6728710123ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773ea9cb-f1de-4897-b685-5f0e35a013b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b214d79c-da3b-4d85-af6e-798e7b33b1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6de8a1-1205-4a1d-931f-106deec7194e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c4830c-b016-4783-8207-555bbc2bf969",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86410614-bb76-48df-a904-686b1cd151e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86f5950-4429-4f66-a457-01706919867b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840cb64d-8049-44d3-aea6-e3d8ccbdc409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a20327-f1ed-45e4-b7c2-33df9cffd1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1d8d6b-0d4b-487c-b2ed-09ac958b4068",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1acf9e-68ea-4c92-aa5e-39930c55a7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9386c528-dac1-41d3-af8e-675858fe8e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0eaf33d-6c9c-463c-b410-40822f60453d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "862e36bd-7ab4-459a-ad2c-d1bb3efbe12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d098bf59-6f51-4c04-840b-622fa8108513",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbf66d0-b306-4e2d-a29f-780974d45a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b023c1e-cbfb-44ed-8933-9f4e7958d03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b258074b-b91a-4ae4-be09-4d93bf6a7800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6dec0c4a-0442-49d8-b903-39b61c74225a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efa889f-6699-4a85-b490-494ea15e68ab",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a019bd1-9815-4efb-a809-ba314c00c4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780cd5e3-a0ff-4537-a0f7-f19092996e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1a57dc-74de-4246-a7f1-161cbddbef30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e24f6493-4e80-4d8c-bfe7-2e78f19c467e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36114ba-24ec-47bc-b2f4-35379b9de68e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a8d5b3-fe58-4676-8e6d-44354b8afbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2854898-0d1f-43d3-90c5-747685d8a882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a67299d-ae7e-4b1a-9e4d-3dc0c9113fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "883aaa66-1193-4eca-a311-66d1dc14d4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90dcf08-afc9-4d4a-9ce0-692c5400db37",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed62e8ef-a675-4b0f-88c5-46c2975e562a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8a9b24-9514-4f7a-ada6-0f0fe8bc43da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af370633-5f2e-49f3-957a-17fcc0ca0c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8b1582-cb61-476f-ab04-0366a80d0e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0f00e5-1e14-4335-8af7-49f09c2da354",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10223240-3472-456e-b94c-5f693a08917d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5906a7e7-e3bd-4ca8-8f07-8c6967b4de17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92201a58-9b51-4241-8460-5999d4d22ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6267d6da-3975-462a-9fb2-337582e50673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a397cb-25be-46c7-9370-1b2bfb084ad6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93517543-fa43-4740-aab8-20f0e9517355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5c7adc-ad84-480e-a75d-4e3b15546e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9430af-232b-478d-b235-d5f8420153ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec36a132-cfb3-4f9f-b0f0-9a40b537778e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc506a2-5853-4cb7-ae15-ab19be000652",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fba6c0-3948-4ce3-b84b-f3e7d89ba817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e3e999-e8ac-4ca1-84ab-8b343c77d7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c473b35-5e35-4464-b1bb-9b53e41aa98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd422ac-cb71-4407-994f-c56b0179d68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede22266-10fb-4d6e-9fe8-ad48d81db128",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260557f6-d3dc-45a7-9985-fafc7b7e0a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684d98f7-a4cb-4494-ab45-c606790b41d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43c3614-8fa3-4879-9e16-67ed177c8429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ece39c6-54da-4d1e-855a-fb9b1a6fdf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8308fbcf-c1d0-42ba-8b7d-e2e6ea31b6f4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f234e6c3-f627-4fac-abce-ff881e53f006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54036c9-cc3e-477c-bdc8-95119b9535d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5976dbe4-47ce-4099-b7fd-87d608f29af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4565bf59-8e75-4243-87f2-2a0c7c118e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9774788f-3449-4fd4-ba97-a0878b292347",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab13b475-01a6-4ac1-952f-a124739b2601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd6549b-6971-4d8a-bf92-0f9d6028d98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde6094a-4119-4827-ab69-fd0e0eb5fcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8c556b-203c-40ff-ab30-f1297cc8f478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40676fb5-8f49-4e80-9b7e-1802938073c3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace38e7b-ddef-4d2e-8e72-ea5f5d9e5111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e99b205-a18d-433a-afb5-54413d8b33cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a734905-ab9b-4b32-b553-56c5649f5f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56499ae6-cd12-49c2-8fc3-d9d4eb1ae06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16ceb9b-76dd-4cf4-bfab-25575949f683",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ff0cd6-15da-465e-8726-a132eafd2bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47485fad-9ea7-4651-81c2-f126de8415b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233a3926-f0f3-4354-b4ab-869dc1bf73b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9951a6-5503-4c14-8472-da4542746ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c902985-0c8a-44bf-bc1f-5a7e1dd04200",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638a539c-a5e3-48e2-b4e2-8b9906a3d771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00dd9d5d-3dcd-4ce3-9750-868925e17627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b28f81-c8b8-47da-9970-a97a6c91ab7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e99509a-4ceb-4663-8037-d183b5fe6003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e6b213-c82c-4486-afd0-7cad942aee65",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffc805e-2591-48c4-a601-3518615f6080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0d16ec-6a85-4320-8549-5dd974c562ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c63d5e-5b58-4336-927e-c81fee4b9ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63480b8c-f0bd-4b13-9535-e8d163020716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efebef47-c6a7-4bca-867f-127b2f1222f8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042d49aa-c095-450a-b84d-66f300727c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f564c48-a863-4b30-ae0b-e78dff373a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6d879e-bc8f-466b-9270-8dffec107e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03a5035f-d16f-40e5-a109-2fe1472883e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70eb4b8-21dc-4d8e-9667-e98b64722525",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61890c6f-adfd-41b3-9ad4-c71c0a1758ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9166263b-25b4-421b-93d9-b529219ea577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e02fbd4-c611-4c22-b921-87b38ac288e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f838597f-8095-4c58-946a-fb47f3f38648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80900ca2-ef50-4ae8-909d-5e0331e32219",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4ca723-2e7e-4881-8ec8-61b293f407d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb5eb3c-14af-460e-9836-1fda62be1caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5bd328-3811-4568-a4f2-a0a71cf3dd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d1c222-1acb-4111-934b-c57f7f6ed4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31073a1-c541-4df2-8aaf-fba65292bee7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec0e6d4-8bb7-4905-bf9d-9b88d967a875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe8d17a-9c70-4867-893e-b81d725af579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ade32c-18c6-44aa-a661-781f7b354c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0730d7-cb4f-4196-ad3c-60b232947f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e60d75-f8ab-4efb-8b73-d13816a719df",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b616ee8-d33b-42f0-923e-c7fbb9e9ea67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95916dff-3992-4363-944a-eac9f6e302d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dc66c5-8353-4810-898d-47bb84a962fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24de492a-cf62-42a3-8fae-3dd8b7e24966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20a6d85-8455-4147-a7fd-da918435343d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6f25b0-31d6-4b30-aba5-a62c866eacf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01104dcc-7f51-4d03-aaac-5a5bf015d6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3603fefd-c322-4818-92a4-d573c50fdd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb6319d-77d1-4ff3-8e6c-59cd46437c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f41b27-705c-4e77-a68f-d0bdcc938776",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130a2b13-6033-4d93-bad3-3114ae583a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230f6d3c-fd68-48ef-89c2-95546a82511e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c337af-752d-4dea-9bb6-a7bf78d6cb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23cc70fe-5ea1-435a-985a-b9fa1f738432"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4f14bdd-24dc-4fd1-8ac2-202243a1c90f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc9aafc0-7337-4fed-9113-e880dea4fe11",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a65ec81-3aa0-43a8-b990-e278725b6272",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b71072fe-7977-451c-8a14-c3284233a28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a641f72-66f7-42ff-ad94-317734e6e0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df0f53a3-c2c2-4d8f-bd27-42b460bc8791"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcc3e956-ac2a-44e3-8a98-86d060d07a28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7d6c735-ab08-4358-a584-42c5ee8a071c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7154e392-8940-4e21-8837-7d7736a118d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abc6a998-82b3-4382-8cf0-f2f3ba7b709f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e62e8bd-618d-490e-84d1-1dbd3daefe51",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2d5ac7e5-5111-484c-9603-685f0f85f97a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b74fe8f5-628d-41f0-bdbe-7d22cfa89e88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71cb70ca-5afa-4406-89ff-dc20e560c303"
            }
          }
        ]
      },
      {
        "id": "fb5b8180-cbde-44ae-991e-fab6871681b4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a6871b30-9bf1-42b6-8655-030cc0ccddcd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19538e09-9a73-43b1-b9fb-cb87bbcc0209",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "22bf4981-9583-4a72-8e5c-f5a70f09e64e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872c269a-0db7-47d2-80fc-687bf137b96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a93b974-141d-4391-a47d-503d32bd73fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a083709-2b6f-4f1a-911c-4273e09847e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e11d005c-699d-4715-9748-f517300ba5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016d00ef-b83d-4ba8-ae5f-c2f1cc3d35fa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60132cb8-54c9-4ef6-ac9d-b4b5a2e2e939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aee6121-2363-4d19-87d6-9ae42ae121ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d00b64b-1626-49a9-b1f0-03a4b9f33830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "631a1a19-0070-45db-8e94-055154812693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ea5531-e3ac-4cce-87d0-bece083ab997",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319f7ce4-62f4-44e6-939e-cfa1e174848f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb037bbb-1a13-41bf-a813-fdd82f12f72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ef53f3-5c96-44e8-a98c-946a69099b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bb2350-c5e9-411f-8ee9-40f9e9a6860e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5935f8c-bd7b-4964-8ae7-1a6d89943165",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c2bc1e-79e9-458a-9570-c0c166a23170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9919f1e5-51e9-467e-b7a4-cfda3a3244b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e5d3ff-3126-4069-9d86-d985f01b04e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70825356-81dd-47d3-8e1a-47860201ab03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88df5f4-e5d7-4642-a244-07823863ea56",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deef8611-88e8-4168-90a6-d1a049639f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542d16c5-b7dc-4a2b-bd8b-e674c249faa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3320047b-ee7f-4459-88b2-a02540df1a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72520316-8c62-4c29-a535-1b4d83c309a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173b9e2d-1e4a-438c-9d64-748cf858cf95",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4390d77e-6ce9-4b05-84b9-e0a8bc8f76d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920b43fb-d381-4aea-8cbf-2ddd899b1f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707b8eec-e4df-422a-8bcb-97652f1e81b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0fcf85-9fbe-44cb-af5c-2b25aafff9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a873e181-e1fd-493d-ae12-307313845e4f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106382e9-d0ae-4460-b844-9523581d5887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c887dbf-aa33-4e26-a349-d8a10c2e4df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4d0f99-0f10-4424-bbb9-fb3e3398ed24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9953bf13-fb5e-4894-b81a-f776beb22b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197484a1-d4b0-4b32-bd77-5889501889a6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8252e4de-5e4c-4c39-9a8a-53cc3c413c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25bc238-0286-418b-a10b-f67dc0ae3ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed05a826-0ada-4024-a8e3-027fd74d340b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40dda2cc-c4d6-440f-93e5-20ccd0adabf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eca5389-3764-4836-a239-71d2085b494f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0366381-e8fd-4287-be9a-3fc00419ce9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a091436e-38e4-4a2d-b8d5-8adec888ee9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe5d903-3e0e-490d-9ccf-dfec9cc1681b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf8b4d6-5436-4875-92b5-872d3881b3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcfff37-6f9a-4960-8297-a742e088cfb4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928fe889-1738-4482-8204-e37716cd7581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd5c3fb-9f51-4c20-ae88-ec3a4d80f9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71d1739-7a77-46cc-9ea3-8176ab7c435d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "017685bd-7d38-4768-8dd2-1b51fa96eed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a97891c-07ab-4a0a-aeea-4932c9e812e9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565b6b02-0b29-4494-a46b-f72dd38ba28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1006862-6e7b-472f-905c-11e023d05cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96df8ef-5ddd-436c-a758-7487c488191b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fcc121-d14a-4b5a-b174-e3d65c36944a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e95858-3c00-41de-b126-ef84750c049f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e279c5a-fceb-48b7-b96b-8903fc946f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316d2268-e286-4774-b052-98cd56788cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ee535d-dfab-486f-b2d3-0ea7f04864fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75066aa7-3936-4eb1-ad0a-f60400f36abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2d74d1-cb01-4119-af47-61775c04ff49",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94c7a7b-19f4-4593-bc80-586f65f04491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c989e9e-cfbf-428b-bb88-931b7978ef59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ba5f9f-ad70-4906-8352-4c5add6934aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c78ee1-1342-4137-96e2-fef9b745abb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471d0067-93ed-4634-87d3-2928fc589a84",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6133f8-d220-4f35-bc92-d2d050257a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5298d292-b75d-4ddb-a011-7fc52c2f0be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a449807-824c-410b-b103-5d58dbc14475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6a4604-996e-4394-b767-35024dbab889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6993f219-62da-4b56-b768-d127a3ca6cdc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bed0b3-70af-454c-95bd-88b7b9fb9a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a9d099-135e-4fd7-9565-c3353d49aec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb1bf37-3b2c-4e43-a7bd-433d4eaafc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a8163c-8d4f-4205-b43f-a251265e1113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def2d009-dae9-4704-b55f-49f55139507e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f398377-8bb3-49be-a92b-39e393df39c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894e7f18-3f10-4424-be51-95763ce86990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710c93cb-5f33-402a-86e3-7d9c51a20ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1aa6609-036a-41d0-8d92-5a2c39a11573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaab5ae0-5a3f-49fe-b020-52bf8dec2a11",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98a6f4d-16da-4c55-b9cb-fa6d63f1c6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e7a15c-2e2c-4143-b99a-810a58ee902d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a4316d-338b-446b-9414-987984317bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0334eb90-fd7a-4ed9-94fa-1d58368bb3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cec8c1-26b7-49f9-9d5e-00a3eeca1ceb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae40a09d-1009-4e3d-ba50-08991d95458a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3caa7c-1b57-468c-b9b8-a644d0faa32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cac8881-d0f3-43d0-819c-b04c745b162e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a89633cd-9675-4134-89cc-f57f1f928cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d34819-53b2-426b-9c4f-c33f1731d3e8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eccd4d-712b-47f2-8c6d-983b2efd2f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3574843a-1e9f-44d1-864b-7ac384e32233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b781d84-c9dc-4bc2-a492-5fad7aae3cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "885d3c9e-e0fc-4a14-940b-a7abd6c8e645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819d96fe-4f7a-42fe-a8ed-8e88342685be",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df625c48-3e7a-433c-b70e-5149ccb4f21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc86022c-db1c-4d5f-bb31-f24854d9a0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e532b725-ff96-40ca-9c5a-faf0e23e37b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3eef2f6-7a94-4d5e-90d0-bbaa2c18a965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a13955e-ff64-4865-9a56-8c75ba8ef94b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580c8bae-bbc1-4df3-bd5c-6f97ded7420f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b16143-ab39-4ade-a317-252e17651512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b99be21-bbdc-46a1-890f-f445f930e03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4350a24-0d3b-40c6-abe3-355a93a8ee79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20aebf10-cca1-488f-85b9-c7782a4d394d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df43b37c-28a0-4971-901b-216349b4601d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6f8266-2c2d-42f4-bf1e-7f427536271e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe0ceb8-b71c-411f-9f04-9c8ca1f4d87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e64d7b27-902a-4c1d-a81f-7a56dae0d863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d701f2-dcef-418a-a711-f71bbe0aa422",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165afe6a-1d68-408d-99d6-8b07fcdfd44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea5177a-4381-4963-a236-6acf3b3cd1bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f13d810-f27a-4cfc-ae27-1236e7381110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b316fdfd-9a16-412d-85be-6e3eb85e0aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9e48cd-88c4-4d23-ba40-1ba7b75958a5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad56725-a980-4773-8daa-9ab17945675b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22c89d8-f7ff-4bfc-9da6-33417c2a78d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292f699c-e22c-46b6-b5d8-1b34e9460a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d178993-f694-411f-b018-0e1f4e2b0258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab21c27-6516-45a4-a318-a802509f1905",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d042e9ef-fd21-485f-b8e9-85f3eaae6791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b049ba9a-2138-4149-8bdb-e26ea4d10bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2418a6c8-3f3d-4614-9d10-0943d21eede8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4feaf3fe-76ce-4390-942a-8a8d13204c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295cf4ef-8faa-48a5-8e20-d2d851b9ef50",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bd97cf-03e5-4de7-b1a8-b2ba68148ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877281e4-2606-482c-ad58-ff658e250482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aed5b40-6848-4b34-ad85-b7d9f8fdc9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5bec50f-a06a-486b-9124-79a53a357ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28368858-3f96-4a03-9898-754e7d744528",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e97935f-dc04-437a-ae6d-d6dd9759d340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1036c7bf-0774-45e3-a53c-7975fc0ec641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad146b79-62d6-44b8-bae2-afe75862e212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53ba2652-ee68-4a61-a027-3b266ae8980b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49faa94b-822a-40e5-a3eb-4952aa9ea5b7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed8e92b-264a-4206-8d4d-fa93b94a0d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc72af3e-c9ad-4327-9d0a-8451b0cb9fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160bf991-57b3-45e2-a6d9-7714930e8d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3318c7-283d-4687-9af8-795f5b08fa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74053881-caf4-4595-8d16-a8800b43832e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344e1d95-5dc6-4151-8ded-0641e9fc5384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6129c15-7850-4678-b3a8-82a7cfe6a780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06036580-c0d6-4b9c-a263-74ba559b6db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c058a6d8-2d67-46e7-a848-d25c7af31bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889974db-5f0b-482e-893d-3aeadc130a20",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27988db-893e-44aa-ae30-97e087129f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a5c7fe-0cc3-483b-8417-d7955824b8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f88a35-c2bb-4afd-be5f-2a4261b37de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa214ab4-0be0-466f-b006-9ad0a5dc0e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48179423-b0ec-4d90-a8a1-e3642cde5bf7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910a7a42-e538-441e-ba04-f514611e37e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e144f68-49c2-4f0e-8680-7c63216afd38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c910be9-9884-4639-aa89-96a3b54d4d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80a0eb5a-5970-439a-ab21-3acd2bde49f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce6c1ba-2493-4469-80e1-2d50ddab8142",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc2f9b4-d551-4686-84cd-95457fbcd1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe01b0d-3d66-4687-96c0-a90adf0976da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d1d3e9-6728-43ca-a163-377b921e861a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b470f977-7c51-4089-8ab3-afd9b89283f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9736edf5-c611-4ff4-b78e-65c8eb61c36e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0da851-c35c-4935-8f67-69b58c0b904a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ce510d-e9a1-4ad2-91ef-9c9dbf9466ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd9b5c0-bde5-4331-b64e-b6fc904fef7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e65042f-a26d-41b5-8776-271b74439c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c401396-c65e-46e4-bd4d-8bfa95d60050",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db31ac8-b809-4f90-9b6f-af7417137dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05de3f3b-4561-48b8-af0e-2106af990acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5350bf21-d198-4924-913e-d7f83d3f355a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c54295-6ab7-4754-9769-59b629375814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20471494-0b6a-4d53-b844-31e67fe4aca2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4037ba-5749-47ac-9f94-71c2db0c445f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6594dde3-3e6a-4723-b87a-49ef4db520d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e9567a-3e9c-4fe2-a223-dd0f9d80f100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26168be2-293c-41fb-9604-f6777f669622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0b46fa-83f1-42ae-bcbc-453b85f46e39",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9b3b2c-38ac-4564-9fde-06bf180ed4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39dfefbf-7114-4ed1-ac87-4875d4233619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578234ee-780b-4cda-90d0-91808446e3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "228af95e-2310-4ba0-be41-15cfe56c1fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8d28a0-1385-46d0-a3a4-a3745029972a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff7685e-25fb-454f-ad18-235451233a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94df9edc-3d06-4b7b-8e31-8a1c7b0e2c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214a05cf-55f7-48e2-afa7-29abebb03d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba16a386-9752-4643-b523-d80f80d8222e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "41c11139-7aad-4b03-adda-8e42be7066cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf5b8653-43b8-42a8-b1c2-b177038840c6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6de7d4e-19e7-4c8d-86d2-806db7048ef4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b88c18-0afc-4626-b129-91eb2fe6e35a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4961d900-9c56-4210-99b7-1bcfe6658985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df0b09bd-4763-4d09-bb71-93e9726c9d9f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27be7622-6a01-44ba-ad31-96079358c659",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "418ea5d3-d0c1-4578-92f0-02d106fea82d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbaae6d8-a130-4ecf-9ea4-dfcc7707b2e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e6a335f-3026-44cb-81c8-a3a9227698cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f6eaa96-369a-43b3-95b8-2d9e586ddee2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "91f23571-b13f-45b6-8b25-8ad2c7c642e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6698696-4936-41dc-82d8-d3a37bf89798",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87841e93-967a-455d-ab1b-c7833eed5078"
            }
          }
        ]
      },
      {
        "id": "6276d2da-45cc-44d6-8efe-928c367a4aac",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "47c5a705-fd29-4bb0-9f08-be73fcdab140",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b99dbc9-4e89-4de5-a6cb-6baf5fe6e4af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "85c0bbe0-5392-4ea5-80f6-74e6f343c5e5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd9ec3f-656b-4c5e-9778-f4bcb0617cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ded4f78-22ff-4a36-ad7e-9b7bd1492f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904d19df-4997-41a9-b6c5-448bace59aaf",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb00c7d-5c9e-492b-9396-f81e2aac3678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4454be00-f011-4c62-82d5-e76149d36daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f4a3f6-ac45-4b0e-8e92-339229793a30",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d9e1c3-bdb3-4131-9b1b-88e8c312d19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7322a974-b5b8-49c5-9cde-a37ba20a5377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9ef1dc-e41f-4556-9391-c9ceff396f5f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2c28b9-c298-41d5-9681-56456518ebb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712b0b18-d7b1-4d75-aada-87cbe6cd32e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f76672-5152-430e-bc4c-f6f5a4a6e3e5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae5145d-7be0-4585-b622-20e117f4c56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a77db0d-4d39-4cbf-a958-cbb37fab504c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a656989f-b2ab-4cb6-bb03-8fb9d6f2af83",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e40c10-c54f-4d4d-bac1-702c84acf613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d7ca94-e2be-44b1-a90e-5f3321bde2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87aff534-c838-4a3b-8dc5-09820d26b8ec",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acd2be2-623e-4f80-9bc4-862b04769ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c93397c-cdf0-4ecd-87fa-cabef9300cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ee0fcb-6bf8-4457-8228-d61efed44774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a32dc6-000b-4429-9da5-4ef719a3f657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06aaf51e-1e01-4ea3-ac24-58f9455828fb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d5d5c4-d09b-4f23-bd74-a080156473c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db3eb875-9b38-4680-a329-b3e00ca24852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b1a039-4545-4c29-8c2a-96771ec3f5f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72076fb9-8468-4eee-b413-dead3dbd46f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a89c69-8bd3-4883-a360-6edacf8529fa",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54e8e73-7f32-4546-a3f1-8c35b235e37f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d9d974-ced5-4721-a1d3-3460b442d372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b660dd33-c87c-47ac-bf57-cd6035a01c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3491d9d-d31c-4eff-8113-feaec7205e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329af096-8ee3-4600-9675-5fb60f945264",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88215bcc-a46b-4e0a-a115-1372ba538443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a72dc890-f679-42d2-9e38-afb68870acd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b2490c-6fd7-44b9-83c8-3bc30930e26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996005e4-d006-463d-a35d-4be1d2280317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868bf2af-b1c4-4015-a2ef-3b510016a7ef",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a024f8b7-9ec4-4bea-b243-a28a4c31923d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7403c52-4097-4118-bb84-9dafda7b403d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212061ec-f724-4461-8568-a398411784ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c214eb3-6e99-4dda-b145-669b04d6066a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fba875-871c-4c29-a623-4506d395e8aa",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556c44b8-4be7-4076-b548-d8028eca8baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43719e5c-302d-4cef-9619-0322e107ae0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db541f63-72af-45f4-8922-0cffc61c64b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3bb6e4-07e0-46cf-874b-2c23f243a0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70ccbf9-c7dd-4df9-875e-b4051dbc665c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76b38ea-7dc1-48dd-8f7d-37b2858e0604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "286510a2-de18-4357-8edb-5f256e24a5fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db964501-10ec-4e5d-bbed-3e450ddfb2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2935dc4c-b712-465f-bf5f-2c181529e560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dca9413-f4a9-4c20-bd6f-efa7abcca12f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf791d56-7bae-4007-8501-64a427e71a75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deaba8b8-2505-4316-bee6-0f311492effd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d867f5a8-e5d6-43c5-8e55-e132b4e2d064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2ee6d7-8698-4316-9907-5e766b4221e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6496858f-3075-4160-b101-094f1e7f43d2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f059bd-193a-4152-9f40-b5a003cda51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ed4ba7-f813-4f28-9866-33ae53bff744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "885cb7db-2bd6-41be-9fe1-fec342d2fe3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8c7e23-4f24-4e1e-b544-52631272fad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb4a393-fddf-4345-b62e-fccac725b157",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859a1561-92fd-4f67-b8c6-b4d9a92e5f9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31449d0b-6a96-4b77-8eb5-0a90ec6b4d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fd24cb-03c6-4f22-84e0-592b87d5d4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f10825-9dff-403c-8e7c-41437bf0e7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd3c59c-0ea7-48b3-9f5b-746121d04f2f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6ae2db-4ce9-42dd-b77c-93fd62574296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a065cd-8d6e-4073-b5af-9f92bce45e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1c96b0-127c-4d7e-824a-16254b9a784a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620154ad-3634-4fc7-b468-fde4c1a15a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18abdddc-4acd-4877-979a-bb416a3ccd2a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653ef55e-2a5b-45d0-8949-a72b539d194a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4600df5c-3011-488c-9914-137c30eca0c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a92ab1-48f5-429e-9600-507c288b8e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1342839d-79a2-4b23-83c8-f4a4e01a19ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b33c1d-b2a1-43fe-a661-d5dbdebf9e25",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49e38ef-dfb6-4238-94c6-e07b72601c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b163d4b3-52b9-4498-90ed-692315aa81c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe0ae93-d065-4ecc-a1bd-7eaf2e0f06f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4812af3-0a66-4ed4-ab30-cce8153498e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efa4613-d061-427f-b435-47d163381250",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4b5295-5379-4d91-a090-0c05ed3b7643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fe54b4-2b58-4c62-8a93-ae99a496d633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af9a8de-4020-4bc0-b93c-252e5c37a177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad01a3e-3fcb-4889-94ae-cd3430f0c2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710cdb2c-1636-46c7-aa87-33defaf6319d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336a2f56-d1cc-46bd-b327-9ab3ef9af80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1054ae-828f-4c75-9e40-1c1db0b0af4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5855ae37-3995-4168-a06e-1b04f7c02cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279227c3-5655-4b2f-b8ca-184754d08805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28aa2625-7fb3-4d88-b537-ac3225aa39c2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb121cae-813a-48d6-87c5-b063550a0d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfccb500-8c07-45e2-b90a-3455f50e9031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e96b41-f98c-47d1-b450-3c12082fb90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad021c8-de3b-4d37-a566-2a1556ec0b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4431417-f932-4736-b486-931ab38710f1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c682d7ef-5f02-457d-9315-f37f179b7652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e515e04-4176-4f0e-a973-479bd80dd8c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebe2f5d-3d14-40f3-883d-cce91b8fcea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc7f3ad-ae73-4d36-9d55-3d32a0715997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c695c22-cc46-46dc-9316-e6a05433364f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8cec8a-e099-4a7c-be43-4ff7af00737e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edfa5788-d62b-42c9-aa99-bc50daa4ee2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42770b4a-0103-4cd1-b865-bcf9df198853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb56396-6dbe-4ad2-ab92-26ca6c2b8e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70eea155-2a0c-41a9-8ffc-eae745cf3a04",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80d2e0d-b4f8-4034-b5ac-5291357a1730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d6acdf1-2779-43e8-93c0-6c2188fbb10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45ae17a-62a0-4d62-b8a8-5e5b210fbe25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e6df2a-cfb2-4a53-80e1-14a9edf4bfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f13a7f-bca6-458b-9b44-cd7a93cde0ed",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3373db-cca5-4f96-ac56-3a57c8f6a7fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00c3e780-0ce3-47aa-9919-63090c00e085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da4992b-1c3e-4d1e-8d63-c8bb6c66f4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5bd0bb9-93e9-4e84-a272-f72642bd3c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee6fbff-6418-410b-a368-e4795b2e1d8a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4080d9a1-20cc-4f56-8ca6-07d47e16458f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba8b7ad-1843-423c-b9a4-ec4f8e39b96c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a3e886-1228-4fc9-b71a-43d236cc7564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1e6989-4536-4693-ad62-eaa6f8346b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b7d385-2a85-4d9f-bf06-d08f37048a84",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d757e709-d265-48db-80bd-38938fbe3646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94dae543-0b89-4f83-8017-e566d94a5a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83ca482-58ea-4870-8345-e1767c1c98de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cc353e-db37-4897-bee3-c7ce0790ee06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735e5bcf-6557-4084-991f-f4599cd1238c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a42eb60-a5a6-4af1-b7f0-43e944ac6003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc60aff-1424-419c-9e30-5c12c3132d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e537db2-8e6f-4f5c-bcd8-687a148e9e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b110cd-6916-437c-b136-9074728d0979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b250c1d-d8cc-4d20-8f83-2bbcd4703f18",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9380e301-f437-4b48-a3ae-63a9667f15bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f3f231a-4ce8-4290-8766-fde784c72ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1346bc5-f929-4932-8798-777c3cd47c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb08a49a-4a88-48aa-b576-a1d2709df656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9824da7-4a88-4fad-a76a-9243ff84111b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6919fb58-e8c0-45e6-81a0-3f6c9423eabd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57b81cdf-934d-4356-b19a-3cabee2f124b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c895e793-0f7b-488c-a971-4d5297d34cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bef449f-945e-4cff-a38c-e92abddcf1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d06320d-5663-4072-a395-f216a25dee9f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa5532c-a397-44c9-973d-af694d35799b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2f46ef9-3b6e-4985-b538-08e3c215c74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d279d5b-03b1-474e-a2eb-4f3136f57a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f5c392-186a-4a29-be5d-023b97212078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d79b270-6d35-41b8-b92f-4a958fb85caf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e2d73a-efc2-49eb-9a9b-967f6370343e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4ab7a71-400b-4765-bca8-257be4119195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e17b6ab-ef34-48ef-82bd-e8a9fa931c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fab8d2-c359-4088-b4f3-ff5af0689925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114a8f27-fe45-42fa-a2a9-9c4e74e19630",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a60e189-0aa4-4e03-9b3b-b0974456dbc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82d19a07-7358-4d01-99bc-3050f9aa4388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c96b8a-411f-459b-a924-7d92c19ca4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfae946-8a3d-4910-b71e-8e035f1c45f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e006ba6-e9e8-4d9e-a25b-04950bf791ee",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcffebb-1d3e-4a04-ad84-edf7cd8ce980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec7f079-6e78-4098-925a-af369d85be26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ae1622-0dc5-4356-b993-716cd137f9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f84245-0957-4d40-a559-7385eade5567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822d334b-46f5-4699-b4f8-c0e97056fe4d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb190bd6-f404-41cd-9c76-37d25c4dbeac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81483c16-f6b6-41cd-ac77-22a755a1b5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb44a15-5c8b-4bca-8ee4-409b97f384cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e504ca56-908d-4bfe-b6ac-6b74e50ce50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef412dad-8fb6-4ebb-bc4e-56d84c00ed7c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb89ecc4-acb9-4c7f-8f5a-1359aae88f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15a694f-5335-4fcb-b2fd-b9d31f025b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c6502a-71f0-4e47-be8b-16d69acd081f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0a4cd3-2c76-46d1-af93-b90b1ee4bca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca426c78-fc5b-4b83-a6fd-2c44baecfd71",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b74cefd-322b-4583-bfc3-5eb21b032758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94cb2013-669c-4250-97b0-da8938e5c019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aea3b6-e4d1-426a-bfca-61a91327e3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa99a97-7e34-498b-aeae-bd6fad84fb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539894c7-7e11-451c-8e4d-444ea42be88e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dab5e74-47f6-49ee-9000-85c855d168c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a011a76-e077-4b00-a7a9-baa3a5a83b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2f6362-fbf8-4d78-851d-6d4f5399a536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea2b819-f8a5-4e1b-9faa-c5843ea1f021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd80e74-08d5-44c3-9d38-59a4ce973bec",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41005164-dc69-4220-96bf-cb4275b5b660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b2fe5a-5ad8-42e2-b052-ee480f168554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66c4e49-c645-4a9b-b649-b491b1352c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3110da8-23ca-473c-b48b-de9a1d58138f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40825e9-548d-4f2b-98b2-9f77988773b1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72a9b60-5328-40cd-8d3d-ccae0a3d66db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8f9518-fea3-48e2-9040-22c8ceca46cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "791e2f54-1bc8-4743-b832-39286a3432ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac230d72-030b-4fde-83c0-9c8344ba2339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33eb222a-5dfc-4558-8f15-05b2ccfd9dc6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad1f27f-760e-46b1-aabc-6c6d2f126211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025a789d-0ff2-4c7d-b048-5c4d58c2146a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd80053-42c6-477f-9143-09412e03fdcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc0b9b1-d0cf-4b1f-9e1e-b9d9fd54cd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3131e1-1b66-4ec9-970c-c59c073e8e70",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb7bbd3-23d4-44b0-a581-6f9a5a1c2b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e89f015-0acb-4961-ad32-6d0fdc79d771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c60ab60-f181-4251-96a6-274f31e4a772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3737c1-e674-4e83-b323-928b211c1011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22da3558-4f17-4268-9109-0aea4aba96b2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc28961-1e0b-4da9-8358-eb5ce2f80f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba39aae-ca93-48b3-b3f6-f0523d7d49d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca70dedc-8dd6-4e05-bc46-e77b15353878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab9ab10-0f71-4a39-85c0-10b09024daf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08266816-9b21-4765-8d24-e308f05a0b24",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e733786-4fe2-4a08-bb06-6e3677453a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3dbd816-f1c3-4a69-8eae-6c558d53ef8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d726bc5b-6ae8-4b9d-a61d-81058bbec642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f5789c-37bc-4f62-9146-8283192f9f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f33a97-5b31-420f-a3a5-07f2fa458632",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62d13a7-04df-4cd6-af30-bf7e92f9ca6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6068f619-3614-4e86-bda7-c0f92d59da58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5046228-9c5a-4b34-90f6-ad5b5a3b161d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9117191b-754c-405a-8ab5-fc43004782bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4c80fe-4f44-427f-9059-43b1179f84f2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db13f79e-2637-495e-be54-b4493124840e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e5ee8b-bbc2-4d3b-87ba-224927aa1b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1428eb8b-5f4e-485e-a987-68eb3fba7e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9148f95c-921f-4d88-a41c-9c94c63ef0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25dd4c7-df0b-4d87-8f5b-875cf62cb699",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6330f4-1de7-40e4-a139-1e51f4d6f69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97f2329-af17-451d-aa22-ac302165722e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db9b92f-8b73-402e-b6f6-f20af2ee2037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415716cb-999b-4057-8c6d-494fd86120bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22fab07-9b6f-4537-9f62-e6c2fc38e806",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7439e6-c3e1-4067-adbe-93e8372313b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c81efa0-f775-4d74-bf45-68cb0ec04f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d5a776-e4c7-4aa1-892e-323776476444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a413a8a4-5a21-4eee-b156-ffee2eb3e763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24923fa9-a1cb-47bd-ae31-941504b7739c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340e937e-2335-4bd7-aeb5-210046861b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef6badb-ea81-4304-a847-7f541c5022c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad36c651-c068-4253-b544-8162dd29b2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c614b50-1221-4809-86c9-15d5034ab7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba2c497-2bc0-4e47-b056-b9f562985f55",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bd061a-0204-402b-9599-7e27214db068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2569031b-6aa6-40af-8c83-e70fca76800b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9c73bb-f11b-465f-9299-4b528af4124a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde9a995-49e5-404e-978d-2b8c3689f7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc41615-daba-4f7f-90a8-07b4f7ce0643",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fb534b-e0f5-40bd-be44-4c453deb45b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29d9141-a3af-4a86-8842-2357f962856b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2912e3cc-0f4a-4d89-b3ac-b2662290a1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78013d7d-bbfd-4229-ab72-5f252c00dc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cd3286-d696-480e-82ce-5e3edd689297",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eddace6-213b-4715-894b-6aff05c8fc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5cb0088-3f45-4433-a05d-956ff0a8497d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627268ce-e82b-47bb-8682-3cef91c60abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58032d8a-6c9f-4170-abac-7e2f939ff064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a75b76-0876-43dc-a611-f4db39c87199",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1b2c4d-9a16-430f-b01f-094b3e49d52a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e13388c-2821-4b2c-891a-4b7538660246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4f9dbe-3d02-4152-9a05-c82b82b8648e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb176202-0f8e-4038-af2c-3edd0be105fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68490234-fc31-48b8-b642-2b6f9530532a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abb39f9-1e97-494e-b33b-9a065a1552cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ec14e4-b8d4-4e0a-b906-e06bd468dadd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91457f98-be46-4f5c-94ac-e4af582e4773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8988a0be-ccf6-4745-9bac-7e76db5f4515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f134e4a3-aa2a-432b-b065-c060a00ec537",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bc9d0a-fe41-4f67-9840-ac8d2550fc66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669ab69b-72cd-495d-971c-f0c96b92f831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede72f6d-77ff-4960-9ceb-f0da7730ecb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a325fb0-4a57-46fb-b0ed-45a941ff74ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca501e31-00fc-4feb-9c30-c565089e7dd6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b9978c-ceb1-4afb-b5a6-538d6b3241ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff5af87-94bd-42c8-834b-575cf76e76b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31e1750-1444-4cbe-9ace-6653d0bde217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f4846c-c841-44d1-8ac1-7291fec23ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a2a889-79b8-4755-9994-6002a6029328",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05085e2f-7470-491e-96ff-46700efc8c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f3a465-faf3-4faa-8471-d5e6de1e9bab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7041291-064e-4ed5-b81d-9b45682f82df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a1cd3c-52ec-4187-8b57-e91cf7bdf705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431a0c2c-649b-4f0c-a853-7ced4fa4504b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2980dd3-64af-4b56-9793-c85068fecba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25b35a9-233c-47d4-a52a-1f0b6ae4c4c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a278b0-bbc5-4dbc-ba03-f67e262eac82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1adc0401-959a-4cf9-85d4-d931882ca93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd588679-bc8e-42ff-a386-8d77eb800182",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f472a16-0d6b-4fa9-bdf6-fd50711c8b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23ec0cd-2194-431f-a550-cba643d4b20e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1ab14c-2484-478d-ae43-2d89d6377a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1f7190-dd39-4cce-bf33-7667dddc300d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cd8ee9-448c-41ec-93e3-a74c8ee662e8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e702ba-4a66-46ea-bc2a-9b36324685bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7db6184-b07d-4b40-9f0a-f0b13f9f0f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c4cbef-50c3-494f-bdab-b62fcbcaedf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5114cadb-ce8a-4057-bf66-6f91b6dbaebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c14079-17f4-4fa8-8f0f-c17f861f9aec",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d357747b-8047-480d-8298-3afa736d2693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c76294-5f68-45ad-a4e4-a9f95f054bc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db87b623-07ed-4907-b9ec-537eae8e61db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc95221a-e7e9-491b-8280-42d3a38c9d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc5954b-5f1a-4153-b0f8-57cae7f1200a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fedfc87-33a2-405a-9574-5ea372315d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d75c9cad-a6b7-459f-aa82-0bfbd4675913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad636b4-cf1f-4b93-ba56-4c267a81c133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515439a4-6e95-4bea-9835-843c5280d0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c314fc5-bff2-4ba6-8bcf-e706dd336583",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87299f01-acb9-463d-8793-523d8c77af5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e856a68-94a3-42d0-95ab-0905759fdb1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6437b6bb-fdf5-411d-986b-e24c07a686a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a1ef6b-e7a2-4ecd-907b-83406d0a59e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5081dbe0-6e92-49d2-a799-c530e976c97b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e4d537-a8f3-4294-8841-9a01a8a60b0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ebb9c4-af14-4064-a819-32304da8b09b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7cde9b-9ea8-4f0e-b522-7f51e5c36f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170a862d-11e3-4ef6-a33b-583ba5541632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cd5d93-c7b3-4b67-b755-a46368eb3a2a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fb9ef0-2e08-456f-9895-4ab2f5a7a6e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26ced82-02bd-42fa-8906-71a051e8b043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a3e9fc-13f5-494f-8460-74b95a9fdd7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2697ddf0-7992-435b-8952-4beb6eeabf9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9900d762-28c7-4631-8026-1922afcaf8df",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d4a17a-c842-4c5e-afb5-9fbec8d63a46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fac46f8-33a7-43dc-a338-1202598868ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ee6812-f41f-4af7-b4f6-76c0dba0c7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0faf734a-306c-4c39-8490-50c82c2154bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e9b7e7-60b5-48f2-b006-e96e7b46fea5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02c8b08-aea9-4ef1-9942-c7a11a0d1f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c49f66c-b89d-49d2-8d87-f01a88c5a90b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6b029e-f820-429f-894f-6410df0cdfd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "584a7f46-fb64-4a51-83cf-08f9e8e3c9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7146c2-eef8-4cc0-b4a5-e3554b55ac76",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309a4985-592f-48c4-9801-dfdff7eb9a6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05f3a4d8-bf59-48df-9269-f057c762e140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f364d39b-fac7-4121-8c63-46864f795695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db783c8-9907-4f9c-a36f-1859d1ee9700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3c8f0e-ff57-4e66-bff1-4dbfda54f67a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf16c5b-209c-46d7-9ce3-ef1287b52e6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "017c8c09-62be-491a-b445-783fdf4655f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6c8abf-4bbc-4ba1-baa5-58b360e5dee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8e3765-9fb2-48de-af7c-b14705fa4711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbec19ac-b7d0-4e34-a2e8-efc7405bd09f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a2281d-fdde-4ed3-800e-659d670edf6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c42538d9-d438-4027-8781-961d5c094214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afc3b86-23b1-4b3f-8490-abf2d68da5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59e59ce-6c0e-48ad-830c-cc4bc239cbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9ee10d-7a52-418e-840b-a85219d75ed9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da465685-557c-4342-955d-243171121b37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e846af7-e655-45e5-a311-4d768a0c4dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379fc18b-6c73-4f42-8708-81417448a6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38cb71a5-48a1-45fa-aaf9-01ab5e1e20db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acf0c4a-fd98-4f67-9150-8a433aa80b0f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4d2f72-e4d0-4f7c-9036-3cb25a3605b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0349457-99a9-44e6-8256-ffedef8b3b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a08d90-b996-4c78-89be-866fa742ecac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ad48fe-abc3-41f7-b13c-100e7ea38463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8dcf98-75df-4820-88ca-bff680da9893",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ae6e6f-284d-4b6b-ae43-671b6b55b164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cec0a98-8c2e-46b8-9ce7-02c39b57440f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8356b91c-44c5-4e4e-97ac-f9ac6865dcb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961b1076-e2de-433d-8592-ee4ec4894838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de543d7d-5d08-4a59-9def-4f6b2c25ba22",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825d5860-9aa3-465c-acbf-932a37a5559b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88b4af90-7161-477f-ae5e-492f278fc2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf12b011-9e2d-4ad4-afa7-2fdce3f8773f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c04cc8b-b9a1-4ea9-b8c9-ceadf2f0fd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afaa627-21a0-4f25-ba6a-6ba38868af6e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f3d94b-c2d5-4df6-bd94-bbad27b52d5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43a44473-8cf8-432b-b889-849aae5f7ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e65ddfd-011b-45ab-918c-60c2e3d78a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e35abc-eac8-42a4-be1f-8a25a7d03ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3746c7-9a99-4646-8427-94593a6ee25c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d485c74-e74f-40cf-a414-f59ed67ee24e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81000f5f-f46a-4b76-8118-9ed685ecf378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e61842c-a8ab-4b1a-bb97-1d17e838c3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8e7d3d-bb4d-4e6a-ac5b-663ab80e6ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6d8419-9797-48a9-ab2e-89130ecf3646",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959e8432-9fc6-406c-83a6-dd5cf6ed416d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dddded2-780a-49f8-9c2a-a79043a89319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d5fb87-6d4f-47e5-8fad-ffc9a204bb8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0807a988-4878-49f6-a684-ffb9cd66ed0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7eeaa1-01e0-4153-b7ba-e60f907c332f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49a1506-2bd4-4807-8cdd-931a7618095c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a949d56-8151-4411-b432-2a0a41cbc046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccac6799-183c-46e3-9f4f-57692ac6340f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5a4c46-e06d-42eb-b176-115b3adda742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a389d7-31fb-4f3d-a045-d768074775e9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f69f437-9017-4e5c-8129-0751b9c3af2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dcf214a-c85f-44c3-9219-956b90284972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5825d3d1-90af-429a-9d59-828a9d1bbde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f5d4ff-4acc-41e4-926c-4332e1effaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251153c7-b297-434e-9aa7-525dbffa71a8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7daa5d39-f82f-45b1-a793-c35c627fbe2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fee0b500-1f54-4ef8-b8ea-0768142cc09e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ec316a-ea08-4ad2-a68d-6aa1b290dd9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4857b3b3-cfd6-44cb-815e-c493b1d8645b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd83f389-5978-4f1b-b0b3-d20224e0fb9f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfd930d-c83b-49e6-9895-f50d41b159ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9736beb9-7b29-41a7-ba7b-004691f0d11a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee12a10-4237-4f14-ab65-00c582d7edeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acaf4aa6-9d94-4447-b89f-db0befdd68d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e097809e-7780-4b4e-b95b-a99b67cc6098",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6896fa74-0f96-459a-a877-99e9d8b1aaa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c957527-c910-485a-a781-aa6e648ec5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2e222d-2254-4244-8f55-44cc4cc01c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0884755a-876f-4bab-a3ed-54fd7fdfccf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d148acaa-f674-4778-9e45-55228047c24c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb9e7e2-fea5-4b84-8c0c-8a2843752123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d91fc84-2caa-459e-b4b3-bc6d0d308ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d2d09c-0b03-41fa-aa7d-1baf1d6715fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d08b7b-effb-4d93-8e58-a9e945709307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f68baa2-5cb8-4367-9776-636e403d78da",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f22be50-620f-4738-908c-d8b011da306b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b650b78-d9a7-48c4-bfdb-f71f26c9ed44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6301591e-5ac9-42de-aa37-17f871fc74c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1af763-f590-47af-a8aa-6921e04a607b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf99ff8-720e-4df5-81e3-1311f77b2b16",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df83d02-a607-48d0-91cc-6f816a06c161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "092ada6d-b017-4adb-9553-63d63aabd43d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6110b3f3-77a7-47e7-8af8-c8b4dd2b8c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c580d56-67c4-49a8-b7fd-21ab7989a2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097995f3-1861-49c1-9f6c-97d09789d6dd",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a84f4d-a264-4ace-97f9-c7f0bfe0ed05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7db3da09-1810-4323-a277-edf2535ef091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2466627e-0566-4f4f-bef2-937266c5c507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5791d1c6-d196-45b2-9a2c-b96c7af382b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7369e09-cf13-4956-9137-c351b93d403e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292dfb47-ee85-4d65-8879-e47c5f9ee6ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1309907-2c1f-43d4-a25c-b22dcba3510a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb11cc4-a631-43da-9153-45a7158fa4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5b0389-f2eb-4d86-beef-7c75daa777c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd8e6dd-4f9b-48a7-8232-6f7809c40df2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0602fc80-853b-46db-9081-4ab65e57c843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7db5fea-0b94-4147-88a6-81b81a9308b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634bb597-33fa-4d67-a944-bca8b20b60b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de692a7e-0bec-4e32-8857-f119bc7c14bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f455b9bf-e052-42a5-a256-04566bad94fd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7af7f17-7b00-42bf-990c-c651b026d14f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aebfd19c-3b0c-4d36-8c06-9259fb8fbdd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a129368c-4ccc-40bf-a7ab-8826aa112db7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf38f7a-e65b-4707-909f-4c5bf6e44918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec7ec6c-f24c-4bd8-9410-c1fde4d96c2d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff3efcd-efbd-4ea6-afb0-a7a08d750033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75616025-4521-42cb-b1ff-12b4d387111c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244854f8-455c-472a-82bb-cd849e8b37da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cdf706-20c7-4ab9-8b52-fdc62c3a67ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1bffdf-5b40-4776-8b6b-bbd2fdb84684",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f069bf2-05fb-4380-9bcf-0142edb8b8f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16ab2ac5-7497-4910-81fe-215b714bc090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54285f8-3e33-43fb-bd02-273d42ffa0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdba03fa-c223-4e10-ad18-2964fa2ad30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5339fe7e-a129-409a-b79f-4fff60da4351",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1915ab-9ebe-42c8-a396-4e5f3f388107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "354b78af-8212-4cba-95ea-8fdac36ff3a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dca86e4-0f07-42d9-8ac7-7f74a5d617c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14329371-1082-42db-8979-a16deb1214e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c22bf1e-68fb-4aa5-8e1e-db0b336dfd21",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a4f104-84bb-4037-ac82-df81004819dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc053ccd-62bf-471c-a453-f1e0c575ae2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa2de5a-9f88-4218-bf7b-81dbc6945292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1584177a-222e-4066-b010-ab165bb16601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6067c28e-4bbd-4cfc-8eb6-f8978cb1a9a2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7151e676-57ad-4847-920f-ee10b13fa48d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d741a6b-8011-4a00-b2a0-bc5691145823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c25a2f-957d-4ff0-8dae-9d3e4a66d192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0e3dd7-3425-4bf0-ada8-fba42d629ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f30eed-fca0-43c3-a517-23b48d1464d5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31059c84-f7c3-4f4f-826a-6d51b96dca0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e51bb01c-0c60-4237-ba63-448ac882552a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f96abf-77d1-4597-98e4-53a1de58aa98",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3e4a0e-1df1-4d49-adf3-b5465d9e85ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27ab28f-67a5-4a12-910a-5cf8564e4f15",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2d6b7b-085a-43c3-986c-dd81caef07f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71ced994-e471-4cd3-80cd-30bf468d7562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1eafb9-cd3f-4e86-9ff3-d7804fea94d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d5b92c-7760-4315-9b97-a2a9b5a735ec"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77c2ebb6-f78f-42e5-9184-903dcfbb8042",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ccbea889-ebf7-40f9-8ef9-13659bdb47f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59703942-5356-4445-b901-a65ece15f5d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6daed876-ce92-413f-905f-059ea69be3fd"
                    }
                  }
                ]
              },
              {
                "id": "4ab78229-3079-49bf-930e-16bf6eae73b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "adff365e-8f4d-41a4-a5ca-74e2a41ed1a5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69f8109-826d-4c8c-b7d5-91c305ff094d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2afb8735-0115-43a7-92c2-38015b9240b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d32d86-60c8-4c2d-b60f-1a006735b3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a9c2760-5670-4488-a2e9-65ea730bf5cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5267bdbb-c900-4a56-baa4-c2fd26b1ab01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23c99f9a-8f12-4f86-a6c3-ec9ccd992fe1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "479b5f1d-a444-4b18-b267-7dee902cfacd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e85454ab-08f9-4c4b-813b-ec6a2b7add5b"
                    }
                  }
                ]
              },
              {
                "id": "48a0f3ad-7ec0-42db-b8c2-23c63058bc38",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5a5826c8-495f-4ed2-aac5-b13d74848ba1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7cd3e2-6de3-4541-8c9c-0e55b82123c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "115e3000-4619-4787-9b29-e6bc8d09352a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27535e93-e128-415f-81ba-82d986c86c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a30b03-02af-412f-894e-5992ed9dad80"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8b6807fe-d4fd-4888-b273-c2b521343b14",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2d9d449-7bca-4007-8ae3-a263e8d0a8ec",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19e2a7c0-3d94-431a-a6e1-8df945ec75cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "49d8dc43-dbd8-4e29-be19-c1bf98af72e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "398026d8-1c4b-4be5-9ec5-263d1d8ff0bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "660a197a-374f-48d4-915a-d3ce31c21410"
                    }
                  }
                ]
              },
              {
                "id": "00af66fc-5397-4a81-bfe2-6ed5944afa7f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad8f351e-6c6c-405d-be18-086b44976afa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cf13b259-1bff-42f3-90a2-902dc32f39f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "374f7869-c3fd-451d-b66e-d5014c331601",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fe4d5e1-4019-45af-8666-6555d49a9f02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1625d6c1-16fe-46e5-bd8e-ea5b9c62d704",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "30009500-8b56-4770-8ad9-b5a165030b0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7940c367-d979-40f3-878a-f92186745bdc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d535d84-e887-46c8-be7b-389add5a70c3"
            }
          }
        ]
      },
      {
        "id": "26abfa1a-2d8c-4951-af0c-53ddf7eb3c36",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b3af59f1-1b57-48b4-a500-525664326e3d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6f01ce2-9702-4674-b59d-8c5dd514fdc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67ca6c5b-92a9-476c-98b6-aa2382cb4643",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05040d7b-4ba2-4dd0-ad35-192322625162",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "48006bc5-25d8-4be6-a626-7b21dc164365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6a20c7-5622-4b8a-ab58-78527988f61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02558860-6357-424c-9e27-3d9d2396fcf6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f6e1eb6-40b3-4715-9de9-60f4370c49de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26599758-e170-4ec7-8ccf-115eac31925d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a8c4e5c-baf2-4e72-aeb9-97153a860212",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7689e445-7617-48d2-ad77-c7074e224df2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4ddfe8d-78f8-4b21-b89e-1b638a92d1b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b6c9500a-bbbb-4282-ab2e-761b5085615f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e37adf3-f316-4544-88c8-cb4c4530b5e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13102967-c0e6-457c-9cff-0c391a207174"
            }
          }
        ]
      },
      {
        "id": "def5db72-056e-4eb2-986d-090e65f64b0a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "97066dfd-4675-45f0-baee-f951553340cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d47b5340-ef39-4cc9-ba02-62d1f260be4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ff00d2e-07bf-4dd9-8a3e-21cee150e552",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d025b3c-c1d6-4b2e-9fbc-d85e0a55220b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c8f4f1d-54b7-4d68-aca5-fc0612b6f1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f2db46-9e91-47a5-8f54-d1855cf1bc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6fa62cb-b1ab-4bbc-b10a-7be0ff744c4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a5f7bed-58f4-4ef4-aded-9c9c0ce7628b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53512a16-c09c-42a4-a0b6-6021969ef437"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11a412b7-e545-472e-9d80-ab070e0e7f92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5451ef59-07a6-414a-8b83-89c91e5046a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbe74d39-bd86-4048-9af9-4a54bef56d5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "964de9d7-99d1-495f-a953-dce59644a3d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e35cf2a-a388-4b45-a584-455aec7a52ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c67e9a57-ddb2-4fbe-94d2-a909feaa3c19"
            }
          }
        ]
      },
      {
        "id": "7900101f-b57c-43b4-a4bc-0bbb18453acc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fd2e2507-23ff-40a8-a0ee-0c65124951b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2d6c2db-731d-4cb4-a19c-52719e165058",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46c2ecf7-e5f3-4108-9f33-ec94cb25b266",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322f68ee-3d87-45b0-b328-d39ed56ab371",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a12455d-7250-4c5a-abd5-aef0abb77e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c67ee8a-868c-4b2c-a733-1950ca20a43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06a9205a-4971-4d95-8408-fed94f22a8bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e45f705d-5505-4691-9b18-f6c2e13146d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c4551b9-cff6-499d-86ea-a09d7b8f748b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdf338e9-b5ab-4d0a-a5e6-47a9dc4320a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a627501-0e8c-4c94-bb2d-a30ef134abbd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f22a6419-1fb8-4bfc-a458-eb9ee4f29610",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a399e13-7e44-4226-8c0b-c009b27e82a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "768ac5fe-122f-4d5f-89fc-c05a2c67dd46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd0f2f4c-93e0-4ea5-b781-c325b0470c79"
            }
          }
        ]
      },
      {
        "id": "f2fc7c22-06fc-4829-8a6d-02f1adf1b56d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91adeecf-94d7-4e74-90ac-041ccf38ed74",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c9ce3cb-5982-43a9-babc-815f1f94bed3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "63be1510-88f6-4762-9b8b-7b619acf660d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2465208f-393a-42e9-bb7e-30f14cb3e3a8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab3382ae-d852-495c-8fa3-2b404aa80dd1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 795.6971830985915,
      "responseMin": 17,
      "responseMax": 7236,
      "responseSd": 830.37695062719,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688345424666,
      "completed": 1688345665523
    },
    "executions": [
      {
        "id": "c8a1b1db-ec79-4400-b419-28084ee14dd0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4139a1fe-277f-48a5-ad70-ca3b69dcc36a",
          "httpRequestId": "fd907c14-b553-4d34-9dda-507fd3d74dd3"
        },
        "item": {
          "id": "c8a1b1db-ec79-4400-b419-28084ee14dd0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ce32c30c-5a90-4e68-ad5e-3434087b771d",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 0
        }
      },
      {
        "id": "37e3fa0a-b161-44ac-9160-3ce1bc132f62",
        "cursor": {
          "ref": "25896617-c05a-4e24-9956-9b577fc0dc75",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "18830333-82ea-4f4d-8330-f276be2fb05b"
        },
        "item": {
          "id": "37e3fa0a-b161-44ac-9160-3ce1bc132f62",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5da3bef0-99c3-4751-be0e-ff1765cf0dc2",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "ef4d44ab-9d8b-4224-94cf-c4c21721742f",
        "cursor": {
          "ref": "d609c39e-3a6b-4ab6-8fc4-8c50108ae875",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f95a78d2-657b-4668-9407-27efb52d3081"
        },
        "item": {
          "id": "ef4d44ab-9d8b-4224-94cf-c4c21721742f",
          "name": "did_json"
        },
        "response": {
          "id": "7a9b3186-7cf1-472c-8888-6fa679bb4fac",
          "status": "OK",
          "code": 200,
          "responseTime": 1134,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcad8f57-8c7a-440b-aebd-463531e36e3b",
        "cursor": {
          "ref": "c236e346-7db1-4f8d-9857-c519bee9b303",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "282cbfe7-e262-47ec-a230-f9658801fce6"
        },
        "item": {
          "id": "dcad8f57-8c7a-440b-aebd-463531e36e3b",
          "name": "did:invalid"
        },
        "response": {
          "id": "3360b401-2f81-4d55-90d6-0fb450d6b7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcad8f57-8c7a-440b-aebd-463531e36e3b",
        "cursor": {
          "ref": "c236e346-7db1-4f8d-9857-c519bee9b303",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "282cbfe7-e262-47ec-a230-f9658801fce6"
        },
        "item": {
          "id": "dcad8f57-8c7a-440b-aebd-463531e36e3b",
          "name": "did:invalid"
        },
        "response": {
          "id": "3360b401-2f81-4d55-90d6-0fb450d6b7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d378466d-8296-4f06-bc26-266ba19c8c6e",
        "cursor": {
          "ref": "1958b283-5b17-4722-8a5f-be8bcaed5a7a",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "31196e64-b632-487c-be17-13b407252821"
        },
        "item": {
          "id": "d378466d-8296-4f06-bc26-266ba19c8c6e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0066a093-59a1-486f-a9c8-189f54ae1bbb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 840,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b901bff-0e4b-48e4-8ca6-a9fa30fbb5de",
        "cursor": {
          "ref": "4e7c8072-4f33-4660-9c8a-3dfd3cf3352d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "094ab8ec-5ffd-4377-a4db-ed6e8bca4668"
        },
        "item": {
          "id": "6b901bff-0e4b-48e4-8ca6-a9fa30fbb5de",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d8c34e80-f7c3-46f5-b880-d9863a437d73",
          "status": "Not Found",
          "code": 404,
          "responseTime": 763,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eff880a-b106-4cbe-9879-4596b0ad7e85",
        "cursor": {
          "ref": "dd0a8d30-4436-43c7-88d8-b22ab25e41e2",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e7654ec8-81e8-4c8e-a8e0-146ab5de0f11"
        },
        "item": {
          "id": "1eff880a-b106-4cbe-9879-4596b0ad7e85",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5a49e3a7-731c-438d-b457-f50ba7ed554d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae86912-2f1e-4e6c-bd16-89fc9faa8104",
        "cursor": {
          "ref": "ecf4eea4-d9d5-48bb-88f3-5b30fea96abe",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "294dd2ec-a12c-452c-9a65-e779372d5145"
        },
        "item": {
          "id": "cae86912-2f1e-4e6c-bd16-89fc9faa8104",
          "name": "identifiers"
        },
        "response": {
          "id": "6cc04cac-f20b-41cb-95eb-7678fa4e237e",
          "status": "OK",
          "code": 200,
          "responseTime": 1695,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1b880b-0258-4f57-8403-013bf763e327",
        "cursor": {
          "ref": "4ed3ff18-5aa6-4f77-a82a-b19f99bceca9",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b42d8d08-2b09-4309-b2c8-09d79e7ab007"
        },
        "item": {
          "id": "0d1b880b-0258-4f57-8403-013bf763e327",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9a59321d-c7a8-48aa-873b-ef53ab4cbb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34120c6d-35c7-4ea5-b410-de6ea72d53ef",
        "cursor": {
          "ref": "c44adf89-e5d3-48f9-ba93-5a974f6cba12",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bec78e4d-d8f4-4f3a-a4a9-59fe05316018"
        },
        "item": {
          "id": "34120c6d-35c7-4ea5-b410-de6ea72d53ef",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "843270f4-804b-42a0-bb2a-b5e6ceffe159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9661143-c598-4342-9135-63c3f6b93461",
        "cursor": {
          "ref": "1266b62b-ba66-4b18-a4e9-7a54d06fff09",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ca25b429-d717-45bd-b565-ae6f7b24dad1"
        },
        "item": {
          "id": "e9661143-c598-4342-9135-63c3f6b93461",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "aea49cd2-798c-4981-b05e-5545994577b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5a5562-ffa0-459a-8070-c02222080dfb",
        "cursor": {
          "ref": "628bf985-f372-4da9-9946-bfe62b95da8b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c7ba58f8-4402-4317-94e7-850c8e42ec78"
        },
        "item": {
          "id": "1f5a5562-ffa0-459a-8070-c02222080dfb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "576c0d43-2553-4eaa-a690-db6303c6c339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa549822-7e19-4c37-bb94-48078ad41f13",
        "cursor": {
          "ref": "444b8460-06b9-48b2-a0eb-1ddcc9b328f7",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ea921810-f2c5-4cc0-8152-6ceaead4275d"
        },
        "item": {
          "id": "aa549822-7e19-4c37-bb94-48078ad41f13",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "603fc26d-50f5-4d56-914e-74d0cf4d7c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f0ad8b-8045-4a26-92fe-5c5f0b8466b1",
        "cursor": {
          "ref": "0d41f8ca-05be-4419-8133-45231edacdd9",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "de947a5f-da25-46a9-9d6a-90b175074e42"
        },
        "item": {
          "id": "10f0ad8b-8045-4a26-92fe-5c5f0b8466b1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "dd8a2789-495d-4a93-ba65-e10755ae2423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69ac835-421b-446b-9527-cee6649995bf",
        "cursor": {
          "ref": "3e28b0a0-6188-4100-8578-0b3a4f24d50e",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "42d65b36-2f05-4007-848a-bb5ffd5b0ddb"
        },
        "item": {
          "id": "b69ac835-421b-446b-9527-cee6649995bf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8bc8e754-80ac-4dfa-a6eb-65a0fb32a0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137fc005-2293-46d5-b833-5d3007c6ccb1",
        "cursor": {
          "ref": "c090fb97-b990-4daa-a9cd-43cfc10d1b4a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a1cf26b4-5c27-425f-b86f-061cd5bfdc21"
        },
        "item": {
          "id": "137fc005-2293-46d5-b833-5d3007c6ccb1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "718d9188-42b7-4dc9-a01a-39c018a89d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a13d30-f8d9-4574-a3b2-6306257dc622",
        "cursor": {
          "ref": "fa68af87-3d3d-4b1a-ac0a-d80055e60320",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3918961d-f47f-4964-a172-3fc4a484e221"
        },
        "item": {
          "id": "b5a13d30-f8d9-4574-a3b2-6306257dc622",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "467995c8-bd2a-4a3f-9f5f-37bdf8b33ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ed385f-a3a5-428a-a56e-830e063bd153",
        "cursor": {
          "ref": "5d696711-8a7d-4592-8f9e-77cbac635b05",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f2e4bf6d-7c67-445a-9a1a-6b0f0e3b9c87"
        },
        "item": {
          "id": "c5ed385f-a3a5-428a-a56e-830e063bd153",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "73f67c9d-6700-4b72-bc54-f865416055d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eaa7a24-6602-4292-855f-6e6cf31059ff",
        "cursor": {
          "ref": "81b77524-e768-4b32-95eb-d74a73351b4f",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "46137680-7213-4d74-8eb4-b6d9e9f36d84"
        },
        "item": {
          "id": "4eaa7a24-6602-4292-855f-6e6cf31059ff",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8b59f643-f05d-4082-ac46-1e4faedbaa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289180f6-8b5c-43c8-a0ef-bbb8c1455338",
        "cursor": {
          "ref": "b1252abb-b7db-4f01-ba0e-99792a0de727",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0ebecea0-8dba-40c9-9d72-21fa6346e2e9"
        },
        "item": {
          "id": "289180f6-8b5c-43c8-a0ef-bbb8c1455338",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "72dc6197-38b2-4a2c-82b6-29eee217c6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343e0709-f609-437e-a4a3-9ce3ba44bcd1",
        "cursor": {
          "ref": "6f61a81a-5a2b-44d3-b179-e35f3ebf8140",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e5d756f8-fd79-4e3d-b37c-c403d745a436"
        },
        "item": {
          "id": "343e0709-f609-437e-a4a3-9ce3ba44bcd1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "94d6c2e5-bd14-43b0-ac64-1b4cdd5a6e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1118,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2aa836-9a56-4027-b42c-610a222b6856",
        "cursor": {
          "ref": "89697341-589b-4de2-9ce0-3eb52df69a79",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4e889670-89d9-4894-9644-7f868a93330b"
        },
        "item": {
          "id": "5d2aa836-9a56-4027-b42c-610a222b6856",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3bee0cb7-0543-4b5f-ad23-1c1e316e2e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ed08b5-3f19-442a-b609-f9a842076186",
        "cursor": {
          "ref": "72da5d7a-42b4-4fb4-977e-30b12b36e259",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "81a4d8a1-8ec2-4067-8ee8-bf4edc76cf50"
        },
        "item": {
          "id": "42ed08b5-3f19-442a-b609-f9a842076186",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3220d470-6d6e-4238-9679-fc8eb9f47665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9b13e8-1e32-4c1b-af53-a1a87e043b25",
        "cursor": {
          "ref": "830a3073-6001-4b23-863f-92f3f9be226e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "26fe9a0a-98a3-4c36-9459-e04633d88f56"
        },
        "item": {
          "id": "dd9b13e8-1e32-4c1b-af53-a1a87e043b25",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c34834b2-5276-4ed4-827c-37910da224c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3f3333-82f0-4c34-9b68-3cc71d52e6de",
        "cursor": {
          "ref": "69dc1f23-fa9b-4730-b48d-594bc6e7da19",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "48b2e322-d2d8-42f4-b8e2-86b1011c4429"
        },
        "item": {
          "id": "9c3f3333-82f0-4c34-9b68-3cc71d52e6de",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "41bb1308-3ec4-4e75-bc58-2f4132fb1cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bccdab4-1217-4d4e-96cb-3748dff0d263",
        "cursor": {
          "ref": "fea4c4db-d6b4-4286-90d4-416ebd4ea964",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "634b646e-4558-4bfb-b8cc-f0aa819c33ce"
        },
        "item": {
          "id": "4bccdab4-1217-4d4e-96cb-3748dff0d263",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c7ec7b79-0563-406b-9efe-206538ef0755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04457d5-ee0d-4d81-b4c7-f1c7bd4aa2f0",
        "cursor": {
          "ref": "174905b4-cb8c-4f01-b369-f0cf0d7fe8a3",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "77ef7ca3-d331-4783-8004-fb2f75778619"
        },
        "item": {
          "id": "e04457d5-ee0d-4d81-b4c7-f1c7bd4aa2f0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bd5bca19-6f7d-4291-aee8-5b7b744fdc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d48dbef-b049-40c3-a789-2b6116b4df27",
        "cursor": {
          "ref": "e8412c17-ebf0-4f79-b891-e04076882587",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8eff7eb6-ee3d-4dd0-8e3b-d298d40e8f33"
        },
        "item": {
          "id": "6d48dbef-b049-40c3-a789-2b6116b4df27",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fd979c9b-e3fb-429d-8315-08efbc31fb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c5eb89-4600-4b71-abbf-9d962d1d5ab6",
        "cursor": {
          "ref": "b0bfa484-d9de-4072-971b-09094d9d2343",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "807530a2-3730-47b0-aa3e-2c6910efbfc2"
        },
        "item": {
          "id": "48c5eb89-4600-4b71-abbf-9d962d1d5ab6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3ee9d600-c1b6-4f46-9d76-0823b476d17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef06e15-d763-4016-8439-3113527ab302",
        "cursor": {
          "ref": "188aee54-fff6-4400-ab5e-ef93f7c7815f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7f4355d0-b87a-4cf3-a6ac-df0aac4a2357"
        },
        "item": {
          "id": "4ef06e15-d763-4016-8439-3113527ab302",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d0df6359-3d92-405e-bfb8-0da76085afa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbe5bdd-c45c-4358-9142-5ebf728d6057",
        "cursor": {
          "ref": "634d9103-9d88-4e18-b973-13a29b530214",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4b3d4842-ccad-4bce-bf65-d48bcf80f10a"
        },
        "item": {
          "id": "7bbe5bdd-c45c-4358-9142-5ebf728d6057",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dbdabb57-d9ea-4851-9fa7-4f002de46cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0fe81a-5ff0-4a2d-9d3f-3164b173426e",
        "cursor": {
          "ref": "9f168444-409b-491e-b34b-0c18c1a50a19",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7f868217-7beb-414d-b1f9-4887082043e5"
        },
        "item": {
          "id": "7f0fe81a-5ff0-4a2d-9d3f-3164b173426e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c34ebc12-c23c-4318-80c0-ca4fa4d9b1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee19bfdc-f859-4e17-9bb2-ba618f5e6d55",
        "cursor": {
          "ref": "43670fa7-a7bb-41cd-84bd-8c5b5eb50663",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "905c81cf-ecb5-444c-ba69-5301086d6aca"
        },
        "item": {
          "id": "ee19bfdc-f859-4e17-9bb2-ba618f5e6d55",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2a6e4458-80fb-4caf-8f80-870278aec390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4429b9-455a-4351-b5cc-4bab3d40295c",
        "cursor": {
          "ref": "a8558064-c6d3-4c05-88c4-9c2ada37b499",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0b6c1805-e7af-40a4-acd6-5b2dc33adf11"
        },
        "item": {
          "id": "be4429b9-455a-4351-b5cc-4bab3d40295c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "830532bd-a58d-4a29-a591-334149a4bfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60d6117-faa5-4f12-a07c-65d19c4933f5",
        "cursor": {
          "ref": "032a2a23-5912-45ec-9579-4af4676cec83",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4e25676b-177f-4275-a676-610ed8649aea"
        },
        "item": {
          "id": "a60d6117-faa5-4f12-a07c-65d19c4933f5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1de3ac48-3402-4dad-bbf8-b3f3bae7e317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e634a9-28bd-44ab-971d-ab2aa5efa723",
        "cursor": {
          "ref": "193f1b8c-8628-4159-931b-0f97354f2035",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8fd61df2-27b0-4b91-9504-9a79806bd6e0"
        },
        "item": {
          "id": "47e634a9-28bd-44ab-971d-ab2aa5efa723",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d8689de0-c945-4b96-9569-86d49d2b0df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242642ec-fb80-43f4-abf1-f0806a89d581",
        "cursor": {
          "ref": "52ea22e1-e539-4ad6-8091-c3c23b0c1011",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cf477c69-ee60-4093-8369-5f75192efb10"
        },
        "item": {
          "id": "242642ec-fb80-43f4-abf1-f0806a89d581",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4be5d02f-2a20-427c-af5f-842c8ce9c50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dec4d31-f307-4edf-9622-f5a0f2306a2e",
        "cursor": {
          "ref": "e57cd4b7-7779-430d-acc0-00fd5116584c",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2a321739-89ef-4c8e-b212-e57d73689d28"
        },
        "item": {
          "id": "0dec4d31-f307-4edf-9622-f5a0f2306a2e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ba324caf-9e01-4fed-93b4-fefb9820eb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cc50c1-6dd6-4497-9b63-8aa2a33f9e8b",
        "cursor": {
          "ref": "1c71cb39-f57d-4d04-932c-70d7457cbd9b",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f56716a8-9ad1-410e-9dfc-1b654d14bf50"
        },
        "item": {
          "id": "23cc50c1-6dd6-4497-9b63-8aa2a33f9e8b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c74f138e-2ebd-4d2c-ad76-fb78d21f6f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293f3daf-059e-4fa1-a55d-3eb5cfb2d8d7",
        "cursor": {
          "ref": "fdbffead-25a9-40a4-ab35-3eeca57e257c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "672def4a-f3a8-4545-b272-2fe4563e19d4"
        },
        "item": {
          "id": "293f3daf-059e-4fa1-a55d-3eb5cfb2d8d7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "13fa33e9-e450-4f19-bf2a-f45dc27430e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bc3c60-a1d1-404d-ab4f-672ed61115ad",
        "cursor": {
          "ref": "e3963fdf-e8d1-4ff4-9562-14800a2e6af1",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8642256a-0b73-4034-821e-3200e02f218c"
        },
        "item": {
          "id": "69bc3c60-a1d1-404d-ab4f-672ed61115ad",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "92f92534-9e1d-4112-8713-210a497e1cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a772bfe-974e-4fba-87c7-209ab3bb0a2f",
        "cursor": {
          "ref": "047623e9-efbf-4f95-9270-401dddddd056",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cf07ff7f-124f-43ac-8c00-0be9360e1d29"
        },
        "item": {
          "id": "0a772bfe-974e-4fba-87c7-209ab3bb0a2f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fd2f0383-ba8c-44f1-aaa2-bcec2e0bfeb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db826e56-61bb-4907-9e5d-cd434c8b3a58",
        "cursor": {
          "ref": "f4009243-21f4-4a5e-917f-0a516cc1e43e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8e970b32-2514-48fd-b56a-93c07478acb8"
        },
        "item": {
          "id": "db826e56-61bb-4907-9e5d-cd434c8b3a58",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "452bfb3f-797c-4137-90d0-5f11e58e0fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114b15ae-9aba-439b-bb55-df911ae8d385",
        "cursor": {
          "ref": "05d7304a-c4a8-4653-bad3-db8d55d35403",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "906259ab-ce2f-4b6f-b0c6-57930b8705fd"
        },
        "item": {
          "id": "114b15ae-9aba-439b-bb55-df911ae8d385",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6dc75028-3485-43bd-954d-c4f8110eaae8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 999,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c532cef0-9712-484a-b350-ea256dec5043",
        "cursor": {
          "ref": "70d6bba8-545a-437d-9592-3f38c4f0489c",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b2a3b7f1-35b8-4609-a6a0-bd5da26ab77b"
        },
        "item": {
          "id": "c532cef0-9712-484a-b350-ea256dec5043",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "81d2bb35-b573-432a-84b2-78febc03edaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b36240-1cf8-4c3f-9cd4-d0d5ddb0d74c",
        "cursor": {
          "ref": "036a1f48-ecf0-496f-9141-2c8a83558497",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b8326943-9275-41f5-a683-dc4130610e00"
        },
        "item": {
          "id": "e4b36240-1cf8-4c3f-9cd4-d0d5ddb0d74c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5e4727b8-308b-4a0c-b1d9-7ae810a93dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ddca50-cd6d-4814-9d00-ba5ad5098063",
        "cursor": {
          "ref": "4ad62773-82f9-4f93-af5d-2a2690738f57",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fed104f5-eda8-4061-96e0-76ea439d9746"
        },
        "item": {
          "id": "f2ddca50-cd6d-4814-9d00-ba5ad5098063",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "08bfcb47-2996-4600-b7bd-47c29c9b3c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e267e03-c5c4-4149-b5cd-1175dbd5f726",
        "cursor": {
          "ref": "7160a8d3-22bc-44ba-b9ce-2e4fffb39ca8",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d9a842ae-365d-4ca6-b19b-3161cca145e0"
        },
        "item": {
          "id": "2e267e03-c5c4-4149-b5cd-1175dbd5f726",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f408a224-9165-4775-b865-cd590b206ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2aed42-6bce-4dbe-b2c4-3e835044c58f",
        "cursor": {
          "ref": "69c73c93-72b2-4346-a25d-dd693d520225",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7cd03ff0-7edd-425e-a77e-766eb36301c9"
        },
        "item": {
          "id": "1a2aed42-6bce-4dbe-b2c4-3e835044c58f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "49d2405d-0747-486c-8f9e-a12bdacd622d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f543d9-5a42-4533-aab4-45dd1c744e3a",
        "cursor": {
          "ref": "4409ec42-8b88-417d-8cba-e0f60a52a42f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e3d89fd0-a6e6-4b96-bb18-97951a97729a"
        },
        "item": {
          "id": "50f543d9-5a42-4533-aab4-45dd1c744e3a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "70e53b1a-5822-40fe-bfaa-d25276044137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ca17ba-bff0-4974-9e19-f7da8e62d854",
        "cursor": {
          "ref": "9dde9e46-15a3-4c60-bec5-0d1761328ea8",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "af56cf30-79d1-4149-8c6b-94bf9d25a78f"
        },
        "item": {
          "id": "36ca17ba-bff0-4974-9e19-f7da8e62d854",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "02be8e06-31c8-44fd-9998-2a24cbd6b821",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 936,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0dbead-6121-4127-9941-84dabe14c08d",
        "cursor": {
          "ref": "8ad8cea2-24bc-4906-8ee7-b7903431abec",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cd8f4154-7e66-42ea-9b48-f95d799fb6e7"
        },
        "item": {
          "id": "ce0dbead-6121-4127-9941-84dabe14c08d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "27d07754-6b15-493e-af83-0a8495adb548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25b9117-986a-4326-8dc6-56e81b3e0945",
        "cursor": {
          "ref": "203971f2-ab43-463e-84d9-b0ba3ada16d8",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "759b27a1-a280-4c96-817c-e01a073bb37d"
        },
        "item": {
          "id": "c25b9117-986a-4326-8dc6-56e81b3e0945",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f153265a-7406-42ae-8170-4dbcf6654772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae721b0d-a8fa-4500-b1cf-4503b3239039",
        "cursor": {
          "ref": "620fa881-4ce8-4699-ab46-e0bba016a915",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4e06bd03-122d-45a1-9f89-65ea5c80c402"
        },
        "item": {
          "id": "ae721b0d-a8fa-4500-b1cf-4503b3239039",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8b474cbe-a1e5-41da-9b1e-622c263a4895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de63ab3-e9ff-43cc-8b3b-3bef77735baa",
        "cursor": {
          "ref": "2525c6d3-1105-48c4-b172-adfb8e41e0c4",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6551cf5f-ceec-437f-b776-5713856cbf50"
        },
        "item": {
          "id": "3de63ab3-e9ff-43cc-8b3b-3bef77735baa",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ffe84492-7a19-4e97-983a-f14d6b3c54b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7ad969-359b-437d-b05d-d1db7b339c2a",
        "cursor": {
          "ref": "3a63a4d8-948e-4cc2-b5ed-f5cd51c4ed3a",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cb556aec-2757-4960-ae80-ae08e0cf3437"
        },
        "item": {
          "id": "6f7ad969-359b-437d-b05d-d1db7b339c2a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cdc9b739-24aa-4cc4-8041-9018347b6aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f636b1fa-0ab1-47f6-8cb0-8262404ae5e1",
        "cursor": {
          "ref": "63f37133-436a-4f6e-adc9-42d2e8135326",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9f1f995a-12c3-4a7d-8ea2-a177bc818a6d"
        },
        "item": {
          "id": "f636b1fa-0ab1-47f6-8cb0-8262404ae5e1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4a33b8e8-aa13-4ac7-bbf7-3f90dada296b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46db18a0-ee68-4ba3-b225-47713e3834d2",
        "cursor": {
          "ref": "864c6355-12c4-4393-8883-261500459e40",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1888b495-cb47-4026-a50c-48a41b9ced1d"
        },
        "item": {
          "id": "46db18a0-ee68-4ba3-b225-47713e3834d2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e42b7d05-3fe0-4baa-9eee-53b112ecbe87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b2bde9-d20a-4670-bc3b-01960aeec175",
        "cursor": {
          "ref": "73d8d34c-0bf2-4dd9-ba0b-0a3bbdfd8df5",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bd4e100c-ad2c-42c2-8479-9b26d7cd12f6"
        },
        "item": {
          "id": "03b2bde9-d20a-4670-bc3b-01960aeec175",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1a9168dc-f8f0-4f8c-97dc-05ca03af817c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b30a427-0f3e-4a4f-8836-0fa1b1d883b6",
        "cursor": {
          "ref": "345b05fd-9a39-40de-89a7-31b8f8434085",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "18c42c76-e0e1-44f6-92a1-649af8e91bb9"
        },
        "item": {
          "id": "4b30a427-0f3e-4a4f-8836-0fa1b1d883b6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "22e8101e-d2e0-43ff-8998-18644a59c319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe190267-0639-46f9-9c5e-b0be84425a84",
        "cursor": {
          "ref": "61146b1d-200b-4251-98e4-eaa6df57597f",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "00446e8c-1a54-4723-b762-e6b9ce8b741d"
        },
        "item": {
          "id": "fe190267-0639-46f9-9c5e-b0be84425a84",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ea9945f0-736f-4eb1-ac50-6fa52122abf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123b6250-ed79-4b19-b49f-cd260f8cc991",
        "cursor": {
          "ref": "33aa5af7-5176-4b90-9898-03715436dac5",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c0432246-c53d-4cbe-8ade-e06a942b5c1f"
        },
        "item": {
          "id": "123b6250-ed79-4b19-b49f-cd260f8cc991",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f2efea52-f7f5-42dc-af0f-62f41d109916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cef3247-8b32-4ab1-9592-6aeec6e8b1ce",
        "cursor": {
          "ref": "7573bbff-f46f-4a54-b56d-9c4fa1e4f6c1",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "76e5820e-dbdd-4437-b60a-6250fedd26f2"
        },
        "item": {
          "id": "6cef3247-8b32-4ab1-9592-6aeec6e8b1ce",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4b521658-0008-4126-9ba5-a72705f4975f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd01920-e2c6-4a79-b78e-f308d88f817b",
        "cursor": {
          "ref": "d7ba3641-7d63-4ecf-b9e2-f30db80aee36",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "20a533bf-99fd-4927-9614-3a9af92b6409"
        },
        "item": {
          "id": "4bd01920-e2c6-4a79-b78e-f308d88f817b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "44e4cf7b-3a0f-4ea7-b040-5a9bc2f70a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fecd14-f148-4c5f-81e3-e9f1c1a2db1d",
        "cursor": {
          "ref": "98c77ce3-2143-466b-a477-681c0670ad0a",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ff0f730e-c8e5-4473-a8fc-8b8ba92154fb"
        },
        "item": {
          "id": "58fecd14-f148-4c5f-81e3-e9f1c1a2db1d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "90ce65bb-b0ba-4ead-beaf-c35fe29a9bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e85077-ce7e-4754-acb5-c03cf8958e37",
        "cursor": {
          "ref": "32b248ee-5a34-4c05-8f9f-5c161aea24ea",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c7b87bf1-c948-4380-a179-f1ccce10acd6"
        },
        "item": {
          "id": "57e85077-ce7e-4754-acb5-c03cf8958e37",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "69efdcdf-a788-4198-b7f3-c4d98b68b590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c39cbfd-2d0a-40c7-9ec8-e21e63faa443",
        "cursor": {
          "ref": "3d695aa9-ffbd-4b74-9e4f-b38cc67ef3e2",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cf31e209-b539-4676-aee8-ab7b00ec2d6e"
        },
        "item": {
          "id": "2c39cbfd-2d0a-40c7-9ec8-e21e63faa443",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5639bced-2344-441e-a1c6-397086ccdc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce60d506-7926-4e7a-be9c-975e2c314fb1",
        "cursor": {
          "ref": "4212b15a-d3a1-48f4-990d-1ca94585f8ae",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2e93452c-4eff-4e79-8854-bca54e1e8290"
        },
        "item": {
          "id": "ce60d506-7926-4e7a-be9c-975e2c314fb1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6abb6823-a03c-48f9-aa99-0c945f02cfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c64d6a-fa52-4c20-a8cf-38973212ef48",
        "cursor": {
          "ref": "aaeb7875-b592-4ebe-b23c-c36bb9a76436",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fb30675c-39d1-4818-8db8-8dd017660c2b"
        },
        "item": {
          "id": "f0c64d6a-fa52-4c20-a8cf-38973212ef48",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "73841be0-e0b2-4046-a931-3ed3a0a0b162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e89c16b-92a5-4995-a3be-b5f3aa24591e",
        "cursor": {
          "ref": "4f53d7b2-cc8e-410f-a994-fc471bfd1a22",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "abd6d47b-d86d-484b-b383-db30b9210547"
        },
        "item": {
          "id": "4e89c16b-92a5-4995-a3be-b5f3aa24591e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "79553e9f-6367-4d5d-ad61-2e156658ab59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af734400-241f-4fb5-a382-227152e8034d",
        "cursor": {
          "ref": "5b37a8c3-1464-412a-97e1-a8500f3fac8b",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6430fe5e-9ebd-4e6e-a51d-b1c1efed5e2c"
        },
        "item": {
          "id": "af734400-241f-4fb5-a382-227152e8034d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f76f01a1-e423-41bb-b976-0a8774222444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cbd132-ba57-4155-912a-8ed1bc691ef1",
        "cursor": {
          "ref": "ea666bc2-f893-4bfe-b935-249927a98395",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6e16d87f-63e0-4d8d-9ee4-a424fa33d0a1"
        },
        "item": {
          "id": "42cbd132-ba57-4155-912a-8ed1bc691ef1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ed0509c2-9e11-42f4-8a5e-4b64b9eb18fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074a9fec-af5a-4bcf-a9cd-1de2a7755414",
        "cursor": {
          "ref": "8c869aa8-b8e6-4d46-9782-9e87f542d75f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c1863ef7-5c73-4491-afae-6b20ecd8d1bd"
        },
        "item": {
          "id": "074a9fec-af5a-4bcf-a9cd-1de2a7755414",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bb8052de-0a6f-4412-9122-8599edebfbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47994212-85f0-47f7-a8ab-b31c7a32f126",
        "cursor": {
          "ref": "1d2364c3-aefc-47c5-b36c-4bc765ef5760",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7047579f-4c71-4a95-8a56-feba53fb7f2b"
        },
        "item": {
          "id": "47994212-85f0-47f7-a8ab-b31c7a32f126",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3596715b-93bb-4ae5-a0c6-22d92ddbe451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4776e64-8adb-48a0-b907-3aacc348855b",
        "cursor": {
          "ref": "de946c95-8d49-4cc3-b862-9da052b68a8d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0efc1803-e1e5-4824-9070-7a64e68a9665"
        },
        "item": {
          "id": "a4776e64-8adb-48a0-b907-3aacc348855b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "57b74c3b-e7f8-43c2-8b02-25bdfaa2d999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35768967-d4f1-4779-ac6d-d7f52b1e6c2b",
        "cursor": {
          "ref": "477af48b-cc00-421b-abfd-56be83efeb89",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2871565f-e282-4240-ab1f-598369e14ebc"
        },
        "item": {
          "id": "35768967-d4f1-4779-ac6d-d7f52b1e6c2b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f234f7a7-7e65-45c7-a1eb-5b91284c01e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8707d5ad-5702-41e3-a4c3-3fc630f4f3df",
        "cursor": {
          "ref": "81348118-cd04-46fc-a0f1-7d066df3652f",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "83db8a23-7708-4ef5-8e22-2d2d3d636172"
        },
        "item": {
          "id": "8707d5ad-5702-41e3-a4c3-3fc630f4f3df",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "18859b07-0f6e-4b06-8fbc-d1c04e1a6c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa1ca3d-8633-4576-95e0-97f0c05f2130",
        "cursor": {
          "ref": "9ed2aa65-94a6-42fa-bcf8-3da6ea1b855e",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e4328185-eb05-4d62-be84-c31c21cdb49b"
        },
        "item": {
          "id": "5aa1ca3d-8633-4576-95e0-97f0c05f2130",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "59a0ea29-dd14-4a64-92a4-9974e55aceac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a537aec-1f56-4a04-8cb3-f401678b464f",
        "cursor": {
          "ref": "e6de954a-06f4-477e-a900-6cafd007f8e0",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b77c9ed5-5460-4136-9caf-8a6102fd25d4"
        },
        "item": {
          "id": "3a537aec-1f56-4a04-8cb3-f401678b464f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4530e334-7940-4145-8192-9fc3044ab4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edd975c-6e39-4ac3-9baf-ff46fae19501",
        "cursor": {
          "ref": "ab4f6c2c-464d-48e4-a12c-baa53dfa1e69",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cff79499-fb02-4eec-8841-065adcf53679"
        },
        "item": {
          "id": "1edd975c-6e39-4ac3-9baf-ff46fae19501",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "24b4bd7b-e2fb-48c5-a046-e26aff99fabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17da67cc-6f8f-41d3-a790-0f369c700524",
        "cursor": {
          "ref": "035eb36f-4323-4e2b-b0a5-1422ad2a9f89",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "456e9f1b-2622-4642-8bc5-6c4ee288727c"
        },
        "item": {
          "id": "17da67cc-6f8f-41d3-a790-0f369c700524",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4913b5a2-5912-4369-94a6-f4eb8d4d03b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e839289-d1d2-4803-a94c-24e56cd2ed6e",
        "cursor": {
          "ref": "3441bbd8-6950-432f-b6d2-fa0948185ecc",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "25c645e8-bee6-460e-82cc-8a3ee5e70061"
        },
        "item": {
          "id": "8e839289-d1d2-4803-a94c-24e56cd2ed6e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5bf91764-000a-4add-bb66-55e1f48fe234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16824f05-fe2e-40b4-8c69-306ca3cc0f27",
        "cursor": {
          "ref": "47e20193-8b1c-4b71-b49f-4fd6bbbc7da7",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e07db209-b700-4f25-9fff-91dfb804e6ed"
        },
        "item": {
          "id": "16824f05-fe2e-40b4-8c69-306ca3cc0f27",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e144ec56-cc81-4360-ab88-5a65361a8523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd21145-f448-4a13-8b46-0cc7e8999fdc",
        "cursor": {
          "ref": "b2c44637-2ef5-4a2e-a417-18d4bea7ff52",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d30f7211-d8e1-43b7-bbfc-1ac157282f79"
        },
        "item": {
          "id": "ddd21145-f448-4a13-8b46-0cc7e8999fdc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e89d13d7-b5c8-44dc-a654-3b3300a0fde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15dceb7-d937-4c8a-b9f8-60b1900b4997",
        "cursor": {
          "ref": "93a26aee-f79e-4f15-adf3-831105af2620",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8bbc005a-b844-4dc6-b1bb-c21188fc7e47"
        },
        "item": {
          "id": "d15dceb7-d937-4c8a-b9f8-60b1900b4997",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "88cbfac5-94a7-4225-9030-44a16f7ff76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037bb7c3-b29b-4d0b-bc24-f08d7af8d8fb",
        "cursor": {
          "ref": "aa694110-f5c1-468e-a4e8-178bca10fda2",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "51dd6c20-aaa4-44cc-af89-2627eb4198a8"
        },
        "item": {
          "id": "037bb7c3-b29b-4d0b-bc24-f08d7af8d8fb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6f8f18a2-e171-44c9-af9e-228534eb2557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845d5214-fa2b-499e-bf64-11c7debe43d8",
        "cursor": {
          "ref": "faa44b73-7abb-43d1-a4d0-1bbbe80fc503",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a2575042-b8d1-42b9-990f-201a58d5061f"
        },
        "item": {
          "id": "845d5214-fa2b-499e-bf64-11c7debe43d8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2df10576-a03c-49f8-a219-178bb74740a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0c9d30-8edd-4773-82fd-b70b4c965404",
        "cursor": {
          "ref": "fcb8e5d6-2b90-4f78-b0a9-7cc451527684",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "46c4a676-37a0-41b9-ac6e-42162a93f305"
        },
        "item": {
          "id": "ef0c9d30-8edd-4773-82fd-b70b4c965404",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "018efac0-ca85-4515-a4a8-ba8e6303de87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccc9912-6643-416d-85ac-49aecd2cf2c0",
        "cursor": {
          "ref": "80385ca7-4e3d-4553-b7b8-7564327b951b",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "61b27e0d-c155-4659-822c-ec41f607efaa"
        },
        "item": {
          "id": "bccc9912-6643-416d-85ac-49aecd2cf2c0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "41d5a20a-da86-4755-9022-ba3734778a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc6b82d-9927-4a84-b099-35ff85ae0d21",
        "cursor": {
          "ref": "1dca6b3f-9920-4697-aad3-10ed264fe4b9",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d9eddeea-d595-4f3f-b3c5-f06fdc91f934"
        },
        "item": {
          "id": "1fc6b82d-9927-4a84-b099-35ff85ae0d21",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "989f376e-6588-41b6-83a0-4da9584374c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98f9ee3-b785-4fce-828c-857859d30ebc",
        "cursor": {
          "ref": "a4bfe7f4-8980-46e9-b321-3b75a1c80364",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0481b7db-23f0-4b67-af2d-8f1315f51109"
        },
        "item": {
          "id": "b98f9ee3-b785-4fce-828c-857859d30ebc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "347226bc-803b-4fc9-9e22-f80f65792686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05385522-d0c9-4f0c-93ec-956ed566fcef",
        "cursor": {
          "ref": "5b2fdf2c-06df-4646-ac12-c3489859bae5",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "044f9e37-d551-4ef7-b4f4-a94d99946cfc"
        },
        "item": {
          "id": "05385522-d0c9-4f0c-93ec-956ed566fcef",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4f38f05e-63ba-45a7-95ed-806e24d3d38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d76aac-7772-43d3-bc1b-aa6fc8659cc4",
        "cursor": {
          "ref": "634d9a50-c2ff-4080-b8a5-78f9da6b402e",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f6329573-a89a-4793-8088-4df78ebac7c5"
        },
        "item": {
          "id": "91d76aac-7772-43d3-bc1b-aa6fc8659cc4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6265008e-2e9a-4e91-ba0b-45c9f917a2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e235c6-5baf-44ca-a953-9a0279b9163d",
        "cursor": {
          "ref": "c473fec4-0448-45ae-a6d4-0aae3eeacd54",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4c871e8a-2826-472a-9716-760e0bf1a64a"
        },
        "item": {
          "id": "36e235c6-5baf-44ca-a953-9a0279b9163d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "36d428e7-0746-499b-b201-13e30bba4aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34d7e8b-c0d9-4e28-b83f-da4d70bd7f77",
        "cursor": {
          "ref": "46a05076-ad4b-401c-9512-3ab5057b62fa",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3c0338eb-dc2c-40c3-8cba-a7148fdf491a"
        },
        "item": {
          "id": "b34d7e8b-c0d9-4e28-b83f-da4d70bd7f77",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a3b3567b-8a61-4934-bbf6-536c1aac23b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fa091f-20d4-4b97-9a08-3977300dc918",
        "cursor": {
          "ref": "33797913-d8e9-4ece-9bc3-b88d4df27321",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a2195683-eb8b-4e8f-bcc5-06b51995f440"
        },
        "item": {
          "id": "29fa091f-20d4-4b97-9a08-3977300dc918",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "dd893e48-737b-4cfb-83f9-61ec9bc39d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd96c47-2c50-4cfe-8402-2bb0062f0dcc",
        "cursor": {
          "ref": "00eac21e-f9ad-4d82-b5fa-106062d0fc6d",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "49172552-8351-4e2c-9376-2f371c7125c9"
        },
        "item": {
          "id": "1dd96c47-2c50-4cfe-8402-2bb0062f0dcc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a89846b9-190e-48ef-8eff-9b80c573161d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25403fe-1505-406c-b88d-70a9d37f179f",
        "cursor": {
          "ref": "79db9d8c-ccbd-4443-98de-b68bfede7e12",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b0d54e3e-b2ea-41d0-9fc8-776694f9c876"
        },
        "item": {
          "id": "e25403fe-1505-406c-b88d-70a9d37f179f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c54d0179-b991-47d0-97e8-41b6ca145acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520d026b-3148-45f7-8014-67658deb31df",
        "cursor": {
          "ref": "2e125acc-1566-478c-95c9-20d44a7956fa",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4adb247e-4689-4b48-aa86-c63f3ae77873"
        },
        "item": {
          "id": "520d026b-3148-45f7-8014-67658deb31df",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2b2b75f0-30ec-4f3b-8b56-853735895fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b3bb23-cebd-427d-8a38-410f5f0327da",
        "cursor": {
          "ref": "6470a52a-2684-4656-852c-b2ef6d55788e",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d82156a8-adae-4a7d-a84b-21ad987ff5fd"
        },
        "item": {
          "id": "c0b3bb23-cebd-427d-8a38-410f5f0327da",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c70849be-9305-4e32-a2e5-df02ef178985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b7028c-8e54-4fbb-8f87-d97dd6b7f2c8",
        "cursor": {
          "ref": "56af0356-a668-48f4-90a6-6e7d730f2044",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "17e46d0b-d8ee-435a-b5fb-1221c2e15757"
        },
        "item": {
          "id": "b0b7028c-8e54-4fbb-8f87-d97dd6b7f2c8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "33e163e5-d74d-4892-8ffc-5813dbc480dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1a377f-9328-4a07-8960-979e78a3f7ab",
        "cursor": {
          "ref": "4599a4b4-564a-4543-bb92-0748570901c5",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3902d3c4-443c-4bac-9172-069c2c6e246b"
        },
        "item": {
          "id": "2d1a377f-9328-4a07-8960-979e78a3f7ab",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bf52994b-8bdc-4843-8efd-62bfc384dedd",
          "status": "Created",
          "code": 201,
          "responseTime": 7065,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22705d4-a926-4f2b-9283-6579d39c5739",
        "cursor": {
          "ref": "8db6b6a4-fed4-4db3-9428-36ba3a866df5",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b24901ff-b6b2-4a11-b1f7-4fc227b1d408"
        },
        "item": {
          "id": "d22705d4-a926-4f2b-9283-6579d39c5739",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ea4beada-8b7b-464f-bfa1-3f56d28a2680",
          "status": "Created",
          "code": 201,
          "responseTime": 6246,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9ab0c2-5762-4b4b-ac43-0b2d3c7cd260",
        "cursor": {
          "ref": "8dffa2cd-82a4-45c8-9c38-529d17c4ef8d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "886bbbdf-47cd-4d2b-9d10-3609327bbaf9"
        },
        "item": {
          "id": "7d9ab0c2-5762-4b4b-ac43-0b2d3c7cd260",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c6699465-ac47-487f-b754-d795d9fc2e87",
          "status": "Created",
          "code": 201,
          "responseTime": 6556,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "893be673-ef1c-4188-b626-69c20e74171c",
        "cursor": {
          "ref": "b817886b-b908-4d4e-a95d-d2b5e6cba9a9",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c8618128-9832-4eb0-9430-33ca5161e3b8"
        },
        "item": {
          "id": "893be673-ef1c-4188-b626-69c20e74171c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0553df9f-6dba-4d04-b5a5-130bad2b8c7f",
          "status": "Created",
          "code": 201,
          "responseTime": 7236,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "967db149-68a6-49ae-b002-0a059dcd14ae",
        "cursor": {
          "ref": "1bb93fdc-0098-4122-b6b7-c883cb1e9b53",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "972a9bd5-7885-4ce3-a2c1-fff54ff75cc8"
        },
        "item": {
          "id": "967db149-68a6-49ae-b002-0a059dcd14ae",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c19e301a-1038-4f7b-abf6-5d5bdf2458b5",
          "status": "Created",
          "code": 201,
          "responseTime": 6788,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ca09d5-f6dc-4c1a-8ed4-50b5f0e922cf",
        "cursor": {
          "ref": "e2185356-4072-45c2-a596-5ea8512889ad",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a44bf7cb-3675-4e35-a12b-f66dea54e5f0"
        },
        "item": {
          "id": "b6ca09d5-f6dc-4c1a-8ed4-50b5f0e922cf",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "225bf413-9dc1-4d0a-bd6f-09d86ee02715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "5ab44b7e-f953-4f31-9fab-69a5633e9d96",
        "cursor": {
          "ref": "16f87a34-cdc8-4afc-a63a-30e6628c5050",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bf065e4b-a2c8-4f9f-b28b-17db21063802"
        },
        "item": {
          "id": "5ab44b7e-f953-4f31-9fab-69a5633e9d96",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d6a872c1-7c0f-4b91-a153-94c9254df1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7cd4ed-2324-42ad-a85e-beb614f46c1d",
        "cursor": {
          "ref": "dc505fd5-fa96-4697-a813-b3fbd10d05f8",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4352714c-4324-459c-bac1-6559255eac55"
        },
        "item": {
          "id": "5d7cd4ed-2324-42ad-a85e-beb614f46c1d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "864ebd2a-8806-4234-b469-06d7acd852c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b616d70-66d4-49ef-895d-b061bad3847b",
        "cursor": {
          "ref": "92361cc9-aa56-45c2-b3e7-728a16186bd1",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cef9a4d1-14b6-4329-bfae-46a3d94fc1e8"
        },
        "item": {
          "id": "2b616d70-66d4-49ef-895d-b061bad3847b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8ccbc8fd-c260-4615-b28c-a96e03313d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a12f1a4-0000-4edf-8448-e3df5c351230",
        "cursor": {
          "ref": "461faf18-e4c2-45ec-a011-06b3c53bdbc7",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "443a53d7-317d-414f-9cc3-e3f71368c5da"
        },
        "item": {
          "id": "4a12f1a4-0000-4edf-8448-e3df5c351230",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5ac2bd04-be52-4f56-946b-6499c4d35f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef47eec-a89f-42ea-be91-2b2a7e4c9f23",
        "cursor": {
          "ref": "bb4d5e60-b5f0-4b9c-8765-eeabb2c0a094",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "14be050b-5b4a-4948-bc9f-5eeef754a54c"
        },
        "item": {
          "id": "3ef47eec-a89f-42ea-be91-2b2a7e4c9f23",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8cd411a8-fc2b-4330-9478-b42ac323c19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d695eb-56f0-4dc0-b70e-018684205684",
        "cursor": {
          "ref": "3c15ed4b-d068-4fb9-8e6b-a2f3557ea183",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "96ff2763-e782-4e83-8d39-71896bd34677"
        },
        "item": {
          "id": "f7d695eb-56f0-4dc0-b70e-018684205684",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f683d3bb-b236-47eb-adf5-8bc29138570d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87262f96-7940-41ac-98da-72cf3df56b17",
        "cursor": {
          "ref": "f85d7413-c8ce-46bf-9e02-c827fb8e41ef",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ec6780db-e8b4-45e1-a4ee-9d20a036bcba"
        },
        "item": {
          "id": "87262f96-7940-41ac-98da-72cf3df56b17",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "286b0dd8-e097-4911-a77b-0971185e043d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989c3110-fe5d-4193-8b3e-854f93bd0da3",
        "cursor": {
          "ref": "c72a1333-f2bf-4e21-ba64-660027f070d2",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d5bad349-565e-405c-b56b-5af1398237a9"
        },
        "item": {
          "id": "989c3110-fe5d-4193-8b3e-854f93bd0da3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1e1d3217-6fe4-4b2c-88ef-ff1cb57e1e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0950d7-2239-4a48-be50-0fee6f52d916",
        "cursor": {
          "ref": "6033eebc-c044-42e6-a5b4-6039e225e41a",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dd107853-5900-41c1-b6fa-aed76bb81b8b"
        },
        "item": {
          "id": "bf0950d7-2239-4a48-be50-0fee6f52d916",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2acc832a-40cd-4a1d-abdc-04d0253e23fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c4830c-b016-4783-8207-555bbc2bf969",
        "cursor": {
          "ref": "33b2d406-d1a8-42d5-8a5e-ded8531c7c53",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b947fa3a-361a-4d94-9f1d-6c434dade2a3"
        },
        "item": {
          "id": "26c4830c-b016-4783-8207-555bbc2bf969",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b7cbcbc9-3c4d-45dd-87cf-641c13175943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1d8d6b-0d4b-487c-b2ed-09ac958b4068",
        "cursor": {
          "ref": "39814ec6-f56c-476f-9ee6-2537a77fc393",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2a2ace0d-ada6-4bb0-b991-4533e9e0bc17"
        },
        "item": {
          "id": "0a1d8d6b-0d4b-487c-b2ed-09ac958b4068",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "85c6dfb8-6464-4fea-8ae8-b97bb7ed0660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d098bf59-6f51-4c04-840b-622fa8108513",
        "cursor": {
          "ref": "79af6c2b-e55f-4df2-a01f-d7e7de5208a7",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e3c5e013-5307-4068-a5a4-a3bb9e406de3"
        },
        "item": {
          "id": "d098bf59-6f51-4c04-840b-622fa8108513",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cee25e34-a1a2-4ee7-aa01-d66dcca30a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efa889f-6699-4a85-b490-494ea15e68ab",
        "cursor": {
          "ref": "9a0c8337-0dc6-4129-9efb-d920abe8bb46",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c69ac89b-395b-4788-b626-4dd860cf77df"
        },
        "item": {
          "id": "6efa889f-6699-4a85-b490-494ea15e68ab",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eb90037c-4f82-42c5-a8fa-200a09f8248f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36114ba-24ec-47bc-b2f4-35379b9de68e",
        "cursor": {
          "ref": "eca0f77e-2cac-4b36-b742-bccbf2b9f8b5",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e38555dd-ae54-4961-b114-a7e2169b69fd"
        },
        "item": {
          "id": "f36114ba-24ec-47bc-b2f4-35379b9de68e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "43a6aef8-f79d-4244-aa2f-0c9f3c4d9ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90dcf08-afc9-4d4a-9ce0-692c5400db37",
        "cursor": {
          "ref": "c30b571c-dda9-436e-b714-fdc57218dad4",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5b2dbdeb-3872-4c54-8b0b-057ed030e800"
        },
        "item": {
          "id": "b90dcf08-afc9-4d4a-9ce0-692c5400db37",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fcfeba46-cc19-4c74-a37f-f3a623029e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0f00e5-1e14-4335-8af7-49f09c2da354",
        "cursor": {
          "ref": "be4c8169-ae65-47f4-8435-3071f80d975e",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7c3dac7e-c7f5-401a-8c41-855d563b9c24"
        },
        "item": {
          "id": "dc0f00e5-1e14-4335-8af7-49f09c2da354",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "39a33faa-3079-429b-91f8-310d8c3efe6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a397cb-25be-46c7-9370-1b2bfb084ad6",
        "cursor": {
          "ref": "39c54a88-691f-4e8f-8a28-12271fb2e3c2",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "98e89796-58fa-40fe-8cf9-82487d949286"
        },
        "item": {
          "id": "63a397cb-25be-46c7-9370-1b2bfb084ad6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e8e41ae3-c0b2-447b-aa5d-e615b0c037cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc506a2-5853-4cb7-ae15-ab19be000652",
        "cursor": {
          "ref": "462b8265-d8e3-4c96-a696-2fbd4be75f64",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ee0aaa91-90ea-439c-b3a3-d87dfa0c8af9"
        },
        "item": {
          "id": "bfc506a2-5853-4cb7-ae15-ab19be000652",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a86475a5-e139-43b2-84b7-0ddfd83b37cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede22266-10fb-4d6e-9fe8-ad48d81db128",
        "cursor": {
          "ref": "15d8a269-95ca-4b49-8b90-72bb7346593f",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "277ca811-3a27-4eb0-b004-90e0c28258ac"
        },
        "item": {
          "id": "ede22266-10fb-4d6e-9fe8-ad48d81db128",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "be063b70-dfac-4a57-85f9-7112b0d0d42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8308fbcf-c1d0-42ba-8b7d-e2e6ea31b6f4",
        "cursor": {
          "ref": "611e120d-985f-444d-a1fb-3356ae38bc0b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a47eba0b-1656-4896-b22b-b6339e396641"
        },
        "item": {
          "id": "8308fbcf-c1d0-42ba-8b7d-e2e6ea31b6f4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "156ef8fd-b576-4f49-82a1-9757f3059f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9774788f-3449-4fd4-ba97-a0878b292347",
        "cursor": {
          "ref": "77ff1b56-1139-4479-a474-fad6221130ab",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7a784968-ddc5-4a09-bd6a-676fd74587a1"
        },
        "item": {
          "id": "9774788f-3449-4fd4-ba97-a0878b292347",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a42e37a2-80b0-4241-9384-dcc8f8455032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40676fb5-8f49-4e80-9b7e-1802938073c3",
        "cursor": {
          "ref": "3e6e5841-9528-4e75-b513-81b78c5c3ea1",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d4accd76-bbe6-459c-a454-d0cd44fe2fe3"
        },
        "item": {
          "id": "40676fb5-8f49-4e80-9b7e-1802938073c3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "79b697e5-aa2b-42ee-92e1-f944cd936136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16ceb9b-76dd-4cf4-bfab-25575949f683",
        "cursor": {
          "ref": "d0e8a2f4-8569-4aa2-8917-24db71919126",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e6478ca3-0ad2-47b0-a850-881bfca34dbd"
        },
        "item": {
          "id": "c16ceb9b-76dd-4cf4-bfab-25575949f683",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "671613cc-621c-4f06-a9bc-7640982714a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c902985-0c8a-44bf-bc1f-5a7e1dd04200",
        "cursor": {
          "ref": "12c143e3-b4a4-4792-a70d-b4c190b41eb4",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "62e278e8-b3b4-43dc-bc42-a599ca0be018"
        },
        "item": {
          "id": "0c902985-0c8a-44bf-bc1f-5a7e1dd04200",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7da79d16-e018-4996-960c-6596c2bdd896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e6b213-c82c-4486-afd0-7cad942aee65",
        "cursor": {
          "ref": "cf55ba3f-159a-4485-b794-e0d31a9d8ba5",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c4e86284-c81e-47e5-be38-88a907bdde4a"
        },
        "item": {
          "id": "75e6b213-c82c-4486-afd0-7cad942aee65",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9927738f-867f-42b6-89e3-3e7e016bd606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efebef47-c6a7-4bca-867f-127b2f1222f8",
        "cursor": {
          "ref": "638d8b2e-0a77-4e72-b51b-9a721a0e7fd6",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7e1cc4c9-01b5-40d8-bd2d-c88a2f035f47"
        },
        "item": {
          "id": "efebef47-c6a7-4bca-867f-127b2f1222f8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "196b22cb-0abb-4ae8-a248-3c32653738fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70eb4b8-21dc-4d8e-9667-e98b64722525",
        "cursor": {
          "ref": "d3e796aa-b1b4-4ac5-83e8-7f90e54a153c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9c0a13eb-97d5-4ca3-ae3b-ec1f0456f8cf"
        },
        "item": {
          "id": "e70eb4b8-21dc-4d8e-9667-e98b64722525",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c44e9c01-eed8-43b7-a530-49c311e8ceee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80900ca2-ef50-4ae8-909d-5e0331e32219",
        "cursor": {
          "ref": "afe6fba5-7e24-46ae-ac4e-366311438f4c",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "08eee273-b5ce-4f62-824b-e8cfcc21600d"
        },
        "item": {
          "id": "80900ca2-ef50-4ae8-909d-5e0331e32219",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4fcd7e01-61d9-4ec0-9cf2-6feba411e110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31073a1-c541-4df2-8aaf-fba65292bee7",
        "cursor": {
          "ref": "63904e14-df42-4fd9-b735-3edce578b743",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "25542432-27ff-48a4-93f1-176316e3ab41"
        },
        "item": {
          "id": "d31073a1-c541-4df2-8aaf-fba65292bee7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "576c4111-7f27-4cb5-be9c-435bb04612aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e60d75-f8ab-4efb-8b73-d13816a719df",
        "cursor": {
          "ref": "9d22bb05-3063-4ec5-93db-a0a8d9fd3182",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e5002759-0b2c-44b4-827a-75bf39f930f3"
        },
        "item": {
          "id": "20e60d75-f8ab-4efb-8b73-d13816a719df",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5e720796-1766-4186-a98c-1417aecb1839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20a6d85-8455-4147-a7fd-da918435343d",
        "cursor": {
          "ref": "0f196cf5-ac6e-4f81-92fd-244a26b142f6",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8debcad0-921c-40e2-a7a7-cb1297007648"
        },
        "item": {
          "id": "b20a6d85-8455-4147-a7fd-da918435343d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "20eadb08-072a-482d-8101-875f1a1f3c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f41b27-705c-4e77-a68f-d0bdcc938776",
        "cursor": {
          "ref": "0f6b6cac-f899-4f69-b34a-1d1f64311404",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "139c68d2-ee61-4981-a4d3-15689de2c316"
        },
        "item": {
          "id": "c3f41b27-705c-4e77-a68f-d0bdcc938776",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3c679332-2358-483a-a507-75a924beb21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9aafc0-7337-4fed-9113-e880dea4fe11",
        "cursor": {
          "ref": "f978cecd-b6e9-4ac1-be51-e82d6b8d85a5",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "114590f8-85e2-46e8-a166-d1da348f13e0"
        },
        "item": {
          "id": "bc9aafc0-7337-4fed-9113-e880dea4fe11",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f1197fe5-06a1-4bd2-b76a-666579077bb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bf4981-9583-4a72-8e5c-f5a70f09e64e",
        "cursor": {
          "ref": "3ef703b8-0efe-4344-ad20-6d7be97d4b5b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d2f11b21-ec3f-42b3-a9b7-4d8c2379de8d"
        },
        "item": {
          "id": "22bf4981-9583-4a72-8e5c-f5a70f09e64e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4e7eb980-c2ae-410d-a2ee-27bb5cb84490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016d00ef-b83d-4ba8-ae5f-c2f1cc3d35fa",
        "cursor": {
          "ref": "8931b628-6e8c-4ca5-915e-e2143e76efc4",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a0507754-8977-4ec0-8796-ccf033352f6b"
        },
        "item": {
          "id": "016d00ef-b83d-4ba8-ae5f-c2f1cc3d35fa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bf9fb86a-ae1d-46db-a405-0cdd9f584185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ea5531-e3ac-4cce-87d0-bece083ab997",
        "cursor": {
          "ref": "ca6836dc-ed9d-48aa-b1ba-2bfa34bc0ac4",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e39521d3-8f43-40e8-8969-156432aae08d"
        },
        "item": {
          "id": "a3ea5531-e3ac-4cce-87d0-bece083ab997",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9f41bce4-0428-4588-a133-6e10ac7797c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5935f8c-bd7b-4964-8ae7-1a6d89943165",
        "cursor": {
          "ref": "c24e083c-4011-4b98-8c5a-d98f02e94e0e",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "95fa07f5-49b8-4311-b7f3-236e94e484bb"
        },
        "item": {
          "id": "b5935f8c-bd7b-4964-8ae7-1a6d89943165",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9b3c1182-3e46-458c-ba1b-b99b0dfecf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88df5f4-e5d7-4642-a244-07823863ea56",
        "cursor": {
          "ref": "3d47def5-a738-4ade-b1c2-cc295b75932e",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8c0ddc95-6b25-4851-8a84-47a104f1bce8"
        },
        "item": {
          "id": "b88df5f4-e5d7-4642-a244-07823863ea56",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3104c12b-f426-49d3-95aa-cdfd299f6d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173b9e2d-1e4a-438c-9d64-748cf858cf95",
        "cursor": {
          "ref": "990fd83d-0fd6-47b8-a9a4-7d0f614e7839",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "628fa3e3-bdfc-43e3-baa2-59dc5e855807"
        },
        "item": {
          "id": "173b9e2d-1e4a-438c-9d64-748cf858cf95",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c5e5812c-b03e-4172-b697-0dd7cf7f8eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a873e181-e1fd-493d-ae12-307313845e4f",
        "cursor": {
          "ref": "1093c757-71c3-4ccd-86ad-5583d02ae39e",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5eff5886-6000-4840-b9dc-09dcce27f68f"
        },
        "item": {
          "id": "a873e181-e1fd-493d-ae12-307313845e4f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c521fc4e-fbb0-4482-88fe-567a5aae3a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197484a1-d4b0-4b32-bd77-5889501889a6",
        "cursor": {
          "ref": "4441a408-aeaf-4579-b1de-0981a1d61e39",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "74e09ce6-c6ac-40a1-b186-9c1b31608817"
        },
        "item": {
          "id": "197484a1-d4b0-4b32-bd77-5889501889a6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ef6e0b33-379d-4fd6-94e1-6689db0a3335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eca5389-3764-4836-a239-71d2085b494f",
        "cursor": {
          "ref": "2a6a34db-41ce-4a35-b756-4b2901e1cb31",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5021c21f-61a8-4cff-b061-30bcdff4c009"
        },
        "item": {
          "id": "9eca5389-3764-4836-a239-71d2085b494f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6ca63331-5245-4d3a-9bab-c92f282bfbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcfff37-6f9a-4960-8297-a742e088cfb4",
        "cursor": {
          "ref": "f35d5940-686d-4066-b941-9568eec0e4a0",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7c7cabec-8e62-4749-bf66-85c4be54e602"
        },
        "item": {
          "id": "bfcfff37-6f9a-4960-8297-a742e088cfb4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "844a3896-bcbe-441d-bcec-a0f9366b07a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a97891c-07ab-4a0a-aeea-4932c9e812e9",
        "cursor": {
          "ref": "796dc32a-d139-4be1-b4c1-636f4a0875db",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9b56a762-b184-44d7-aebd-0a3e29e61c73"
        },
        "item": {
          "id": "2a97891c-07ab-4a0a-aeea-4932c9e812e9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f8effc50-6eaa-4ff2-be31-0e7f9881de60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e95858-3c00-41de-b126-ef84750c049f",
        "cursor": {
          "ref": "b72605e3-f556-4e44-85e6-63d553b5cb23",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fd845ed5-63b3-4a0e-86ba-5ee740fca0c3"
        },
        "item": {
          "id": "15e95858-3c00-41de-b126-ef84750c049f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3fc0ed82-d6e2-4c06-991f-2281f739fcca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2d74d1-cb01-4119-af47-61775c04ff49",
        "cursor": {
          "ref": "af58a4c8-782a-4e16-bd4c-2a2f1a1d4d2d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d4566cce-e2e0-4041-86cb-0a0ae8f4e557"
        },
        "item": {
          "id": "9c2d74d1-cb01-4119-af47-61775c04ff49",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "55f2ec9c-34a3-44db-98b8-f9c6441546e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471d0067-93ed-4634-87d3-2928fc589a84",
        "cursor": {
          "ref": "0b596f9a-c862-4c6e-b746-cb84687c0e03",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ff7875d0-d565-4cab-a1f7-45392f7db067"
        },
        "item": {
          "id": "471d0067-93ed-4634-87d3-2928fc589a84",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "551e0a9e-88b0-48f4-8ad7-9fb663f08795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6993f219-62da-4b56-b768-d127a3ca6cdc",
        "cursor": {
          "ref": "719b9fc2-9ad3-4952-9d0c-5b7e9e8820b3",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7d72de8b-94a2-480f-bf35-f3cde8645b0c"
        },
        "item": {
          "id": "6993f219-62da-4b56-b768-d127a3ca6cdc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4166b0d6-55da-4b21-8196-4e2a80e9e925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def2d009-dae9-4704-b55f-49f55139507e",
        "cursor": {
          "ref": "cbe6c48d-69b1-449d-8cb9-bdc1b85fbfda",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "485f49ee-db9d-4c9d-9167-2b7869ca1e5c"
        },
        "item": {
          "id": "def2d009-dae9-4704-b55f-49f55139507e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "59b16919-2881-451c-9966-93bb0e2e22ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaab5ae0-5a3f-49fe-b020-52bf8dec2a11",
        "cursor": {
          "ref": "0da36738-0dc0-4132-9228-cb109dd30a24",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c767e9bc-0f64-4f9a-8137-11d5be088c1e"
        },
        "item": {
          "id": "aaab5ae0-5a3f-49fe-b020-52bf8dec2a11",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2ae286f3-0b9c-4f17-ac22-3459186f443f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6cec8c1-26b7-49f9-9d5e-00a3eeca1ceb",
        "cursor": {
          "ref": "69b56608-ee30-47a1-9374-5fa7632c00b1",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "acc66fef-b7cf-41cf-8562-15d3778f572c"
        },
        "item": {
          "id": "b6cec8c1-26b7-49f9-9d5e-00a3eeca1ceb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "71b3d328-8d9e-4406-95de-d02efa85e0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d34819-53b2-426b-9c4f-c33f1731d3e8",
        "cursor": {
          "ref": "e2106a34-12ce-4757-b135-e4adb9a8d8b9",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d0b973c9-f7a9-40c7-87ba-c46c4fae2e7d"
        },
        "item": {
          "id": "45d34819-53b2-426b-9c4f-c33f1731d3e8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bfee4a2b-da71-424c-9c63-ddeb02d65f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819d96fe-4f7a-42fe-a8ed-8e88342685be",
        "cursor": {
          "ref": "ca567e5a-3d1b-49d7-ba9d-6eda8043d5ed",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "76b5e36f-49c3-404f-9fac-149abd3abd59"
        },
        "item": {
          "id": "819d96fe-4f7a-42fe-a8ed-8e88342685be",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "702eb90f-6b5b-494f-a83b-e1d688bc41d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a13955e-ff64-4865-9a56-8c75ba8ef94b",
        "cursor": {
          "ref": "19fb211d-0c72-40d8-bb49-8cca4a95c715",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a9ed7054-f682-4a5d-b1b7-f15246395d08"
        },
        "item": {
          "id": "5a13955e-ff64-4865-9a56-8c75ba8ef94b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4f50a88e-a82d-4f5d-89d4-3724c8ee198c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20aebf10-cca1-488f-85b9-c7782a4d394d",
        "cursor": {
          "ref": "c59652fa-7004-43e7-a341-afe7f074d8d5",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "beca837f-cae8-4006-a8b3-64086837bcdc"
        },
        "item": {
          "id": "20aebf10-cca1-488f-85b9-c7782a4d394d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b76416c7-61cd-4594-867b-2f6799193b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d701f2-dcef-418a-a711-f71bbe0aa422",
        "cursor": {
          "ref": "572ecbd2-fa64-4b16-8c76-c34767a93ec5",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1145c9fc-b0b6-4721-9c7a-c0ee9821dfaf"
        },
        "item": {
          "id": "36d701f2-dcef-418a-a711-f71bbe0aa422",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ed312375-3c99-4834-ad46-8cc61843f217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9e48cd-88c4-4d23-ba40-1ba7b75958a5",
        "cursor": {
          "ref": "17cbb6e7-209a-410a-9d80-79da5090b57e",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "28ed0c66-cd90-4887-be14-1b35a2462194"
        },
        "item": {
          "id": "dc9e48cd-88c4-4d23-ba40-1ba7b75958a5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1224fb6c-142b-40fc-adb6-d7c9f454418f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab21c27-6516-45a4-a318-a802509f1905",
        "cursor": {
          "ref": "05397f62-2370-4a27-8369-a2ee32c1a187",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7625a14c-8998-4032-abd2-1dab2e98cf4b"
        },
        "item": {
          "id": "5ab21c27-6516-45a4-a318-a802509f1905",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1402c4c8-c724-4d4f-a28e-0d3854dd56ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295cf4ef-8faa-48a5-8e20-d2d851b9ef50",
        "cursor": {
          "ref": "a39f1448-afb8-4762-9796-972750808de1",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7a2d39fb-63c0-4d7c-8f17-1debcfccb9ca"
        },
        "item": {
          "id": "295cf4ef-8faa-48a5-8e20-d2d851b9ef50",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dc20b341-c700-4df3-b134-c04e8806c457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28368858-3f96-4a03-9898-754e7d744528",
        "cursor": {
          "ref": "6326076d-d6e9-4baf-a3e0-36dd3a48c618",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d7869c29-3279-41d8-a112-a4c578c966d5"
        },
        "item": {
          "id": "28368858-3f96-4a03-9898-754e7d744528",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "efb9f39e-eb61-453a-b17b-15c4fa8b0941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49faa94b-822a-40e5-a3eb-4952aa9ea5b7",
        "cursor": {
          "ref": "077c4d9f-7a8a-4bcc-93d0-a02899e4bbc6",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "058ab55f-b7ab-4cd5-ba17-ea8e2f836a2d"
        },
        "item": {
          "id": "49faa94b-822a-40e5-a3eb-4952aa9ea5b7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0397c77e-4fca-4a09-b01f-d625ca4437b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74053881-caf4-4595-8d16-a8800b43832e",
        "cursor": {
          "ref": "dfb99453-301a-409b-b05a-7c1a75b6f472",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7c5cb637-23b5-4ce7-8948-ef1c89186037"
        },
        "item": {
          "id": "74053881-caf4-4595-8d16-a8800b43832e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "654ceb28-ef6f-4879-9016-d443281ce9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889974db-5f0b-482e-893d-3aeadc130a20",
        "cursor": {
          "ref": "beb9a912-243d-477c-a7fc-2fbd25bc5787",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fd94ff12-b795-4d1f-aa99-b7668a297140"
        },
        "item": {
          "id": "889974db-5f0b-482e-893d-3aeadc130a20",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d92b2043-f1e4-4a14-8380-6c6606cd8f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 939,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48179423-b0ec-4d90-a8a1-e3642cde5bf7",
        "cursor": {
          "ref": "1a94a448-01bf-494f-ae5b-738f1e33f855",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "450eed7f-8b49-4a2b-a6e5-17b285ee733f"
        },
        "item": {
          "id": "48179423-b0ec-4d90-a8a1-e3642cde5bf7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "80a71851-a85e-4b32-9e79-7a841a985a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce6c1ba-2493-4469-80e1-2d50ddab8142",
        "cursor": {
          "ref": "6dadc273-b7a6-4a3a-8c8a-7d24588e25bb",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "551ab9be-69d7-4844-ad21-db3eab776041"
        },
        "item": {
          "id": "8ce6c1ba-2493-4469-80e1-2d50ddab8142",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "49358a32-b8e2-4869-86ed-9cedaf3dbabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 908,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9736edf5-c611-4ff4-b78e-65c8eb61c36e",
        "cursor": {
          "ref": "080d7b72-3a08-4ebb-b31e-34752050f0fa",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2a2bd0c6-522c-4d8a-9cfa-8ec8644f5f06"
        },
        "item": {
          "id": "9736edf5-c611-4ff4-b78e-65c8eb61c36e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "181d6c43-4209-4a5c-9e47-e9ac545e1ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c401396-c65e-46e4-bd4d-8bfa95d60050",
        "cursor": {
          "ref": "3ad6e20a-022b-4efa-bd08-c48955d71519",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0de1a096-bc0b-459f-8cb4-d3a0d61871b5"
        },
        "item": {
          "id": "5c401396-c65e-46e4-bd4d-8bfa95d60050",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "48885572-02d9-4f6a-8321-f41e8e5640a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20471494-0b6a-4d53-b844-31e67fe4aca2",
        "cursor": {
          "ref": "0d03c461-2182-424c-84e2-082e5d5bccb3",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f9c74bc6-2b0a-4480-8d99-ee074c511cf9"
        },
        "item": {
          "id": "20471494-0b6a-4d53-b844-31e67fe4aca2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0e7c9fa4-a2e3-4fb5-a1c9-5bb081e991ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0b46fa-83f1-42ae-bcbc-453b85f46e39",
        "cursor": {
          "ref": "cfb40bb1-b16b-4991-a927-207f10fcc34b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "cb5ad398-545b-4751-811a-5b05ce7773c6"
        },
        "item": {
          "id": "dc0b46fa-83f1-42ae-bcbc-453b85f46e39",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1b05ba4f-74e4-4240-8ac0-34829e994349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8d28a0-1385-46d0-a3a4-a3745029972a",
        "cursor": {
          "ref": "4c6035dc-87a4-450c-98bc-88027b2216c8",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fae7b1b4-3dd5-441b-b422-8752b4b07955"
        },
        "item": {
          "id": "bd8d28a0-1385-46d0-a3a4-a3745029972a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "84b2c52f-24fc-4626-86cf-dbfe6efcab73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5b8653-43b8-42a8-b1c2-b177038840c6",
        "cursor": {
          "ref": "cf28e1b9-3b09-4d80-bcbf-c7605a286a17",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c29fe554-4eeb-4c98-b88e-e801f199c88c"
        },
        "item": {
          "id": "cf5b8653-43b8-42a8-b1c2-b177038840c6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "edf3e982-0463-4ade-881f-1a52a026c117",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c0bbe0-5392-4ea5-80f6-74e6f343c5e5",
        "cursor": {
          "ref": "98bdf7ef-0672-47a8-9807-d68a6ed85de5",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9b6c69ec-ceba-4879-9aca-b6ad9dad32e5"
        },
        "item": {
          "id": "85c0bbe0-5392-4ea5-80f6-74e6f343c5e5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fd55f006-e82b-4f02-a99b-ebd8d2f6eea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904d19df-4997-41a9-b6c5-448bace59aaf",
        "cursor": {
          "ref": "8b361ac8-2d89-44e0-a861-e0448ba965e4",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d11ef036-d8b1-4fbc-9e1c-a77eaa3147b4"
        },
        "item": {
          "id": "904d19df-4997-41a9-b6c5-448bace59aaf",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "072cc2f2-07f5-48d2-b907-fcdf19e6e1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f4a3f6-ac45-4b0e-8e92-339229793a30",
        "cursor": {
          "ref": "dfb22894-f737-451a-b9c7-4e6f652ef89b",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4a7bed5e-cda2-496a-9665-4c9539b325c4"
        },
        "item": {
          "id": "f7f4a3f6-ac45-4b0e-8e92-339229793a30",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2716e3af-fa40-4b2a-a49d-9f52e00e03ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9ef1dc-e41f-4556-9391-c9ceff396f5f",
        "cursor": {
          "ref": "5f82a703-7e8c-4293-8a0b-03a28991380b",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f2ef6276-f672-479b-a3b0-b3f141cf5510"
        },
        "item": {
          "id": "0e9ef1dc-e41f-4556-9391-c9ceff396f5f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9c98abdc-9dc0-402b-b08f-885253c873a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f76672-5152-430e-bc4c-f6f5a4a6e3e5",
        "cursor": {
          "ref": "e279a697-d2c3-4c8c-b327-84fa7aad5474",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b0adb5ec-4a06-4c72-b646-5e0b1a4d4559"
        },
        "item": {
          "id": "b9f76672-5152-430e-bc4c-f6f5a4a6e3e5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ecde3155-62e5-45f3-97a0-2deba195962d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a656989f-b2ab-4cb6-bb03-8fb9d6f2af83",
        "cursor": {
          "ref": "6526d88d-c2f6-4698-bcbe-4fcefc456070",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "047e0430-0767-4846-bb19-5ddd3d19965e"
        },
        "item": {
          "id": "a656989f-b2ab-4cb6-bb03-8fb9d6f2af83",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ce3d5bde-2d6b-4854-a695-71e3db120f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87aff534-c838-4a3b-8dc5-09820d26b8ec",
        "cursor": {
          "ref": "38e715b3-2bce-4732-8f69-d209b26eed61",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e31d5264-065a-4a43-9656-3974c38ed9f4"
        },
        "item": {
          "id": "87aff534-c838-4a3b-8dc5-09820d26b8ec",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ffe29c0d-1ff1-4472-bf32-14f12fb32811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06aaf51e-1e01-4ea3-ac24-58f9455828fb",
        "cursor": {
          "ref": "541fb8d9-d768-48aa-8565-74c08e336b85",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f59bb235-77b0-41c6-9c77-1a60c9ff9c5e"
        },
        "item": {
          "id": "06aaf51e-1e01-4ea3-ac24-58f9455828fb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b61d198a-7a23-43f9-8350-f59e7777280f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a89c69-8bd3-4883-a360-6edacf8529fa",
        "cursor": {
          "ref": "f42aaf78-c1d4-4261-bc16-fa610502ea27",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d770cec8-43bc-4965-9ff0-a1a3dd975000"
        },
        "item": {
          "id": "44a89c69-8bd3-4883-a360-6edacf8529fa",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b627c5c0-5563-4cee-bdf2-a7d531768d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329af096-8ee3-4600-9675-5fb60f945264",
        "cursor": {
          "ref": "29bc4e7b-cfa1-43a0-94e4-b3b2d333ef5c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d7e7083f-1914-419a-bf25-f89ae133242c"
        },
        "item": {
          "id": "329af096-8ee3-4600-9675-5fb60f945264",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f488c048-bfda-471b-89c1-e6ff6e6211ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868bf2af-b1c4-4015-a2ef-3b510016a7ef",
        "cursor": {
          "ref": "e297231f-b2f7-4196-b5ce-ef8648766d97",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7573e522-f905-4aad-a854-dd5d791c24d2"
        },
        "item": {
          "id": "868bf2af-b1c4-4015-a2ef-3b510016a7ef",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d051e6b2-4fc1-4120-87dd-594ce40fc651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fba875-871c-4c29-a623-4506d395e8aa",
        "cursor": {
          "ref": "c2cb249f-5dd6-4ec1-acff-d9f6807de7f9",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "92445486-7aac-4ca8-84a0-68957b1f965f"
        },
        "item": {
          "id": "c9fba875-871c-4c29-a623-4506d395e8aa",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "57998f07-91da-43d7-bcd9-00d26c819aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70ccbf9-c7dd-4df9-875e-b4051dbc665c",
        "cursor": {
          "ref": "a6b9ba02-eedd-4958-98b2-0974a6610777",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d59c3824-38f7-4909-84ab-5cddb64b527f"
        },
        "item": {
          "id": "c70ccbf9-c7dd-4df9-875e-b4051dbc665c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ba75fd8f-11be-4759-8eb9-5177085ec0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dca9413-f4a9-4c20-bd6f-efa7abcca12f",
        "cursor": {
          "ref": "e43895e2-e38a-42ad-8e1a-f251f769e534",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1c2a1f0c-0cb1-4c08-808f-bbfe8d6c52fc"
        },
        "item": {
          "id": "2dca9413-f4a9-4c20-bd6f-efa7abcca12f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9b50e568-8ea7-40d0-8f4d-0da312aa819e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6496858f-3075-4160-b101-094f1e7f43d2",
        "cursor": {
          "ref": "dd2e4328-1cbd-43e2-83e2-d0286d503f21",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4568f593-9a1f-4d7c-91ef-52567b5049e0"
        },
        "item": {
          "id": "6496858f-3075-4160-b101-094f1e7f43d2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d6446cce-c809-4cab-b41d-285960e2b5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb4a393-fddf-4345-b62e-fccac725b157",
        "cursor": {
          "ref": "5bb3c9ff-0c78-44b1-a62a-97e776b7ee8d",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "457c7e1a-81e4-4891-83f3-76ee4247b9c9"
        },
        "item": {
          "id": "3eb4a393-fddf-4345-b62e-fccac725b157",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f7538da9-05fa-4c23-94e9-4174839c72d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd3c59c-0ea7-48b3-9f5b-746121d04f2f",
        "cursor": {
          "ref": "8190cc45-c425-4868-8340-79e146e5ffa2",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0e5aa0a5-230c-4026-8654-2010318fe640"
        },
        "item": {
          "id": "fcd3c59c-0ea7-48b3-9f5b-746121d04f2f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2e5c7905-750c-4e83-bafd-e72730fadb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18abdddc-4acd-4877-979a-bb416a3ccd2a",
        "cursor": {
          "ref": "5a6317a7-d7f4-4f17-aad4-040abc89fb53",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fe291fd8-dc81-492c-812e-0ee91256a822"
        },
        "item": {
          "id": "18abdddc-4acd-4877-979a-bb416a3ccd2a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7b503a1a-b6cb-41ea-970a-4be675bc301b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b33c1d-b2a1-43fe-a661-d5dbdebf9e25",
        "cursor": {
          "ref": "ebb52f2b-1fdd-4d84-af8d-43be4abca828",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "634e6f59-2817-448a-bbd0-4b856612e5d2"
        },
        "item": {
          "id": "c1b33c1d-b2a1-43fe-a661-d5dbdebf9e25",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d0ea0409-403c-47ae-8a2d-f96c9365b24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efa4613-d061-427f-b435-47d163381250",
        "cursor": {
          "ref": "7a52f59c-59d2-4464-98e7-285544cf34df",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ed036f61-6cc2-4615-a1ae-ebed7bb8e665"
        },
        "item": {
          "id": "9efa4613-d061-427f-b435-47d163381250",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f87136e4-107f-48f6-8cb5-24c46b4a0f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710cdb2c-1636-46c7-aa87-33defaf6319d",
        "cursor": {
          "ref": "bb3d04a1-746e-4fc9-855c-960572b5b37c",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d977d765-e46d-4f1c-a210-f3793a01b75b"
        },
        "item": {
          "id": "710cdb2c-1636-46c7-aa87-33defaf6319d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bca713b2-5bd4-4744-9e9d-af86b92c065f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28aa2625-7fb3-4d88-b537-ac3225aa39c2",
        "cursor": {
          "ref": "9dc733de-405a-497e-bf78-e59491d50b79",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "90f44d98-49ac-4407-8c1e-5d8b269c81a1"
        },
        "item": {
          "id": "28aa2625-7fb3-4d88-b537-ac3225aa39c2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b21bf851-8d2c-4ba6-9514-947e3d0e9b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4431417-f932-4736-b486-931ab38710f1",
        "cursor": {
          "ref": "653f72d4-5831-45a3-a83c-fdc3317636b3",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e3d15582-3ec4-458d-9dd5-db0215dcbc31"
        },
        "item": {
          "id": "f4431417-f932-4736-b486-931ab38710f1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fbae5ce1-e939-479b-b704-ae98be3de1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c695c22-cc46-46dc-9316-e6a05433364f",
        "cursor": {
          "ref": "97077b4e-5afb-4a3d-b631-9a086b216695",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8015f96a-cbdc-447c-afb7-ec1663bf9972"
        },
        "item": {
          "id": "8c695c22-cc46-46dc-9316-e6a05433364f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0a2d0e82-375e-462a-bf10-e8221cfdb263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70eea155-2a0c-41a9-8ffc-eae745cf3a04",
        "cursor": {
          "ref": "86b8ac75-c1f1-4096-bacc-86fa8643a48d",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "449badd4-9535-418d-9744-b8e2da41022b"
        },
        "item": {
          "id": "70eea155-2a0c-41a9-8ffc-eae745cf3a04",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0eeaf977-7ed6-45cf-839d-eeb399ebaedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f13a7f-bca6-458b-9b44-cd7a93cde0ed",
        "cursor": {
          "ref": "ba4e75d1-1833-429c-902a-4927b5de8cd7",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9c91058a-55a3-446e-a0ae-001c6278dba0"
        },
        "item": {
          "id": "66f13a7f-bca6-458b-9b44-cd7a93cde0ed",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "30b1a956-5753-4f83-824e-ee588bf0c944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee6fbff-6418-410b-a368-e4795b2e1d8a",
        "cursor": {
          "ref": "c61d6699-4c11-4d17-a4a3-9c3b22f576d9",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4fa7b415-e0e7-4d64-a055-2582fb76097d"
        },
        "item": {
          "id": "6ee6fbff-6418-410b-a368-e4795b2e1d8a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "660b5b3b-7eae-4e47-bbec-9c83e645b69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b7d385-2a85-4d9f-bf06-d08f37048a84",
        "cursor": {
          "ref": "4d4cf4b9-dd46-4f2b-a65f-a509a95b0d69",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "927a51fe-8be8-4fe4-b189-266981c21997"
        },
        "item": {
          "id": "66b7d385-2a85-4d9f-bf06-d08f37048a84",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d65eb4bc-79d7-46b5-abcb-85528385fc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735e5bcf-6557-4084-991f-f4599cd1238c",
        "cursor": {
          "ref": "d1057fdc-8cc7-43ad-a5f2-fcb4700c71a3",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6c7def0e-f851-4549-92a7-2eeb99498bd6"
        },
        "item": {
          "id": "735e5bcf-6557-4084-991f-f4599cd1238c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e545ba19-ac2d-4e03-af65-825f99ca8350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b250c1d-d8cc-4d20-8f83-2bbcd4703f18",
        "cursor": {
          "ref": "48f82e2c-35dc-4c27-95f8-5a5b8bf752a3",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bc86b8f7-385f-4a35-b989-0ec0524a711b"
        },
        "item": {
          "id": "8b250c1d-d8cc-4d20-8f83-2bbcd4703f18",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6e9e6882-eb7b-44e7-b66f-6d2657e3e979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9824da7-4a88-4fad-a76a-9243ff84111b",
        "cursor": {
          "ref": "57f36c46-0862-4fdf-abaf-f8ef465553eb",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b5b70ddf-4838-4b15-803d-5f8e53738028"
        },
        "item": {
          "id": "e9824da7-4a88-4fad-a76a-9243ff84111b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "38cec3ed-a398-49fd-9d46-1f849eb9f5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d06320d-5663-4072-a395-f216a25dee9f",
        "cursor": {
          "ref": "23c0eea5-cd7c-40fa-b57d-060bd643b200",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e0164b21-6961-4ce8-a144-ef9039f732f9"
        },
        "item": {
          "id": "7d06320d-5663-4072-a395-f216a25dee9f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f074de69-c810-4e53-8e94-32799928e1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d79b270-6d35-41b8-b92f-4a958fb85caf",
        "cursor": {
          "ref": "daf2c884-f6c9-4f23-a601-4c9d24472605",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ad35d110-03b6-4f59-9db4-345c8d5d15ab"
        },
        "item": {
          "id": "1d79b270-6d35-41b8-b92f-4a958fb85caf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bde9a5d1-a4e5-434c-a8c3-0222d5621f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114a8f27-fe45-42fa-a2a9-9c4e74e19630",
        "cursor": {
          "ref": "6e7c80f3-3e20-4e9e-b4d3-0b8f240b4743",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "54efc8d9-ad8e-4d32-8676-5f0373395739"
        },
        "item": {
          "id": "114a8f27-fe45-42fa-a2a9-9c4e74e19630",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "93231791-c941-4943-a4bc-5b2faebde13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e006ba6-e9e8-4d9e-a25b-04950bf791ee",
        "cursor": {
          "ref": "b02f4090-9bc4-47e9-b0b3-ca0e01146624",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6727c9dc-ef54-46be-a7a5-838094216a82"
        },
        "item": {
          "id": "8e006ba6-e9e8-4d9e-a25b-04950bf791ee",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "75d7b8b9-21a7-4e37-9c0a-4b6813738e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822d334b-46f5-4699-b4f8-c0e97056fe4d",
        "cursor": {
          "ref": "c1d44c2e-32af-4c38-b8b8-45923061e479",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0a481579-967a-4a0c-9a23-beb572088bd9"
        },
        "item": {
          "id": "822d334b-46f5-4699-b4f8-c0e97056fe4d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "83711484-4b67-44d7-b1c0-600b29f71e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef412dad-8fb6-4ebb-bc4e-56d84c00ed7c",
        "cursor": {
          "ref": "5ecf5732-16a2-44e6-9624-5c8b5424c63f",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "43fdf53a-fc14-4bd0-a175-1c5aad9ab6f4"
        },
        "item": {
          "id": "ef412dad-8fb6-4ebb-bc4e-56d84c00ed7c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "35f94cce-975c-45ae-a816-a6d5cf52a067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca426c78-fc5b-4b83-a6fd-2c44baecfd71",
        "cursor": {
          "ref": "02556890-402e-40ef-a254-d0beffd407be",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b5b402cd-cbc4-4d07-8a00-0ac492fda369"
        },
        "item": {
          "id": "ca426c78-fc5b-4b83-a6fd-2c44baecfd71",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d111ee05-7919-454e-b2ac-e74bac3a174d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539894c7-7e11-451c-8e4d-444ea42be88e",
        "cursor": {
          "ref": "4a5693fb-f955-42b7-9155-a17016c296c1",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "448d2115-4b40-478c-9c66-ccea3413984a"
        },
        "item": {
          "id": "539894c7-7e11-451c-8e4d-444ea42be88e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d86c72a1-4d4e-430c-8517-948b37192fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd80e74-08d5-44c3-9d38-59a4ce973bec",
        "cursor": {
          "ref": "583c3956-8b5c-42d1-aba1-a969666dd8a7",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "62964017-031f-4d65-9314-924596f205dd"
        },
        "item": {
          "id": "3bd80e74-08d5-44c3-9d38-59a4ce973bec",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "747610e6-5d0b-480e-b59b-2fb3de2969c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40825e9-548d-4f2b-98b2-9f77988773b1",
        "cursor": {
          "ref": "b5d82cf1-e868-4d7f-a4e7-ab0abe93d462",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ebbd7ae9-3208-4bf8-99cb-f40d041fd43a"
        },
        "item": {
          "id": "f40825e9-548d-4f2b-98b2-9f77988773b1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a96d6f00-5065-4c0e-98c4-46aac3ac8768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33eb222a-5dfc-4558-8f15-05b2ccfd9dc6",
        "cursor": {
          "ref": "4729233c-d05a-4505-8723-f9eb13073d37",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6aa5a8a4-84d9-4afa-b323-576599f6cf8f"
        },
        "item": {
          "id": "33eb222a-5dfc-4558-8f15-05b2ccfd9dc6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7a87b32a-9ab2-4a94-ba14-27b49c7f714d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3131e1-1b66-4ec9-970c-c59c073e8e70",
        "cursor": {
          "ref": "4f1f7b49-3020-492d-89ff-5ce144312665",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2f011c1f-42fa-4269-b242-be2e6b7d2d3b"
        },
        "item": {
          "id": "9b3131e1-1b66-4ec9-970c-c59c073e8e70",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "df6b3499-81fe-46bf-a4aa-28130b324059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22da3558-4f17-4268-9109-0aea4aba96b2",
        "cursor": {
          "ref": "03197b2a-3b02-4530-acd5-67a2c8be85a0",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ba525771-5442-425f-8a28-29e32a224f22"
        },
        "item": {
          "id": "22da3558-4f17-4268-9109-0aea4aba96b2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f504f1e0-deca-4d48-a5ed-e620bbf00b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08266816-9b21-4765-8d24-e308f05a0b24",
        "cursor": {
          "ref": "5038b30d-aed0-4895-b85f-0d6d2ff524b0",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a2f63e1f-ca09-4742-a3d2-875aee581346"
        },
        "item": {
          "id": "08266816-9b21-4765-8d24-e308f05a0b24",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4cea68e2-4500-42a8-88de-e1f3cc8726da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f33a97-5b31-420f-a3a5-07f2fa458632",
        "cursor": {
          "ref": "9fd28b7d-13bf-45de-b28b-cb5d24359026",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "20a5d08e-8c68-419a-816d-7ba7f9369838"
        },
        "item": {
          "id": "f5f33a97-5b31-420f-a3a5-07f2fa458632",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2e3279ff-52df-44ab-be75-94b10b06fe9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4c80fe-4f44-427f-9059-43b1179f84f2",
        "cursor": {
          "ref": "aa6f99dc-2ba3-4ddc-a51b-b0e85a9df71f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f24a6e8a-91a7-4c7f-b1bc-22c095ae2ab1"
        },
        "item": {
          "id": "3f4c80fe-4f44-427f-9059-43b1179f84f2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7014104c-29a8-4773-9fa6-1b88a0d51b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25dd4c7-df0b-4d87-8f5b-875cf62cb699",
        "cursor": {
          "ref": "77cc3291-7939-438f-93d2-8c9e44aa3e76",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "419b366d-5638-47b2-9e04-23381e6a9fb4"
        },
        "item": {
          "id": "c25dd4c7-df0b-4d87-8f5b-875cf62cb699",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3d6205a3-3aa1-4ab7-a6b5-521816db5d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22fab07-9b6f-4537-9f62-e6c2fc38e806",
        "cursor": {
          "ref": "794e1f49-dea1-46a9-8682-0b07215465a9",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "45374964-7b7d-40d4-b04c-6be0072a733a"
        },
        "item": {
          "id": "d22fab07-9b6f-4537-9f62-e6c2fc38e806",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3cd65434-f388-4e85-8ec3-45ec99d657ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24923fa9-a1cb-47bd-ae31-941504b7739c",
        "cursor": {
          "ref": "a83a16d5-0b1c-4db5-b440-78df90ad90bb",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c0edee3b-0eb3-40b1-a153-3c7dc1674f91"
        },
        "item": {
          "id": "24923fa9-a1cb-47bd-ae31-941504b7739c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "57cc133c-b38e-49a9-83c6-dd334fdd3422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba2c497-2bc0-4e47-b056-b9f562985f55",
        "cursor": {
          "ref": "24b24a8c-fe1f-47a9-b612-030648d401f2",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "77d41ab6-daa9-4146-b348-c60fa6d3b6ff"
        },
        "item": {
          "id": "fba2c497-2bc0-4e47-b056-b9f562985f55",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9dc182b2-bccd-495a-9fca-069008e50c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc41615-daba-4f7f-90a8-07b4f7ce0643",
        "cursor": {
          "ref": "f0acfc50-acf2-4298-92b6-f84db58c6b32",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "865ad8a8-d606-4397-9ff5-f2536dbe602c"
        },
        "item": {
          "id": "bdc41615-daba-4f7f-90a8-07b4f7ce0643",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "342898ae-2109-4e1b-a62b-d4857ab24e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cd3286-d696-480e-82ce-5e3edd689297",
        "cursor": {
          "ref": "9c841ab3-bfcd-4d04-8dca-a55e28fd934a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4a61f386-f761-4136-a7cc-9fefa5dd6a1f"
        },
        "item": {
          "id": "41cd3286-d696-480e-82ce-5e3edd689297",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cde9856e-d917-429e-b3aa-4286577df1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a75b76-0876-43dc-a611-f4db39c87199",
        "cursor": {
          "ref": "00907820-61ee-4fe5-b973-42e0007b1707",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "96792db5-34b6-4a43-aeb8-7f686572d402"
        },
        "item": {
          "id": "38a75b76-0876-43dc-a611-f4db39c87199",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "783f6553-47c2-4449-bbe7-03a8c84cfc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68490234-fc31-48b8-b642-2b6f9530532a",
        "cursor": {
          "ref": "5116eb11-aa52-49b9-a880-b3c9a4e0d79d",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8ce6a00c-b25b-4fc5-ad46-97eef4b23ae8"
        },
        "item": {
          "id": "68490234-fc31-48b8-b642-2b6f9530532a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "abeffea9-1a4a-4021-8dd3-e373790ea478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f134e4a3-aa2a-432b-b065-c060a00ec537",
        "cursor": {
          "ref": "7ac62fd1-3ad0-4187-a30b-13f51b82650a",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b8a2e0c3-207f-46f5-bace-777616cbe816"
        },
        "item": {
          "id": "f134e4a3-aa2a-432b-b065-c060a00ec537",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "69652cff-c890-44ab-a88d-98dc72897f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca501e31-00fc-4feb-9c30-c565089e7dd6",
        "cursor": {
          "ref": "24180578-902c-48ff-b686-6eaaaa9d7edb",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9a379750-e501-42c5-b716-dcee724b87e7"
        },
        "item": {
          "id": "ca501e31-00fc-4feb-9c30-c565089e7dd6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "50bda910-310b-4617-83be-87537cd9241c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a2a889-79b8-4755-9994-6002a6029328",
        "cursor": {
          "ref": "653b97d5-6ee1-4f2a-b451-f2956f5ac52b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e2cc14c8-fecb-471b-9d2a-3a8671f656ce"
        },
        "item": {
          "id": "64a2a889-79b8-4755-9994-6002a6029328",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4e124c67-5b95-4be7-a563-8a61950c7c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431a0c2c-649b-4f0c-a853-7ced4fa4504b",
        "cursor": {
          "ref": "bdcdc2c8-813d-4544-9567-c3ccc7c599f3",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e131b4af-e29c-4db3-b8f7-12e44285e4b2"
        },
        "item": {
          "id": "431a0c2c-649b-4f0c-a853-7ced4fa4504b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "585b0036-78c9-46eb-a0fc-7c3d87cffcfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd588679-bc8e-42ff-a386-8d77eb800182",
        "cursor": {
          "ref": "cba071ac-0047-4398-b135-a2073983d2d3",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7ac1dcf6-232b-4aca-a725-0e8e79106673"
        },
        "item": {
          "id": "bd588679-bc8e-42ff-a386-8d77eb800182",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "016a7fc6-4cb0-4932-b2a5-50ef61b3cfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cd8ee9-448c-41ec-93e3-a74c8ee662e8",
        "cursor": {
          "ref": "25b6575d-f31f-4c12-b353-5637e2e4c26e",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5832dcbb-7873-4e1e-a0a8-134099a41528"
        },
        "item": {
          "id": "29cd8ee9-448c-41ec-93e3-a74c8ee662e8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e46e0782-b8f3-43eb-8e57-37c2a50eda1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c14079-17f4-4fa8-8f0f-c17f861f9aec",
        "cursor": {
          "ref": "543229e9-d12e-47cd-88ff-5f4f65b1583b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7b324a22-0173-4b71-8abe-7229c9852710"
        },
        "item": {
          "id": "13c14079-17f4-4fa8-8f0f-c17f861f9aec",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "71043cf2-87fe-4924-a5de-cb4e907f0e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc5954b-5f1a-4153-b0f8-57cae7f1200a",
        "cursor": {
          "ref": "0201a5f9-62bf-4233-85f6-f310daeb7cc7",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a522cafd-9dc3-4330-97aa-bc17d812297e"
        },
        "item": {
          "id": "0cc5954b-5f1a-4153-b0f8-57cae7f1200a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "183afeec-9013-479a-9b3b-025cfaad9203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c314fc5-bff2-4ba6-8bcf-e706dd336583",
        "cursor": {
          "ref": "2c4b5189-ffc8-438e-a6a9-c098efdb83d6",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f4a793f7-629e-477c-aa84-9d6ab493fadb"
        },
        "item": {
          "id": "5c314fc5-bff2-4ba6-8bcf-e706dd336583",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4984826e-83fe-4252-a8a8-504d9f59c949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5081dbe0-6e92-49d2-a799-c530e976c97b",
        "cursor": {
          "ref": "fbaefbce-dfb5-4b92-8c7c-d626d4fea26e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d649d75e-421e-4fb4-b066-f72995ad8ad9"
        },
        "item": {
          "id": "5081dbe0-6e92-49d2-a799-c530e976c97b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7c5e2b4d-dd51-4837-a5b8-dc9d919693c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cd5d93-c7b3-4b67-b755-a46368eb3a2a",
        "cursor": {
          "ref": "ea831bae-162f-4683-a1a1-56a21a18550f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "43e7315b-3ca4-4325-993b-f271d5f2aed6"
        },
        "item": {
          "id": "43cd5d93-c7b3-4b67-b755-a46368eb3a2a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cdfe3933-239d-4d70-ad2c-c5e46e1c877f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9900d762-28c7-4631-8026-1922afcaf8df",
        "cursor": {
          "ref": "c0c0b057-6cee-4752-9a27-4c96c88a9ff2",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cbd92819-881f-4a6b-93a7-7c7a203d4875"
        },
        "item": {
          "id": "9900d762-28c7-4631-8026-1922afcaf8df",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c0a6edf5-600a-4b12-8bd1-29475d05588b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e9b7e7-60b5-48f2-b006-e96e7b46fea5",
        "cursor": {
          "ref": "5fc9c6e8-c0dd-4fc6-a8cb-91c112356e27",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8343b9eb-10fb-453b-9b16-611a0367c8ae"
        },
        "item": {
          "id": "76e9b7e7-60b5-48f2-b006-e96e7b46fea5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "107410eb-834f-4641-95c8-8a12e57bbb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7146c2-eef8-4cc0-b4a5-e3554b55ac76",
        "cursor": {
          "ref": "151018a3-8da4-436b-9965-7164542d7209",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "efc35c4b-27b9-4597-a451-7169df1effd9"
        },
        "item": {
          "id": "bc7146c2-eef8-4cc0-b4a5-e3554b55ac76",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cb09698a-8f73-4ae4-9d32-e115621ebb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3c8f0e-ff57-4e66-bff1-4dbfda54f67a",
        "cursor": {
          "ref": "7eca566d-6652-481e-b5ce-c044e32648d4",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a9706a4d-ba6f-456c-b9e4-d7e854fd59b9"
        },
        "item": {
          "id": "1f3c8f0e-ff57-4e66-bff1-4dbfda54f67a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e28e3327-3b16-41ba-ad3f-a55feaa2019b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbec19ac-b7d0-4e34-a2e8-efc7405bd09f",
        "cursor": {
          "ref": "92b48457-ca14-49ce-85a2-044fdbec5297",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b8d50096-a200-4d5b-8c7e-c25cb21d5a2f"
        },
        "item": {
          "id": "dbec19ac-b7d0-4e34-a2e8-efc7405bd09f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2b77215f-154e-4719-a4ba-293efb8eff3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9ee10d-7a52-418e-840b-a85219d75ed9",
        "cursor": {
          "ref": "6bdd1092-db08-430a-ae13-4a2f6e8db4ef",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "259b1315-d406-4bc3-8181-0704a27d4686"
        },
        "item": {
          "id": "4c9ee10d-7a52-418e-840b-a85219d75ed9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f00475f1-98ac-4a69-9aec-38920a6667f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acf0c4a-fd98-4f67-9150-8a433aa80b0f",
        "cursor": {
          "ref": "274a4c02-3cca-4728-bf73-1d7cfc930b85",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "06eecd11-c90b-496c-a507-935fc3296d65"
        },
        "item": {
          "id": "2acf0c4a-fd98-4f67-9150-8a433aa80b0f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "319944ca-a93d-4802-b325-0d242ddbffbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8dcf98-75df-4820-88ca-bff680da9893",
        "cursor": {
          "ref": "4b04d9ce-2d47-44f1-96f4-22e2f7ca8999",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f6fe4df5-635d-4125-a08a-3d9b1c32c2a2"
        },
        "item": {
          "id": "6d8dcf98-75df-4820-88ca-bff680da9893",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "caf277ce-6e28-45e3-81fd-f925d6654542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de543d7d-5d08-4a59-9def-4f6b2c25ba22",
        "cursor": {
          "ref": "f9887f43-9a4d-4658-9afb-2d553f482477",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "bd3c1c67-9acc-4cc5-b725-699cf8af9ec1"
        },
        "item": {
          "id": "de543d7d-5d08-4a59-9def-4f6b2c25ba22",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1b3a13eb-88e0-45af-8d33-1e10f9934bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afaa627-21a0-4f25-ba6a-6ba38868af6e",
        "cursor": {
          "ref": "9ad9ec2e-ffa8-467d-95d5-4f9aa4cfb6e9",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ee8f7df0-2b11-442a-8159-575fe3dafba5"
        },
        "item": {
          "id": "9afaa627-21a0-4f25-ba6a-6ba38868af6e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e694385b-75e1-4631-b9c6-74bd2c1ad152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3746c7-9a99-4646-8427-94593a6ee25c",
        "cursor": {
          "ref": "10d94d74-26d1-4cea-a8b1-575f4512da6c",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "377b55d1-1fcb-432f-a98d-f566d51e5c58"
        },
        "item": {
          "id": "6a3746c7-9a99-4646-8427-94593a6ee25c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5f86888e-d3e1-45bc-90f5-4ba7c0105400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6d8419-9797-48a9-ab2e-89130ecf3646",
        "cursor": {
          "ref": "00b806c6-1255-4465-a179-b0fdcb8e22fd",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "70f534a8-5293-4337-a81c-7ad83477ec14"
        },
        "item": {
          "id": "7b6d8419-9797-48a9-ab2e-89130ecf3646",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6d83789a-e016-4b32-a9e2-4b0ae63b85f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7eeaa1-01e0-4153-b7ba-e60f907c332f",
        "cursor": {
          "ref": "e1e353e1-6eda-43e7-9a6e-69b7f689c8f7",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "17574763-3a6b-4869-8c84-54b880bbd937"
        },
        "item": {
          "id": "0a7eeaa1-01e0-4153-b7ba-e60f907c332f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "918dea1f-247b-4601-8bfc-f1318603deb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a389d7-31fb-4f3d-a045-d768074775e9",
        "cursor": {
          "ref": "8c6996cf-d312-4d20-b325-2204ea063f36",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b002f9f4-e83f-4eb3-828f-3854338db892"
        },
        "item": {
          "id": "46a389d7-31fb-4f3d-a045-d768074775e9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "02aebc21-340d-4254-ae63-f6d0aba2b093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251153c7-b297-434e-9aa7-525dbffa71a8",
        "cursor": {
          "ref": "6784dcc6-5762-4b0b-a0e9-bcbe13278b09",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "47b00da6-f621-4955-8452-7c9416c8456c"
        },
        "item": {
          "id": "251153c7-b297-434e-9aa7-525dbffa71a8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8724271b-fbbc-49ee-a05a-17291fe654be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd83f389-5978-4f1b-b0b3-d20224e0fb9f",
        "cursor": {
          "ref": "6ce23dc8-8c34-467f-a308-988f00d0ae6f",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3d77e820-de38-4387-8e99-3df12a67eed6"
        },
        "item": {
          "id": "bd83f389-5978-4f1b-b0b3-d20224e0fb9f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e2e3a1be-9352-4a50-b7ab-59cecf6aa9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e097809e-7780-4b4e-b95b-a99b67cc6098",
        "cursor": {
          "ref": "33cc4eb9-5abc-499b-ae48-e3c1eb226cfc",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e2e4b14c-0248-47fc-b946-04e1a7f5caf6"
        },
        "item": {
          "id": "e097809e-7780-4b4e-b95b-a99b67cc6098",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "47cc63df-f074-4342-a97a-23781cf696fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d148acaa-f674-4778-9e45-55228047c24c",
        "cursor": {
          "ref": "11b45bd4-8531-46b7-9f50-5d78d2747840",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8bcb93e9-ba08-45b0-a594-8b3b55182c52"
        },
        "item": {
          "id": "d148acaa-f674-4778-9e45-55228047c24c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9174ada0-007b-43b3-b424-916c02cb9542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f68baa2-5cb8-4367-9776-636e403d78da",
        "cursor": {
          "ref": "c84bbb2c-7357-446b-ba35-f96a0cb950c6",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3793de01-a8ab-432c-aacc-7749cb831753"
        },
        "item": {
          "id": "2f68baa2-5cb8-4367-9776-636e403d78da",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e5ea306e-b3f7-43d9-8f2e-db5cac99fe02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf99ff8-720e-4df5-81e3-1311f77b2b16",
        "cursor": {
          "ref": "97f2ee0d-7542-48ea-b9a1-9f828a975ba4",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0f70acc8-1262-4b0c-b31d-f1a65ac2d50c"
        },
        "item": {
          "id": "6bf99ff8-720e-4df5-81e3-1311f77b2b16",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bb7e0ef1-8d21-460d-b997-324b5c16b9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097995f3-1861-49c1-9f6c-97d09789d6dd",
        "cursor": {
          "ref": "4287f2d7-9689-4ff8-bc0d-784f55c2f8b6",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4b883e56-e791-482c-942b-b1c46ad64679"
        },
        "item": {
          "id": "097995f3-1861-49c1-9f6c-97d09789d6dd",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "623a1b0b-40a3-48d0-9b37-5e9b01a6c720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7369e09-cf13-4956-9137-c351b93d403e",
        "cursor": {
          "ref": "6c22937a-ffc0-4156-9bc6-003556c45e4d",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "dda5b05a-1a2a-40ca-bb85-aa203af19e2b"
        },
        "item": {
          "id": "b7369e09-cf13-4956-9137-c351b93d403e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8461e515-25e5-4faf-be0b-a2effd994ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd8e6dd-4f9b-48a7-8232-6f7809c40df2",
        "cursor": {
          "ref": "312fed25-fc72-4506-bafe-824de1af1a11",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "25ab9b39-143a-4cd4-80fd-5c32e6b35954"
        },
        "item": {
          "id": "2bd8e6dd-4f9b-48a7-8232-6f7809c40df2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c6e96371-6944-471b-9980-065883f74d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f455b9bf-e052-42a5-a256-04566bad94fd",
        "cursor": {
          "ref": "9b6604c9-fb47-4dae-84ba-6cfca6f025d8",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "049fde9d-d0d8-43ee-9114-75f6b5c21e04"
        },
        "item": {
          "id": "f455b9bf-e052-42a5-a256-04566bad94fd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "11b03f4e-4e6f-4c31-a53a-7afa2fdcd547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec7ec6c-f24c-4bd8-9410-c1fde4d96c2d",
        "cursor": {
          "ref": "ffcad307-75e4-4e51-b0cf-3a5d01230ca2",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1e48ec4e-db36-4bf2-9097-b9abefb4a5fd"
        },
        "item": {
          "id": "9ec7ec6c-f24c-4bd8-9410-c1fde4d96c2d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b73ec64e-8d78-4a11-86e9-480b5b8b6af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1bffdf-5b40-4776-8b6b-bbd2fdb84684",
        "cursor": {
          "ref": "184ff6da-8567-4768-ad6a-d537f8f40237",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bb3088f4-ade2-4116-8651-30735516b586"
        },
        "item": {
          "id": "1f1bffdf-5b40-4776-8b6b-bbd2fdb84684",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9ff190d5-f30e-4013-951a-70a72eb38209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5339fe7e-a129-409a-b79f-4fff60da4351",
        "cursor": {
          "ref": "c63ade8c-666b-4c68-9c6f-de1e4d14ced3",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "38e0ae02-4366-445f-ac58-08379cd8eb9b"
        },
        "item": {
          "id": "5339fe7e-a129-409a-b79f-4fff60da4351",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "079450ef-9b4e-4488-9b9f-644112df36d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c22bf1e-68fb-4aa5-8e1e-db0b336dfd21",
        "cursor": {
          "ref": "efc9ebec-984f-47e2-8382-836222961ff3",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "41e0929a-4db5-4cdd-9c4f-f6b0f91c7e7b"
        },
        "item": {
          "id": "7c22bf1e-68fb-4aa5-8e1e-db0b336dfd21",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "eca898c5-3bdf-4ee1-8be2-3beb91511316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6067c28e-4bbd-4cfc-8eb6-f8978cb1a9a2",
        "cursor": {
          "ref": "bd191aa1-95c1-4a50-ac86-5edc1ab22cb3",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b53e6bef-bc1a-4e94-86d8-b86a79547c9e"
        },
        "item": {
          "id": "6067c28e-4bbd-4cfc-8eb6-f8978cb1a9a2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "72708011-bbb0-4a73-bc08-a5ab559526f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f30eed-fca0-43c3-a517-23b48d1464d5",
        "cursor": {
          "ref": "ce240d68-0852-4bda-b4c7-789a1bc89d86",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e2fee6b2-86f4-4fd9-a466-7e0341e1efcb"
        },
        "item": {
          "id": "e2f30eed-fca0-43c3-a517-23b48d1464d5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "03a56a25-2684-457b-bd85-46aaac8ee0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27ab28f-67a5-4a12-910a-5cf8564e4f15",
        "cursor": {
          "ref": "0cf59dae-9ecd-4d34-8574-b81d37383dd5",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a6ef57f2-cdc6-46b5-bd03-ffbf79a38b3a"
        },
        "item": {
          "id": "c27ab28f-67a5-4a12-910a-5cf8564e4f15",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b9a1edd5-7b0d-4a93-9df8-1880e2abb378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adff365e-8f4d-41a4-a5ca-74e2a41ed1a5",
        "cursor": {
          "ref": "2c94fad9-7a10-4e08-86fd-fef4f0ef722e",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "dd88d8b1-b7fc-44d9-b3e9-07a69c2c7f93"
        },
        "item": {
          "id": "adff365e-8f4d-41a4-a5ca-74e2a41ed1a5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fdbdfac8-3c05-4964-9f3a-a7e12499c8c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5826c8-495f-4ed2-aac5-b13d74848ba1",
        "cursor": {
          "ref": "c91f2df4-7d42-4ed6-8ea5-ef71b8662bf4",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3c4f704c-1cb8-4446-8679-6db7af265074"
        },
        "item": {
          "id": "5a5826c8-495f-4ed2-aac5-b13d74848ba1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a38a75cb-cbe3-4fc9-a3e1-01453db1eb4a",
          "status": "OK",
          "code": 200,
          "responseTime": 686,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d9d449-7bca-4007-8ae3-a263e8d0a8ec",
        "cursor": {
          "ref": "a651958c-a1ad-4b14-9c61-21aed7732430",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e04cc810-a9c8-4a60-88d9-12a6e3e884f3"
        },
        "item": {
          "id": "d2d9d449-7bca-4007-8ae3-a263e8d0a8ec",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ed1b9171-4e8a-4389-92a3-9b287f7ac998",
          "status": "OK",
          "code": 200,
          "responseTime": 2126,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "00af66fc-5397-4a81-bfe2-6ed5944afa7f",
        "cursor": {
          "ref": "4be28831-a1e4-4adf-91d3-15427efb942d",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "07a248d1-6ecb-4263-a90e-def38203b8a3"
        },
        "item": {
          "id": "00af66fc-5397-4a81-bfe2-6ed5944afa7f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "941a0dc8-f73b-4580-8045-ae935af439ef",
          "status": "OK",
          "code": 200,
          "responseTime": 2107,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ca6c5b-92a9-476c-98b6-aa2382cb4643",
        "cursor": {
          "ref": "dd917d82-60d7-460c-a30e-9f00e51c5498",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8dbd76a6-40db-4aef-b906-76da1957be46"
        },
        "item": {
          "id": "67ca6c5b-92a9-476c-98b6-aa2382cb4643",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9c795554-f1ae-4185-aeca-459437ab42fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ca6c5b-92a9-476c-98b6-aa2382cb4643",
        "cursor": {
          "ref": "dd917d82-60d7-460c-a30e-9f00e51c5498",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8dbd76a6-40db-4aef-b906-76da1957be46"
        },
        "item": {
          "id": "67ca6c5b-92a9-476c-98b6-aa2382cb4643",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9c795554-f1ae-4185-aeca-459437ab42fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff00d2e-07bf-4dd9-8a3e-21cee150e552",
        "cursor": {
          "ref": "2a847987-50fd-499a-bb80-96ca9fb6baf3",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "785a8df2-ad18-4467-b858-f48c3ded4b5f"
        },
        "item": {
          "id": "3ff00d2e-07bf-4dd9-8a3e-21cee150e552",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "28465424-dba0-4c4e-9045-6d6fe5b6a09f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c2ecf7-e5f3-4108-9f33-ec94cb25b266",
        "cursor": {
          "ref": "a55d8c46-e2ec-45ca-abd1-c9d481856a71",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7ca8443e-c4fe-466d-9d4f-00045164a293"
        },
        "item": {
          "id": "46c2ecf7-e5f3-4108-9f33-ec94cb25b266",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8817726b-7621-4668-9d7a-d4614b6ea1f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}