{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2e0b1350-5b00-495f-8b24-741544739d19",
        "name": "Clear Cache",
        "item": [
          {
            "id": "aed9d8bb-ffdc-4daf-b1e3-f6e685dbe333",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d205fe3-8443-4f20-843c-4320671cd35a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "08daa142-9214-4ab8-a3e9-b2bdae813967"
                }
              }
            ]
          },
          {
            "id": "3c64aca6-a6d7-48ec-ad78-43061434c0b0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fff05c0c-88fb-4d0c-b4cd-a51e170027f4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fe118f96-49e9-4d21-b267-9bf9e64beb5e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f13017ba-4206-411f-8412-56a617fca541",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "aa319559-7d14-43d6-a9bb-335b8cebb61f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ee9e0379-e36d-45ec-860d-4eff2e5bf505",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9022b240-f6da-454d-85c0-ca0e104025d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd37591f-5fcf-4bbd-9234-ddf9ac90430f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "93f52059-d1f1-4064-94a4-b7495b221ec1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a770219-e2cb-400d-87c9-15b0d1bd3398"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "83ef3c5f-fcbb-4870-b82d-b619fcf62b7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80191c65-0ae4-4b54-a6a1-781ef3a838e8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a21530a8-e6f7-462d-953d-99bb4a7feb4f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ae6e53eb-b06c-4dfa-bc28-8649b188a6b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1a1a646-88c3-492a-a1ce-f4e027b94017",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec424bda-4c28-403c-b7c0-498bd4070398"
            }
          }
        ]
      },
      {
        "id": "db63c84c-ab02-4196-bbf1-59554be5d9dc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "380d1fa1-9f05-45ae-b8af-1cfb2723444a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e576e4e2-e1a8-43dd-ba63-df887cd584c1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "257e9b7d-7194-4ef1-8956-4c6b15bb6865",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b92621-bc24-4b65-8795-891529ec2f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65057da5-989c-4d02-9760-2f542b37c23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee2ac5f-7f3e-4a22-bad9-bbc1fe3cc90c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f92ec8-b1e3-4f91-8be6-4b983a90b24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f93f92f-e1b7-4b0b-9e4c-0e6b1626cc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a765178-66dc-4e41-8b17-d3c3d4904be9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09198c96-9fff-436e-8007-7ec60eee662e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca7241f9-5ce6-4c70-bf6d-bca7827fa87e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "43c781b8-7f31-47d2-b0c0-755c456097a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "580c5bb7-a11c-47b6-9613-8d4e93d1b36b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d127e06-58fe-40e5-8416-d245fdaee11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "262a2e92-f5d2-4730-aa50-730af619dd3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1843791-1be5-4232-b5d4-eb155ddcdc2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a6cd8b-229e-4246-a85c-bb906dfdf44c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "25900eef-6ff7-45f0-8403-548b1c2dd1f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "816179b4-7b8a-42e4-b0d7-2bc535dce3c7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c7f1347-1ef7-4083-b630-1e987c9d0a44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "adbacba2-e47c-4a84-a1a8-dc23ac95a5f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03cf3f97-6b6f-4321-984d-63bb633775e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c0f7e234-358f-49c4-a63e-0654c151cb5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a10da05e-af73-4075-b425-15d63eb86181",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1e02087-9573-4282-a5f7-29987f0bb988"
            }
          }
        ]
      },
      {
        "id": "7d002ea3-3ca3-4fa5-baa9-5ecd7b1428d1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "86b120b4-3e9a-4e8a-9005-34f0065bcbf3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b64eea3-168c-4dee-b815-8f52ad5dc27f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6cc9adb7-91d9-4ab3-a424-c3d4fab85abd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4815bd-cabc-4e56-8c77-7b0a5922ffe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d18617-a075-448a-9993-d1d6cb630293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77da5d8-7a73-462f-891f-9d7bd50f2a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2acf7b68-c0b8-448a-b7fe-90806dffe688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b05baf-4d24-480a-bb2d-651439681ded",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccb8dc2-025f-4ddc-8d65-986fa259716b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6d26fd-5daf-4ba8-859f-ebb85ca3fd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09a2970-52c9-43f9-ad34-af7c7323977a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad5e95d1-b074-4fbd-a14f-dea6872fa7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5c80cf-5798-4f3a-bed2-d523a76ea3eb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6b8674-3e1e-405f-af49-32ccdc170092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ced855-64ba-4bc4-884d-680f6e782e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb1ba12-83d6-47bd-b679-897a27546097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f3889cb-ef4b-436a-b675-f57ba5e917d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8f9f92-9e5a-4b33-9761-a2a512b7386c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7543f209-2ee6-459b-bc3f-cebac7473a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d0b78c-3543-4442-b993-2e0f3bc91260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e66aa98-b6a2-499a-8171-dc2101c232d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "182010a6-4a01-4147-b229-d399b4b79eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8791997-c0dd-470c-a54b-893869693dfc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4a4465-6947-4dab-b7b2-240e170671de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b866a64d-86b3-45fd-b88e-6bed54447119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aed1fe0-64bd-4172-b80a-26bc4594d340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7055add-988a-42d7-a9b9-a98453ace28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e53fddf-a8dd-4672-b798-1618cacc4828",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c186134-7847-49bd-8cb6-ab11e826d41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b2a50b-696c-42ec-a77f-0567937eeea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8915a561-c726-4d79-9c80-e84fd87406d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57af71ce-22fb-486a-9d15-937ff3592728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b8382a-1772-4576-8832-58c00e7a9103",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3655fd47-ed6c-496e-98bc-d1268e772f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ee2f98-f82d-4f69-b1f5-c1330f557996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eeb47e6-0a97-4fb7-9c4e-609ca66443b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c46f4b67-70f7-4150-ba93-6a0e1e224c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1346699e-b175-41aa-9120-2d8269730a58",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30fb361-0a87-4c68-a20a-8652849e27ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f70bf9-e733-401e-8e83-f12593894d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15182ef5-726d-45b4-9da8-654e72e36e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de31943a-f390-4a31-b1b9-b12b115515dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f78be07-40fd-4c07-96c5-58961fb8c997",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c2ca5d-b8ed-43f6-a13d-dd94efa1f3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ed86c8-e6bd-49f0-8a2b-3b85dc3c8d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0ec68c-d6ed-4fd0-9e60-144c9b37901b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7a08a07-4e7f-4d71-a260-939b293d424e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac32953-6ea0-4fc5-9f64-c46ffe29c5f5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d788192a-9174-47a5-9d8b-430596a4efa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2118108-80ab-4c24-a4a2-ded94699ffd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed91982a-0a92-453e-9835-a02ae3dd405a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b44b805-4a10-400c-8dd3-a4093415a258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb05c4a5-278b-4029-bfea-c1af3594bf6c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9765517-a6b9-4340-a025-9d4c894e1580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab892c7b-ee64-4a89-84b0-81c67b9c7898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbc1ee2-45c9-4730-99c6-f288cae3820c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd7ac314-11ae-4502-b74c-e40c1a9c73e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf6187b-5dce-452e-9cde-d6bff7a3d56e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f74c39f-7361-497c-b372-974498be7ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a70516-2f4d-49d9-8f35-45de9ac5f356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be0dbfc-b0e8-4cd3-a87d-052c62be8fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ee88a24-5502-4c6b-815d-4d5d8442d0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21d0c3c-32f2-4553-81a3-1d193a08528e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9d4f4d-28bc-405c-934e-357bd452b353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9027efa-a43b-4249-a93c-af291b6030f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e7e8c7-0301-4aaf-ac6c-e17044e78c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4166f009-b50a-45d3-9281-67528e2c4a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d66357-10b9-4fe2-bdf3-80da88955fbb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69c48c2-9444-4e1d-b1c4-a834e1b761ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552c643e-4d6b-49b6-ac7a-62883953a8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412dc3a1-d60b-4fdd-8b10-29ec8b3c0a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69ecb169-686a-4c4b-852e-8f891f41d216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27007daa-f73f-4f64-a586-0a17df284ea3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0104e1ae-05ec-427e-8d01-a5b18d5c5759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5573c1e-72b9-41e6-8223-1a1250e8143b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67876755-496b-46cc-b6da-751b931c7aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2974544e-f287-4158-a1b6-6183879ee49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81bb07d-d6e0-4e18-be46-62454a04282b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707d12ae-66d8-44ce-99c4-ac01826ca578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca714f88-7757-4cdf-b69d-d871f3e2da80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37682bdd-c357-4ef7-9fb2-972ab16365a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3ee30ec-823a-4e30-8751-b86789dfd29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b126aab5-9501-4c58-9f41-b889c7a294ce",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5996d1b0-19ea-413d-aa58-f9efaf4a213b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebea7f24-9d74-4bf2-b95e-2d240008ea56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dc8a2f-6b01-48b4-8f4c-63bda32bd0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30912838-a6ab-4825-8c86-57ff05214de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb723bf3-fa9a-4610-8948-fd8bdeb72dcb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29fefa9-f2eb-48f1-bd12-47f99dd38055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05af855-c9a8-4555-aae3-39c02c8d7df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb0cf9c-7522-4b50-9cee-f099e3d4dc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f55736d-a48a-41ee-9cc8-32768cdaa9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c09115-a48b-49af-bbda-e71bde221fd1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644cad28-b286-4ce4-af22-04a09d96085b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3537606-1881-4c49-ae17-c2cd46193e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da582792-6819-4ed4-abb0-fceea443b02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b65232d2-e825-42d8-a014-96d5f498b42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253c7e7e-46cf-4376-b998-a65aebc94fae",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1b93af-2635-4276-b549-f2442286ff12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ddcb9f-ac01-41df-abd4-725d816eba57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be49fb55-50e4-4c6f-be6e-d80ee0b50cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "253219af-5713-4e5a-a3df-08596145be3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071dc53c-a8fb-4f76-8911-9ce00c1444e6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6915b24f-9842-4d08-8b19-4e559d76948a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c57541-be3a-4a4c-abdb-6cdba7e25f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc27279-ca3c-4029-b859-832ebfd2f1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3dde52-e3f2-4236-9190-4aeaed40d195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f861a4b4-e2dc-4b7f-a0c5-2e35d8c4e96a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf96194-a2c6-4480-a301-b22f2755c1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bceae1-e6a3-4892-be05-95afbd99bd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e8e777-4b4b-4a1c-8633-03e5c93fbf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b46d9b3-691c-48aa-b87f-96a59d40f4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e724b17-9701-46ec-968b-1fa74c9c7274",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d6ea9a-95f2-4a34-a9e2-b2f608021748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86620c47-58b0-49eb-816b-a1cffb159612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805136a9-c2d9-4776-97d9-2852a676cdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c12199d-639a-4ef7-8a8a-63368aee831d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8847f42c-5320-4ab8-abe2-f98eedff1ebd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208a89fd-585c-4304-a7f0-55871ef35445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809cf881-1a16-4efb-a35b-7e1f715ab1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40e8a0d-ea3c-4200-8dbc-50267f120e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6189400-5e2b-4c9c-ade9-fca1b6b238b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca62ed7-7aeb-4e92-bf01-d217c2f551e0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc61057-8609-4518-95a4-52458b20b46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057e541c-a82a-4d7c-a7c4-ccf491edf32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e69e1e3-3f5c-415f-82a9-e392f3e4a86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b046a939-ebd1-4520-9a84-bf084518873d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb51b64d-f106-43da-816e-7bff09732b0f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20cdfae-65d2-4aa4-8faf-28434e03af0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e973ff51-9741-4242-8ab4-279ae7c324d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0302852b-2b61-4c61-a794-17ae256528ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a683194-cd62-49d6-be33-b89111b57b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c381ef-ce2d-4b96-b0f2-5e664d73ea78",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddf8c8f-5ea6-4d8e-aec5-b43e95fe9f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85753a97-24e5-4fa5-a15e-d7b03f75028b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2746c582-633d-4f70-bcc1-8092e5b83515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36c197be-8422-4c13-bbfd-6687ebabca4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92b41b8-8412-4ef7-bb50-bcc3d7136503",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9d1266-68ca-446b-8ece-a11ff11e57d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7147b24a-aa37-4506-bd72-42bb5916359a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac90f6f-adab-49a3-9cb6-7ee65a8012cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36e99d37-bd51-471f-902f-5d95bbe632b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e840a064-1d8b-42c0-98d7-4db6e2365ccc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc6987f-87e4-4db9-9b9f-4311f59fe960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4810168-28ae-4d9e-8169-ee70483adb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cca553-1873-43be-bc43-9bd67ad944f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ce6f30-5be6-4354-9c5f-b240b2f615fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed39226-f5dd-48d0-a605-df3f3882ecf9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162dcccd-4724-461d-85e6-ad4f5220a485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d3a8ac-6a16-4cc1-8dd6-453a3ab54948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cf5465-b2d0-4810-93af-24d9156648c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6516513-5e9d-40c2-85f7-23c4ead39202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9798a6-ebf5-4ae3-b3d5-70bab76af3e1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574515d1-5d0b-4254-be48-9005eaece206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1396e8-5bec-44da-ba8f-c1f46396f424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9fa1ba-0fa7-4738-8ccb-1862d6d96d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14610e2-e45d-4911-81f1-0a359e3b1368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5009218d-f22c-46c9-87bc-4d40c83b8957",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec25667-1655-442e-90a7-969117111210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57ff266-f4d9-41a6-be8c-3209e5266a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3066ba-ce92-47a2-8d39-204515d82b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89236215-ee95-4697-ae4f-70dede8765e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb5a07d-8e71-4071-97b5-10d2db4e862f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ceb853-ac19-4408-ab8c-975026cf5cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aff733c-468f-42b6-9c0c-4ae930dfccba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c56145-e1a9-4d69-afbf-fbeef12f0946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ddaac7-d625-435d-a4af-082e8b8311f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a7f728-3523-4e1a-9789-fd4ab1b7eccf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6099b5aa-d070-4c4a-96ce-8ee27252c79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9408344e-b9be-4624-a1cb-9831678f31e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735249c1-ea73-4317-9243-b1f6e8bc06ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d19590-6e2c-470c-84ee-a2df51cbee0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f74c5f-3296-4bd9-822b-9f219d6a7b42",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2e16d8-2ea2-4f5d-915a-30988f342ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9384dc9-0e62-4b92-941f-c3f8f87decca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df50779f-a5ad-4e82-a982-d98135a29535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a0487efc-d9ec-4a72-8b07-f72d4455ca7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd444b7-def8-493b-b9e1-4403583d670c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ff8d79-dddc-4cec-9cb6-602df8e42e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ce6da62-c388-4f5c-8047-1e34e57434c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503db222-3c0f-40ef-a502-443ae6f64913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47587b91-098c-4ac1-807a-06c8fe0e9576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efe491c-5ec9-45b5-b249-6cee2b3b91dd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ef3ccb-119d-4e6a-a147-120e350e0a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c2122c-5508-4f62-9f43-53d5c84f9d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4e3ab7-c96d-45e3-bba0-d28dcd291352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "089758f7-d8ac-4b4e-90f4-e71a98c221e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72e1438-3ea2-4ea2-bedb-840d1d959dee",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123ce121-ccc1-42e1-ab74-26389c083b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d7cc72-ae4b-401e-8523-07fcc370b9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ae2814-d313-44ab-8b46-d1c540ed379e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "79a51c29-d258-400f-922b-c2b371fee486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6042ca-207d-4f1b-a53c-202642d795c1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07b83db-3c85-4c6f-a8cb-e3d07c4913e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c67eae-9686-478e-85d5-9ad17d503283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6da597-5682-4367-9f9f-f5a4354882a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fecf249-5b82-4039-aebc-2548c6e168ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c4827d-a812-45d7-abf1-73c228184dcf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef563ab-bf44-4e46-a76d-22109344a16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49c2bec-944a-4232-8335-918486c0fdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ce5d64-8726-4178-90e0-0ea9880a7627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dedca63-ca25-4d34-898a-d61af505a40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6f56ac-0696-4378-bf91-931df377dc8c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d97836-47b6-45b2-9a04-50a8dff22492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2a548a-0d1e-4ff4-8e05-b0cb432b3a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1dcf0a-6455-4827-b965-816507a022d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a0f9a9-4dd7-477a-a54b-d5bbfe65b516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83df1cae-fd1b-4718-8006-62e7fa07fdd4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee2dbcf-7469-4505-bfce-eb045deb43ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a43b6f-de5f-4628-b5a5-5f21d2658865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d609561-2adb-48a4-a526-839714566e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bf89654f-135f-4b57-b4cb-c032dc16b27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb210679-5093-4684-9d54-dbe35ca11eac",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d87da1f-2e80-4c0c-8769-e3432b323896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddca5098-da09-498a-aac5-02dc5798e374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af6f910-a4fd-4798-94c0-d994137a227b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf588b2-c3cb-4488-bb30-b38660243fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067ca8c8-3312-4c27-8a3d-71fb7948d0c8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b8b009-5213-4741-8c16-7768df9b4c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c534d1-a19d-4ba5-9158-a5311764d94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd44dd03-398b-4f5e-b72a-46890c11a42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "680ed941-d00a-4c86-8b9b-e027c40dd94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82356d36-94de-4dd0-988c-ae9892d9d502",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90ba0db-7f3a-4fe9-a0cb-1ef8d1ca02d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c29b1ff-3de5-4b2a-89a2-82e458947765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d471c3-24de-4521-a0de-4981c4bbd637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59b28225-7a88-468e-84f8-54e214ee327a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0065971-2ec6-4f23-a055-76eaa57bb699",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1079e585-fe88-4d03-9d20-98055804c2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df0dac4-0fff-425e-9a0a-2300be54f145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c55269-674a-4cc2-96a3-e93c5a68b15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "575e5dcc-6ea0-4795-aa91-f21c6cd4c21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150dd6df-16e7-4234-a2b2-8455c27e87d3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a011a33-e609-4a9b-9291-7c480b3836cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131d4fda-ae54-46d8-bcbb-df5c4bda4fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513e45f9-3278-41ae-8b9e-f5c87bde1b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce4e8f2-dde8-4925-806f-1fcfb2454c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb23554-7bd8-4468-bd1f-f6d16867ceb4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a84b148-e147-42bf-889f-48d68159587e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09ca4ad-b588-470a-9bc0-2da8f0a9fa74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e476d08a-41df-4762-b4b3-7bde422bfdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aada81c-25e5-4cfa-aa5c-740bfc27c638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19cd4bb-0259-4e70-a68f-721e79242537",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997b82ed-9639-4c8c-a922-f44046dc2fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad79dae-1618-4c5b-b9ef-6f635ac4722a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac7b828-b67c-45c9-8a0b-39a3ad704f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a06b360-a08b-4f8c-8907-e1b37bee616e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a8f85a-0574-4ba9-8060-a40e2be376d9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9089a17e-6814-4bbb-8729-f1452d2056bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2637ff-88f5-4157-8afd-2601ec97d96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35acda96-6295-4702-b293-1d3f5cce73d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "efcd1b77-6438-47a1-9c73-45e807444c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3dca8d-371e-4168-afcd-dd55d9a16bae",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaedab3f-1f87-436a-aa51-280826ccf504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec248346-0776-4390-9b5f-fdae84091843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc28635-0877-4dd9-9f17-4868d53838fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a018e01d-20f8-44e8-ac25-76cc8b67ef53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb0f2f0-a900-4a12-95b9-9f3c2c54544e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f93e65-bb66-4c35-a651-08db1d01beff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6167beed-e25c-4a57-b7e7-b788a37d608e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1be2b2-fb82-41fa-8092-03d9c82a9d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a84c548-648e-4f86-9ef4-6c1260a0d1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cad45a-7538-4f10-9136-7f4e56c563fa",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3c95e1-a073-4921-bd3a-9ec43a99f693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16650faf-da87-4060-a7ae-aff2c06364ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da973af9-eff6-4f87-985a-e74ce2a90ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a60c252c-693c-4747-86be-1056e3de8097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1519bc34-e83a-4249-94e9-fbcb1ed818d3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac96210-37a5-4dbc-8c17-9ab64650c100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513b8656-0655-42e8-b56d-01251a736dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662b4e00-2060-4b7b-85aa-0ffbb1d5cd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0af8d4-3804-40c0-9c2a-583063fe896d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f9bec2-f2fc-4406-a158-6b6bedcdda82",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023c2ebc-123d-49cf-a673-458d0a62b8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbbf214-7d8b-4748-a2c8-2ae7896b181b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8bab8e-dde1-4831-b18a-805893a7e73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb9eacf9-c9ff-4908-95dc-3ceb8b7e2c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a2988b-3d65-4829-9b4e-e5baca597861",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2423cd-b857-48c6-8848-2169f7b5cb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c5b888-9bbb-41ea-923a-6cd1e5c1c6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88029e96-c749-4744-b7bb-04b2126340d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee723f1-2dc2-4dc5-a275-b37a948cce1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82db62a-d49e-49ae-a077-aba605031358",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707cc8ec-2c0a-4855-8836-f180226ed238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03247336-624f-4110-ba6f-1dbfd1d021e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aab9dcd-0d66-4273-af19-20e355b42b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "75a19c72-385b-4f83-a9ea-66961700cff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ddcb48-2958-4375-8164-63ab956c1b5e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c8fe38-fb02-4166-9c9e-1265274dd8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aec74fb-0a90-4f8f-8e7e-473cb0ca5887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e212c51-2816-4d89-8539-723fc04c747e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f9ffde-0ad2-4f48-a23b-1a1f11b51186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d652cbf-c4ef-45d5-9505-cacd59bbca37",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1895779-e10d-46a1-9580-f01208a42f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55950e55-af23-4304-9328-fb8563f8dc6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d2dbb8-08a1-44fb-84d7-6015b0e56d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b35faf-7ddc-4e07-b9fd-4ce43bb34b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e4f1c1-a93b-4387-a8c9-db9236ada8d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1adc61-a57e-43d2-bb08-c9ab64ae4fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3c167b-fe1f-4ca0-bb01-d95cc57c245c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3a22c6-094e-46d5-9e5f-c8105e55305b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2961dd-336a-4be3-aa2b-6237a8303b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b018cf8-6a7e-462e-bb23-23cab12b0ae3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e5e48b-bfdf-4d15-b42b-b89ad3b20ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf69af26-4ad8-4a62-b34a-006d875141af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40ca8e7-6c94-4749-a74e-c81ad5d50347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf50cb4c-c814-4342-8c1f-94e11c6bcace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b604c6-242b-46c8-bb98-59323edce2a4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306c597c-fbcb-4288-a793-baad78a82b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6705ae38-adae-4b85-9c10-f44532db4e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82474880-dc1d-42c8-9c08-6ba5c925e583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c641af5e-4297-4396-8238-0bb695f46f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fc0cee-b1ee-496d-a3c0-92dc133edd9c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0bfd35-e767-4a2c-add4-ed8326c34605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb3de9b-b44e-4f8d-8318-e7a9c69f531c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c23bc1-fa84-4ee5-a6b7-33b7a4339d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "506496b6-fed2-4daa-993e-ba6bf6c4ab2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5de2bc-ab89-4fb0-83f3-935c8fa03ba8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e5e3ec-9612-4d71-8960-efba976661aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2acbffb1-9fdd-48ab-91af-c68e7c7a99a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639578af-531d-47b5-aab4-f578d514b92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b72e8fda-23bc-4b0c-bdd4-ac03319bef1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4230cd29-6d6a-4477-aadd-469697d9d1d7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b48ded6-336a-4e00-9fd1-7784054b32e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5807578-6ffe-4711-9fb8-3876bde4becb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fa72c3-e1d4-4cda-970a-ad9058b947f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f59d1b5-f5bb-4282-b67d-7fe3cf2f75f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cccda5a-0588-4ae5-a5e2-19ee6b327707",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398d395a-cb8f-46bc-8a76-84c010664667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8668d37b-5ac8-430b-a530-29b683059bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b99edb-f33c-4059-8e1f-a00a64e39a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bf50d4-6852-4bb0-a4af-f267379546c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ee3545-b1f0-447c-87a9-4e2af99e5c2f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643b6080-1201-4d83-8103-ca6bf1d81c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833608d7-5bdc-4777-adde-3c7c97d96dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a3b7ad-cf73-4ed6-942f-42c276416bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b60dcd67-0782-46e0-a40d-1065533f32c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c59566-c31e-4b5c-935e-68fc77ce145d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3deb6ca3-4bc5-440f-95df-d0b902333f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd46ad36-d43f-46f5-93ff-37ed5fdd310f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d340cf4-9c88-4210-9a2c-0095e04f84cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "764c9349-94ec-42c6-9895-c5102d7106ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec894c3-475b-4e27-994d-8ecd716de9b0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405a2a8f-fec7-4fa5-88db-9154b3e59514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c69307-8079-4309-8094-1475a1916fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7277f89-3b3e-4dee-9155-000e042ce018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "54aede36-2824-41a7-a7d4-89cd76b1654b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8291f83-624b-4fd0-bf67-5c0dd8b2a640",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83958163-581b-49bb-8c57-cd18a95110cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fe8c67-2e45-4375-87eb-3ed292a27f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71aac8c9-7531-4f1b-b62e-3c0d4631094e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88d88980-f818-4b84-a13c-86b77069d27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0551c03f-2632-47af-a5ed-19033a13e070",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4716b8-b07c-4e22-bc52-d6f50c8fd4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83dfa6c-9e20-4e92-838a-bb4c989c7ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423f2887-d96c-4536-81ff-cc658e319188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae2aa59-9178-4e4c-b56c-418c434cd2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f17868-c5d0-418e-a111-2c70b00c4712",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f42cc6-c727-4cd2-919e-811779752f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3bc1d5-1990-41d0-89a7-882f1f35b8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7592d62-48b3-452d-b34d-3a330a114f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17962027-55f1-40b6-bcde-843ee233981b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06f935c-a5fa-498b-8e12-2e2de919098b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e5441e-5571-4517-b4d4-e2cace8f1511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e483deac-f70d-41bc-8599-c60eaed4a3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1410fbf9-1910-4f99-ba4e-59b30cb811a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4414be7-619e-4360-a372-f5f28d2fe3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875b77f0-dca6-4a7f-8229-4a595a02be1f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db1715a-35dd-4a4f-a502-d14b7e3407b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0193bec1-b650-4cbe-8db2-319115647478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd36f34e-615f-45b6-aeb1-db5570840214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ce5f0c-9bca-4bf2-9996-895945c32e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3c5087-2a40-4bd9-bc78-cb490d5ea4d4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75c7655-78c1-4a50-9419-3c5f0f5fd17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef41ec74-0842-4952-b11b-5f9bb0c85cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecd3dd4-f127-4880-a803-94d72b055e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62966f4c-e026-43c3-a230-56223586b4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2208357a-5d8f-49e7-8fe8-5f10cf04dcff",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514e407b-83ea-4146-9e8d-17df98a442c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20da4ab5-831b-496c-8444-085eb9dd02c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc803bb-1790-4e42-8655-8892d326962a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3deffd53-449d-405c-8556-59134b1f06a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5349356d-c484-4092-9efb-ca450f545be1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b01f73-a40e-47b7-8b85-5d8201e02361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f055c68-adfb-4a59-ac39-c2b9c275777b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f367c74-3951-4b94-b204-6da7d46c7ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "469a34ff-8e89-49e6-bbd1-7996b2628d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e52bed-5766-4d90-a059-27c7fed9d189",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae24a39a-88f7-415b-a383-27f66d57e039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0faac78-2d4d-4b83-8d38-3879b14f027e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9a36c9-4259-4d55-8020-df5dc0d14045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d4d3992-e0d3-4fae-91ee-0c7e4ba9bbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad3930f-fc9e-4045-bf8e-98599c7a6dc6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b98716-7abb-493c-be45-dcc24d0d66e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7464ca99-3edc-46b4-8ad1-48d94a55d830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab872f3-34ee-44ab-baaa-e847035d2b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54a5b575-0f39-4075-ace9-0137efbab8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1604bd-02d7-489b-bd8c-715b77509b28",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0eb4b3d-d472-4b19-b1cb-555b1ad75353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e66106-9bb8-4045-ab31-51f3e07eb13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2a74ac-d406-4eda-aec0-a3fbb60373f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30f10ee7-3de5-4c7e-b387-518a0291863f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207f8d7b-4875-4f32-b6ae-b7887317d22a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d1bba3-4cd5-479d-8512-ceac537b9b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5c94b9-39e6-48a6-b34a-f5e7014fec47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d0af45-bf4c-4b85-9494-d7e4d8f5997b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e702e09a-61a4-4c97-8701-a5b23c685fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f9f5cb-0475-4f5b-917b-09fc94909e14",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abee549-f42d-4974-92af-ba992272111f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8cb161-678c-4628-a6db-fb4068899983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da797a0b-de75-406c-95f5-b57cf3959e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3991d04f-caf3-44c3-beb0-0124986cbc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c1f01d-64c1-4198-aaf4-6827d94aa2b8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3ead57-2d58-42a3-bb07-d6005050d85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1578593d-4474-422c-b2d7-e6907e864f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b0799b-0c80-412b-8470-0dbdcfe54def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10ab94e8-c450-4ed9-9825-a6a4c53a724b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e45986-76f6-4bbe-993d-4821ed8bb4d3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d564a1-1e7f-4a33-a28c-19cf08d24aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57f8588-2baf-4caf-a6b9-bc6683c685b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb0c06a-ab37-49f7-85bf-06dd8fb968dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf40b4d2-6f9b-47a4-af64-0e046378fe16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4ae557-e7ee-4585-9da5-ae20a8e820c4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a405cb3-aaab-4aaf-85d6-851a3d89282c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234d601d-e3a2-4ef5-be9f-6742dec6e856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f882fd7c-2c9b-49a7-9032-4f1d9db2b4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01dfae2e-5a88-4115-b0fe-a1708215b036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438f413e-eca8-452f-af2f-ef99423aeca2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed011b02-4513-4744-8858-ee2cc4c91f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d81009-8d56-474f-a1d3-e25933d9d48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fa20ec-5393-430a-8039-85bc868fd572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d92c6b3a-53cc-4413-9786-c160398a9252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357ea97b-5004-4a89-9ee1-ebb6a2c85cdc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3985cc-132b-4f25-9c97-ac920e647d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b55b27c-3950-4bc9-8b62-6140cefb39a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4930c8-c8e5-43be-841e-e261428181de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "084cf3df-3dd3-4cb8-a10f-f6cc10982982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec7c6a2-ac7d-4f07-a000-326e932f168e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a30d752-9907-490e-9789-86e6a91e6c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32c0b22-1fbe-4e25-898b-11092bde3a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b815056-5264-43c7-a353-08f604d15c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "128a75f0-d320-4bd1-84aa-03672e444b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2426c8ab-a12b-481b-8766-65cae387d147",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342c9385-fd48-40b9-bc2c-15042297bfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed75048-f6f5-4400-8f80-fbf85cb8dd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d9f114-7a02-4047-98e4-5de9641f7b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8d9d70-9867-4686-82a3-f725fd751930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe14f2d3-14f5-416b-a7dd-cf5c88f61f2a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8d53b1-ebaa-431d-8ca3-636f2edb15c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5a760a-76a9-4429-9a2a-0623698f001a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c702d7b3-47c0-4792-8fb6-31c164598e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb38f63-dc6a-41da-910b-d1b365a9f67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170bd7fa-f8c3-4668-b575-daa453022914",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218bdbed-2f56-41c5-b148-f5656752ed00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d5ee28-4339-48cd-9e0d-2cd21c129102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e5f54f-cd8d-4f86-9dbc-e8dd94fd2312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "98a79364-97c0-4924-8bd3-dde302a7e48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f8535e-969b-40b7-a1b1-cd63e37a2977",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040e6209-d9f3-43d9-9703-5e2aa32f572e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "273976ab-dff7-421f-89f7-777b862789ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5d24af-00e5-4353-9a8f-5b63ec1e7eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "36ed79bc-a4fd-4a04-a77d-9a7c3dfd47b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e6b7429-0f7b-4b78-a99b-85073b5ef679",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce7c7092-8c76-4ebb-a2b7-8cfa8016f5d8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fc7220-041d-49c1-9b8f-8150467c75a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "905770de-5281-486f-83e9-4d9015ec947f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ef5e81-7aa0-4076-a159-3c1d354a38bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56f477be-5b41-46b8-b254-46ab16d1b685"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d5971f6-1d9b-436c-9266-b2c2a370a7c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d281983-c2ce-42af-af24-65d125635387"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccc09e97-da68-437d-994c-565202701eab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "664a274a-5035-4c7b-a8f3-de448c6ef418"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97e3cbdf-ea75-40a1-b26d-e6498228f5c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b1112c9-cabb-4457-9564-ecf17f371df0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c0e41cb0-3a1f-4fa1-8bec-6df8686e1771",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64076094-04e8-4aab-9b35-d7e915118f73"
                }
              }
            ]
          },
          {
            "id": "931e48fe-febb-4dfd-870f-4b58fdb0bcad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a26c0341-c384-4002-abe9-91b66f8f5350",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4a7e54e9-3f7a-4c62-a93a-180291d4566e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d04b6e-16ba-4ecf-b690-e60c09db3cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dd5851b2-8b99-4921-b619-a55a054ab69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6f3a02-d269-4a75-8600-0cf8d0e2de08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba705c84-8e0c-40d9-bf9a-0e8c02b2633a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef1dfe74-0d04-4eb2-9c6c-64bd497a7e3c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaff1327-d29a-4f97-905b-51a2f148e1af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd36c3e4-ef64-44a8-b781-03a703181bef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c02f2ad-6cdc-40ef-9a3d-aee697ac795c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1c5d50c4-06f5-4832-ba23-39b03271c9a6"
                    }
                  }
                ]
              },
              {
                "id": "b88be2f7-04e1-4070-867b-f55c30e7a724",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f94f3d90-d1cc-498b-8978-c20940ccb2c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3b72217-1402-49bd-bd42-b1106c24d113"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06d99cbc-f97b-45d9-a90e-8f75d5c908b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "41182a36-b3cf-42ed-b3b5-096b3feb3b6c"
                    }
                  }
                ]
              },
              {
                "id": "6ef45208-9c55-488a-80f3-bb08831bc853",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86e7cfc7-c662-47e4-86bb-780b089c21a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab87d260-6047-4dc9-9f1b-eb938b63030c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5e202e8-1048-4df8-9c7c-94726f64265a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e5387fdc-e1d6-4529-b18c-9cc6e2978acc"
                    }
                  }
                ]
              },
              {
                "id": "edf5c4bd-8561-4558-bae5-70ec5f2139dd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66ce7fe2-d826-47c1-89f0-563c90a4024f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f504714c-99fc-4baa-976c-c93baed0d883"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be95faef-a895-44b7-b3e1-188b3081cd5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fe892107-7314-4068-80bc-69a54005cd72"
                    }
                  }
                ]
              },
              {
                "id": "fa70c137-5029-44bc-ace5-f80222bb5d66",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1da99073-c414-4a3d-9dc9-9f3b382c7353",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a8872f6-53f1-44e0-a39a-ca39d91b0211"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e20ead8-d425-4a96-8dd8-bad02d541dcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "25dd900a-0d86-4f09-b371-92c685a02ba2"
                    }
                  }
                ]
              },
              {
                "id": "c6b81311-5eb9-4f83-8bbe-e95dff6e8392",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15ec4c56-a067-4f09-b2be-f43df1be9910",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9637676-78cb-4735-80c8-9b25ad6920e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c98ac5c-7673-40bd-a747-97fbf054f765",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0657956e-c392-4453-b85e-a5e69c7680cb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "864aef0c-7865-4640-8a38-d0ac03eff515",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f94c0c16-6bd6-4896-9960-84fe1392a516"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "68689887-4b01-4e08-8103-06a4255941e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "535285fb-9110-4c01-8d2e-d42258483504"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c8f65cb-3faf-4f1f-995a-a851d5f238f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "926cf38f-e8c6-44ce-b0e9-4b74fb1f4a55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee2e7337-4231-4d31-bc11-0c1d9334e1e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "517a0cdb-dd4c-4f27-a302-623754e8ed9d"
            }
          }
        ]
      },
      {
        "id": "d02522d4-0192-4cbe-a268-fd7d87d290f1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1cb4ff6c-6061-4acf-84cc-b53ce4f81fd3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9721863-3684-4291-81d6-ac90a9b73921",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5e9c7aa2-84e3-4599-8803-399bdaaf1f79",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efa10d6-917c-4fbf-8cce-6640982aa1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cdd4a1-baaa-4fec-bd68-6229cf285f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9907b96-fea4-4f62-b68a-9c70d425781a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfdc0762-28a8-4baf-a646-dffc26ce39a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc06b43-0e7f-4a7a-9ea7-be969c7158e0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858903e1-314b-4d1a-a706-470448aadb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65b1d94-2a51-43f3-b337-04595a671059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633f2d23-8f0a-48ed-a9d5-78b90b6ce919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a06357f9-48ca-4b1a-93bf-9739622c0ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5840f5e7-4536-4e19-8c75-e88431a69de2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c8680a-5f87-47eb-a2a2-ac77c0aa8ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f0d775-82fb-4688-a900-9adacf1dc95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4368e9d-a9fb-4b55-b428-c4aec77b4ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f77de94-d694-4588-bad8-fb49d9695e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59634290-e8d5-4707-b8b1-4925742d2804",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73bbd57-2c2d-44e6-90ee-214eac67145c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43dc5445-cab3-481c-a8fe-08a5c5543474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3005a6f9-6f33-4b55-8a3f-0404eee4ed6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08ceea3c-ca96-4101-b47a-92a50252b5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d3a332-672b-482d-8ba7-043f8281a343",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd643495-0c4a-48ac-bf0f-9cf60cd90fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e131259-ff80-4ceb-92c2-bda33922e83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747de7fe-50a4-462b-8ea0-b705f548f141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4077578-ff06-4ec8-a6cd-491656d19387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5537bd-5852-45a5-881a-e2580dd0c27b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c3b3d1-e18d-4579-b86d-8cf2e9d86ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51354a7-188a-4a2d-b336-3269eafa9e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd94b76f-529d-422e-a755-f2b23c22fcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1018cef3-74d4-4716-9e34-f687716b6ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536e7b36-e086-4a5e-854f-938fb36402f6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c84292-559d-4329-bf6c-7e055f438e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3299d132-65af-4ed5-b0d4-d8f36e63fc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278db8c6-444c-467c-acc9-b90a2f1d0a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d85f69e7-170c-4949-a1d1-4fe483cf6815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d74a53-5754-433a-9d5e-86e7c729948c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb8605c-ebe9-4419-978a-889c6e9b9afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be3d518-7dc0-4972-966c-38865869b615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2646a92d-4e36-4196-b1f9-6890e99891e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe749c83-f34e-469c-bd3b-5eb14ea6ff38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cc5053-11f3-4c19-918f-18b3f4b36152",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0711b86-3b3f-4a4c-9b99-1d1c670e948e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fcc5352-12bd-48e1-9342-085304227169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6eef9be-f199-4a52-a9f4-47c3093e75a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a08c66f6-2f55-426a-87cd-4736bcf885cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad288e1-57a3-4679-9b97-214c549691c1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a76c683-1721-46d1-a2fb-a5a87e11dd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea420cba-570e-4ac1-90d4-02805b5f90a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10202bb-1d32-49ee-b26b-3aa4d7b13ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35f0708a-b5e8-4215-a4d0-9d2e8c3614ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63956355-0921-4b0e-9ce4-f9ba5579e149",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58f3d9f-cdbb-4fbf-a5a5-0b9985924824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941548f6-f033-437f-8373-488eadd000dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d11cd8-1390-421b-a07f-407862f656e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "333dd1f6-1705-45bd-87d6-6cec0c0ebedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cc4f88-2aa2-414a-8629-1413b22b1839",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cfe41c-4f23-4ca4-8481-1ac51b5457c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b09d819-e8d0-4ba3-bdaf-2cc01e1ba7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43c571b-e544-40bb-961c-180b40eb38e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "baaf58d8-17d3-4eb1-847c-5e0569be1994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a92f19-1092-45a7-a4cc-6246e70221f2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf184569-d762-4eac-84b0-9d3881a8265a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6964370-bddc-4efd-8c48-da06675632ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb3777f-f748-4491-8291-8d908b93547e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "570a390d-968d-4311-a9c5-faf1ab8763c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07593b7a-bed9-444b-89b6-2b6a3bf5368f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0ac4c3-3dd1-4736-bc5c-806388820bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de308a58-7e90-4e3b-a1b6-694ae493f375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c80493f-f87c-493c-b69e-156cae0391ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1b7913-1ed4-4f26-9aa5-dca68f3c69d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad58855d-1f5d-48bb-bab7-2acaaa86f9f2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45980c3-4988-44e8-af3a-4b18fc07bfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd254aec-7459-42c7-8715-ddefd1f9d03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a263e70-b402-48fa-b424-0aa07974456a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "67d0abc1-827b-43c5-9196-a1059dd8d3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab32ea1-d7d4-43a2-bd18-d385ebbf41b6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbace8c-b869-487c-948b-30041b155036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d514bc-f5ca-4c39-8b55-1cd3084bde88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f285097b-6409-4a9c-b2d4-72b9e938ba5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a537d4d-4503-4084-9837-1e999352cc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e773ab56-363c-45a1-9c5b-f39c12ceb3ee",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d20cf9-ee3d-4b15-97a9-7b71342483a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03b46fe-20e6-4133-9526-78874f51ac10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeada37f-26ed-46c3-a78f-7d8d58d7f533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "36325700-10ad-4a02-b826-2ac303198a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed199e0-9c3d-41e0-afad-95964cdfcc94",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3750c713-d42f-4e47-aef7-02816a14611d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e0e082-ee90-4331-8a42-750c36d25295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0f3b9f-d21b-4e88-9c5e-f8cfb6a86f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4250a910-b57f-4672-b6ac-50503d956c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d7222a-3b7e-4aaf-8531-85757dcb7afb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff902be-de14-45bf-b214-0605c28eb93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4442c097-9bc6-4f38-bfdd-2859f4957c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81158e4c-f48e-4300-9594-9c38975720d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ecb66b-fab3-4179-a872-d20c7cf6d23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0a0d35-04c5-4654-b3bd-1326113801e0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109e880d-9e00-4f10-be7c-dab74fefd837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff131ff-0edd-4052-946a-7e5abfa8f1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bb17e0-6c4a-4e33-9a6f-6ff4df0e18b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e817a11-bec9-44fe-9ee7-1055a3f892b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dc8ab4-9255-4430-9a49-0acc69e5d08e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d923e34-c83e-453d-b2e0-11e0693cd2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e0bd9d-dc9e-4020-9bfd-28440a5c5e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c88368b-b79a-4a43-9b63-295d648126df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27ac7f75-ccb4-48fa-9506-8779055aa662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68414c19-fa60-4b6c-9795-a61db8e1d530",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4264a5-8b4e-4680-894e-26def2c0e7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439e771f-5cea-4190-95e3-cf77191aa517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c502c04-3ac5-4a54-bbd3-06e7e11acfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6261dd2d-8c69-417f-a1dc-cd7e18a8b4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79400d1-0a2d-4f96-a3ce-7163d53be32a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b739a4-b305-4acb-b644-fda9270d5dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52b19e2-6547-4272-b2dc-927bd981e324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47201af-781f-47bc-9451-abe2070669b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24baa840-4f6e-445c-93d7-8957d16d09de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781e0688-b24c-43e3-a2c9-417f36aebae4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256c79c8-2067-46d4-8894-819a351539c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152c59e3-94a0-4e69-a5e7-f1e184b4f10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfe8443-ee18-4f49-a8ee-ef53123cf100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56cbeba8-9727-46b1-a9d7-8d891b664c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f7b7ef-8ace-4e87-bade-9e6b9545d8a9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be7f026-beea-4fda-8629-69378c5ddefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691ff0da-539a-4a3d-af73-bcd9c0dd3226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede9abdf-dc93-45d5-8305-db92fbcbb87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bce6aa2f-1b5b-465b-9433-6f60f6bb5aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb0cf2d-d2f7-4753-b5e1-1a79dbd25240",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f41d1a8-dfa2-4df3-8cfb-27081ab7d7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82f8cc1-0762-43d0-b8d1-7789d2c6bced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401cd9ba-477b-4823-8905-c0e33cb93e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80296b0e-460a-4d35-a1fa-913042677c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b2698a-c1c5-4f48-be5f-61ab5f45dd34",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b210e475-6308-4646-8075-1f98686787a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1954a231-b571-4b1c-a6e0-af86b952e2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26f2d98-a3d9-4d59-ac2c-b9fc3ed12105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fcb667a-5014-442f-a074-e89de26279e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ced7cbe-0f08-4ca2-8142-b69f02499343",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3a5ce4-1ebd-4dfb-a3b1-1896da97ff34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912106a0-32d5-4fde-81a4-56080bc19565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de884b3-65b9-483e-99b9-30c52ae0426b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b08c027c-7e68-4056-bee2-3aa2d5c65190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dcb343-a45a-4535-9881-57137a0ca079",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fece6b5-0f0c-4178-9f58-ff81d9c406ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272f7247-9cae-4811-9204-0827df913e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f79c04-d656-4c15-9fc4-7cc16ebee5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9971f7-f77c-42c1-a1ed-59d84122d954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98853afd-c888-4662-8cc0-cf1f082035dd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb1658d-2a95-4971-bf1f-229db40f2f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3666ce1b-c532-4656-b2a9-bee454d06764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1e012b-5ca5-468d-b34e-0f151fe995de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad4da18-cc09-4b4b-857f-01807f09078a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8813fd-5831-4fcc-94ea-c238295fd67b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19657ee-fb86-4e47-89db-6aabfc665fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e83c8a-933e-4fe4-8e32-fbb288a84e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23698f4d-e592-4c23-b17b-824bd106178b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4edda5-9f66-447e-8541-e904b94a8cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1322d007-e6c5-49eb-9f5f-2851405a406b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb238411-a930-4657-a4c9-043c91bf16a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b47cbda-d437-46a4-b3a1-704952621b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35246cc7-8057-42e0-8ec1-c44269064a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12fbd146-5627-46a0-91f0-717fc94355f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e05311-93e1-4cd4-aa9b-9b298859705c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b333e9a-eda3-40e2-b038-004d5754922a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a96458-ae28-48a1-95da-45739e998e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7da91f-fc97-44a3-a7e5-6afe2a6737e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af388f34-2e1f-44c3-ae06-db561c209628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adf838f-4018-4656-9fc9-3c841f562ea3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2d2cc9-ccb4-42ed-b0fd-004f113814d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76489541-8176-45a6-9029-34ee4e5e5365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad0ac14-00db-4e34-85a9-7e72156cc864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d752075-ff8b-4524-b74a-875f043ee945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddb4d41-08a9-4b86-88cc-4865d7188741",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe49a3f-8ce7-470c-919f-05a7b48a1c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb83a04a-3ae9-4b8a-a150-4968390d2fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90280534-871f-4edb-be55-ce0d8befa883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd172c52-511f-4b07-99f0-9ae26b9a96a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b492e82d-19a2-4b50-b166-f34cc4e75383",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79973ef7-3806-4c4f-b6d8-bd5e655a917b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ff19f2-374f-4752-a598-17cd3de69118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88e10f0-538d-4f87-84ef-9b88ddc28380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33e3a51a-665d-410c-8f83-54ad53b00abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7cb160-3f37-4839-ad12-d230f77623cc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e1ad10-cd75-44de-a4b1-0d340e4fd3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95e4e39-f215-4ece-9c79-085db5ac6530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41785e2d-be55-409a-86e8-9de64b908ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7799b46-4ae3-4431-8ab6-5b805915672c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "06c094fc-2a07-4501-b858-699c4d43db1c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "207078d7-8912-4062-a3c6-98306fa71eb6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48263244-91cb-4a5f-8836-dff7da677129",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "741497bc-070e-485d-b1c6-06c423233848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8123761-07b1-4aad-acb1-04e175de90d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "787087ea-e844-429e-bc8d-b32245e6429b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "748b0b76-6b0e-486e-803b-87e33aacdcf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8382240-eff2-41d6-9d26-ed00d83341c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd22d410-622a-41c0-8383-ec8e0fdfdf2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65781c5f-ced2-4cb9-9678-04d167c5bac6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f8970c1-c1a3-4166-be76-cdf0f85ae2f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "21c29799-53cd-4c53-a1ad-76a133a04eab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3105179-ec50-4df1-a446-b453af4d4b1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3040cca-efd9-4cda-bc7f-5f34824622ac"
            }
          }
        ]
      },
      {
        "id": "6dfa0abd-f45e-4c7a-b207-2c0087267cc5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5d1ec4ca-af2a-4c76-8b83-f099676b4b85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7dc0cd4-4c72-4049-8ce2-a22244d44950",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80f29c7b-4dd2-4ed0-af44-6b5b1ad98aac",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3219b641-5c6c-4b95-875f-f7d6fce0e07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21b9ab8-83b1-4f03-be58-98c37b75ec56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72dfa41-0ff4-435f-ada2-e57400c2c260",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9c73ae-196c-4b72-97b0-acb6407d243a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba183fa-c991-4441-95fe-828ca012ea93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48aecc92-0107-4e20-89a6-a09b79bed0be",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e1b666-9e73-4cf9-9511-43c7dba24f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2846165d-2853-4a1b-a90a-1a90cdacb77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b73b942-2893-4bc2-a3e5-0afbffac32e6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb4ebce-7e6c-4eed-b7cf-327fa0e66ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996c9891-278e-4b88-9629-e0531571fd55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd38aff-2a8f-4dec-b680-9666c008ba74",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9bbdac-e92c-44ae-b01a-8454284b54d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfdf43ff-a2e0-4720-82aa-caac4c2c5b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd9b697-e265-4347-91b3-c49c4313e516",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6a53f3-6636-484f-907b-a50416a9ed88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c613d461-ec5a-48f0-880a-4dad22237d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd86f1cc-5088-437d-a843-861ae7199907",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e76994-2f76-4a94-8581-051e914f3929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e490cec2-4d0f-4a24-87f9-e63b1d90761e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a448a6a4-7a68-40b4-b241-011ccb167131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56e17e2-d562-45e6-9457-b6053d0655c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2764eeec-3be0-4ad6-997c-02b939c0766b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7832b560-34bf-40d1-a660-20e7b2623c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bfb622e-9b50-4aca-9913-08d3d5a3ec11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51162f62-e122-470e-9d93-79b06823e918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0c1754-66fb-4778-9068-2b96dc44e7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c71ed75-d0af-4949-bb4d-44ff5ca3aede",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b665bb3-3b5e-4733-bcdd-efffe5d250c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d5ce0a3-b1fc-455d-a3bc-d475cbb0fc2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e176a7-9ffa-494b-b781-356e4fb24f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94678c39-5340-427c-8094-0320e6824d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8ee280-19e6-43a3-8fa6-3679717c1e32",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc32ff0-f684-4ea7-be56-c64e50438b27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7798355d-3d7b-4826-b57c-82445acdfcdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d45e6f-9afc-48ff-9b2d-1a0d191eea06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d174b2a-8415-4e46-a576-1c81aab1a908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcaae2c-c117-4265-8020-8d52642c2cdd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d5f407-78eb-4a49-9948-5ecc89fbb329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a43ec11-8355-4a7f-88a7-f02267f34e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79a7f12-b970-40fa-8b62-93f96786f08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3e4eb8-50e0-405c-a9df-21125b53a9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f01733-7b10-4822-b933-9125ca91bac5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dba30b5-2f87-4405-a17a-3bae4b11e311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435d98e4-ccf0-43a3-9a58-31d42e8a1f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7192925-bf24-4fa5-b5c9-63e88cf6d2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef68ae3-2f1a-4bae-9bcb-af0d0d40c378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b2d19d-3dfd-4d02-bf54-162e2f9c4cd5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebcae9e-a72a-48ba-b789-53a09136aff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beea164f-52b2-4915-bf12-484b029ceb6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c0a9e9-7efa-4eae-8cfb-dfe09e6b4936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774550c1-5f65-4bd6-bd6a-1ec33ad674f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6953796b-5350-4f9a-8f52-b6f1d8663160",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14514c7-ccb3-431e-93c7-15226990b0f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35cb9018-42ba-44e0-ae67-ad82f6c23949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5580faf2-653c-413d-968a-052bab0ec5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82969ce3-3693-4aeb-8096-9c8dd14f6d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c11b61c-0130-43d9-b791-7c4db8755b30",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f70949-1567-4c36-91ad-f3d4bb512b62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6927109c-0259-4da1-a4e5-5309807342dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ceb2153-0927-42cb-9c8f-1e9d169ea83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4e794f-be1a-45c8-ab97-d301429cd455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4314cc-ce74-4b3d-b86a-3e860fcad854",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e367fa-67af-40ce-baae-2cd42c3b6ca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72dd8314-83d8-4467-8cc4-959d1760d98a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dc80fe-1306-4e61-b3a4-683d47e3e04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a6a3c3-ce32-4acb-8e47-85d3fd940526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29f1257-a869-44d8-82ad-dcdbc18f7d31",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56f51b2-700b-445d-a699-49ab5e80cb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3d9ed5-e01f-431c-9866-992d8b607671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af02422b-a653-475c-9f1b-ed9fda0d29cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16ecf05-c7e9-48b4-bc4e-1f5423507d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ed25da-2ed4-43fc-ace9-666b2cc444c2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e876f3-e8a1-4943-aeec-8ee368125d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239d3c66-3929-45ea-a008-87eb36e7eff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b80a2d-c12c-4732-a619-a602b5f9d08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2acc09c1-7bb0-426f-b01c-222fc0d58065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63990266-b1d8-4980-865e-21fc9e40d038",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4791576b-81c9-4e0b-a7e5-3cd206a5c42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6bb5ed-4692-4ab5-9a6a-d4ede84ea6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a79e69d-d216-4ff7-a205-94b5f07246c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe30225-d98e-460c-9e21-16cdcf801958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3a6cc0-cc00-438b-9394-75a2722dbc35",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d08d79-93f0-432a-891a-14dcecd5084c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c297e4-81a5-4e7a-8d1e-759b0086e29f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99d181c-b40b-4aa5-a22f-f60e58027283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcaa1d3-4c8b-428e-a0f2-249cac3e9173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084519c9-8902-4d12-a0e5-81e9136382fe",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c552979a-203a-4279-b37c-1cfb9e585841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099446f5-cd1a-457d-b203-3afa1a17a8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57448f88-40b7-4606-bbbd-ee1400b0ac13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adc9906-5824-495d-8dee-800e06c04acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6258855-4d4a-4306-8de0-4a9a0112cafd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5582afb7-e9cc-424b-b3f5-ed87572ecec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e617309c-01ed-4a0c-8792-ab2a02a312d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06afa8ee-85c6-4382-9565-79e964d03c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45746cad-4e66-4146-b735-10e81224de71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf1a979-7c12-40f0-b4da-e83acdbb05ee",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4689db36-1b6e-48ab-9832-379a5827e51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a47f3c-c222-4b84-a856-86a89ad2a494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed4b401-06ef-41bd-bd8c-cd12db590706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2a5f51-1f68-47f9-b35b-145213636944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df58256c-395b-4124-8879-81fc27838868",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9aa72d4-5d1b-4a0c-992e-25ace786b0ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b53a64c1-de99-4147-8d6c-83c4964137ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e10b00-1457-491f-872e-7690ef2a959a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3663656a-590c-4a61-8081-f67e5f1623df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a9f4cd-e19f-4f7b-ae03-1ec2501adfa4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6325e5c-85e3-4f8b-8c23-6fed399bb000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f75f841-401a-4e12-ab45-5ce31f293ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3473b622-fee7-4042-afbd-da27da2bda9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb627d61-0132-4d3f-b671-ebd06a4d494d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7169cd31-88b8-4dba-a9be-e66fedf99175",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087ce6dd-b13d-4cdd-823c-22569f76a4fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98a7bb7d-d10e-46ed-b3d5-20351b59819a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec6ca08-dc7d-4175-8acd-c8eaa39f9150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0850e6f-3753-4544-8f0a-bab65ece5dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6789038a-e032-423e-b704-c2dd592354a3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9e0c6f-2545-4c96-bae6-fa14e14edce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "004096ad-89b5-44f0-b293-9df50eae2c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5906f55a-f784-4fb9-9ff1-504b9c6fa962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdc10c4-01cd-409c-ad3e-74b233b25ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5b9dec-32a6-46a2-83ae-5464c1816281",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72c6f6f-7f48-456e-ae36-8882e2e98a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69808d2a-ab1d-4976-a967-7da86282b767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e541f891-ea30-4136-9290-eb65f07703b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4691c478-cfa0-47d9-a7e6-72330fd70604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419fe095-a5fe-4f36-94c0-47223919778e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f917e196-f20d-4ab5-9cb8-7293d7386976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "213f5a25-2550-46d9-bd3f-b1273eccfe62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7c4dce-aeaa-4efd-aa70-250e50b6f964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d7a747-b92f-4667-82af-17bcf6b9a33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943d085e-e736-484a-bc37-3fb45e031e60",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e43a27b-201f-4e5a-8baf-3020699b31cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5494945-6db6-4fd2-9ccb-507f44f3154f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3c451e-26a0-4ff0-85ca-8a2f8a4c279c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171f51f1-7753-48bc-bd1e-aaebdc2d8a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350f1f21-a97e-42b5-8481-f496c9d3d4cd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e99d33-9906-4d30-89cb-4ec20f9c0741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "188442ef-e1c8-43e7-b381-27780bb0ebb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a4cb58-5b59-4b2c-9e00-d289c219b2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b088e4-2e13-48a5-87b9-66731dc56279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3fe6e8-7a9a-4ca2-b6d7-e2e548ac0b35",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492646fa-1d72-4f15-803b-e56f3c9039c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb323ec-cb35-4b61-94e1-e8e11817a590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9358a072-594d-4b4a-b480-33037261e2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20adb43d-d4f1-47fc-81ba-652f91ee5a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4268bca9-1bce-4783-9576-0985f973075f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969a808c-4081-47de-86fb-af940835ff82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50fe4d9e-620c-43f2-b66b-636e250deb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e456f9b7-adf8-4f22-a7fe-65baf2f54ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a3c83f-04c2-4ce2-aad8-10dd0592c708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9e9bd6-c812-4fa3-9e69-ba352059fa2b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0623e3-59e0-489d-9112-a0b68a0eb71c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "465b83e7-5c19-46e3-914d-56788f989b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c58f472-e208-47d7-9044-094a2a343a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abff21e-d3c5-40e8-bf5e-fd8fa8cbaeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c1f202-6a8b-4096-b163-0884ac7c3cc9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a81120-8d24-40ac-a0ef-5ae2f2de4ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97c9633-c867-4611-9e0c-c0c05ae3fa35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429e700f-ee00-460b-99c7-f378b5bfa0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86002f7-b1fb-4139-b176-6af40e05c5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76883f2-04d1-4181-8ca1-51838c1d89b6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e03ade-cb53-4dff-8640-65c3d69e24d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6699461f-6ca7-442b-8c15-d47c3a70363a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7934c466-8ff4-4c6e-ba53-0030e447cb67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c284e47d-fd5d-4057-a024-ec9c7c634b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f91a47-3fb0-457d-b669-32398665a8cf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c87d44-15ae-46a4-8701-34600462a6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029b2250-1e7b-4be4-addf-fcf80cb98f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f249c482-6738-455a-9a09-131d0f207887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0cee7e2-de49-4b05-9ac9-5ab86fb5bcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74569bcb-1c55-4a94-be48-06b72369786a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f86ab9-0962-4cb0-ba3b-c9af65028a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1390eff-d2c9-4fc3-a512-18cb29f45b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7880b938-5688-4746-b937-6cc1ada8d4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164bb0b8-959f-4667-8ce4-9b7074639d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1034f49-698e-4270-be1c-9c641556c1d8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382994d9-52b5-4487-be5f-1fba252ada68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e6a8af-af82-4e2d-94d7-fcf4b784064e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c09d81-695c-4d3a-97ee-54de94b066c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae670b5-42a2-45fa-ac9f-f3cb77498c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c303875-9691-46ea-bb78-7e7477350ec4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2484e3e-9848-4a95-8a35-5de7eacc2503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11d9d7b-f29f-4077-9d50-64d16ab9735e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48a1276-fc73-4ca6-9d6e-702e596f0132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd24bf56-453a-48ea-865e-598512369311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b7fa23-9bf0-483d-9f6b-5638f6809d7b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcb9b9b-1f1c-4248-805c-91e73406daf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7baa14c0-279f-4a1b-aaf3-9f9c59c996a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f76850-71f3-4520-81c2-24b76fde6aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7f9873-0517-4ff1-bf16-a98cc25cb87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096a76a4-d0ff-4d27-be16-4553a93f1101",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e161832-26eb-4e35-b348-754324b9dfea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60719fe0-b4c6-45ac-9e05-a1403d043fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "667bc2d3-3692-42ce-a509-800f853627cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a4619c-8ffa-4d72-a3d3-1dee129093b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0095fa12-34b1-43b3-92d9-c563939054af",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ba141a-52c5-41dc-bbbf-30cb79501f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd69c661-7c2b-4081-bc7d-8831e4f3451e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19746b82-feba-42d8-ba6f-5dfb962ac7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02fa6cdc-facc-4668-b9ca-2ca097b3f71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e361a3-2c08-4ce5-ad5d-9ae0e3c330f7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d79510-9e86-440e-88a6-e13cf6a73231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39f5ced-d4d6-4207-804c-be958476beee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11b773b-2347-4c06-8a37-cb109787d0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4580cf-62d3-4c9b-a23a-b717d545031d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04666345-2ebd-4a81-a02e-20272defa5ea",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85161750-40a7-45b0-8461-2466c150615a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74198c5c-deab-40f7-b83b-7a87753ed2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4d63f5-dfa8-4e07-ab4e-a56da35a5f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df3c3c5-5c7e-4c0f-86ee-6b77db1c0cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a825f12-a4ba-4d5c-9b0d-4f9b0a4b279a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5f451b-e604-4e19-b59a-f72d69d3df86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006c8e6f-d6b0-498e-a06e-00c7c3914789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "803980ab-6f10-4ea5-affe-ce1b0c6904d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebaa95e9-c305-4cc6-b3f8-150a8f8407d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed4ccf6-5d41-4c69-acb2-0f88d82b27a8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7883814b-3fc6-41eb-a4bb-193a69a49d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec48971-526a-4eb2-bdc3-ab315df18ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be63603-39da-46a4-a9d7-cce7b2a7544b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be441d11-1216-4bb4-8d0b-f243efc868cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb6f0f0-68bf-441f-81df-b74ea7c6caaa",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c93431-4149-4571-af9b-06a51ffdeba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a56d312-67eb-427b-b0d1-8a250f1dc140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6dddfe-6c9d-4cd2-8810-1d44f94c2302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ae04b9-12da-4e84-95f6-48e7d3887c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df007f95-3e93-4267-8bd8-5adb3bb31be6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7aafe8-f6b3-48ab-b70d-6b6ef231622a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f76c0ce-bb75-4bcb-9f6c-205c35c87bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae783d8e-283a-4a0a-8a12-bc8aee67e320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64224707-6741-49f1-827d-2275a67042bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e044c0-e38b-4638-abec-d1dca2b66994",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d52d961-247b-436f-a7b5-053af9bd99ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80be442c-9b88-417e-9e6b-bd097def0744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1522ef-ee96-47c4-8707-377b9a9b4b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04447e86-ceb0-4402-ba0f-31af74890a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b60e1f-faf6-4043-a6b1-6e9e55b98aab",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227964ec-b16b-4453-820d-f603d8e77b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f252bb-fcca-4563-ab50-92e3b456d332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541f44fc-b38d-4917-a00f-e33662e0d3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3812cc44-b858-44bd-895d-f153db76b2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db1d4b2-acf5-430f-9a24-fe09c06040ce",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b02282-53f8-42b0-bc26-c831350e7f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7765aaa9-89b8-43cb-a1aa-e982ae4d05ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e605582-6f2a-4a5b-ba46-94a55403e3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3536262b-2104-4348-afd9-ac4894ef7e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699dc2cf-028a-47b9-9a9d-8b94393361a7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4daef51-0c13-4497-9910-3a6c1a416208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf16f52-43ba-4207-aa1d-a685b7106856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623214f2-9dbe-4a78-8638-9bc6ff3eb8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0294117e-2ae1-4487-9163-220836f0f3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcb1148-ccb4-4aec-a0e1-fc82cdcb815f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a8556e-1a17-40b6-9ec6-6e3aa4c63f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae71ffa-671c-4736-9911-9663951de37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbc6489-1aaa-4936-ad60-ffe9263c799c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55233d7b-8a17-4f66-8cf6-0909568c0fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cce175-d0b7-4c96-b938-983a81ba9158",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4c6780-de58-47b5-b12c-3ed071b239cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ad48bd-7176-4746-aca4-c31449e94673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88af142-45fa-45e9-a08a-94f45d913dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143155b5-f319-425c-bc63-c6f31733c87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf2c74a-1dd6-4662-8839-8730dc0b9129",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e22ba9-83b3-4853-a37d-ce1556a6286d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20f6c9b-7753-4a7b-b456-beadb7ab3aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00c48fa-5747-4692-a539-e3d5978dabeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945825f6-f032-44c1-b8f0-a2ceaa379457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ca7f85-cdcb-4b87-a4cd-814b0e23b2fa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613214e3-1bfd-4c26-a691-009e82590c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4bda5f-4a5c-4310-8501-4c8be9c4a318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f72dacd-7432-4101-ba01-3c8ebc6156ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af9f8c9-983b-4a0e-be34-d553338b020b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80ac1e5-7d2e-4d30-8d0b-bf63bf68e3a2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b6be4f-1d6c-43dd-bda0-9b75b8b3122a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45cc5041-15e7-421a-b88c-29eed62dbb85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6068704e-e7aa-4352-b546-65ce91a50fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d974943-6025-41de-8f28-515c79892e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9182b2f-5425-4c0e-a037-d7aa9d0dd669",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe459d7-89a2-4590-b49f-acf90c8abc16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3c1dde-b2b7-47ef-b157-f9412d75e228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaed7766-2a7e-4126-9665-3f6bb2c64029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab7330f-bc1a-4d1b-942d-e99828eded68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7045e09e-0243-4e96-b363-add3a5552b9b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf98a799-f979-43f2-bc90-d894489415b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dccfd411-0216-458b-be01-8d836cc1f407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ef3095-50e0-41d9-a08d-27f8b4ca5ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971fcfab-f71b-45d8-bc02-f99ffb551565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e5d7df-09ae-4df2-8f05-a1b8adba0d59",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d58ffd-d518-4e3a-b317-6c1b2383d208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc41ad7-1f71-4fa6-adb1-6cf3d7e422c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b261cb7e-f488-4b96-bcea-0c96abeb66bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3dd9b11-962f-40b0-90c7-70baf1a068cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c8eb9d-5ba5-4b0a-98a3-4a62bd6ccfa5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81e4c6f-cc8f-496f-a94c-c192879fa2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "682a0615-5171-458b-bedf-6a424676cb28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ee0b55-0eef-446c-94cc-28c1a7f2b793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e94d83-88bd-4131-acde-02fd09375af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae494eb4-e043-42f5-ba59-a16f3b39a3ad",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14c82f2-94e4-4211-a244-53264a7b2ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1a47ff-57e0-4533-b5b7-9b5fd1a36786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1035339-bd29-44b1-b4a7-da2d9124d882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b09be9b-056d-4d83-b86e-8ceae85abd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77023e49-b6d0-46ab-9fb7-fb1796b70600",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f6eb34-a3c0-452a-9800-fe53b6da51ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e03ced5-3201-4d7b-ab20-c71e5bd132da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a3866c-26c5-42b4-a6c5-a6e942860ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4b4ef7-acb5-49e2-9eb7-16a21932ea31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b65ffff-99b9-43dd-b354-ec2732a02219",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdfee18-81a6-43d1-a3d7-7847ecf31a0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec20e4a9-5a15-49e3-b430-8767315606ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcdfff5-f64f-41f7-b61b-17f39da0f259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3d564a-bcca-45a8-9e6a-7ed862fc068c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03690d3f-8cb0-4bc4-aebb-f2ca80d69e63",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d7b4df-49d1-494b-b7d4-5bc5f15819b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3240462c-81e1-4e9c-98c9-c0114b402fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12615759-d4dc-43b7-8b85-8d9b89e5b6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1e20ca-6e44-4590-80d8-0e531a2bb871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21eb12de-42b1-45d8-bebd-f47ce8172860",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0c76fa-2db1-4a59-a57d-eb5e1dd60614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa741429-0f56-42a4-81d8-a66ba7c32b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c486e45f-4716-4c6c-9ae9-6d8b7b5118f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369ae128-412a-492c-937a-398e79e98657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83212a7-b0e4-493a-ad2c-733390ad4e47",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7973b205-b7fb-46d2-a015-aa7015c673b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fa0e636-44d5-463a-bcd4-9d9146edfe61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8f76f9-d738-4e88-878f-08f352f5754e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84fa801d-24c6-4a0e-a19a-b787331d980b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b387a23d-5811-4f6e-9cf9-78bdcc5287e3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb46b44-45aa-4836-b309-c0f333e005aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "172b72d0-dfdd-4b5f-9125-b7c0f1bf556e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d545da4-8f0a-4988-80a7-c4a79f501f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32635bbb-6091-4db8-a3c8-275f090a402a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a64af2d-9020-4636-8358-6bb57f1c30e2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8d4636-8bad-478d-a168-d4e4cd420c0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23643e9b-0f4d-45b8-94a7-3fefe5dfa155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95e0df9-0798-446c-a055-d54958055296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4a5d5c-84bb-4678-8e7f-03582cb3a96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249d9ad1-05e3-4f86-b2ac-8f5ae772d681",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553290e3-4b18-4246-a3bf-18461ba368ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4539c0b0-ecb1-42b0-ad5b-4dcb68650635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8150eb94-e766-4bef-bc04-b0a2f282af20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc2c88c-4e8c-41ca-9b24-cacfead23d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1046bd-b3ee-4f39-ac6d-380e7e94627d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec71ed2-f651-4b5c-a814-acd4ad4b8fc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef82c04e-ba31-4490-aae5-200d367704d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfda69aa-c392-4f13-a724-d2e8a266b5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646043c5-6a1d-4e17-b415-5e5406d693c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a5204c-27ab-4dd3-be4a-7a61fe55eea1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893c5271-6585-41d9-b4b8-6bcd22f31cff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93056e90-5421-4eb0-8777-06a476ebbc42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a900f7-a9c5-46c4-b988-8fcdb7aa1434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47eaeb92-6ef1-409f-bd75-bc2b716e1cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80efa61-30a9-4202-b358-b60eff805974",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2186acd-1cd8-4c9c-8c35-1638dbe05692",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b38c3ea8-ad4e-4809-bd82-149ec024d2b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fcd60a-32d3-43e7-8a92-7db77123140f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28df1f19-e868-40bb-8ea1-9c70fdb43319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6604b04a-ef25-47e7-bf11-30cc704ef3b6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3494c34b-d13b-4eef-87b7-5ab3becd86dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae6845d9-3c01-42ca-b0ff-215100416592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a154fc63-a271-4a2f-b023-baad5b9f5175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55fc353d-749c-4c08-9727-1a5a0b8a780e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45be78ed-cc43-4087-a337-2fcac3d10377",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf57a3f-bcca-41a0-9fd9-82ec72964ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9df06194-95b6-4a33-b1ae-a381a2416caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fd6867-31dc-452b-81b5-e847a4734f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc62275-a2f9-486f-b2b7-c5884ff05569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9037fcd9-9209-4808-ac33-e9ab92aea3e8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3902c0a5-71ee-4582-87e3-8f85ada99b73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83fec86f-9369-4050-b5a5-8abc739f4334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6d4d04-5c7a-4f44-9a7b-bfde48386a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a468ee09-b244-4c47-ace2-ffb9abe34aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1acb1b-bf55-4de6-8d71-d9790a41f384",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5d0536-0d90-4ae3-9040-8ee5a347795d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47d923d9-aa0a-493a-93c0-2bcd1edbce13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c76794-59c1-4247-a428-712213f755d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dfb658a-7513-4d94-ab17-6f4048b80875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d19acb-65d3-4d7f-bd42-f66b1cd9c3d4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9aa68c-f8d5-466f-914f-d3489b94e3cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe933b3f-4da6-44d4-9645-a1800f4cdedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "befb5d14-9c6f-46b2-b943-3c385f0dfd6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370ee272-ef59-4fa0-b673-037e3356cca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505bce5b-fe81-4cf6-b5a0-503802237562",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff4399a-5ea8-4f8e-872b-ccfcb70f097d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc3216cb-3c4d-4507-af7a-0c08875f3da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947fcbf7-e194-4fb4-9e13-4c501ba689c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fa1fff-055d-4848-a691-f1fd313451ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d446e8a1-3e08-4a47-b954-c45141a8f4a9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3e44dc-7fd7-4650-a41e-d8901ed4f237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "953e1359-02cb-4751-8234-c628ebf00a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf21c4b4-f9fd-42cc-8ca8-73954d94d38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff03c20-38b5-4511-b2b4-8e381fe0babd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3843313c-17cc-49a6-be71-a8e4ce4cd425",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf72840-057e-4e23-be41-ed2031989bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f96350b-63da-4c8f-bcdb-2ed64d3e6f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea00df5-0fc8-48b4-a379-1889643ce48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5825ab9d-f7d7-4386-be70-b9a3e0a942c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc86d214-13a8-4ed5-84f9-8682b8a34ca2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acbd28c-a45d-4281-8b97-e7187d05546d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "710e7766-145f-4fc3-8dbb-15ed9e2e122e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ff60bb-6565-4933-a012-93e70ae6c697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba42bd6-5640-43b1-9ed3-3750cfc995ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c87c7de-33d8-435f-98a0-69a678213879",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c2c74e-9ba1-490d-8250-ffa567226f3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eef6e93-1850-434b-a91d-cd41970de589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4abfeab-9c80-4bdf-9727-cca6ea93b677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90349968-d539-4c12-a64f-28b583a77fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08a7a68-b73c-4abb-868b-95e6b3c49ae3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a567951-cdc3-4180-83cc-3646d54a588b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43557a12-41d2-4931-ae72-93e1dbf67234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccc7cfb-6fca-4df2-84e2-3b1c4da62bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6706a80b-9a74-473d-9c1e-90124fa488f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc1fd9b-9dbf-464f-be04-dd8439ed4469",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3204a1-7b19-4d6f-b626-8fb088fc0817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42bf21bd-8388-4b1a-9e55-5227775d5d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d2a17c-2009-4066-8d1f-12c6ecc6ed51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019635c3-e2ff-49f7-a3eb-10c38af000bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6f6212-14d4-4bc1-8abe-6e09959f03e0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c0caad-8b29-4a5a-a699-05c05fa1c8da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cad8c26b-43fd-416b-aa9f-c96016499177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6632fcf6-578a-426e-9304-87ac82d2c181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cae63a8-1495-47d6-ae64-14b5f7eb3ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11f1260-23bc-4339-9100-b4e2fd0d699b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647c8886-5458-4ea2-a135-b167cb635db8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3097e6c9-c0cb-4c80-bd79-3c6e02472d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af62409-b794-4101-a4e1-980cc73e0e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c494ed-c240-4f44-a4cb-4987327b0b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d197e8da-ff36-4a1d-acba-58f52e7adae1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf210562-9a03-4d31-976e-dfbb51478c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194bd1d3-e84c-4338-9443-c11a324840c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "994f65e2-0d42-481b-a7d5-45ba5ee32232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565eb92e-a1cf-4211-b9d3-eda67617f2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74df8ec-bfdd-4239-b63b-5e7118c76fbb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ec39ec-abbb-4863-a245-91d01748d163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f2771be-f4c9-4b16-b0f5-94c1e29ed73f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff5e90b-d063-4409-a986-f506336f6586",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37e317b-ae10-47ea-b03b-b8acb177c2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15509782-b48e-4b37-a541-647b5e52f58c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d618e37-4e16-4a56-9d0d-c93dd3368946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c6ad396-1fb0-4834-97e0-2611502b5422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24877c68-023e-4a90-9814-41a272f2dd3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1230faf8-0790-4543-8040-5d94779cc7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e07d66-f992-4628-a987-e47f19173c87",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b338a61-503b-48ee-83cd-0381e4a227c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ae2e9ec-2be0-4d46-9e1a-b8bf903160d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95b16ad-1a6c-41dc-938d-55ca86116fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1979aebd-7923-4b78-8ffc-bb0dac84f79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2388cf7-d8e9-4577-9937-a636521c30d9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a94eb2c-e941-4d43-b986-844c834c02d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fea2718-e1a9-4e13-aa70-9384b8cbb697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "406eee61-8d71-4288-96b3-782d04f9709e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746d94dd-98b6-4bf1-9d53-981e8303b09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466ec2c5-9a71-436b-b48f-c83a2193869b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62784321-c47b-47a7-b567-e1b8a2b05f7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca35407-b9f1-4ede-bc7e-66f85ecfb614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463b8b4e-4d69-4765-bfff-76b24e3dc061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb822a5-7bac-4242-96a9-104e5ffdca96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a51f63-5d94-4301-bb5a-81c48c19602c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18684467-673d-4d8d-8edc-c39ef6167914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d218a14-13c8-445f-8f3d-210911aff1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd8c626-e38d-41d3-ae26-a7e6483625b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e056482-f846-4f15-9fac-8ed244df1727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a98b093-04f4-48d4-889a-b846cb562b0d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbc0edf-fdc0-4614-9e6c-53660ec3289d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a0b0a65-d688-4bb4-b3d4-7bfe6ed8d131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a37d20c-c87d-4f62-9c3f-04f8ef76cd0e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060caf56-0ece-4a1d-afd6-c9075874fe1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d9f643-70c1-453a-bdea-5cc971b43043",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2d7d05-a4c2-4fc9-9f3f-78e055c7e6fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b76f5efe-d8bb-422c-9ddb-36370384b132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ee1ab3-d39d-4380-b28e-bd2bba4170d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16eb0168-5b45-47cc-8a0e-cb2cea677525"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "706e18d3-73f9-46e4-92cc-bf6f6646a358",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78d9affc-8bb2-47ba-aa4e-cc490bb4bcdd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca912545-af27-4f1a-b504-b30bbb2f01d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "905a1413-aa70-4fb7-9771-1cc534be4568"
                    }
                  }
                ]
              },
              {
                "id": "99a9f369-0177-4b94-a817-8422a2570d92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8119af3e-3a38-4784-b910-c894c217c9f9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e444c714-5dad-4a87-a0d6-42fcfc6d0331",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ce2fb5d8-46c2-4a71-8f40-ce59e5db7adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c34661-5d36-409d-b79f-74386ba93291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b734b46-35e1-4773-9945-cc2941e30c57"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19074aec-223b-4771-849e-0f4b51caf679",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6afccab-631d-4db2-8f57-4c8b1dbeb5c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2b1a71a-3cd1-4d80-9f79-bcde988f5a75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02106cfc-d79a-4905-a94b-5abb06e78074"
                    }
                  }
                ]
              },
              {
                "id": "45544191-7bb8-4403-8830-ce5388289579",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "172f99cf-19f6-4b4f-9ae8-26450acb11d8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f4b1b5-d743-4bbf-9119-798320df1614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "471354d9-ff93-4e22-8eed-856d8f176c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5929be6-cad2-4f45-a526-21fcf2603997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84101cf-47ba-4b68-809c-1c6e8d407ffa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b34148a7-fdf0-474c-80fc-45e0d1f88706",
            "name": "Positive Testing",
            "item": [
              {
                "id": "95bb7d31-3f80-4439-9215-e0e2e9df09cd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b10ae29-7df3-4e3c-90c2-de3852421d8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2418c149-690f-4311-9821-a59375523a97"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25772d4f-2c83-4b99-89f8-05c8d28f23f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c7121a1-8bc8-456c-96e2-11f79c13f0f2"
                    }
                  }
                ]
              },
              {
                "id": "2586c4ac-88e3-421d-8297-c96fb8226218",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24e2428f-56f8-4a3d-8b77-ac25c2866812",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3825a03f-27a5-4b2b-9808-45721732a9a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a25ab3c-6ba5-41e6-9a68-ee2c9ea8018a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a417e47-27d5-430a-8c99-bde4f84b71df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6937f02e-4a56-4263-b2f5-7ad352698ffc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a6b28177-4221-45d8-9913-197e03a15e04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "630154a9-8667-447e-b8be-0147adf35c50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "016bd969-d002-4141-8b83-73803230c191"
            }
          }
        ]
      },
      {
        "id": "704667ad-4049-4f67-9efd-a71cbcb0b252",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "37de3681-3195-43f6-a22f-5e0f4a1d0828",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da0bc802-0f07-4510-8e10-661b37fb223c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2329f3c5-2369-41a8-97c8-b19c653770ad",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3742174-b2c9-4571-a382-86095d5047d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7e8c7080-d74b-40d3-8520-6f63b2070802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bbc5fe-f9c6-4bb6-9770-bc5f4f3b81e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a838c90-01b7-4b56-b6a6-eab9d13113f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60f4a43a-1489-4367-ba65-8cd93e9ce641",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0044afb2-b398-4c84-bf37-2d4e3edd8000"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1fb1312-2e2f-445f-910a-e883cf432501",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27acc8ad-9aec-428b-9d0a-696dea981b61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "736c0e0c-4d1d-48eb-b573-abde8ee0d9ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dfbbb8b7-50fe-4435-9571-14ac0ce03043"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5356e198-a378-4207-9491-e23576507917",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cf4502d-3ca1-49d1-ae84-31159e8bcbc6"
            }
          }
        ]
      },
      {
        "id": "f771affb-792d-4710-915b-ec03a76dc80c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e9b367d7-717c-4ac6-a051-11afa427c33a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9484b77-5bef-4c4c-8355-1c53fa013173",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f3b875e-53e2-4fa4-99fb-419a4c68a654",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe707d0-4315-4f4b-93a9-b471b2f8524b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e4deaa7-470c-40e3-97ff-65c5ec4d761c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbd1679-6eef-4610-8afc-75d19f4f6470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79498d6a-2428-479a-83c7-d740f373baac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2acfc6a9-e365-4669-b133-a2832d5da879",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb0f9fa0-2ddf-4bd2-8ca6-9a5447e94630"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e09b8ecb-65c4-4cb5-a549-f56f2c799d08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a9151b1-2558-44dc-98d0-b5bb3cd404cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad8ecbf0-5eae-46fb-ab9b-2bd6ce45b73d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3f6f890b-c2dd-43f0-bcc4-58dd471b9479"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00f008c6-353c-44ae-ad45-1f2b90662ddf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55e120d9-12ca-4a5f-b2ba-01b13382dfbb"
            }
          }
        ]
      },
      {
        "id": "1f517524-1b28-4014-87a4-f96846eb2150",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c5481e14-6944-4a68-a264-bc76f067554c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d354daeb-99a7-4a24-a4bd-8ee43363fb2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5d2d323-99e0-4973-99e9-6017300afc3e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564894a4-6dd9-493d-bc3e-3a651a13713f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53f72d5e-882a-4f18-b5b0-a4dc85611cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f845d705-7525-4a8a-89c2-ac6c78a7cba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dffbcf2-a2ec-48e4-837e-a709d3820ad6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6ffb86a-38b7-4745-af47-7d4cc49cb7a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54fced4d-9d82-4f79-9646-186704496932"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fad0f279-3588-4d5d-acbf-a5f58b902583",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32e6bdbf-ee99-4b88-a98a-28e9e8ed5bf0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32b83249-2352-413b-b274-93e478c1d340",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ae41e14-3f97-48f1-8aaa-ac6a91e39f43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e3bd7f7-49ba-4c0d-b639-77fe5dd32de5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae417014-5ece-4015-bd57-b6b0b13e3dc3"
            }
          }
        ]
      },
      {
        "id": "6cf23780-e33d-4b58-8491-85611bb86c30",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb100e90-258d-46d4-89b7-f5f3d6fb723c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b74b340e-67d2-4e69-956f-5bdfa5235c2c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6e6a6a5d-1538-4b25-9447-77f1d2356c99",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28aa3f16-59a2-4a80-a19d-431ca2b84221",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cc6c501-3e51-4f14-bc54-c0a2a147b5fd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 224.0079365079366,
      "responseMin": 6,
      "responseMax": 5856,
      "responseSd": 890.3413336542351,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717461464516,
      "completed": 1717461529581
    },
    "executions": [
      {
        "id": "aed9d8bb-ffdc-4daf-b1e3-f6e685dbe333",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1dfc81b0-fe79-4f41-8b50-d3b46bac47ed",
          "httpRequestId": "518c4b14-fab5-4273-b542-b5df2dd6e222"
        },
        "item": {
          "id": "aed9d8bb-ffdc-4daf-b1e3-f6e685dbe333",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "66059700-c2f9-4d4e-8bab-dfbf46c32427",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "3c64aca6-a6d7-48ec-ad78-43061434c0b0",
        "cursor": {
          "ref": "699e0ce2-90b8-4b51-847e-3355d2b2b591",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b0132f54-e43d-4f6e-a858-bb0eeaedf46b"
        },
        "item": {
          "id": "3c64aca6-a6d7-48ec-ad78-43061434c0b0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "75e860dc-b30c-4b71-ab49-fb6cb899de88",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "ee9e0379-e36d-45ec-860d-4eff2e5bf505",
        "cursor": {
          "ref": "6cac0079-4916-4eda-9e10-31a31ad39100",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "69b9c1c4-1b13-44f6-a517-ab47701e21a0"
        },
        "item": {
          "id": "ee9e0379-e36d-45ec-860d-4eff2e5bf505",
          "name": "did_json"
        },
        "response": {
          "id": "f7cccf7d-b0ed-4154-be4c-6ba70712497d",
          "status": "OK",
          "code": 200,
          "responseTime": 170,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257e9b7d-7194-4ef1-8956-4c6b15bb6865",
        "cursor": {
          "ref": "65fc7d3f-fc98-4be0-a863-aa82e8f90ce4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5b00ad43-fd16-48ed-adb7-a38443ddead3"
        },
        "item": {
          "id": "257e9b7d-7194-4ef1-8956-4c6b15bb6865",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a88ea8d-9be1-4043-9001-d4f2680f4654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1957,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257e9b7d-7194-4ef1-8956-4c6b15bb6865",
        "cursor": {
          "ref": "65fc7d3f-fc98-4be0-a863-aa82e8f90ce4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5b00ad43-fd16-48ed-adb7-a38443ddead3"
        },
        "item": {
          "id": "257e9b7d-7194-4ef1-8956-4c6b15bb6865",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a88ea8d-9be1-4043-9001-d4f2680f4654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1957,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee2ac5f-7f3e-4a22-bad9-bbc1fe3cc90c",
        "cursor": {
          "ref": "1b372b41-9806-4f0e-9380-3c0e477f7d64",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "605cbcec-00cf-499a-86f0-3ed224d3a7c6"
        },
        "item": {
          "id": "9ee2ac5f-7f3e-4a22-bad9-bbc1fe3cc90c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e8d02a22-d83d-4b1a-a4d3-fbbe7930886a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2456,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a765178-66dc-4e41-8b17-d3c3d4904be9",
        "cursor": {
          "ref": "9c9704b4-4792-4fdc-95b0-b9ca470fb61f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "50623d87-fbc8-4a79-8d03-603445e413e5"
        },
        "item": {
          "id": "7a765178-66dc-4e41-8b17-d3c3d4904be9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4e6d7f98-1a93-434a-978a-8f6117f71379",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2201,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580c5bb7-a11c-47b6-9613-8d4e93d1b36b",
        "cursor": {
          "ref": "c6fcfa85-955c-4c46-9cc4-91807cb730d6",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cf7f6592-adc6-4fb4-bd96-0dea29a648c5"
        },
        "item": {
          "id": "580c5bb7-a11c-47b6-9613-8d4e93d1b36b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3b4e9ccf-f884-4701-9792-11ead57893e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816179b4-7b8a-42e4-b0d7-2bc535dce3c7",
        "cursor": {
          "ref": "f3c29e8f-18e9-45bb-86f8-88ee65f1804b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2de9d4bf-029c-412f-8943-9c5ec969faa7"
        },
        "item": {
          "id": "816179b4-7b8a-42e4-b0d7-2bc535dce3c7",
          "name": "identifiers"
        },
        "response": {
          "id": "f43a9332-c315-4bb6-81c7-4da23178b9f0",
          "status": "OK",
          "code": 200,
          "responseTime": 2102,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc9adb7-91d9-4ab3-a424-c3d4fab85abd",
        "cursor": {
          "ref": "d8d831b0-a668-427f-9465-8df28a293481",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "34cd7ef1-52d2-4071-9aab-8dc6ee156301"
        },
        "item": {
          "id": "6cc9adb7-91d9-4ab3-a424-c3d4fab85abd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "47a5b53c-08ca-48d2-a3ba-ac2a22120645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b05baf-4d24-480a-bb2d-651439681ded",
        "cursor": {
          "ref": "016ecd51-6ae6-40b8-ba4a-83be8590ea77",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "31906804-ff59-40e0-9b73-10b8488e6d9c"
        },
        "item": {
          "id": "85b05baf-4d24-480a-bb2d-651439681ded",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6fcca9a8-299f-48e9-8f6e-be438e316b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5c80cf-5798-4f3a-bed2-d523a76ea3eb",
        "cursor": {
          "ref": "bcf1761b-4cbc-4a69-8fd3-b5a7c8541f9d",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "654eebde-62a1-41da-bf60-97bb2800427c"
        },
        "item": {
          "id": "4b5c80cf-5798-4f3a-bed2-d523a76ea3eb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fdb6be97-245f-4291-9915-0cd70347a3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8f9f92-9e5a-4b33-9761-a2a512b7386c",
        "cursor": {
          "ref": "cd751021-79b0-477b-8a36-7b3cc228fa7d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a6c0e046-c066-4cc1-b586-8317b019fb3a"
        },
        "item": {
          "id": "ff8f9f92-9e5a-4b33-9761-a2a512b7386c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3f5e2428-4852-4d9f-81a4-7e0c1604378e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8791997-c0dd-470c-a54b-893869693dfc",
        "cursor": {
          "ref": "bd51d4c5-e810-4ba0-9090-a57ea5e826a9",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "22dac82f-c013-4068-b0a9-cb583e7fcd87"
        },
        "item": {
          "id": "e8791997-c0dd-470c-a54b-893869693dfc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "69377269-ad3d-43e6-abb6-ab3278101a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e53fddf-a8dd-4672-b798-1618cacc4828",
        "cursor": {
          "ref": "f78dbcf5-4fa5-4840-b25a-cf4d198e63e7",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "722dc0f6-7fee-4f82-9a64-6fa1bb16d60a"
        },
        "item": {
          "id": "1e53fddf-a8dd-4672-b798-1618cacc4828",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "17e80f69-5561-4289-acdc-aece1f8adad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b8382a-1772-4576-8832-58c00e7a9103",
        "cursor": {
          "ref": "3136a321-bd9a-4b4f-8c46-23a38f0ba643",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2614cbb4-3bdc-443f-b3d3-f6be5e0db6a6"
        },
        "item": {
          "id": "53b8382a-1772-4576-8832-58c00e7a9103",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "495604dd-1162-475a-81ce-9ae60c39c6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1346699e-b175-41aa-9120-2d8269730a58",
        "cursor": {
          "ref": "2e35ed99-f3bc-41b4-94b6-666a34cf97b7",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d24647dc-110a-4a6f-8e9c-9dfeff15988a"
        },
        "item": {
          "id": "1346699e-b175-41aa-9120-2d8269730a58",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "aa0560ca-af29-4fc1-b9fa-8c45594665a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f78be07-40fd-4c07-96c5-58961fb8c997",
        "cursor": {
          "ref": "14b4d2e4-97bb-4258-832b-58f11e953520",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bdaa2f03-5463-40c8-89f5-47ee77b08a2c"
        },
        "item": {
          "id": "0f78be07-40fd-4c07-96c5-58961fb8c997",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "df968251-1a81-4777-82c8-4e9564a646d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac32953-6ea0-4fc5-9f64-c46ffe29c5f5",
        "cursor": {
          "ref": "14dd0191-aa30-4dd7-bf03-acd9d70bb9d9",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9a5ea614-15cd-4e5f-b4f9-02d9ff9b17d9"
        },
        "item": {
          "id": "3ac32953-6ea0-4fc5-9f64-c46ffe29c5f5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6012fcfa-00c1-42b7-9c3e-b06779068b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb05c4a5-278b-4029-bfea-c1af3594bf6c",
        "cursor": {
          "ref": "2df762e2-39f8-4e80-9705-e636606d7978",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1b618819-5ebb-4684-a17d-a3d86fa09817"
        },
        "item": {
          "id": "cb05c4a5-278b-4029-bfea-c1af3594bf6c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1f1f43ba-0dcc-444b-9d20-898b3f9cf017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf6187b-5dce-452e-9cde-d6bff7a3d56e",
        "cursor": {
          "ref": "91c8b90c-823e-4684-83d5-b099d8270f1d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "54a99329-7372-431b-883f-c790c3488788"
        },
        "item": {
          "id": "4cf6187b-5dce-452e-9cde-d6bff7a3d56e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b7522624-b259-4ab3-9f90-b9dff06fb8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21d0c3c-32f2-4553-81a3-1d193a08528e",
        "cursor": {
          "ref": "c4458d06-9246-4bfc-9c06-fa1bf99f5997",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fb561ffc-b7a4-4f82-bd74-9283f8cc94f0"
        },
        "item": {
          "id": "e21d0c3c-32f2-4553-81a3-1d193a08528e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7c9dd43a-2eb2-4d71-a841-66eeb44b15f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d66357-10b9-4fe2-bdf3-80da88955fbb",
        "cursor": {
          "ref": "edbaa3e0-cd0b-48ae-9187-8bcf75fc0327",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "80eff18d-552c-4aac-b844-abe726dc68dc"
        },
        "item": {
          "id": "30d66357-10b9-4fe2-bdf3-80da88955fbb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "15c3d09a-4ade-4be1-bc5d-7592d96d5b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27007daa-f73f-4f64-a586-0a17df284ea3",
        "cursor": {
          "ref": "a7b4038a-8914-4137-a98b-168d538eb405",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4a71d667-3553-41b7-80f5-1b5f098dfe50"
        },
        "item": {
          "id": "27007daa-f73f-4f64-a586-0a17df284ea3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "284fda1e-dbe6-41bd-b72e-941ad89aac5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81bb07d-d6e0-4e18-be46-62454a04282b",
        "cursor": {
          "ref": "667a5697-66d9-4ffa-99ef-513bdda28793",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "81d4ba46-1a7b-40e9-80ba-dde7b192601b"
        },
        "item": {
          "id": "d81bb07d-d6e0-4e18-be46-62454a04282b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9dc23e39-f24c-49ad-9bb2-b4dfeaee697c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b126aab5-9501-4c58-9f41-b889c7a294ce",
        "cursor": {
          "ref": "974d849b-8ad7-499f-aadb-3f46ed921f9a",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cef2fe8a-093c-4c97-b19b-e9b4db525043"
        },
        "item": {
          "id": "b126aab5-9501-4c58-9f41-b889c7a294ce",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "134c9475-8627-4df1-93a3-305090d86031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb723bf3-fa9a-4610-8948-fd8bdeb72dcb",
        "cursor": {
          "ref": "012dbbbf-a5b8-4cf3-bb4b-5a40ef09e856",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "23c0af68-4a5c-4098-8082-f484e598a1f8"
        },
        "item": {
          "id": "cb723bf3-fa9a-4610-8948-fd8bdeb72dcb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bfda947e-b779-4bf7-ad5d-ee4d1c2386d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c09115-a48b-49af-bbda-e71bde221fd1",
        "cursor": {
          "ref": "82c7c082-f1c2-4464-83e2-c6775f6e26a8",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "29f655a0-97f4-42cc-bfe1-2c6812aea05c"
        },
        "item": {
          "id": "d2c09115-a48b-49af-bbda-e71bde221fd1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "60b928a6-e383-4a8e-8ab6-3f361a81bcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253c7e7e-46cf-4376-b998-a65aebc94fae",
        "cursor": {
          "ref": "724eb835-14da-4044-9b74-31def45347a3",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dedabd2b-82d2-4aae-b1e7-3ccb24178aba"
        },
        "item": {
          "id": "253c7e7e-46cf-4376-b998-a65aebc94fae",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4416afc7-9dbc-4a4f-977f-442731ce389d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071dc53c-a8fb-4f76-8911-9ce00c1444e6",
        "cursor": {
          "ref": "531ea36a-1766-429b-953a-000c9c6af69f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cb8e6656-13e4-4f27-8dd9-2456d912c17b"
        },
        "item": {
          "id": "071dc53c-a8fb-4f76-8911-9ce00c1444e6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f77b704d-e686-401b-acc0-6c5067ce2270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f861a4b4-e2dc-4b7f-a0c5-2e35d8c4e96a",
        "cursor": {
          "ref": "f5c3c586-a299-470b-b5c9-87d418e1e842",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6994732d-3eda-4d7b-8067-16e9a4ec256e"
        },
        "item": {
          "id": "f861a4b4-e2dc-4b7f-a0c5-2e35d8c4e96a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "00106736-448a-41f3-813d-fce9a32094b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e724b17-9701-46ec-968b-1fa74c9c7274",
        "cursor": {
          "ref": "2a311e58-c42d-4d83-bbc7-9b3f888f5bf1",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "22478679-fa99-4dda-b01a-7f68d26bcdb7"
        },
        "item": {
          "id": "7e724b17-9701-46ec-968b-1fa74c9c7274",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0964ba36-6a44-467f-a359-93edd966256d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8847f42c-5320-4ab8-abe2-f98eedff1ebd",
        "cursor": {
          "ref": "8e82eaa5-cc45-4014-ac8f-aa56f6bb5134",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "161ad537-4084-4c77-8d2b-77c89d700f06"
        },
        "item": {
          "id": "8847f42c-5320-4ab8-abe2-f98eedff1ebd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "68b1f3e8-1b71-4dc5-8bca-5e6c03d432f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca62ed7-7aeb-4e92-bf01-d217c2f551e0",
        "cursor": {
          "ref": "3e18091d-28d4-413d-81c3-4bb69f86da4f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c83ac2d4-d98a-4b4d-a4f3-30960a73bbed"
        },
        "item": {
          "id": "1ca62ed7-7aeb-4e92-bf01-d217c2f551e0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ac7e0a69-59f6-4506-95fe-c61df822c3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb51b64d-f106-43da-816e-7bff09732b0f",
        "cursor": {
          "ref": "a04a033b-12c8-46fd-b842-d607271a4744",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7bb4741f-640a-43d3-bcda-1ab9fbbcf8c1"
        },
        "item": {
          "id": "eb51b64d-f106-43da-816e-7bff09732b0f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1c286d5a-bfa1-4701-8485-44656b836863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c381ef-ce2d-4b96-b0f2-5e664d73ea78",
        "cursor": {
          "ref": "36831598-491e-495f-ad95-647f7d07a93e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "305982bb-7d10-4c24-83fe-1009ac976197"
        },
        "item": {
          "id": "c7c381ef-ce2d-4b96-b0f2-5e664d73ea78",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2496a393-d1de-46e5-be5b-b88a39f41a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92b41b8-8412-4ef7-bb50-bcc3d7136503",
        "cursor": {
          "ref": "9ce0cc60-0dca-4b65-b6e1-5d6bdae97b07",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4bc5abf8-f69e-4916-9f7e-c86eef9bbd4c"
        },
        "item": {
          "id": "b92b41b8-8412-4ef7-bb50-bcc3d7136503",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "37bfadff-0e99-4b25-9b7d-61d22977677d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e840a064-1d8b-42c0-98d7-4db6e2365ccc",
        "cursor": {
          "ref": "b74cef2c-d19b-4fb5-a695-450e322df177",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "34fea056-9421-476d-9b0a-d9a3d3588326"
        },
        "item": {
          "id": "e840a064-1d8b-42c0-98d7-4db6e2365ccc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b4c84a75-2893-49e4-9c56-0d09843ebde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed39226-f5dd-48d0-a605-df3f3882ecf9",
        "cursor": {
          "ref": "0152bea8-b844-429e-bee1-20687dc34091",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d45dccdf-ecc4-4879-9b57-630483ef462d"
        },
        "item": {
          "id": "0ed39226-f5dd-48d0-a605-df3f3882ecf9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5c74b6f9-308a-4c8e-8a45-6320ee0f2004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9798a6-ebf5-4ae3-b3d5-70bab76af3e1",
        "cursor": {
          "ref": "17b94cb4-70ce-43b8-9101-978860fabea4",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "174281f6-7ee8-496f-a9c6-35b6594ebf6d"
        },
        "item": {
          "id": "ac9798a6-ebf5-4ae3-b3d5-70bab76af3e1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a31e280a-d73c-40c9-a6ea-e9194b13f36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5009218d-f22c-46c9-87bc-4d40c83b8957",
        "cursor": {
          "ref": "bd715211-0973-46d9-afe2-decdbec6d8a7",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6751ffbf-1e28-44cc-bb58-ccb87a62793f"
        },
        "item": {
          "id": "5009218d-f22c-46c9-87bc-4d40c83b8957",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "339b9517-2644-4f78-a538-50299c7aab02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb5a07d-8e71-4071-97b5-10d2db4e862f",
        "cursor": {
          "ref": "c953c742-4ff3-418b-a580-466a04683e12",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fbf263a7-c78c-46bb-9036-2fb70c26efdf"
        },
        "item": {
          "id": "ceb5a07d-8e71-4071-97b5-10d2db4e862f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ec5c4c83-d427-4818-bcb3-937578a7de15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a7f728-3523-4e1a-9789-fd4ab1b7eccf",
        "cursor": {
          "ref": "bdf5f73d-7a37-4536-9689-1586e9263402",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8cbc58d7-93af-4c6e-b1f4-fce2e19ce74a"
        },
        "item": {
          "id": "f3a7f728-3523-4e1a-9789-fd4ab1b7eccf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "44065077-dddd-494a-844b-c4fe550ab01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f74c5f-3296-4bd9-822b-9f219d6a7b42",
        "cursor": {
          "ref": "f27d262d-624e-42fb-aa70-d1af1230c0dc",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1cd6c399-874e-4388-9f97-8631c654ecdb"
        },
        "item": {
          "id": "45f74c5f-3296-4bd9-822b-9f219d6a7b42",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dbab3101-2a5e-497f-8ed3-7ded1b1b0feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd444b7-def8-493b-b9e1-4403583d670c",
        "cursor": {
          "ref": "c3d12d58-4984-4fdd-879f-c01fcb431deb",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bd2e7faf-77b5-47d5-b599-80e10cd0a58a"
        },
        "item": {
          "id": "5fd444b7-def8-493b-b9e1-4403583d670c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bb0518dc-b94c-4894-935e-15e88ff4e80b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efe491c-5ec9-45b5-b249-6cee2b3b91dd",
        "cursor": {
          "ref": "1aa53100-db29-4815-955b-821c4aab5b7b",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4d2a99ce-0201-4d3a-9624-3bf9e9fd222c"
        },
        "item": {
          "id": "3efe491c-5ec9-45b5-b249-6cee2b3b91dd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2dce464c-c126-4474-9c55-c1fe9c0eb1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72e1438-3ea2-4ea2-bedb-840d1d959dee",
        "cursor": {
          "ref": "bf111c55-8c30-480b-b56a-a80785775e40",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f5a00434-7b25-4d56-8767-5213b14a8a86"
        },
        "item": {
          "id": "d72e1438-3ea2-4ea2-bedb-840d1d959dee",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "466e53be-e2ad-4997-96e6-8e1198be4208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6042ca-207d-4f1b-a53c-202642d795c1",
        "cursor": {
          "ref": "b778fbd3-04d0-48b6-98aa-0c888b2e605c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1dba3172-5772-4b64-88a9-0300dc451573"
        },
        "item": {
          "id": "ad6042ca-207d-4f1b-a53c-202642d795c1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3d3ba2ce-c2a6-4d72-8070-b60c60dbf2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c4827d-a812-45d7-abf1-73c228184dcf",
        "cursor": {
          "ref": "bb027896-70f4-4fcc-9987-309d0ce0326d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "491616b6-85ed-452d-b62f-c2b0a1175a11"
        },
        "item": {
          "id": "f5c4827d-a812-45d7-abf1-73c228184dcf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1235ad50-f813-49d0-aa6e-aea610d10ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6f56ac-0696-4378-bf91-931df377dc8c",
        "cursor": {
          "ref": "c47fc93d-0de5-445a-adad-5b62069a2642",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a248c600-7fb9-45f9-b4c8-3ce0361fc6b2"
        },
        "item": {
          "id": "5a6f56ac-0696-4378-bf91-931df377dc8c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "155934f5-b5ac-444c-96ab-22d8c40716bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83df1cae-fd1b-4718-8006-62e7fa07fdd4",
        "cursor": {
          "ref": "8d2b385c-308a-43d5-b764-9950c6e5a332",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "baf9c07d-da2c-4bbe-9040-eba4f45ee8e6"
        },
        "item": {
          "id": "83df1cae-fd1b-4718-8006-62e7fa07fdd4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "aef06fb0-47ae-4978-b5d1-e961137f9c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb210679-5093-4684-9d54-dbe35ca11eac",
        "cursor": {
          "ref": "229ec60f-70a9-478b-a651-aff487a823ee",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d683ea67-aafe-435d-b6f1-06f79624cdbf"
        },
        "item": {
          "id": "eb210679-5093-4684-9d54-dbe35ca11eac",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e4290079-41d6-46f0-80d5-61665a95ffbc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 35,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067ca8c8-3312-4c27-8a3d-71fb7948d0c8",
        "cursor": {
          "ref": "8f48766f-48fd-4160-893d-91ed693f6504",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c56de6ea-692c-4017-9963-90173718c039"
        },
        "item": {
          "id": "067ca8c8-3312-4c27-8a3d-71fb7948d0c8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "dd8671e9-37dc-4cc5-a3de-6cbc7c5f6d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82356d36-94de-4dd0-988c-ae9892d9d502",
        "cursor": {
          "ref": "3b1f98f6-eb59-4a62-9be9-28661298be5c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5a4edc9e-374f-4cc2-a720-4c19c34fb40d"
        },
        "item": {
          "id": "82356d36-94de-4dd0-988c-ae9892d9d502",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5a6f336a-da7d-4c2a-bd34-e3806d765f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0065971-2ec6-4f23-a055-76eaa57bb699",
        "cursor": {
          "ref": "c0a3fb7c-7e33-44d2-b512-f2ec590e5db1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9f88c1aa-bde5-43d7-8c68-7918676dfa73"
        },
        "item": {
          "id": "d0065971-2ec6-4f23-a055-76eaa57bb699",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "11b65711-1ac4-4116-80b7-325352bcb070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150dd6df-16e7-4234-a2b2-8455c27e87d3",
        "cursor": {
          "ref": "f1cddb64-17d4-4da8-b17a-d9811421106a",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7d89c042-4507-4a5c-9afc-2f06550b2590"
        },
        "item": {
          "id": "150dd6df-16e7-4234-a2b2-8455c27e87d3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "59877cfe-7428-47ac-b6a5-12aea131e2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb23554-7bd8-4468-bd1f-f6d16867ceb4",
        "cursor": {
          "ref": "8a73dde7-addc-483b-ba14-508fb5f761a2",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "076ee79b-aba2-4ea0-9589-2fccc74b454c"
        },
        "item": {
          "id": "dcb23554-7bd8-4468-bd1f-f6d16867ceb4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ebd7130e-29a8-4e98-94a8-d4eacc1b0c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19cd4bb-0259-4e70-a68f-721e79242537",
        "cursor": {
          "ref": "50aa08ff-32f0-4bd8-9d56-d82506f6cc15",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a64fdbda-8bb6-4a06-ac26-caf6483d64f9"
        },
        "item": {
          "id": "c19cd4bb-0259-4e70-a68f-721e79242537",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "52b7c14e-630b-4a3b-bf96-79d147fc9055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a8f85a-0574-4ba9-8060-a40e2be376d9",
        "cursor": {
          "ref": "43788ade-c841-4cf6-b992-27b9fabd1613",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "93e1f229-e554-439d-92c7-263aeeaa847e"
        },
        "item": {
          "id": "a7a8f85a-0574-4ba9-8060-a40e2be376d9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e4e80f3c-e79e-4cd6-91d7-f7d62b3d9c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3dca8d-371e-4168-afcd-dd55d9a16bae",
        "cursor": {
          "ref": "77f14e34-3c42-450c-8535-d77d64c9f69e",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5842c730-b83b-41bd-970a-81574a059a3d"
        },
        "item": {
          "id": "5d3dca8d-371e-4168-afcd-dd55d9a16bae",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a7d8d665-5fc8-4ba0-9d37-0a7ce7410f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb0f2f0-a900-4a12-95b9-9f3c2c54544e",
        "cursor": {
          "ref": "1a4586c4-6234-4c89-8cdf-63721fc8001f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "653818ea-6bac-4bd0-b58b-7dd113a83cbd"
        },
        "item": {
          "id": "9eb0f2f0-a900-4a12-95b9-9f3c2c54544e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7f17016d-bfb6-4c24-9307-6550beb89d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cad45a-7538-4f10-9136-7f4e56c563fa",
        "cursor": {
          "ref": "8626faae-7146-4de0-a35f-ea87ce6f4893",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fe68b765-933d-4ccc-8f45-a48a9ea9a6e9"
        },
        "item": {
          "id": "c3cad45a-7538-4f10-9136-7f4e56c563fa",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fa2e63ef-aee7-42ee-a4f1-272234aeb5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1519bc34-e83a-4249-94e9-fbcb1ed818d3",
        "cursor": {
          "ref": "2e2fa6f9-8e16-4971-9a91-d1b6d29d78df",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "68546be0-1c47-4352-ad12-3c6c6d554495"
        },
        "item": {
          "id": "1519bc34-e83a-4249-94e9-fbcb1ed818d3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ade45f24-1e92-4a44-b3fe-1e103f0c72ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f9bec2-f2fc-4406-a158-6b6bedcdda82",
        "cursor": {
          "ref": "d2dca7e4-3220-4970-8a2e-3b83929bfe6e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f743edd6-2b85-4691-9d8c-5203eab295d8"
        },
        "item": {
          "id": "42f9bec2-f2fc-4406-a158-6b6bedcdda82",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f2d9d055-c190-46b2-9030-7040dc4a754f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a2988b-3d65-4829-9b4e-e5baca597861",
        "cursor": {
          "ref": "836655ee-aff4-49d4-adf7-7d70986a8789",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a53b1c55-b41f-441c-b01a-376ce44f2dfb"
        },
        "item": {
          "id": "26a2988b-3d65-4829-9b4e-e5baca597861",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7d4a96fe-ce9d-4706-b2f9-4dd9d3ccca34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82db62a-d49e-49ae-a077-aba605031358",
        "cursor": {
          "ref": "ea273d13-0b70-4541-8fa6-eab09655b273",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8e81599b-4b30-4aa1-b17c-4093192d0fd7"
        },
        "item": {
          "id": "e82db62a-d49e-49ae-a077-aba605031358",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "42ab4cfe-f49d-42f7-b71e-c61131e093e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ddcb48-2958-4375-8164-63ab956c1b5e",
        "cursor": {
          "ref": "71e671f8-5e36-446c-a218-12b3d5b6e573",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "83a4f99d-4ce2-4bfa-b7cb-dd7e99d47ab2"
        },
        "item": {
          "id": "46ddcb48-2958-4375-8164-63ab956c1b5e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7bce65da-b227-432d-a9f8-73897ca568fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d652cbf-c4ef-45d5-9505-cacd59bbca37",
        "cursor": {
          "ref": "a7e3b12b-0db0-4566-b370-f21edfb17ee0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a29ada01-72e2-4dc2-aedb-ceb9daadea0d"
        },
        "item": {
          "id": "0d652cbf-c4ef-45d5-9505-cacd59bbca37",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "26187395-da66-430a-a246-f014510f35d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e4f1c1-a93b-4387-a8c9-db9236ada8d4",
        "cursor": {
          "ref": "595a1a6b-66b4-4e04-a2d1-c1339d1d4628",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "54e27a7f-e8ff-4758-86e1-b187dfd26ff9"
        },
        "item": {
          "id": "63e4f1c1-a93b-4387-a8c9-db9236ada8d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "351b1865-7c96-47d4-a232-c71ddc2d9744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b018cf8-6a7e-462e-bb23-23cab12b0ae3",
        "cursor": {
          "ref": "41c50397-1a03-4a73-9dbc-afd5ea5c6302",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c1f38216-bb52-4cd3-8694-163c5b0658d1"
        },
        "item": {
          "id": "2b018cf8-6a7e-462e-bb23-23cab12b0ae3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c5412f98-53a9-4e22-bb9a-4b789114043c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b604c6-242b-46c8-bb98-59323edce2a4",
        "cursor": {
          "ref": "0e1feb8c-a095-49e9-8e51-ebd6635aa129",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a64d5f40-1d82-44ce-8024-efc7ec6a333f"
        },
        "item": {
          "id": "b4b604c6-242b-46c8-bb98-59323edce2a4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d5a7a6a0-a539-4930-a176-fdb8cac7ba8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fc0cee-b1ee-496d-a3c0-92dc133edd9c",
        "cursor": {
          "ref": "bae08bf5-0394-46cd-b981-37254899421a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8654b6bc-6e05-489f-82ae-3f80ff0a29ad"
        },
        "item": {
          "id": "33fc0cee-b1ee-496d-a3c0-92dc133edd9c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2aa38c03-e2c5-4e9c-9f97-316bb24634d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5de2bc-ab89-4fb0-83f3-935c8fa03ba8",
        "cursor": {
          "ref": "2658ecfa-c449-45ad-8229-71770e823de2",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5bdadd34-8dc7-4eaa-812b-10dde32a916d"
        },
        "item": {
          "id": "4e5de2bc-ab89-4fb0-83f3-935c8fa03ba8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f107fac5-451b-4ed3-9f29-fd8be55682fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4230cd29-6d6a-4477-aadd-469697d9d1d7",
        "cursor": {
          "ref": "cc49a9ca-7da7-4084-a19c-d3b7aefd0d9f",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e56d3c08-871d-4054-b2bc-c3c0722b730a"
        },
        "item": {
          "id": "4230cd29-6d6a-4477-aadd-469697d9d1d7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a811a5b1-eae5-43c3-ad89-4d470131bf13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cccda5a-0588-4ae5-a5e2-19ee6b327707",
        "cursor": {
          "ref": "784b89b5-f910-4938-bae6-c790555fe9fa",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "428fcf39-a883-4ae0-b818-39906e0385c0"
        },
        "item": {
          "id": "6cccda5a-0588-4ae5-a5e2-19ee6b327707",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "47bf513c-44d3-4322-a82f-03edb65ee05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ee3545-b1f0-447c-87a9-4e2af99e5c2f",
        "cursor": {
          "ref": "e51e554c-2498-4e15-8be3-4149be4018ec",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "01cae4a6-7883-461d-8934-924522dd851e"
        },
        "item": {
          "id": "15ee3545-b1f0-447c-87a9-4e2af99e5c2f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "012f5f4b-a08f-40f1-8a52-59b83235faba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c59566-c31e-4b5c-935e-68fc77ce145d",
        "cursor": {
          "ref": "200c937d-a45d-48a0-bb33-d8a9b6261ce1",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "dd8d993e-c0bd-46a6-b811-89fc4ff86d26"
        },
        "item": {
          "id": "12c59566-c31e-4b5c-935e-68fc77ce145d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "27ecdfa0-15e2-44f4-9d17-94b65e1a2f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec894c3-475b-4e27-994d-8ecd716de9b0",
        "cursor": {
          "ref": "1d33583b-808f-41f0-ba58-308e0b480778",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8f841fa8-016c-4d96-a428-c70ef0219dcd"
        },
        "item": {
          "id": "cec894c3-475b-4e27-994d-8ecd716de9b0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b2926b35-f3ec-47bd-8328-962aefdf319f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8291f83-624b-4fd0-bf67-5c0dd8b2a640",
        "cursor": {
          "ref": "717b349a-a5e6-4188-8505-26ed38d443f5",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ae40866e-41ef-480d-88c1-4915e1daa177"
        },
        "item": {
          "id": "b8291f83-624b-4fd0-bf67-5c0dd8b2a640",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c5a782f4-c0f1-4827-ac23-5556d27c52ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0551c03f-2632-47af-a5ed-19033a13e070",
        "cursor": {
          "ref": "b3282c8e-725f-4f18-a3be-cf9d39371397",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1fe85768-8fe5-4223-96bd-1c1c9fd6aab3"
        },
        "item": {
          "id": "0551c03f-2632-47af-a5ed-19033a13e070",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1bca2b42-a601-44b9-87af-b5e8a68baad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f17868-c5d0-418e-a111-2c70b00c4712",
        "cursor": {
          "ref": "5ef5c808-7129-4b58-9059-799e84844d41",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "201de888-b980-4805-a474-07cd56c23d2e"
        },
        "item": {
          "id": "21f17868-c5d0-418e-a111-2c70b00c4712",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e6ee85b3-77bb-41f3-a666-bb078317d1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06f935c-a5fa-498b-8e12-2e2de919098b",
        "cursor": {
          "ref": "741885f8-8e9f-463a-96f8-da53f9c861d1",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3ed9473d-3bb2-441f-b376-4712c29da5de"
        },
        "item": {
          "id": "a06f935c-a5fa-498b-8e12-2e2de919098b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ce0dc0b8-a6d7-48c8-826b-da41eae01717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875b77f0-dca6-4a7f-8229-4a595a02be1f",
        "cursor": {
          "ref": "12046108-1280-41e1-bfd4-fc67213ac6fb",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "66aab991-1005-4dab-9810-4d7ad439b9d8"
        },
        "item": {
          "id": "875b77f0-dca6-4a7f-8229-4a595a02be1f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d40c9706-53e2-4207-a834-3b305bf21370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3c5087-2a40-4bd9-bc78-cb490d5ea4d4",
        "cursor": {
          "ref": "17cf9d71-63a5-4fd7-ac7b-b627b2d97751",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e6242b0c-ab12-4ad7-b278-99b62adb454c"
        },
        "item": {
          "id": "8e3c5087-2a40-4bd9-bc78-cb490d5ea4d4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ef809f36-ba94-40b1-9d00-26c82524d602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2208357a-5d8f-49e7-8fe8-5f10cf04dcff",
        "cursor": {
          "ref": "4e9900d6-43f1-45dc-884f-2b2e79a1db98",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b341666f-7176-4e18-a953-98f574c7a462"
        },
        "item": {
          "id": "2208357a-5d8f-49e7-8fe8-5f10cf04dcff",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "221dcd7f-ec92-4377-9df3-0ad7e9e96cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5349356d-c484-4092-9efb-ca450f545be1",
        "cursor": {
          "ref": "ac62a2fa-fc9a-4463-816e-3a0f3a39cd0e",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "db0b2e2f-d7e4-4b12-88ad-00cdbec3e5f9"
        },
        "item": {
          "id": "5349356d-c484-4092-9efb-ca450f545be1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8512d58d-c045-44a7-a709-52f54d5c42d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e52bed-5766-4d90-a059-27c7fed9d189",
        "cursor": {
          "ref": "2336f8ca-0073-4fc7-80b5-6add70568a76",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dd0ab505-e9e6-47b4-909d-694bed5ce65d"
        },
        "item": {
          "id": "67e52bed-5766-4d90-a059-27c7fed9d189",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "597140d2-4e14-49f9-b132-8a1a49f62c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad3930f-fc9e-4045-bf8e-98599c7a6dc6",
        "cursor": {
          "ref": "abf91e3b-95ff-4b82-8fa3-9092b0171c86",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7b90dfdc-f661-4cee-a2f9-48c46d0c7fb0"
        },
        "item": {
          "id": "bad3930f-fc9e-4045-bf8e-98599c7a6dc6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "12198e0f-03ef-466c-954d-49ea0bc00008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1604bd-02d7-489b-bd8c-715b77509b28",
        "cursor": {
          "ref": "771483d0-8161-4095-ae40-9eba80faf9f2",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b85bfc7f-ab27-4c56-a93b-cbb259d27405"
        },
        "item": {
          "id": "8c1604bd-02d7-489b-bd8c-715b77509b28",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d0037be5-f45f-47b2-823d-ba8e6957ada3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207f8d7b-4875-4f32-b6ae-b7887317d22a",
        "cursor": {
          "ref": "c732cb2f-8bf7-4f83-9fa4-c822fa1a8b93",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f5aa9810-4232-4c8a-9514-8e73ecde62d9"
        },
        "item": {
          "id": "207f8d7b-4875-4f32-b6ae-b7887317d22a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1c2b584b-44f4-451e-9db9-8b73a9527cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f9f5cb-0475-4f5b-917b-09fc94909e14",
        "cursor": {
          "ref": "51cce245-aacd-431b-b319-d7c16bcd4ec0",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d04c8c2c-f9fc-4702-b8bc-c25e0f7ea7b7"
        },
        "item": {
          "id": "99f9f5cb-0475-4f5b-917b-09fc94909e14",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7aa5a91a-e3c0-40b8-a804-335e594f9e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c1f01d-64c1-4198-aaf4-6827d94aa2b8",
        "cursor": {
          "ref": "d0ab2b9a-70cb-48f4-aa42-f7cf9b38cc57",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b0f6ca63-a2d7-44a3-a1bd-6d39ef0f5eec"
        },
        "item": {
          "id": "b5c1f01d-64c1-4198-aaf4-6827d94aa2b8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e496d3f1-ddfa-47ce-b99e-279bba48832c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e45986-76f6-4bbe-993d-4821ed8bb4d3",
        "cursor": {
          "ref": "e755016b-4ef7-4e2c-bcff-3a1310e84566",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fb631239-6377-4dc4-8f47-2e676694bd43"
        },
        "item": {
          "id": "e5e45986-76f6-4bbe-993d-4821ed8bb4d3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8e2c79bc-741c-49f1-a18e-22fd1ca6b956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4ae557-e7ee-4585-9da5-ae20a8e820c4",
        "cursor": {
          "ref": "3a8268f0-cd7a-4c48-85ac-e322e5907681",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b4de5605-cd99-4eab-b887-274d112c93d4"
        },
        "item": {
          "id": "bc4ae557-e7ee-4585-9da5-ae20a8e820c4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3156225c-0c87-400c-a622-18108390a5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438f413e-eca8-452f-af2f-ef99423aeca2",
        "cursor": {
          "ref": "0205e9f9-e71e-4b39-a2a4-d041d48abc0e",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5ad1e90d-544c-44bb-bc69-23afefe242ec"
        },
        "item": {
          "id": "438f413e-eca8-452f-af2f-ef99423aeca2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ef5f0f96-b165-4bfd-999b-7531b0288d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357ea97b-5004-4a89-9ee1-ebb6a2c85cdc",
        "cursor": {
          "ref": "64be8816-efe5-453e-984f-399dece7e992",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7c94139b-d81c-485a-b92c-0f499f0fea1e"
        },
        "item": {
          "id": "357ea97b-5004-4a89-9ee1-ebb6a2c85cdc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e4e138d4-a57d-4728-9b27-d50fa0f20635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec7c6a2-ac7d-4f07-a000-326e932f168e",
        "cursor": {
          "ref": "96b81699-521c-4b13-b6fb-f616b50510cb",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e3c113d0-abb2-4afd-a474-53613aaa8ba9"
        },
        "item": {
          "id": "9ec7c6a2-ac7d-4f07-a000-326e932f168e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f9445022-daea-4431-8351-941cd3864bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2426c8ab-a12b-481b-8766-65cae387d147",
        "cursor": {
          "ref": "9d3c5c12-184f-4144-aeb8-168cef1c5cff",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "17783f60-1029-4472-8911-8e579037b021"
        },
        "item": {
          "id": "2426c8ab-a12b-481b-8766-65cae387d147",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4be7144d-9bce-4613-a760-2fcb44ac375b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe14f2d3-14f5-416b-a7dd-cf5c88f61f2a",
        "cursor": {
          "ref": "bb4789ee-3778-4729-850f-188381403da5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f78f9a73-6397-47b2-aac6-c18b3f04002c"
        },
        "item": {
          "id": "fe14f2d3-14f5-416b-a7dd-cf5c88f61f2a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "726468a2-ba9c-4a7a-bd86-3e9f7be311ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170bd7fa-f8c3-4668-b575-daa453022914",
        "cursor": {
          "ref": "a9a03e29-14c4-4686-9b3b-b7e095899cf0",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "40fe3364-d7cf-4934-8901-992a5d69c4f1"
        },
        "item": {
          "id": "170bd7fa-f8c3-4668-b575-daa453022914",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2cb78d9d-e474-42fd-80a9-37a3d5f8fd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f8535e-969b-40b7-a1b1-cd63e37a2977",
        "cursor": {
          "ref": "730c28c8-5a1e-4532-97b9-9b0716dcf06f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "78ba7ca1-17f0-45dd-8d99-ad7cedf8a737"
        },
        "item": {
          "id": "f1f8535e-969b-40b7-a1b1-cd63e37a2977",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5bf07d21-33a4-4dcb-9bce-2aaf6fd0972f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7c7092-8c76-4ebb-a2b7-8cfa8016f5d8",
        "cursor": {
          "ref": "5424dd53-272a-46a5-a454-a6e11976e7e1",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d64c6349-e3ae-49f2-a4f7-33a4c0502f7b"
        },
        "item": {
          "id": "ce7c7092-8c76-4ebb-a2b7-8cfa8016f5d8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e19a36dd-441b-414c-b2d4-b536722eadb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7e54e9-3f7a-4c62-a93a-180291d4566e",
        "cursor": {
          "ref": "bdc67964-e4fe-4f18-a40c-15a7a15e2162",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2ef9aecb-f343-43d4-9493-4d8d10cb4203"
        },
        "item": {
          "id": "4a7e54e9-3f7a-4c62-a93a-180291d4566e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "77d54a91-623d-4b98-bad3-f60e68a1ee3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ef1dfe74-0d04-4eb2-9c6c-64bd497a7e3c",
        "cursor": {
          "ref": "b06a060b-db2e-45b0-9987-3413f918e7f1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "de01da2c-0074-4f7b-ad6d-9153c1ccca6b"
        },
        "item": {
          "id": "ef1dfe74-0d04-4eb2-9c6c-64bd497a7e3c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "80cf2fb1-2db5-4f0a-beb0-62f05df93910",
          "status": "Created",
          "code": 201,
          "responseTime": 5856,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88be2f7-04e1-4070-867b-f55c30e7a724",
        "cursor": {
          "ref": "5a808fa4-417c-442c-9d6b-11f481c1b8b8",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "64034871-07ae-4b23-a34a-79316775ca9c"
        },
        "item": {
          "id": "b88be2f7-04e1-4070-867b-f55c30e7a724",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "48bd64b3-1672-481b-abd3-b9057c83477b",
          "status": "Created",
          "code": 201,
          "responseTime": 5198,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef45208-9c55-488a-80f3-bb08831bc853",
        "cursor": {
          "ref": "3f577ad4-7aa9-4073-a5e6-35bba2310d42",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "05cf130b-11e9-437d-bb77-fba8e10d01e6"
        },
        "item": {
          "id": "6ef45208-9c55-488a-80f3-bb08831bc853",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8950a709-6c89-4efd-99d1-6681fcff855e",
          "status": "Created",
          "code": 201,
          "responseTime": 5841,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf5c4bd-8561-4558-bae5-70ec5f2139dd",
        "cursor": {
          "ref": "4b0c40ea-796d-45b7-becc-4d17ec6496df",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "afc877af-3260-4252-a627-66e867d0b3c3"
        },
        "item": {
          "id": "edf5c4bd-8561-4558-bae5-70ec5f2139dd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9946fd1d-9993-4ef9-bea7-1c500e50e3fa",
          "status": "Created",
          "code": 201,
          "responseTime": 5016,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa70c137-5029-44bc-ace5-f80222bb5d66",
        "cursor": {
          "ref": "4dc7ee18-1f33-4d16-a209-300ebba4a2a3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e93b74b1-0371-4102-8f36-2b3cbdce313c"
        },
        "item": {
          "id": "fa70c137-5029-44bc-ace5-f80222bb5d66",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e6ee7b9f-6bcf-45f3-85cd-2608c49cf98b",
          "status": "Created",
          "code": 201,
          "responseTime": 5144,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-04T00:38:27Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-04T00:38:27Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c6b81311-5eb9-4f83-8bbe-e95dff6e8392",
        "cursor": {
          "ref": "1cd7860c-5e7b-40ac-887e-7025284e1cb1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b22c0437-1cda-4bf5-85d6-360730a8e207"
        },
        "item": {
          "id": "c6b81311-5eb9-4f83-8bbe-e95dff6e8392",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8c1a1058-6b4d-4a91-b2ea-144f02ef0deb",
          "status": "Created",
          "code": 201,
          "responseTime": 5365,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9c7aa2-84e3-4599-8803-399bdaaf1f79",
        "cursor": {
          "ref": "271932ec-7df2-4db6-a777-f0636762ba69",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e414a73f-7ce8-43c5-9275-3fc813420c84"
        },
        "item": {
          "id": "5e9c7aa2-84e3-4599-8803-399bdaaf1f79",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b8e81d58-3fce-4505-81ee-5653dacb6995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc06b43-0e7f-4a7a-9ea7-be969c7158e0",
        "cursor": {
          "ref": "b5ed56b1-abe9-42da-b58f-49f4e66ec976",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9ec5aca3-9adf-430c-975b-7ac3419c8f39"
        },
        "item": {
          "id": "bfc06b43-0e7f-4a7a-9ea7-be969c7158e0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "89d79d1e-4822-4844-ad05-c5056029db8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5840f5e7-4536-4e19-8c75-e88431a69de2",
        "cursor": {
          "ref": "eefe84ad-38fb-4eb5-ba07-682f6d777aa9",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6acbb28f-f63a-4b1f-b3e6-5c1d63600cb3"
        },
        "item": {
          "id": "5840f5e7-4536-4e19-8c75-e88431a69de2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "75ed926c-3837-4b32-bcd0-947d0dcf9c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59634290-e8d5-4707-b8b1-4925742d2804",
        "cursor": {
          "ref": "90b6eecc-a2f7-451d-aacf-e24433d43406",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bc697dfa-052c-43c1-bae0-1679b25c070b"
        },
        "item": {
          "id": "59634290-e8d5-4707-b8b1-4925742d2804",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e7475ad6-c1e2-4540-987b-f8f02ab2cc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d3a332-672b-482d-8ba7-043f8281a343",
        "cursor": {
          "ref": "03a46fd7-687a-4cf7-815f-0950a1389f29",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b39f8191-b691-4fd3-bee1-e212df36a429"
        },
        "item": {
          "id": "a1d3a332-672b-482d-8ba7-043f8281a343",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b3040bf0-98f8-47d1-a35c-91a21b2e80ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5537bd-5852-45a5-881a-e2580dd0c27b",
        "cursor": {
          "ref": "6ebbcde5-bae9-4d5b-bca6-277f1b076187",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "05e86d82-4a12-4f06-b40b-b0f23444a334"
        },
        "item": {
          "id": "ea5537bd-5852-45a5-881a-e2580dd0c27b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ad1c6098-b536-44db-8559-9bf3bdfeceb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536e7b36-e086-4a5e-854f-938fb36402f6",
        "cursor": {
          "ref": "33a5fe15-27da-4c5c-977f-1fb89772b733",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "037f5844-b93d-4309-a039-6cf5bc909039"
        },
        "item": {
          "id": "536e7b36-e086-4a5e-854f-938fb36402f6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "74f38852-3883-4024-bf34-885643113406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d74a53-5754-433a-9d5e-86e7c729948c",
        "cursor": {
          "ref": "903e3310-68c6-4860-a0fb-59c772ab5fbe",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b6edc264-7e46-4d79-8411-fab62ac51b2b"
        },
        "item": {
          "id": "85d74a53-5754-433a-9d5e-86e7c729948c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "33c536d9-2c10-426a-ab0b-8a62d5b67d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cc5053-11f3-4c19-918f-18b3f4b36152",
        "cursor": {
          "ref": "d12d9808-b94c-4577-a033-f82d4639d2bd",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "89139999-3e03-42a0-bcee-c83ce6538ca5"
        },
        "item": {
          "id": "48cc5053-11f3-4c19-918f-18b3f4b36152",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "78f67b07-d241-4dd9-8f5d-b15d979a1953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad288e1-57a3-4679-9b97-214c549691c1",
        "cursor": {
          "ref": "27b9c4b9-3af5-4633-91e5-f6061c0d53c0",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "aeae1708-f6c2-427c-82f4-31e625bba7a5"
        },
        "item": {
          "id": "7ad288e1-57a3-4679-9b97-214c549691c1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7048fa38-83e7-466f-b782-fea85d9c845c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63956355-0921-4b0e-9ce4-f9ba5579e149",
        "cursor": {
          "ref": "f016d201-3c96-48c5-bc97-a863bef16cf8",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8a6e8e80-23f1-4c75-9348-af8fa772f715"
        },
        "item": {
          "id": "63956355-0921-4b0e-9ce4-f9ba5579e149",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aab3b775-b390-48b9-99f5-9ee2451ca114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cc4f88-2aa2-414a-8629-1413b22b1839",
        "cursor": {
          "ref": "772bfa63-56a8-492e-84c8-754ecfab9f7c",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f16c62b8-e332-442d-b60b-1975f472980d"
        },
        "item": {
          "id": "80cc4f88-2aa2-414a-8629-1413b22b1839",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f11230f7-2906-4e72-9ac0-c2b6fd2c3c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a92f19-1092-45a7-a4cc-6246e70221f2",
        "cursor": {
          "ref": "902f5d17-65a4-48d4-9b40-f5305bdee1fd",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c8ac3723-ca7a-4752-acf1-cbcd6b4ef9ae"
        },
        "item": {
          "id": "91a92f19-1092-45a7-a4cc-6246e70221f2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f24a2dbe-de44-41b0-9f7b-957b3307413d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07593b7a-bed9-444b-89b6-2b6a3bf5368f",
        "cursor": {
          "ref": "65239d43-284e-467d-afb4-c213b69e8440",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "03afc54b-29dd-4dd5-a4bc-a05bf110969d"
        },
        "item": {
          "id": "07593b7a-bed9-444b-89b6-2b6a3bf5368f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "23510df2-8edf-4543-9130-887ea63af51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad58855d-1f5d-48bb-bab7-2acaaa86f9f2",
        "cursor": {
          "ref": "c5d935a6-9a38-4e7d-aacc-72f2109867e9",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "928c3124-2e6b-47ac-8e51-6da5de64cae4"
        },
        "item": {
          "id": "ad58855d-1f5d-48bb-bab7-2acaaa86f9f2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "469e29d5-74ad-43fe-8630-5e41e5575a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab32ea1-d7d4-43a2-bd18-d385ebbf41b6",
        "cursor": {
          "ref": "baa55916-caf6-4516-8639-62f6a5046db3",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "08c12354-30c3-4d5b-95da-b025b5be37c0"
        },
        "item": {
          "id": "aab32ea1-d7d4-43a2-bd18-d385ebbf41b6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "984078a8-980b-43f5-a852-c1a036aeca2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e773ab56-363c-45a1-9c5b-f39c12ceb3ee",
        "cursor": {
          "ref": "2e7134e7-fa55-42d8-b734-3ed28c9c10b1",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0ccce743-a1ce-41f3-80fb-756f07bdd22f"
        },
        "item": {
          "id": "e773ab56-363c-45a1-9c5b-f39c12ceb3ee",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8806c1ec-5222-4b93-96e9-ec43f446c7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed199e0-9c3d-41e0-afad-95964cdfcc94",
        "cursor": {
          "ref": "95fc1f87-0bcd-46d1-848d-26ace26f2cfa",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a3eaf87a-fb98-4f33-ba7d-ed32fc3093d3"
        },
        "item": {
          "id": "bed199e0-9c3d-41e0-afad-95964cdfcc94",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "62c3f650-9239-498e-9449-31c3c8725192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d7222a-3b7e-4aaf-8531-85757dcb7afb",
        "cursor": {
          "ref": "6e157d27-a31a-4044-9de4-f0ce9fe22b56",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "739fe30c-73dc-4f73-bd83-5495af8ec6e3"
        },
        "item": {
          "id": "e1d7222a-3b7e-4aaf-8531-85757dcb7afb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "17c14c59-ad1a-4b4a-91cb-df216f5ac144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0a0d35-04c5-4654-b3bd-1326113801e0",
        "cursor": {
          "ref": "9bc9e74d-fedc-4b8a-bbef-da4997fec227",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "65a00cf2-96b9-4bda-94a6-bf5db178f3f7"
        },
        "item": {
          "id": "bb0a0d35-04c5-4654-b3bd-1326113801e0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "efc752c3-9278-47d1-b2de-1c156e31e056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dc8ab4-9255-4430-9a49-0acc69e5d08e",
        "cursor": {
          "ref": "cbb95ef1-772f-4401-86a1-e57a76d4a6b9",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "24117c5b-e539-4043-a302-1d7204c4f6bc"
        },
        "item": {
          "id": "61dc8ab4-9255-4430-9a49-0acc69e5d08e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8226a08f-ef18-4862-be6e-695ec7efaa64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68414c19-fa60-4b6c-9795-a61db8e1d530",
        "cursor": {
          "ref": "64b3f3f9-feae-40ec-b5c5-74ba666f5944",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b27d263b-de58-4ccb-95dc-a4b30e5097ae"
        },
        "item": {
          "id": "68414c19-fa60-4b6c-9795-a61db8e1d530",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "469c8a60-1062-4b1e-ae46-93fa44ccba4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79400d1-0a2d-4f96-a3ce-7163d53be32a",
        "cursor": {
          "ref": "f15d638b-0ce4-4f5f-aece-3ce27ba27cf4",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "82c235de-f7a1-4acd-9e33-c3bc8b2a822a"
        },
        "item": {
          "id": "e79400d1-0a2d-4f96-a3ce-7163d53be32a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "91bfdad4-a29a-41ad-a11b-0af68d442f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781e0688-b24c-43e3-a2c9-417f36aebae4",
        "cursor": {
          "ref": "407af263-4be7-4322-8f3f-7e819726c826",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d5996471-8962-4c00-9168-4181b9a0f10d"
        },
        "item": {
          "id": "781e0688-b24c-43e3-a2c9-417f36aebae4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5c521d96-74bd-4408-9626-03e86732730e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f7b7ef-8ace-4e87-bade-9e6b9545d8a9",
        "cursor": {
          "ref": "dedc8ea7-d64e-4c77-acae-6a09f1106ab5",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3ac76493-7e90-44e1-890e-83c9ba2f8d9d"
        },
        "item": {
          "id": "13f7b7ef-8ace-4e87-bade-9e6b9545d8a9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ccdf22dd-b0e5-4cb2-9802-763dcd9d7611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb0cf2d-d2f7-4753-b5e1-1a79dbd25240",
        "cursor": {
          "ref": "438c159e-e9ed-45bd-a397-49058bd5a4af",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d0f18eaf-dd5c-425a-a40d-2415024c01e2"
        },
        "item": {
          "id": "6cb0cf2d-d2f7-4753-b5e1-1a79dbd25240",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "74704770-e1d4-4c8e-b283-a03de218d434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b2698a-c1c5-4f48-be5f-61ab5f45dd34",
        "cursor": {
          "ref": "9637b486-cd7b-4cb4-af0d-e66fab96881e",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b1b7e605-9465-4e97-a77e-4f3abc820e21"
        },
        "item": {
          "id": "f6b2698a-c1c5-4f48-be5f-61ab5f45dd34",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "99018760-9649-42e2-9672-be705b09ea9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ced7cbe-0f08-4ca2-8142-b69f02499343",
        "cursor": {
          "ref": "45a98469-6b09-409d-9a5c-306ee8113835",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "69afcdf8-9cd8-46eb-a3eb-36f7513c291b"
        },
        "item": {
          "id": "5ced7cbe-0f08-4ca2-8142-b69f02499343",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f7eb6516-1787-402e-8545-365813e02b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dcb343-a45a-4535-9881-57137a0ca079",
        "cursor": {
          "ref": "26eb622f-31be-490f-a483-f71b6c2c7cd8",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2f173b8c-cbe6-4254-bffa-00e87423eaf8"
        },
        "item": {
          "id": "65dcb343-a45a-4535-9881-57137a0ca079",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ee6e75c6-6849-48e6-b330-262cfc0580f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98853afd-c888-4662-8cc0-cf1f082035dd",
        "cursor": {
          "ref": "a5845e48-c9b7-45b5-b91b-52aa851832a1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a77139bb-360d-4730-969c-ee51af2a7921"
        },
        "item": {
          "id": "98853afd-c888-4662-8cc0-cf1f082035dd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d0513dc3-5032-4e8f-9feb-493e29f00f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8813fd-5831-4fcc-94ea-c238295fd67b",
        "cursor": {
          "ref": "18f745f6-3803-4975-8159-7bb1586f1b3a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "19b13023-234e-4a42-b754-3dca6c5f6da5"
        },
        "item": {
          "id": "7a8813fd-5831-4fcc-94ea-c238295fd67b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c24d86b2-2d1c-4fca-9021-025ca580dd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1322d007-e6c5-49eb-9f5f-2851405a406b",
        "cursor": {
          "ref": "fcaa6d0f-6167-4264-9d28-8efc740c28e6",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3638a185-83dd-4b99-9a70-bef9f00e71b8"
        },
        "item": {
          "id": "1322d007-e6c5-49eb-9f5f-2851405a406b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d80fb9d6-c69b-45c7-a805-52ed4d0679ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e05311-93e1-4cd4-aa9b-9b298859705c",
        "cursor": {
          "ref": "87032239-7877-492c-a429-7288f13bfed1",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "454539d2-86e6-484d-adf7-8f200a6f5f2e"
        },
        "item": {
          "id": "63e05311-93e1-4cd4-aa9b-9b298859705c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2e99c1e2-73d2-4313-8b24-5fbb491811d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adf838f-4018-4656-9fc9-3c841f562ea3",
        "cursor": {
          "ref": "1f6e31f0-e658-460f-948e-fe2941ec67a8",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6187d44e-ca52-427b-8db2-b8b064d2154d"
        },
        "item": {
          "id": "0adf838f-4018-4656-9fc9-3c841f562ea3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b03bdd2b-03d9-432a-add0-619abcf34121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddb4d41-08a9-4b86-88cc-4865d7188741",
        "cursor": {
          "ref": "f3049e23-2d5c-42a0-bc32-a9fcf81de8b8",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "415256ae-7f2f-4e25-9584-812162942f84"
        },
        "item": {
          "id": "6ddb4d41-08a9-4b86-88cc-4865d7188741",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "61434591-c5df-4136-80f0-7b70a2c59951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b492e82d-19a2-4b50-b166-f34cc4e75383",
        "cursor": {
          "ref": "dd301a7a-c966-43d4-a1de-46e201a833c5",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7d66ee72-cebc-477c-ba02-b438e0043af3"
        },
        "item": {
          "id": "b492e82d-19a2-4b50-b166-f34cc4e75383",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7c9c05bf-7cb1-4662-8222-d81e45132bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7cb160-3f37-4839-ad12-d230f77623cc",
        "cursor": {
          "ref": "c500ff18-6fd4-4ee6-a82d-592e77db52a4",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cd2c6b50-6042-4708-91ec-82c5bb37e8e4"
        },
        "item": {
          "id": "2f7cb160-3f37-4839-ad12-d230f77623cc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "14253f97-ffdc-46bb-86b1-1c3103b74ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207078d7-8912-4062-a3c6-98306fa71eb6",
        "cursor": {
          "ref": "71af7be4-4b40-4389-95e7-fb8109ebec02",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bc334fe9-e772-43b3-ada3-54682ff2e33f"
        },
        "item": {
          "id": "207078d7-8912-4062-a3c6-98306fa71eb6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a060ad4d-576f-4a0d-933f-0765dd57253b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f29c7b-4dd2-4ed0-af44-6b5b1ad98aac",
        "cursor": {
          "ref": "649d55f2-bc51-4802-a211-9215dcca4d65",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5475dc43-f8a3-43e3-995e-d858a54125e1"
        },
        "item": {
          "id": "80f29c7b-4dd2-4ed0-af44-6b5b1ad98aac",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "192a5c4e-9aa5-4489-b2a4-91a3fdb480e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72dfa41-0ff4-435f-ada2-e57400c2c260",
        "cursor": {
          "ref": "0c764c73-201a-40cb-93cf-0d47ec822fce",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "df54f97e-b3ac-4fe3-b90f-4bf06b68153b"
        },
        "item": {
          "id": "e72dfa41-0ff4-435f-ada2-e57400c2c260",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1fdf4649-fd7d-49da-a798-bbc31ca79262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48aecc92-0107-4e20-89a6-a09b79bed0be",
        "cursor": {
          "ref": "35b2d096-327a-4e9e-991c-851fe1c5e36c",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b47455cf-92f7-40b1-a9ac-80dd5c89eede"
        },
        "item": {
          "id": "48aecc92-0107-4e20-89a6-a09b79bed0be",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "02fb401e-6ad4-40ad-8a69-3414d2791d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b73b942-2893-4bc2-a3e5-0afbffac32e6",
        "cursor": {
          "ref": "519bd769-80fa-45b1-83e4-5f04337cb59f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "320658f9-3f33-4c72-9667-cea1cda89e81"
        },
        "item": {
          "id": "3b73b942-2893-4bc2-a3e5-0afbffac32e6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3caca1fd-5ba2-4d7b-8a74-555e0bb8ac5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd38aff-2a8f-4dec-b680-9666c008ba74",
        "cursor": {
          "ref": "89dba1e4-f69d-48a8-b6f7-343864bbaf6b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2fb38bf7-3e58-4e5c-b3db-0a675832bbc7"
        },
        "item": {
          "id": "fdd38aff-2a8f-4dec-b680-9666c008ba74",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a5c3fbee-e364-4492-a16f-02d7dc18865d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd9b697-e265-4347-91b3-c49c4313e516",
        "cursor": {
          "ref": "08a7ca53-7573-4ffc-b71f-1372bbc50e9b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "eb80d477-5a81-4c2e-9ad6-2d82d0a1d8c8"
        },
        "item": {
          "id": "1dd9b697-e265-4347-91b3-c49c4313e516",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8ae67fdb-9f15-4e35-bf9d-a6f0d3e65ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd86f1cc-5088-437d-a843-861ae7199907",
        "cursor": {
          "ref": "092ba260-e0e8-4cc3-b886-d138665b0374",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d6632dd6-3b5f-41f7-a08d-d73a6bb86af9"
        },
        "item": {
          "id": "dd86f1cc-5088-437d-a843-861ae7199907",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "26ea98ce-31aa-4c8a-a089-14d3653d786d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2764eeec-3be0-4ad6-997c-02b939c0766b",
        "cursor": {
          "ref": "63bbbb67-e71e-4821-931e-60341b4496c5",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e950719f-11ae-4726-86ef-206f8a58d23d"
        },
        "item": {
          "id": "2764eeec-3be0-4ad6-997c-02b939c0766b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8f9ab9a9-7be8-435b-958a-cf6db1564663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c71ed75-d0af-4949-bb4d-44ff5ca3aede",
        "cursor": {
          "ref": "4d3c717d-a5ce-4cfb-b90f-73114e30967c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "37b8a46e-2617-46cf-aa08-0c4da4a2089c"
        },
        "item": {
          "id": "6c71ed75-d0af-4949-bb4d-44ff5ca3aede",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b54594d5-8183-46df-bf6c-117bceb98872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8ee280-19e6-43a3-8fa6-3679717c1e32",
        "cursor": {
          "ref": "5f03172c-c59b-4450-a266-e7f185e14478",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9a09ab89-5369-4e65-8c16-a14d39f14995"
        },
        "item": {
          "id": "ef8ee280-19e6-43a3-8fa6-3679717c1e32",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a21ab596-b552-4810-9663-59740f925693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcaae2c-c117-4265-8020-8d52642c2cdd",
        "cursor": {
          "ref": "edb1753a-8577-4544-b888-335adb4ad6eb",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "80f86320-9021-4848-8595-14dfdc9eb003"
        },
        "item": {
          "id": "4dcaae2c-c117-4265-8020-8d52642c2cdd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0b6560fe-d936-4036-bc66-dc58e8a62ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f01733-7b10-4822-b933-9125ca91bac5",
        "cursor": {
          "ref": "e8818523-19ee-44c9-b726-8d587c3f194d",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ed3822a0-520b-4159-b655-c67bdad02f1b"
        },
        "item": {
          "id": "e3f01733-7b10-4822-b933-9125ca91bac5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "604084e2-d0fb-4c95-8595-c0d47ce37da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b2d19d-3dfd-4d02-bf54-162e2f9c4cd5",
        "cursor": {
          "ref": "f4175db8-2559-4d38-831e-9ecd38cb5e49",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e51b8526-165a-425a-9b53-30d59c92f9fe"
        },
        "item": {
          "id": "68b2d19d-3dfd-4d02-bf54-162e2f9c4cd5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0edbfcaa-143a-4ae1-934f-2e604968d2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6953796b-5350-4f9a-8f52-b6f1d8663160",
        "cursor": {
          "ref": "442df637-cacc-4b2e-8881-670a972e40f3",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a51943bb-f04b-40fd-8525-b759d5ccc40b"
        },
        "item": {
          "id": "6953796b-5350-4f9a-8f52-b6f1d8663160",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3b9db92a-cfab-46d6-87ad-93ad638df379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c11b61c-0130-43d9-b791-7c4db8755b30",
        "cursor": {
          "ref": "3138df71-b593-494d-a695-b43916a79cb4",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7156dfd0-535f-4625-ae89-9a29df95a59b"
        },
        "item": {
          "id": "9c11b61c-0130-43d9-b791-7c4db8755b30",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f462d83f-f84d-4ac5-9fa9-5f09b32a7f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4314cc-ce74-4b3d-b86a-3e860fcad854",
        "cursor": {
          "ref": "3b24cd2b-4437-49c2-9b26-953dccc3da73",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ba3c0445-7340-4653-9eb4-f732cec29525"
        },
        "item": {
          "id": "da4314cc-ce74-4b3d-b86a-3e860fcad854",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7ee199bb-19fc-4dfc-975e-18822ce074f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29f1257-a869-44d8-82ad-dcdbc18f7d31",
        "cursor": {
          "ref": "1cb4847a-057c-49cf-9c6a-187a9222e78e",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "17b1fcbd-495e-4c3d-ba3b-42ecab10bc35"
        },
        "item": {
          "id": "f29f1257-a869-44d8-82ad-dcdbc18f7d31",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "279b7c1e-828c-4a7e-9dc2-89cc055d0ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ed25da-2ed4-43fc-ace9-666b2cc444c2",
        "cursor": {
          "ref": "4ddaf17b-c518-4943-af2e-4594b643b963",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4ecb64ab-32c0-47ad-8d05-afd1739029a1"
        },
        "item": {
          "id": "42ed25da-2ed4-43fc-ace9-666b2cc444c2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2c8f8520-38c6-4f83-ab31-ab3ef579ee1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63990266-b1d8-4980-865e-21fc9e40d038",
        "cursor": {
          "ref": "2568e4cb-5226-4163-b8a6-b770c1c27e8d",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2b32ebf4-1994-4808-8b6e-8f76952bdedc"
        },
        "item": {
          "id": "63990266-b1d8-4980-865e-21fc9e40d038",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "40d9270b-2a49-4432-b4cd-9e9a32d27e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3a6cc0-cc00-438b-9394-75a2722dbc35",
        "cursor": {
          "ref": "90e8deb5-dbc5-4c1d-8e65-1b029e6c2d2d",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "46b2622f-d716-4eca-a785-48632ddf2dfd"
        },
        "item": {
          "id": "ed3a6cc0-cc00-438b-9394-75a2722dbc35",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "194e2ea5-1119-40b7-9657-4d6c2ea7f615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084519c9-8902-4d12-a0e5-81e9136382fe",
        "cursor": {
          "ref": "45868a9f-a9f4-4143-bf10-dea740e74a11",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c1a44781-8f46-497a-88ce-5752cd9e984e"
        },
        "item": {
          "id": "084519c9-8902-4d12-a0e5-81e9136382fe",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8e109143-d800-4bf9-a5dd-14425866c773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6258855-4d4a-4306-8de0-4a9a0112cafd",
        "cursor": {
          "ref": "d6fdc16c-1b62-4482-9f4d-71eca82673eb",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e8717a85-6d6b-4ff5-a5c4-c18855a97eba"
        },
        "item": {
          "id": "b6258855-4d4a-4306-8de0-4a9a0112cafd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0325e413-17d5-4334-99bf-fd65788f250c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf1a979-7c12-40f0-b4da-e83acdbb05ee",
        "cursor": {
          "ref": "7b0f189e-b4fc-4542-9347-3ffc9160d9aa",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c08b90fb-20c8-4a12-ab88-c8f74327a81a"
        },
        "item": {
          "id": "ddf1a979-7c12-40f0-b4da-e83acdbb05ee",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0d350910-b419-48f8-ab0a-2680a28a4af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df58256c-395b-4124-8879-81fc27838868",
        "cursor": {
          "ref": "2726e25e-541f-4e79-9673-49dbe836dba5",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1a5546c4-6e7a-44a7-bdbf-a3e5d20b8357"
        },
        "item": {
          "id": "df58256c-395b-4124-8879-81fc27838868",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a590e345-8063-4e73-b852-e8f94a86d666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a9f4cd-e19f-4f7b-ae03-1ec2501adfa4",
        "cursor": {
          "ref": "ef57e4de-c1b9-4bf7-b307-b7fb4b300bc6",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8c419d39-b965-47bb-8ad1-517751978460"
        },
        "item": {
          "id": "e3a9f4cd-e19f-4f7b-ae03-1ec2501adfa4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "573ae092-f9ec-49ce-8632-cbb67648e5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7169cd31-88b8-4dba-a9be-e66fedf99175",
        "cursor": {
          "ref": "fd71c3ae-01fa-4c7b-adac-997bb5fc68a8",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a9c64e79-ed75-4f90-9ec5-186fbb1e8983"
        },
        "item": {
          "id": "7169cd31-88b8-4dba-a9be-e66fedf99175",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c3a93fd5-ffd7-42d6-8036-2f70d2fa971a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6789038a-e032-423e-b704-c2dd592354a3",
        "cursor": {
          "ref": "6be0997f-fba6-4275-883f-3f848457a5e0",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c49ba479-a3c8-4aa3-b86b-71a7046e7a10"
        },
        "item": {
          "id": "6789038a-e032-423e-b704-c2dd592354a3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8aa95fbb-13f3-4b04-a3e4-c83c58baf43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5b9dec-32a6-46a2-83ae-5464c1816281",
        "cursor": {
          "ref": "736b676b-521a-4aa9-8303-260277c7029a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ba03382e-f3c7-4cd9-9511-04a9bc1d9114"
        },
        "item": {
          "id": "7b5b9dec-32a6-46a2-83ae-5464c1816281",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5b2c60c9-6364-4947-bb56-e87acefac716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419fe095-a5fe-4f36-94c0-47223919778e",
        "cursor": {
          "ref": "d0a905b1-69d7-469a-a307-729a43e4e53e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "99c567f0-a305-4ef9-a48a-fbaadbf9f055"
        },
        "item": {
          "id": "419fe095-a5fe-4f36-94c0-47223919778e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "57573e89-1e4c-4560-89c2-85ef5f84614d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943d085e-e736-484a-bc37-3fb45e031e60",
        "cursor": {
          "ref": "62ab8b6f-d244-4fcd-a698-9963e4d6004d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5055d0f4-e4ce-485c-b243-024c621f6979"
        },
        "item": {
          "id": "943d085e-e736-484a-bc37-3fb45e031e60",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c724b4a5-3dec-4aa8-9a8f-96a1c0684f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350f1f21-a97e-42b5-8481-f496c9d3d4cd",
        "cursor": {
          "ref": "b0fce593-5cab-4a5b-b8d4-bf659dc3060d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c05e2a11-4f85-48b7-bbce-4bff1ca0fb3c"
        },
        "item": {
          "id": "350f1f21-a97e-42b5-8481-f496c9d3d4cd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b9fec7d1-6711-430f-a172-10042d2d3b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3fe6e8-7a9a-4ca2-b6d7-e2e548ac0b35",
        "cursor": {
          "ref": "788f3507-9131-44a2-946b-91040a41bb75",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7382478b-4fae-4a10-83a5-1b10ba1e0499"
        },
        "item": {
          "id": "bc3fe6e8-7a9a-4ca2-b6d7-e2e548ac0b35",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0ee01eb4-0738-4ed8-8170-ee2f8b2b650d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4268bca9-1bce-4783-9576-0985f973075f",
        "cursor": {
          "ref": "f144d379-b40a-4786-b401-159e3c0ab95c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3ce08d5c-86c9-43d3-a45c-4eb68e386f6d"
        },
        "item": {
          "id": "4268bca9-1bce-4783-9576-0985f973075f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1573849a-8b89-4adb-8d7c-2552d29cbaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9e9bd6-c812-4fa3-9e69-ba352059fa2b",
        "cursor": {
          "ref": "99f6546d-2599-47a1-81ab-57f954723b30",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7d919b72-8599-45c1-98dd-78dc51a406e5"
        },
        "item": {
          "id": "fd9e9bd6-c812-4fa3-9e69-ba352059fa2b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "57339b3d-77a3-4260-a9de-d17c2167021e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c1f202-6a8b-4096-b163-0884ac7c3cc9",
        "cursor": {
          "ref": "4d567216-21ab-4390-8025-94d6f7b3f2f1",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "11c2deec-c2cc-4825-a076-f3cd34620984"
        },
        "item": {
          "id": "49c1f202-6a8b-4096-b163-0884ac7c3cc9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2a7edcc0-8ef4-4781-ad86-437e29a40525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76883f2-04d1-4181-8ca1-51838c1d89b6",
        "cursor": {
          "ref": "8b359110-3e66-4c8d-9df9-03b69abda8ec",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "11baf64b-e844-4ed1-9a27-ffea4460b209"
        },
        "item": {
          "id": "b76883f2-04d1-4181-8ca1-51838c1d89b6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "78e99acd-dd00-4daa-8b38-f5a327e53fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f91a47-3fb0-457d-b669-32398665a8cf",
        "cursor": {
          "ref": "55d3bc7d-4e96-44ce-880f-c66dc1db237c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c37ae80d-209d-4563-bc5d-809dec6c8209"
        },
        "item": {
          "id": "d6f91a47-3fb0-457d-b669-32398665a8cf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "19689483-dd63-4ca2-ae4a-273b838545c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74569bcb-1c55-4a94-be48-06b72369786a",
        "cursor": {
          "ref": "73a033b0-7fc8-4154-9b9d-bca5970e1e0e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "afa13c1e-9192-4bac-80e1-eeb99fb1ee43"
        },
        "item": {
          "id": "74569bcb-1c55-4a94-be48-06b72369786a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3f0f54aa-3018-4ff9-b65a-c264a379f286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1034f49-698e-4270-be1c-9c641556c1d8",
        "cursor": {
          "ref": "e0ecc2b3-895a-486a-8d66-3b0d0c52dbe9",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d0c759ab-e723-4c1d-84b7-28d2fa2226ee"
        },
        "item": {
          "id": "a1034f49-698e-4270-be1c-9c641556c1d8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ce58f53a-6276-4143-b0f9-88cde923d6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c303875-9691-46ea-bb78-7e7477350ec4",
        "cursor": {
          "ref": "8d9443fe-1218-4d7f-bbe4-c166246f7666",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8588421b-b9dc-461b-9545-d4f14b073032"
        },
        "item": {
          "id": "9c303875-9691-46ea-bb78-7e7477350ec4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7ae7401e-189f-47dd-8c03-169353ed2859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b7fa23-9bf0-483d-9f6b-5638f6809d7b",
        "cursor": {
          "ref": "024a5381-9730-43ff-a367-d792c4bc2777",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "33ee110b-e02a-47ed-87dd-63fbb3e71f70"
        },
        "item": {
          "id": "b1b7fa23-9bf0-483d-9f6b-5638f6809d7b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "161cef4b-dcf1-4d98-a545-8f6e4ff503d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096a76a4-d0ff-4d27-be16-4553a93f1101",
        "cursor": {
          "ref": "7eb06096-c38f-4c9f-a859-702f9971faf7",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b7d4c714-94d5-4ecb-a5fa-2e0b5b92fa19"
        },
        "item": {
          "id": "096a76a4-d0ff-4d27-be16-4553a93f1101",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "934bb462-f1aa-4b4b-ac69-4c7abcaff0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0095fa12-34b1-43b3-92d9-c563939054af",
        "cursor": {
          "ref": "7f6d6e67-f81b-45ae-b2fa-c9960f2518a4",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "220c1e97-36d3-43b0-8484-741aded0efc5"
        },
        "item": {
          "id": "0095fa12-34b1-43b3-92d9-c563939054af",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "df997bd8-bcce-43fe-ab1a-e143c75d2e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e361a3-2c08-4ce5-ad5d-9ae0e3c330f7",
        "cursor": {
          "ref": "75dd7d2b-ebb5-42e4-bdef-bbfa129ddc39",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7d7dc783-1403-4c01-af19-2684ea1f0dc5"
        },
        "item": {
          "id": "93e361a3-2c08-4ce5-ad5d-9ae0e3c330f7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "51013950-d6f4-4f8d-b9ea-1e1c43c66979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04666345-2ebd-4a81-a02e-20272defa5ea",
        "cursor": {
          "ref": "0bd9316d-3463-4074-aa7b-77eba291e43c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "346cd955-b358-45b9-bfb2-038a2711c8bf"
        },
        "item": {
          "id": "04666345-2ebd-4a81-a02e-20272defa5ea",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "26cdd272-b44e-437b-88e0-37799cf8a11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a825f12-a4ba-4d5c-9b0d-4f9b0a4b279a",
        "cursor": {
          "ref": "d7373b74-7af2-4a14-9860-0c3832b45329",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "602ab5fc-f638-4e6a-a265-aa56e0d95bf0"
        },
        "item": {
          "id": "5a825f12-a4ba-4d5c-9b0d-4f9b0a4b279a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "39487017-c92e-4b36-9273-37edd03b97e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed4ccf6-5d41-4c69-acb2-0f88d82b27a8",
        "cursor": {
          "ref": "3a7656c7-7ee5-44b7-aa1a-1fea781a5e07",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "267c6525-5493-4c74-a3d3-74114961474e"
        },
        "item": {
          "id": "aed4ccf6-5d41-4c69-acb2-0f88d82b27a8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "893ac18b-1329-4205-82f1-f2cb5ad7dca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb6f0f0-68bf-441f-81df-b74ea7c6caaa",
        "cursor": {
          "ref": "cf5ef072-efb1-47c2-84a7-2f7e4c4e95ad",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "919dd34d-08ee-4498-9a64-8f67df5a8dd6"
        },
        "item": {
          "id": "8fb6f0f0-68bf-441f-81df-b74ea7c6caaa",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a6a7ac85-5615-4391-a0c2-e730751bdb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df007f95-3e93-4267-8bd8-5adb3bb31be6",
        "cursor": {
          "ref": "aab10d90-3037-4f47-9344-fda5965abd71",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d877ff1a-1262-48cf-a959-c3b7693d8be1"
        },
        "item": {
          "id": "df007f95-3e93-4267-8bd8-5adb3bb31be6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1a91dc06-3916-48f1-8c39-c1569c4a47c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e044c0-e38b-4638-abec-d1dca2b66994",
        "cursor": {
          "ref": "eca9c1d2-4617-42a0-b9af-51ecc1af2b12",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "11d985fb-5ccb-46e4-a1a2-bad08d8cec88"
        },
        "item": {
          "id": "a8e044c0-e38b-4638-abec-d1dca2b66994",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7c397c2f-8a88-4851-ba33-26f79cd83880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b60e1f-faf6-4043-a6b1-6e9e55b98aab",
        "cursor": {
          "ref": "a60f6c94-c481-4ffd-ad1f-013ffcd8294e",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ece92c13-1bef-4f9b-a919-4d2843ccd52a"
        },
        "item": {
          "id": "80b60e1f-faf6-4043-a6b1-6e9e55b98aab",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1033e8bc-7cc5-46e3-8231-18a087cbc7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db1d4b2-acf5-430f-9a24-fe09c06040ce",
        "cursor": {
          "ref": "3a71bea2-bb19-49cd-88d2-581be95e65be",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "90aedca1-533f-43bc-b79b-20a28102003b"
        },
        "item": {
          "id": "3db1d4b2-acf5-430f-9a24-fe09c06040ce",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fa5d541a-db86-4b2a-a65c-7ecc17e26e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699dc2cf-028a-47b9-9a9d-8b94393361a7",
        "cursor": {
          "ref": "ceb15d63-0ba0-415a-8337-0cef52f55fa1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2ed6e60c-d01c-4583-b24b-dd52a08a080c"
        },
        "item": {
          "id": "699dc2cf-028a-47b9-9a9d-8b94393361a7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "50d3fd88-2ce8-4991-b291-5ea8d28a8563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcb1148-ccb4-4aec-a0e1-fc82cdcb815f",
        "cursor": {
          "ref": "26ac6906-a776-4e6f-b43b-7facbb021eab",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "075439c2-6fcb-4c1f-8cc7-142c88b4d11f"
        },
        "item": {
          "id": "cfcb1148-ccb4-4aec-a0e1-fc82cdcb815f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b80f1ae2-fad4-4732-aba9-b890505f7a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cce175-d0b7-4c96-b938-983a81ba9158",
        "cursor": {
          "ref": "d2db9554-2874-4249-a679-d3e6e0de6412",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "35c58508-5071-4d2c-8935-c4804f82063f"
        },
        "item": {
          "id": "36cce175-d0b7-4c96-b938-983a81ba9158",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6682fd76-7d85-4bd1-ac2b-7e43b4385249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf2c74a-1dd6-4662-8839-8730dc0b9129",
        "cursor": {
          "ref": "c8629413-36de-4142-bc51-bdd3707a9f17",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "44871eb2-c352-4c44-a2b4-a8dd5b20c1c0"
        },
        "item": {
          "id": "7bf2c74a-1dd6-4662-8839-8730dc0b9129",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ace8a070-6fbe-4ccd-87e5-504048ed5f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ca7f85-cdcb-4b87-a4cd-814b0e23b2fa",
        "cursor": {
          "ref": "9f664e3b-e974-4e71-bf0d-b944eab1e875",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8b4fc00c-d9e7-453f-908f-28705e88798f"
        },
        "item": {
          "id": "24ca7f85-cdcb-4b87-a4cd-814b0e23b2fa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b84ecd93-7ec7-41a4-b00e-a17d2d87eba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80ac1e5-7d2e-4d30-8d0b-bf63bf68e3a2",
        "cursor": {
          "ref": "d11b5199-1316-47d4-82d1-ac575696005d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f2321c15-f5bc-4953-b50d-34d291d106eb"
        },
        "item": {
          "id": "e80ac1e5-7d2e-4d30-8d0b-bf63bf68e3a2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d177cf5b-b545-42e7-a1a7-0eceacbac161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9182b2f-5425-4c0e-a037-d7aa9d0dd669",
        "cursor": {
          "ref": "5c5b58f5-0c73-4dd1-b99a-4639a8741653",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fc25edf8-0db7-4ffa-a0bf-d129552e3d8d"
        },
        "item": {
          "id": "c9182b2f-5425-4c0e-a037-d7aa9d0dd669",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0391d769-6cc3-48fa-9ddf-be9d532002a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7045e09e-0243-4e96-b363-add3a5552b9b",
        "cursor": {
          "ref": "cc1aaf45-f15f-47e7-8ffa-11481cea360e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "103b4347-675e-4e8c-b91e-096681d72f4a"
        },
        "item": {
          "id": "7045e09e-0243-4e96-b363-add3a5552b9b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a7936e79-b3be-47c3-9263-df297acef7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e5d7df-09ae-4df2-8f05-a1b8adba0d59",
        "cursor": {
          "ref": "ebda6fbd-7114-489c-a704-8496968ec49a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7648725b-12be-41b0-b020-72d3cfe0c685"
        },
        "item": {
          "id": "97e5d7df-09ae-4df2-8f05-a1b8adba0d59",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fb76b941-e068-42c6-a223-3938e3980858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c8eb9d-5ba5-4b0a-98a3-4a62bd6ccfa5",
        "cursor": {
          "ref": "e2cc7d43-162b-40c8-bfad-62c35f15d1b9",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fd54dcf3-1f59-4abd-8480-5abedcb02704"
        },
        "item": {
          "id": "b9c8eb9d-5ba5-4b0a-98a3-4a62bd6ccfa5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fdbd6d6c-24df-4ad7-9534-59de659b398e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae494eb4-e043-42f5-ba59-a16f3b39a3ad",
        "cursor": {
          "ref": "e51f30eb-9344-47a2-9f29-f38771a44f70",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e427a662-8b59-40b6-9499-480817435089"
        },
        "item": {
          "id": "ae494eb4-e043-42f5-ba59-a16f3b39a3ad",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "dfeab7ba-1879-435f-95fa-1987905e5e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77023e49-b6d0-46ab-9fb7-fb1796b70600",
        "cursor": {
          "ref": "9f2df2ef-5f15-4cbe-bc07-f79521a703c7",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "63e56481-f2ca-4750-9b7f-3aa3865c7770"
        },
        "item": {
          "id": "77023e49-b6d0-46ab-9fb7-fb1796b70600",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "aafea712-00c5-4927-9ba7-3c2bbc6f5236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b65ffff-99b9-43dd-b354-ec2732a02219",
        "cursor": {
          "ref": "9a9e596a-1470-4f95-82b0-5286105b204b",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0db30c98-bdd7-4627-943e-997a440df6e4"
        },
        "item": {
          "id": "7b65ffff-99b9-43dd-b354-ec2732a02219",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f67f2a81-47e3-4486-837f-87acdb95bb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03690d3f-8cb0-4bc4-aebb-f2ca80d69e63",
        "cursor": {
          "ref": "9423a1b0-4a50-40ed-b19d-91ac7dd3244b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bb8cebb6-29f9-42db-b51c-5ddf62f736ad"
        },
        "item": {
          "id": "03690d3f-8cb0-4bc4-aebb-f2ca80d69e63",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "00a02b9b-face-41ed-ab76-deeb7dceae13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21eb12de-42b1-45d8-bebd-f47ce8172860",
        "cursor": {
          "ref": "9446ab22-fd53-4dc1-927e-6a0c0b912bc0",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4a120d00-186e-43e7-976f-29524ee1ff07"
        },
        "item": {
          "id": "21eb12de-42b1-45d8-bebd-f47ce8172860",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "dabb0292-3286-4ea3-b6b7-42fb369d5ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83212a7-b0e4-493a-ad2c-733390ad4e47",
        "cursor": {
          "ref": "5739634f-8157-43c8-a54f-bb369c92ac8a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8cd37484-3d51-4c64-8e9c-ca4e4b210749"
        },
        "item": {
          "id": "f83212a7-b0e4-493a-ad2c-733390ad4e47",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "64751db0-9070-4943-88d0-888d612c0e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b387a23d-5811-4f6e-9cf9-78bdcc5287e3",
        "cursor": {
          "ref": "1f2fb4d4-49f2-4354-a5b4-59f12bb874be",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b05d5bb4-e6d8-40f5-b3f7-c98f3031f3a7"
        },
        "item": {
          "id": "b387a23d-5811-4f6e-9cf9-78bdcc5287e3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "82234493-f28a-4324-b27d-dc122e932365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a64af2d-9020-4636-8358-6bb57f1c30e2",
        "cursor": {
          "ref": "ed839e73-b375-4c55-a207-f4e9c31416fa",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "52461cac-1030-467a-9300-2df15e3cd0bd"
        },
        "item": {
          "id": "8a64af2d-9020-4636-8358-6bb57f1c30e2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e51aa0fd-6087-4be6-bd6b-1d5cc766e209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249d9ad1-05e3-4f86-b2ac-8f5ae772d681",
        "cursor": {
          "ref": "9151372a-80c1-4943-8ffb-869ecba7b9e3",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1615b70b-3414-4698-bd32-0777499a2a2a"
        },
        "item": {
          "id": "249d9ad1-05e3-4f86-b2ac-8f5ae772d681",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "01688ac4-024b-4582-bf3c-1cd3472ffa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1046bd-b3ee-4f39-ac6d-380e7e94627d",
        "cursor": {
          "ref": "c89d9068-96aa-45f1-b033-6580ab418490",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "24401500-3c20-4521-b025-25cefdf95639"
        },
        "item": {
          "id": "7f1046bd-b3ee-4f39-ac6d-380e7e94627d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "128c813a-fc00-4ce4-b7ed-3f2a929e6ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a5204c-27ab-4dd3-be4a-7a61fe55eea1",
        "cursor": {
          "ref": "80dd19af-00a8-4504-aba4-01d9fb6eb5c2",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4141e2e0-de8e-47c8-82f7-826beac9e529"
        },
        "item": {
          "id": "17a5204c-27ab-4dd3-be4a-7a61fe55eea1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1e213fb3-70c8-4982-bdce-91ffa701f0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80efa61-30a9-4202-b358-b60eff805974",
        "cursor": {
          "ref": "b2db0add-97ae-4be8-a152-cd6751b08c99",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5ed351d1-e3e1-4b32-a8d3-39f8ae3e10ca"
        },
        "item": {
          "id": "e80efa61-30a9-4202-b358-b60eff805974",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "740ca248-0bc2-49ed-a56f-5aabceaf7863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6604b04a-ef25-47e7-bf11-30cc704ef3b6",
        "cursor": {
          "ref": "4c5988bc-41d1-440d-bbad-ad06442dbfd8",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ef80a051-a7cc-439b-ac8c-9d4ecfb5a258"
        },
        "item": {
          "id": "6604b04a-ef25-47e7-bf11-30cc704ef3b6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "99099e0d-7242-43bf-b87c-eb9137360cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45be78ed-cc43-4087-a337-2fcac3d10377",
        "cursor": {
          "ref": "315cb9ec-92ba-4dca-bad3-74dc91b19848",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a6aac2fe-d6ac-49c6-ba00-24f1eb2a2fcc"
        },
        "item": {
          "id": "45be78ed-cc43-4087-a337-2fcac3d10377",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7c7618d0-6354-4cad-92df-ffb8617b2881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9037fcd9-9209-4808-ac33-e9ab92aea3e8",
        "cursor": {
          "ref": "d0146229-05f6-4b17-81a1-db8f70316b15",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "96d62281-94c4-429d-b9ab-12c9cffe85a9"
        },
        "item": {
          "id": "9037fcd9-9209-4808-ac33-e9ab92aea3e8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "50e83512-c34c-4721-bd26-538148810285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1acb1b-bf55-4de6-8d71-d9790a41f384",
        "cursor": {
          "ref": "1b3df135-ec51-4bf1-9648-3def3ecf234f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6b7180c4-5bad-401e-9ec3-0cc9f0515957"
        },
        "item": {
          "id": "6c1acb1b-bf55-4de6-8d71-d9790a41f384",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e56a50cd-8cf6-4970-b9af-efce2ea60034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d19acb-65d3-4d7f-bd42-f66b1cd9c3d4",
        "cursor": {
          "ref": "dc94429f-4390-41b2-9f42-9e5b03ab4fcf",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2f416e21-7a1d-4bfb-81bd-781134d16bef"
        },
        "item": {
          "id": "f6d19acb-65d3-4d7f-bd42-f66b1cd9c3d4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1d703df1-bf69-4dfb-926c-f75037b9c20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505bce5b-fe81-4cf6-b5a0-503802237562",
        "cursor": {
          "ref": "5bb1a0aa-545b-40c5-b1c6-e08a03b9fcd7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6b103075-d7ae-46d8-af22-e5ca5c9a1c65"
        },
        "item": {
          "id": "505bce5b-fe81-4cf6-b5a0-503802237562",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c17dab83-0573-4375-bdac-d1413bdfafd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d446e8a1-3e08-4a47-b954-c45141a8f4a9",
        "cursor": {
          "ref": "66e6543b-5f42-4b67-adc8-07620c88bee4",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5e1989f1-cb9d-4c47-918c-df62702e2f32"
        },
        "item": {
          "id": "d446e8a1-3e08-4a47-b954-c45141a8f4a9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ff1bc832-4d27-494b-8c89-9b9b43706439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3843313c-17cc-49a6-be71-a8e4ce4cd425",
        "cursor": {
          "ref": "ba8b30c0-2c0b-44c5-bae0-cb134b236e1e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "71da2bb6-bcfa-4e49-81a6-e7b9f71b5a07"
        },
        "item": {
          "id": "3843313c-17cc-49a6-be71-a8e4ce4cd425",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "efa09129-005f-45cb-8de2-c53d1f56c4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc86d214-13a8-4ed5-84f9-8682b8a34ca2",
        "cursor": {
          "ref": "eaf4530b-d7e1-428d-b8c5-c8d677408e47",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9987a772-eefc-4ca3-b423-99709cba09e7"
        },
        "item": {
          "id": "cc86d214-13a8-4ed5-84f9-8682b8a34ca2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2f8cd86f-e090-4a69-9bb7-0cd465f87869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c87c7de-33d8-435f-98a0-69a678213879",
        "cursor": {
          "ref": "bb456c61-8620-45ab-9a13-4d2e85fc6371",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "06dcc73a-f019-4a2b-ad1a-00df6c847a18"
        },
        "item": {
          "id": "2c87c7de-33d8-435f-98a0-69a678213879",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "20595891-986b-47f3-a727-fcf14705380b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08a7a68-b73c-4abb-868b-95e6b3c49ae3",
        "cursor": {
          "ref": "d518eb69-5009-4b79-97cf-e60f72f1f4d5",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b52e42a9-f539-43a5-8346-6159e3a489a9"
        },
        "item": {
          "id": "b08a7a68-b73c-4abb-868b-95e6b3c49ae3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "051daad9-8196-4178-b971-aa723dfada67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc1fd9b-9dbf-464f-be04-dd8439ed4469",
        "cursor": {
          "ref": "445b847e-4a8b-4a7d-95b3-ef556be5c57b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ac9b3045-5b96-413c-af6e-5aec352803ad"
        },
        "item": {
          "id": "ffc1fd9b-9dbf-464f-be04-dd8439ed4469",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "70b78b08-c358-4c0f-86e6-69367571418d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6f6212-14d4-4bc1-8abe-6e09959f03e0",
        "cursor": {
          "ref": "4031871b-8613-42e0-9d7b-0a9d778478c4",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8d88294f-304f-464c-8f56-321d3580d076"
        },
        "item": {
          "id": "0c6f6212-14d4-4bc1-8abe-6e09959f03e0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2d105cbb-e187-4e4f-9cbc-89a8490e34a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11f1260-23bc-4339-9100-b4e2fd0d699b",
        "cursor": {
          "ref": "8f1e091f-67dd-4861-af04-b98b522ca1ee",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ef167a3a-a97b-4ac1-95ac-374ee33e6494"
        },
        "item": {
          "id": "e11f1260-23bc-4339-9100-b4e2fd0d699b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "98fa8f0f-0831-47b0-a5be-f05fd73e6a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d197e8da-ff36-4a1d-acba-58f52e7adae1",
        "cursor": {
          "ref": "38aea2e0-62bb-453d-841d-52d05f2d303f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0a3034d2-0582-48fa-9682-9bed495f242d"
        },
        "item": {
          "id": "d197e8da-ff36-4a1d-acba-58f52e7adae1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b6f52739-a4e9-44c4-a8e5-8fa6a3b75b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74df8ec-bfdd-4239-b63b-5e7118c76fbb",
        "cursor": {
          "ref": "b98e7b6a-56df-4ee3-a2d8-89bcbca50bd7",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "25014e70-58d0-46fe-9378-23c51e3c44b0"
        },
        "item": {
          "id": "c74df8ec-bfdd-4239-b63b-5e7118c76fbb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "434de48c-cc5b-49d7-9296-50622d04cb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15509782-b48e-4b37-a541-647b5e52f58c",
        "cursor": {
          "ref": "94b61eec-b558-4875-a898-9fb4470e17bd",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a03b70df-726d-4427-93ba-2850c72dab4e"
        },
        "item": {
          "id": "15509782-b48e-4b37-a541-647b5e52f58c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7a9758dc-a10a-42c9-a456-ecae372098dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e07d66-f992-4628-a987-e47f19173c87",
        "cursor": {
          "ref": "e07c6bc1-4e39-4a14-b17f-b8c29791eaed",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "104fc657-2dee-47d5-bb66-b4c0384f1ec1"
        },
        "item": {
          "id": "11e07d66-f992-4628-a987-e47f19173c87",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a73af429-f556-4c8b-81ed-1cd59b2467e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2388cf7-d8e9-4577-9937-a636521c30d9",
        "cursor": {
          "ref": "475a1c6a-9046-4d61-ae6b-9d4cae1a5fcc",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "10512744-e6f4-4554-bcca-39bc939999d2"
        },
        "item": {
          "id": "b2388cf7-d8e9-4577-9937-a636521c30d9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "aacd761e-957d-47d9-a824-30961b2e6110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466ec2c5-9a71-436b-b48f-c83a2193869b",
        "cursor": {
          "ref": "e769d3e3-c02b-4244-aae9-a6324a4d8396",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3df19e20-5b88-434b-a918-ebf84d4b3e57"
        },
        "item": {
          "id": "466ec2c5-9a71-436b-b48f-c83a2193869b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e82863b8-0af3-423d-afe0-f574170b8045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a51f63-5d94-4301-bb5a-81c48c19602c",
        "cursor": {
          "ref": "49be5622-9b5a-40f5-a846-70e3a8158d26",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "abd66dc7-c313-4ca4-a552-467cbe9faf0d"
        },
        "item": {
          "id": "02a51f63-5d94-4301-bb5a-81c48c19602c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9c45e54f-fdb6-4f6f-90a9-c5ca0905938a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a98b093-04f4-48d4-889a-b846cb562b0d",
        "cursor": {
          "ref": "0f52950c-a827-4298-b990-ccf22eb87bf2",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "54f9aac9-0509-48d6-952c-3896c34832f6"
        },
        "item": {
          "id": "9a98b093-04f4-48d4-889a-b846cb562b0d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9dcd07ec-3fef-4ada-a76f-9f3eacba575a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d9f643-70c1-453a-bdea-5cc971b43043",
        "cursor": {
          "ref": "e65af34f-2d67-4ccd-9c8f-4b475f82d0b9",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "96830dca-cbc0-4333-86bd-c81e4b3a2c82"
        },
        "item": {
          "id": "33d9f643-70c1-453a-bdea-5cc971b43043",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "44d6c375-40d5-4ef9-8003-3bfd40d8205c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8119af3e-3a38-4784-b910-c894c217c9f9",
        "cursor": {
          "ref": "a5cd6a65-8962-4389-bdc4-2df2d6420ad0",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b1391df1-b301-4e8b-a86b-249efcb61304"
        },
        "item": {
          "id": "8119af3e-3a38-4784-b910-c894c217c9f9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5e9fae32-d3bd-45ca-bb4b-d4620ca7b3c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172f99cf-19f6-4b4f-9ae8-26450acb11d8",
        "cursor": {
          "ref": "e36f037f-48cb-4a18-a680-5bb91dc03eda",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2f505713-2c95-457c-b123-7ec07f28fd0b"
        },
        "item": {
          "id": "172f99cf-19f6-4b4f-9ae8-26450acb11d8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0e0ea758-be4f-4f69-971b-7ed96f5c2b33",
          "status": "OK",
          "code": 200,
          "responseTime": 2336,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bb7d31-3f80-4439-9215-e0e2e9df09cd",
        "cursor": {
          "ref": "b2568ddb-34f7-483d-91ca-c1f7ee8f5719",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f27bacdd-b0e4-4501-afee-e51a28c62b44"
        },
        "item": {
          "id": "95bb7d31-3f80-4439-9215-e0e2e9df09cd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8be85a4e-1cf3-4ecc-b8c7-056e19e59752",
          "status": "OK",
          "code": 200,
          "responseTime": 2573,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2586c4ac-88e3-421d-8297-c96fb8226218",
        "cursor": {
          "ref": "9b1f5a5f-329b-431a-85d0-fc5bae340fbc",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "626a143c-46f3-4a37-9b8e-45bd9ea5b0f1"
        },
        "item": {
          "id": "2586c4ac-88e3-421d-8297-c96fb8226218",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "53859891-4c78-4611-9cd2-7977feccfd03",
          "status": "OK",
          "code": 200,
          "responseTime": 2249,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2329f3c5-2369-41a8-97c8-b19c653770ad",
        "cursor": {
          "ref": "181a2b55-b5a6-4bed-b8b8-e9a30447cc4e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fba5f168-ee19-4aee-b1ac-65d71b0f2c8f"
        },
        "item": {
          "id": "2329f3c5-2369-41a8-97c8-b19c653770ad",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9e57e8be-616c-4392-8a2b-48938f75e70e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2329f3c5-2369-41a8-97c8-b19c653770ad",
        "cursor": {
          "ref": "181a2b55-b5a6-4bed-b8b8-e9a30447cc4e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fba5f168-ee19-4aee-b1ac-65d71b0f2c8f"
        },
        "item": {
          "id": "2329f3c5-2369-41a8-97c8-b19c653770ad",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9e57e8be-616c-4392-8a2b-48938f75e70e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3b875e-53e2-4fa4-99fb-419a4c68a654",
        "cursor": {
          "ref": "262a62a9-a5bc-42c4-a5cc-866c98d3530e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2435085e-041a-40d7-af0f-90d5b555a1cf"
        },
        "item": {
          "id": "0f3b875e-53e2-4fa4-99fb-419a4c68a654",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "89703465-0831-44ec-b288-eee1ab136a1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d2d323-99e0-4973-99e9-6017300afc3e",
        "cursor": {
          "ref": "d9f0a60d-2e26-4f66-8cf1-63195a1f91f7",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "094ce8b3-c281-4ff0-96e4-a64d29aa7e19"
        },
        "item": {
          "id": "b5d2d323-99e0-4973-99e9-6017300afc3e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "75c883a4-0e11-4ab6-afd6-728f1211922c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}