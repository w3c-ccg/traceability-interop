{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a458b872-5297-41a2-ab42-bf96ec0e20fa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "01eb8ae5-9bc7-4573-ac23-c9bdd1e9db73",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f333e427-65cd-43a4-be1a-bc6b1556e186",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ec0df85a-b9f9-4843-9072-3b8a6a53666b"
                }
              }
            ]
          },
          {
            "id": "3c5468ae-c945-4ebb-a980-5ce622cdadd2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6fa424c-bb26-4fe0-a554-6412fe856422",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4322842c-5a46-4010-845b-4b724b41eaa9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d111c2cc-6b2d-4b50-9a63-1d0836b54d2f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0fa3056f-a7cd-47a1-91bc-a96c673cbb8b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "321e5067-f367-4392-89dc-0304c737fa84",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0b4f379-d86c-423a-9651-2f32425b046e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e3a3423-9d77-498a-b24d-99e927db555c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55918eca-e7f1-474b-827e-7bc631e5c880",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd8464fb-f417-4a4b-9d5a-b42ba5671ac7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "19ba4c30-e429-4d4c-a1b5-78087a24d9e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5b50687-dd56-440c-9bf7-901c5379b279"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ac1dcca-f888-4a7a-a05f-5c22f4f62268",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "63227092-79ae-41dc-bfce-4c112971bb32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78c85ef5-6966-46ac-8c13-708d91f1bcab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49053d96-da53-4ee1-974d-27f08f935158"
            }
          }
        ]
      },
      {
        "id": "ee197479-a4c1-425f-a600-791892eb4913",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "df5b5b84-69a1-400a-9671-f3bbe32be9c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4b85467-77b2-47f3-858b-7293c7c14939",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a28ccc8b-e6fb-4f5c-a82d-f0879fb89dfb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d6b846-2ad9-4d31-b603-d3fbb78e972e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18f52763-9f9a-452a-a02d-65a03257c6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d9c458-2abc-4c1b-8b67-05113a57a48b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e77d10-4cb9-48a6-a60d-4ed51a8d3899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "caccc7d7-de23-442e-9ae9-151a1ea3c6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639c2e71-7830-41b8-8664-64319a9ffa43",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264899ec-c62b-4d9b-a89a-cb5fa0300768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ef02d53-a35f-4594-8c30-b01dff529ae5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "879d6371-a57e-4ea2-a66d-1c8a929a2e56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70bf70be-104a-4097-b5eb-36a86ec872c1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d909448-36d1-4f99-a125-acc8da14df19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "904c2ecf-d098-4a07-8dc0-a617b145c438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c9bc42-1ea6-4abd-b7de-3c2da0595e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d24885a-28c2-4f22-aed8-93dec1cf83de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1bc42d5c-c26c-4c0a-a217-a1bd9e62a202",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2bd7546-9379-401b-941a-33070151c056",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4126233-2e6b-4e5b-9030-3b6650baa1da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "916e736b-e813-4def-8087-b400ab68a2b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8005f73-f0b7-4455-a19d-10d1a554129c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "41d71b24-fbf4-447f-b37f-bfc8bb779b07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "428bb96c-4ae1-446c-8306-31bb9a6ac6a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb23ed5e-e025-4d3f-a0bd-080e5bc97e0b"
            }
          }
        ]
      },
      {
        "id": "7e419c62-a3d6-410c-9e5e-f6208b6ab04e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0d2cf4a5-2ba6-438e-8b7f-444934053e65",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b01bb4fe-55b4-430d-90a4-c2446aeb0fcd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4d772fbe-81ad-43a0-9532-c67bc1667e76",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c910d450-2916-49f6-90ca-32cc47af5920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9874f299-65e5-414e-827c-046b7f8d7708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce36c63-ae36-4179-b39c-f0d005f42dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5ad9557-4943-46d2-b5b9-debc15691564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ddd6dc-acb2-43be-bb03-cd6176c71aa6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d753bb39-5d9f-41ca-b78d-7529091b15f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1204df7-063e-4e92-af9e-e0115a6a4ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487670d6-2fcf-44ab-99e2-b8c0d8e8f73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fc674fc-9e33-448c-93cb-565add36014c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458c1a6d-5977-411e-9c41-7329ffd6e48f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fb371d-6402-4711-8df3-95681fad2070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc8b9fd-6f49-45ea-aaf8-aa12c3947d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560e0c6f-3d4f-410d-8d67-cb25d6aef954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5522646f-104a-4981-93ed-3028bc2b6078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde085a8-20ff-4bb5-87b5-39dd781e1d34",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fbf0a3-1b82-47dc-bf52-35f0461c3f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1329562f-3e22-4eec-81db-87e368ca30c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e64a441-7541-4829-aa31-45674d6fca74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "373c97b0-990e-4711-b1a6-b22190eaaffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a320fff7-77fd-4479-92df-b86da5aec61e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263adf0c-008d-41b1-b8a8-58bcdaf530b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42862d7f-732b-45d0-ae02-ce400b94da6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108fca39-9e1e-49ca-a9c9-6dc368efe743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5251c96a-0be4-462f-95de-d533541c52d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51093af-11b6-4d48-9a43-950542aa553e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca019818-158e-4f22-aca1-da636684882b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4360fa7a-9b79-4e02-ab44-2003fd36065b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d60d30d-8130-418e-bd8c-1791e9707f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "904ae892-845b-4c07-8862-5f3469fad33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e2a205-c2dd-4c65-b040-1a4a912c8895",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce08bda-0aab-4d1e-be4b-0b76286f908c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a61f377-8bef-4a8f-aa5f-7945e6c17204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e1f1a7-0ad1-445e-ab4a-989e8f2a70f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57514ed8-1ae3-49f7-9bba-afca5d620b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ceee28-6011-485d-b136-1c2d93b2d164",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a81b99-b1a2-4bc8-bf49-0236461f87a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282233dc-eda7-4534-b48d-776db744e8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a25b89-8c4c-42e1-a318-c212a67d1b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3253d156-ec89-44c0-bb51-2d977fc8fc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec10bbb0-8e21-4080-a115-8c5e674f3aab",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdab733a-f693-4c9e-96aa-bba09aedd3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5510c3-6f9b-4fe5-b371-550629a7bd34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e59d8ed-d961-463d-8f05-3ea393d22f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "362f347e-4ea8-4054-8b75-6dedb48f370d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7236a226-09d4-415b-a720-8c492a488ac2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11de44c0-6222-4a8f-8c9a-7201f8a602a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4067c0e6-32d1-43c4-8c7d-635aaaa56b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20ee7ca-87de-414d-9774-0f4d103adf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0c3d93d-39b0-4d44-b296-1b61d46489d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd39fdde-bdfc-4f20-99c4-120e67294c35",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcadcd37-169c-4615-9a18-a66bcf9fc2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9123dd6-230c-4c47-8b07-fda28a27a420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3b58c1-6220-4146-badd-400108b207d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "496cb8d0-69d1-4aac-82b6-62eed57d0d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c5fe58-48f9-4482-9b8c-614c2f447d2a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21964962-b57b-4b38-a00f-c694e73983ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234b9da4-1e79-41f7-a1ee-9a72c252cc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66093482-39e2-44e6-b2e9-8f4de1fe8414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3a602f0-d91d-41bb-a92a-378de20268b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e2c662-171b-479f-ab81-78d0d36196f3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207eed54-0105-4554-aa86-0fd4e75dcb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd52a92f-ad48-42f2-a914-10f395b5bdbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aeb87ee-fe48-44fb-8753-f22bb142344e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9c0bcec-8f8a-4ffd-9faf-858192be32c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b7b1b1-2d97-401a-91c3-e8bcc3d32915",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fcb0a0-303e-433f-83c0-4c1fd0406746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66497271-be82-4cb4-be71-7677466c271e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce66511-6ac8-4ef7-8328-ca01980ebe17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acf7b98d-5ea8-4632-b925-02b0beca5477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db9649c-3ec2-4e42-9da0-d16e59302681",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1764fa10-2e1d-4715-a010-a10cfedd0592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc2f9da-f792-4a31-b9a1-b2cf58969aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4133c863-a1a0-4f88-a5ed-727312d7f2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2ffad63-ba69-4881-add9-1d6b5462758d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab95efd-7857-4164-8250-0eac64a508ae",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cccc064-b177-4be1-a95f-82a312ca3caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d1bd11-507d-48b4-a372-7eab35230752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6291d71a-86f1-4da0-b037-39f18f06b968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a06fee2-04cb-4663-82f1-d7457b3ab3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccc43c4-425d-463b-a0c5-3853724cf482",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390fd9dd-0d8f-486c-9aec-665a643a9823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb60b25-7dbf-4ea1-b524-24888c3e3926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776bde81-0c26-4e83-a4bf-83174285a4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f628906e-6251-48d2-a3be-ae028a0e8d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df818a1-f695-4fc9-9e59-c4362d220992",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcf1cc4-dd22-4463-94c8-7cbd3b5fecc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689a00ee-6938-4d46-a24e-09e493d6725d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc2712c-a40d-468b-a0a0-a4a2755f7a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e649191-9d65-45b8-97ee-8f2bb0fbb170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61905257-6367-4fed-b89b-e88c9c299dba",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa3e404-9c3b-485b-8065-91a18f2210c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a2a8c6-7af2-491f-8ea6-ec43e8e3afea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc566a0-31b5-4483-b112-1ff5de6abfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f482bf8e-7247-4425-bed8-063822cbd3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d85b47-aff0-42f8-847e-f474c444a6fb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a844d47f-ba68-4b92-a538-6a1aaef8f445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c451855d-a98e-4e62-92b1-63d7ff6bdf79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabd56ae-acc6-4210-b986-5d89024949be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acb14805-c741-4ed4-bcee-354e98123346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7f802e-9d59-4e9e-9e62-168009a9e1b8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a2bcdc-1ff3-4333-b8ab-a1f28ed5a6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a3d762c-98a4-4e01-bd66-8f3b0c05762f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd12ce7-7a0b-4094-a000-65289c44623a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d908155a-ab42-4691-9e1d-cb8c5e68fc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb70b296-cbdf-43fb-a38e-3cb2af519876",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021af21a-24de-430e-8f5f-d5a6ce9133c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d7cd98-3899-4448-9d2d-ddc52f7490d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2165508a-2b4a-4c4b-9367-cb9e23c8df34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06760cae-0041-4390-b011-60c1cf6e8688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17132813-073c-4419-ade7-adb859393079",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48106663-0955-4d77-b5d7-d8ecfc8f541b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb49239-2408-46e4-89e9-9e7c18e25933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7dd79f0-8e5e-4e81-95ec-0c461b213ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d72c831-cdc6-4348-a8d4-72c409b1c947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2984e15-e1d9-4647-938f-853dd2190e12",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2ede68-e9c1-41be-ba6d-3dc52e5eb980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4427fd2e-931b-4b72-b1a5-736a561bce1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffecc721-5304-48a9-926d-a9afe05c1a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc604cbb-7f52-438d-a2d1-91b9cbede4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37d5a00-26e3-4682-b12a-11a4cdda8150",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac94b95-bdd6-4775-8cc1-bdb7d7a74eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f20c36-f084-44f4-9425-1d8bc3322ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a5f39f-23c9-4746-9482-435f7c68f217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce36a8f-b2fa-49e2-ba28-6e853f7f3a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb156f7-f0ce-4e77-b8ca-d855f5bc4450",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f3925a-81d0-4b87-a2fe-b0bfc1af17bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb69d03-5437-4c12-800e-250c9771d8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e026726-19dd-469e-9c1e-0f3217f2a022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3fbbec-e76a-4203-af76-1e6bb848bae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ae1ffb-73bb-4c7f-a748-a159726a95cd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9e0300-84e6-47c2-a265-da0c2a3b638a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbddb89c-2a12-4e5a-a1c1-25c55a7833a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c96e997-b804-4ed2-ae9b-2deeca3065b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85b4607b-a8e4-45c4-96d5-2855e199c40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e01173-744e-4e6b-9dad-c7b8b08c06f5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f90bf69-42a7-493d-9dc0-56e2f13b3af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8916983b-9a52-4839-b7cc-add1c61d5917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec6b852-7c25-4a46-ac71-a1f557e18cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a92c9caf-fd46-44c8-b32c-ece71ac58874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c480139b-57c4-41f9-9b72-78b9d90959bf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcda21ed-e9c8-4331-a9f5-b12ea7c487dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415b431b-efdc-43ee-84ea-9b16fea9bf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a897b3b-aea3-44b5-aea0-59a362b97386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c9b535-4143-4f9c-8119-df1d5a5691f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7152ef27-a211-4728-90e8-4df6619cc476",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26976a39-d53a-40b8-b498-4c66b9d264a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b7cc45-35a2-4f8a-ae5b-a7e03ad4a53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fd8b59-0b07-4d45-8e08-5b5677d8c4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "947c869f-2c09-4c9b-957a-9556f7bf676b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8254e16-c94e-4b38-8318-b93da4d843d4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e9c57d-e5fb-45c3-9101-04d84c1db56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275db495-e0e7-4af4-abc0-5b432bcaf469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31e2ee4-acf1-4c1b-82a6-9190aee3cd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "42257b01-2719-4eef-a61f-c31345ca6b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9434c5-fb7b-4cdc-a916-800753e9d881",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a803284-6ca5-4a6f-9df0-4adfc2934929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a81b28-c0f4-455b-b52d-7c69c5102488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec682b5-9b17-4ceb-b60b-e878dae79818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0961bdd0-d844-4e48-98e0-babad6bf800d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c30ffd-6aee-4d3a-8fa7-2ac0203b7b28",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f24830f-ea42-408d-80c3-e40108cc45a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e96ac7-1269-4dd5-a424-faae06b9aa58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b1f3ab-ec5a-4c43-be9e-3c05171cf670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f41d876-33a5-4447-b6f0-5b1c2d0c3744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd68f18-80fc-43bf-9518-50c61d5e06ca",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ab2f5f-cc98-435e-9369-1a20c738fd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8ba491-c47d-4779-b359-5e2b3452de13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a23da2-335a-4079-9095-7877dfcb94d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f434ced-fb5e-40e2-8095-50c148c49e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b0ce07-3236-4e72-8126-3145c007034e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a9f44a-721d-4858-9c2e-b1e5f0129796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad231e56-0942-461d-af2f-de7950fff148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bd4f25-9a45-43d3-af59-23822fb480f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a31dd14e-e396-4e76-81e9-7ff045b4ce3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c1a103-0377-4776-bf09-13cbd4d25c7b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db1ff8c-4e95-42dc-8608-5aa042ad5221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7381f62-2f1c-41bd-8aef-1075a39f1924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7db6c2-e198-4b21-a852-e1637921224f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a52ffed2-d673-494a-bbf5-601c82f65593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbdf8e0-057f-42d4-bdd5-af27f9979cda",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56c29be-a055-4d66-a0a8-f9b7b528eb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b901612-e163-4b89-a21d-492ff5e535e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becf2dec-2780-48e6-b365-d97ddaad4f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd9d1ff-e745-4fde-a2ed-10a5ee8c6cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f21d431-fc23-4d1d-b703-cfd8e232df7f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480d2325-5a4f-4414-917d-58dcf61ca6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc838c63-0375-44d5-86d5-b4c5602fbd9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792b0c59-a084-4878-92c6-02158c3558b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "587f62e3-1080-40c7-be69-0c052afe3dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a118ce7-4054-4558-b5c4-d80fa8bbcc45",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f22a8a0-70cd-4b6b-a60a-b7ad482d5581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858c9d51-2e87-475e-9564-6a18239ea3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb49516-945e-4ce2-a4bf-8b18525b2ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c36de7e-5f76-4d64-a138-d202f6ca5d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e626161f-3ce4-4f57-90f2-cad60d4d967a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1841fe88-b81b-45e7-9730-5f07ef803f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef99bac-cc2a-4b42-9cac-ed13e802fe27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114705f5-e12b-4245-b112-40dd5658b07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b468f1fa-67d0-4ee3-8b73-5f037eed9135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f7dc6a-0d01-4437-9d54-bb63be9bdce1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5d896e-8a23-40c3-967a-57380eabcfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5bb60a-5d45-48b5-8b6e-f38b2d6a78db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7ea009-30e9-4c82-9fc2-adedd56107a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d899d5e-2d9d-402e-a7c9-d39d4b5424eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417deac4-a728-4f3c-a36f-c2d3fed0eec0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2a6321-e554-428d-80d7-e933108798ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204acbaf-c368-435d-b9d7-129b07d4c403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0512bc-8aa3-4dda-942b-34c134985902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "32e39c7a-e1da-4694-a958-8373f0e653f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4e00a6-f02e-4ab0-9b29-a3431347a189",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e18260-78f6-4c3b-96c6-a078b81e9864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb6d7a1-bcfa-4b05-a1af-99436994ee02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5821004-4393-41d0-8fb5-ddbf240cd05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f631242c-5b2f-492d-a99a-1a09a154ca23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7524468a-db99-40df-8566-bb125aee56ee",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cb35a5-379c-40af-b591-8557955685af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5094bd6-b2f7-44a4-9567-9aaa8bd9b779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fd8a2e-ff85-49e3-a670-0a7b38e3f2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea3502c-01ef-4f39-aa14-b49d2d0af88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa054a9-7f48-464f-b7b1-0b2ba0490d28",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98332023-0f56-42f9-92dd-57bb5311a692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1389a086-bd5f-435d-909e-609f77772e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b87eea-5f37-45bb-abed-11bc34722e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "722a8041-b1c7-48b4-a7d6-66293b807f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a39ab98-1f70-4c57-9dce-e2a32bb7214e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979a09ad-7002-4568-8271-99f232dbe3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b40358-30b2-47cd-944e-b7fa25d77fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14279c7f-b365-45be-af36-5461a62d1655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3cb73a1-cd3c-488d-905d-0c0e0447dfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b232f151-a9dc-421e-acfc-1aff5c0f98f5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1eaec69-a340-4ff0-a762-c2c771c6e555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375df528-60ab-471c-840d-338307df7074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd3ca1f-6a1a-4b68-8d73-add14af36ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1e8bf8-bef3-4fe5-b4c2-29a211922838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f4406a-254f-43da-8ca5-9ea81c6e3e43",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44200999-2f53-4a84-93bc-da0cfa9f3174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da21c37f-75bb-42dd-b452-580c91bd6849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8200c28f-a188-4786-be4b-33a4ce12b044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95e83097-5c9c-4163-aa4f-94ed9e69b276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af26d48-51fa-4380-a7d8-7513482627a2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c736b3-c735-4905-8a78-3af7c88b9ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b5360d-d395-466f-8eb8-6819c2a2748d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a864e237-15c2-4f19-9a72-9503b22df2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52c3bcf2-4e63-4cdc-881e-a187ea05acf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0be18d9-0f7a-46ec-b6f1-b6d9d51067c1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d665420d-00fc-426f-849c-62a990498ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c2ed86-876c-4551-af02-55b0739c2847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f90654-2bd0-4369-90f7-13fbcaad1921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b446731f-9fc1-4e76-bb5a-ddf2285d3994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d49e37-cab6-426f-b1b9-b0e0eda2f8d4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492a9c2e-079b-4fd5-a139-435548535dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ab61f5-d075-4485-8e2e-41862096681d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4493314c-682a-43e7-8d5d-6bdf0744d9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a669b136-f494-4909-b8b4-b4a95ed6be12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24833496-1c4f-46a8-8767-c3986bd7cd7b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa94318-73ea-4787-86c1-5581632205cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00156faf-1fcf-4d27-bb92-95c47b7d99bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d794987-48bd-444f-ab30-12db00b1674b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4321c4b4-aafa-45ec-abc5-b141facdc986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f111b81d-2ba7-4743-8361-165012cdffff",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976d3e2b-2e34-4e40-a810-3030cfd05607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "042ea080-de45-40bb-a38b-a463bdf82a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be42164d-b19c-4187-aa2a-d5baf98b62a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2ea429-271b-4d6b-b72b-9a4bb560a8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaaff78a-7bd3-4178-87b4-92014ce02938",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22f25ef-8cca-4848-85d7-ba8b3418f2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edfdac21-5e4f-4ebc-9ea2-052e1599db52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a77df2b-2333-49c1-adca-430c9b6be8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31bb415e-b50b-47e7-bc5e-85fe8c27cc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b235cb6f-bd65-481f-a974-6d62d8eb2f1e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abeaafa1-ddb5-4c4f-b888-c396d6b885ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb7259f-d941-4cdd-a0cd-d58175d693b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a62646-304b-46e9-8a82-2949ff974bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8ee28b-a681-4a52-8d3c-74b10dc1049b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55617a43-31bc-46c1-880e-9d4ceee57bd2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf67bd7-3cfb-4850-92f7-d71a0187e441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5315b488-c46e-4ad7-8be1-ca0c75d0cb9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86b9248-e0b4-4c21-b96e-586a5501b599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f92016a5-f8bf-40ba-8ccd-168e19c62792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d032b2-04ba-4c82-8ec9-95f3a552308e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3a6c5e-502e-42e6-ac6d-0e99d216fa34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f460b8a-d2c1-48c1-a2bb-f84809ba85c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb32f5f-8956-4f63-80c3-36440451582d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "633a94f6-fa37-45b5-8897-605bf989f5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664f4012-5e23-4269-8e6e-84a403e76cc1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310220c0-b838-4636-80e5-1d23cac1b053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74cc353-0493-4a81-b81f-d3ffe4d2f7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853f3f98-08fe-490e-adff-468f99625d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f478b331-84f7-4810-996c-de0501851402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d31c7c1-25fb-4711-b007-f3a92bb8a1d2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0765018e-26dd-4bb3-8360-0e46184c160f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242c4c3c-2a94-4255-a02a-2e537db3fdce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8099ec50-09a0-4353-b56e-9b583e9f8450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f287f328-b798-4d38-8bd7-9bc30ce5e82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e379fd9-bfb6-4587-9260-e8d8ed8a81f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b01202-45f6-4e90-b289-b8576e5ef8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a1c8fc-5457-46a6-a033-8bf10c808551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bd8459-a6c9-4d72-bf9e-a72586fbf937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7034fed4-f6f9-4ec5-81b7-f13689644c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d8fbf3-c8de-4065-b75a-4ffbbd14b24a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6b1d11-a26d-4884-903b-c5c5651779cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0026a066-1ea7-4757-a9f8-f9e9c925ed6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4105e8-0028-4562-9635-3e1d805b7c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f23d62d-dace-4e34-b046-c7f85ddc0b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0215d1-bd7c-4a6b-8a6c-e4091960aad5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e02c72c-4a8d-4da2-ae9d-e4ee17521b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae40f1a-1796-4761-8644-3e2c165ebefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321dadc4-94dd-4077-9643-d7c717e52595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "92554f03-4759-4d20-884d-9f7fdd332de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f121e9-58a3-455d-9b18-8409ba918e80",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6a5997-7f1e-4028-b5c6-90089d07ce03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df136fea-a020-47ae-94d4-67a866c6bf9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedfe05c-6d33-424c-a24d-ae499bb0d128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c4c612-dbf2-4a44-bc01-d58770d1f272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ba1bbe-4415-4c6d-8a25-40135bdfaf8c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d604ed74-9495-4415-87e8-19106eaf2727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35f45fc-b5fd-43f7-b0c8-af4ce6cf5b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70694547-20ae-47a3-a29c-7870a68b5643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3cd098d-a1c5-48a0-b094-aa4cedfecdff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a76da64-3ddd-4319-bd25-a7762fadad35",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea83fee-f9be-4c64-b1e9-13af1c56216f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a351df3b-c3c6-40d9-9609-aec5bdea112d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e5ce5b-1b0a-49c8-8497-663c205a9bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28b200d5-4c80-4dfc-ae43-d558ae515ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4a37a8-1592-45b9-85e1-81ad48f20fdb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0afaa75-b559-4b16-8a21-44dd87a16dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a8a292-fc52-4a54-8b6b-66ea8b301009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2be25e-447d-43ca-903a-a7c085fa3809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94aefbaf-9586-4d8d-93fa-9baa7950d394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eedd5b0-75eb-4525-abae-ac9c5db16d3a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f5af87-49f5-4f51-b255-9b2a9ff9969b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7d96aa-daa2-4e03-9a56-dc541e9855ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328cfa99-3a50-4f4e-9d46-f2ed980660ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "971c5976-229f-4295-b9e6-5bc446b6dac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b7772c-c034-4f96-a475-2832dcf155d1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e904669-7b9f-49ab-9f39-84acb012bdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86723c3-66ce-4a6b-b34d-0c04552b0f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14de7b6e-095b-463d-96f0-e82fb20155aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7cf6e3-b50b-417b-8406-624405f0948a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce38fff7-caec-48c8-ac17-60ee1e2485a1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cec16c4-e672-44ba-8db4-11db1c0cecc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9064c58f-0a8e-4da4-9028-571948f49784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bae482-67bc-485d-a2f8-39654a29edda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c66ecb27-2f3f-4d80-9708-2fff68925711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e2e756-38ef-40ee-b9c1-b8a491ac53f3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c82925-0a98-436d-ae81-610be6a4ebae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78cb9f9-692f-48a0-b4b3-d405297b4cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b6bbb0-c891-4b0f-85ec-543bedc5fc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f50c4e4-0761-4d8f-963e-b26598a9b4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e640d04-edf2-4826-bd39-cfcb08caaa13",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e3c63c-0ee2-4463-894d-e9f4d08657d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce556b93-296b-4fc7-a163-136a8aaa0630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b955c98-fd13-45d2-8fde-636f79fded54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f22c6131-4168-4565-8181-5076a11b727f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5dea8e-b9e3-461b-9124-529a3bbadfdd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c2cae4-0ff2-4631-8f9e-0f285f38b5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a86d883-6b64-461d-83f4-7589facd4b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2534e0d2-1936-46a8-80a4-939ae5d3318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df857583-30e9-44f2-af5a-dc85390af0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3839c1f-a4f9-4f74-8147-c0aa22a4e310",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddaf6fb6-f7a9-44bb-b8c8-51a6fa8dc1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9eea449-45f9-451a-97d9-41343c63ca9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5f97ff-50ca-4dea-8734-e0267dd7e3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "267ed44a-596c-498b-b575-8d2e592797dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2dcab2-244e-4e86-b19e-6aa3d340e684",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb4b309-c9a7-4986-8065-7b5f91847b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2da847-c489-4bcb-b75a-e3d2729a4224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478779f4-21a1-455f-8964-9258b2c473c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b762f086-9e31-47af-9fd2-d2f4e321b9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41873e49-bc0e-468b-aebf-04c036b8bc4c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a36e234-6f0e-4a1b-bdbf-89a013e5ccbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0fd5a6-8782-4c29-b066-2a372ca328bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbfc5ed-68ec-4004-97db-4864fd459c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5f07f0-b84d-4139-b78f-8493dc067342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c756d2b7-4e7e-4ae0-ac9e-a71a1393a2fb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11e0433-a1e8-4468-bbb6-860d3d49c0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539eafe8-3ecd-4d53-ad0f-892c20fe539d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb913121-3aba-4497-b383-f09becb2ae0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c835be66-e617-45f8-9c15-23d600ad0d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80c1b95-1be5-442f-aecc-835c7d54fd56",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba54c2e-b620-4af6-b989-f41860b6bd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f123deab-39ce-4e2f-b4f5-df8d3f81f0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d5eb0d-f2c8-4376-88ce-ee534089631c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "727ed811-9275-469f-b7f5-3a453f87313b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9319ebe7-2ac6-4188-b802-241713e7c192",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2c4a7b-cc8c-478c-823e-b6bad79706de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53362b48-0207-4d8a-aecb-c79c01430b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8350f3b6-8d94-424d-baea-cfc160879e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51d8764e-a243-4da4-97da-3c86eb43feb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d1d6fb-8548-4a9c-bcfe-1e2d7f332b51",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a5d1b9-5e5f-41df-b7dc-51adbfd91ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678ed127-fcb0-4630-8c03-aad8c621956b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe716f1-1838-4ec0-8849-4e3712ee40e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aebcf631-87ad-4647-827e-98f3732b0de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fa91bb-a259-44c7-8242-cb28372da54d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036dbf29-126b-46d2-969e-1abee2f34b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da4d165-fe53-4ed3-b737-f571888b1b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096b06dc-c5c6-4e11-b050-022ff4215110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0de8f6b-ae03-45cb-996b-108d4e6f9a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8593482-34a7-4fff-a408-e2e65e8ac461",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31deca5-b504-45da-b5c4-ffac6be00845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92010643-356f-4bbe-befa-ae3f1e67d087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa46d85-e1fc-4ee1-9f0e-c4d760e40cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0b2039-f9af-4504-87f3-4e4d6d50b444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae01da9-52bc-43b7-b587-e6b116715a6b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810f2699-549d-4b47-b2cb-12f5a1f166d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5197664-1e56-4202-ac86-78f4befbb3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a19e42-fd2a-47b1-90ab-0b95a78e0468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "125f6a8e-0681-434f-80d6-7fa4cd67a282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c760350f-7fc9-4700-a7d4-78333418c7d0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973be9b8-45bf-45bc-b0cb-0dc2088c6282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84099980-e1b5-40b1-baa9-b5e5511eee0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f272ad-7ac3-41a6-8277-ccdbc26f0f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9060f5-6f6c-40cd-98a4-1e763afceb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721627c7-e049-45d1-9744-ed436ddcd13f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225b0063-34e8-4fff-8799-28fd28d3e676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2b76d3-941d-42c9-8ae1-94be0fc62875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316abe94-6e69-4633-9340-692118b7dec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9890758-3880-45e2-9bdb-609e300be96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3dd846-a3cb-4863-be40-46a0b63b5bbf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16b6205-0078-492b-b14e-8f3961a8ed57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9585bf21-8932-4c20-8290-81803f38cc69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18340ca2-3657-4bb3-acaf-6a6513cbe65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb74c0b-d366-45c3-98b6-5f4e2aad5b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a61675c-9337-4325-a317-128bc400e0e7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eeecd8c-13ce-449a-8fc8-83f85f5d7ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0da451-0cdb-4d21-abab-c7b288865956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea22f3e8-1eda-4aee-8447-d65029bc8631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4180ef8b-e932-4c86-a781-283b31acd978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91fa8782-c10a-4c12-a542-7b8439d3f957",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a475cf8d-4460-4c13-8a03-03c9d70e456f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f5cc7e-5a1c-423e-9666-5acc4f9bb17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5017cc-270e-42ac-b997-3b0f5d5dbdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a79cbdf0-14c7-4d0a-afdb-83acad745755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876311d8-aafc-4e1a-ad0c-2669edb5589e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9822c9-eeb2-4395-a950-51d76d9d957f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036f54e1-64fa-4f35-9784-41304fa83b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de8905c-f2ff-43d7-999d-9a24d220bf69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc674e0-13b8-4959-8a84-961f3fdeaaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cde133e-0ed3-48da-8e9b-bccfc0e80a52",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084f0e32-f4aa-4b80-99c9-69805179c425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298f538d-c413-4721-ae6e-c48a6f4d82e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8999b802-8a4a-4b25-aa71-f290b2ed3be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ef6baa-e789-4ed0-93db-c2f89801d8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9280c72-f174-4b44-8d42-11dbbe185bff",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaea202d-cd62-4538-ae4e-e761b777ed63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c13cc5-8812-4375-a51c-bc24968fc9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0986fbaf-791c-4533-a893-09215de40783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b26b40-a447-4d77-b46e-517a36b434ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c453259e-9ed7-4c14-81ea-105fd793f575",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d5fcf7-dc36-4572-8f3b-53fb2f751c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794bcb98-756e-43f0-bbb5-5ddcbe84e763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980544e7-53a2-4889-91ba-82d9fd67bd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7dceeeb-23b7-419f-b00b-10013cafee14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac024145-c016-47ba-8574-664d84612ca8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561b9a0f-3136-431f-b13c-d0722f4c1107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bfc2f1c3-fadf-4dd0-8d7d-fefb27f485ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479df93c-6d61-4371-a8b5-6d0f5b347413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "50a30cb4-f21a-4419-8623-ed341a9b7f96"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6fe625c6-a6a9-4e1c-a867-b3ee8aa6d867",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d71dd55-70e3-4005-8b55-c9861b732071",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5149c759-1710-4b74-8aa4-a74acadbb9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3494101-f7de-47cf-8f2a-40047cfe7191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fa6330-fb6d-48ce-bc9c-1213825a55a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "234716e1-f7a7-4a2e-ba4f-c971b14d850c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "219276ee-7090-4144-abc7-d62dff0a6525",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db78d6b0-e17f-4b7f-b3b2-7450d9edcd77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f112a10-197e-44a8-9268-38cdba33b754",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7049d3e-6265-48b3-8e02-e51fd65840a3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cee384c9-8b97-4691-8ec4-10cabfe043db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba88faf2-617c-41de-91ad-2cf9f4155a99"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aa540b0a-f46b-4045-a2c2-cb2a2d1673c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b05c5458-1118-4316-a3cd-f4b4929adb73"
                }
              }
            ]
          },
          {
            "id": "1d8b586f-83d3-4874-b964-68ac32459203",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2936fefe-9756-49c2-bae9-9b58a78d59e4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f19d2378-4261-430e-aefb-d9b033dd8dd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32ee3937-5bf6-4f40-9ff9-dc12138b204e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02711448-52eb-475c-a9e4-503dec401705",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5c8fc720-35c0-44ce-b552-d0dfe4caa101"
                    }
                  }
                ]
              },
              {
                "id": "a2358617-c91a-4e47-90a4-c8fe3c8dd6bc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc41b8b4-18d5-48c0-82bd-846b5b02af3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f18c029-ad09-4b58-8ecf-e4ca19889aa5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "652996da-56d8-4bf4-9591-93f71ecb82cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "69dc2b06-b13c-41df-94f7-0053f8bca7d3"
                    }
                  }
                ]
              },
              {
                "id": "492f1cdc-7992-4f78-ae86-d482a4143e16",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c55e3f0f-5591-483f-b06b-926401bfeb56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb57377f-7f9d-4064-bb1c-f1f8bd5855de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ac90329-84d3-46f6-9a89-25a1cb6bf6ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd6f85ed-d68b-4636-8157-c34495470e3c"
                    }
                  }
                ]
              },
              {
                "id": "7c8106f4-9e72-48a7-ad0a-4f483a76d117",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e17a224-35dd-4a77-94de-f0d9c0538517",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08415fca-7441-4927-9834-b44b78db448a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cdc5411-9ba4-4a1d-b31b-a4f71b71db5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d0f46d95-391a-4615-9639-ca9c94f293e9"
                    }
                  }
                ]
              },
              {
                "id": "99a3f143-292f-490e-9dbc-e8e33e69ea88",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "256fed5f-d994-4598-92cb-24ca145fd934",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6b461ed-6ddd-45ec-b615-4de2841a867a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b91d53ce-1b0d-4049-b602-5da5c7d1c62f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "13893b3b-c996-4805-bb35-e8d33b1c47b4"
                    }
                  }
                ]
              },
              {
                "id": "c02a2689-d8f6-4669-b14f-25b679abb160",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f65a570-28cf-408c-ac46-1224e7a81ebc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3b34c63-ae49-4480-884d-7e6365e30371"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8403aab3-de22-4ea5-9f0b-e9311d6aa564",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "206d173e-8025-4f2d-a53a-0848e3ce98c9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89dd36c7-38b4-4be0-a498-2c0e3a2082d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e4d7381a-0ce4-4d52-8866-28337a929500"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f42ede03-d38f-4803-be3a-8d2f8f4e9fdd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b27f3abd-7c5f-4e70-8ed5-57136f586396"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32d099a4-0d28-4c79-84c9-6d6125a645ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "96ec6230-9022-4eca-b6de-b03e5f41f510"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b5830b7-5148-4b9c-afc2-9bd981f9a81d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80b9fd81-6843-40bf-8f1e-3dc6a786fa60"
            }
          }
        ]
      },
      {
        "id": "c16ad802-f343-49c7-896e-c0c29ad086e2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "90f93ee0-d803-4ad4-b0bd-54f98711554b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4024288-d8e3-4763-86c5-25cceb9ace9f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4f868594-7108-453b-a86b-17f86648e315",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a640d569-5178-4c15-ae31-31e5c10c5c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b9e760-3423-440c-a31c-158cdac24a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d1b617-3e90-4633-a4bc-f048b7391c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a727511-c402-464b-ae02-e63784ccd8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a134fa27-e97a-43fc-af61-8ef035f9abff",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f72842b-b17c-4c31-82a5-26932028516a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aeefea3-eff8-4460-aab5-955b4829d681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef73fa6b-c38e-40c3-9a5a-6775f9fd45cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a78f61-6f89-4f9e-aadd-d43a9991b258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aef25d6-7803-4b00-8235-de09458db750",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f6fca3-7ce7-4b25-a151-d3b4ee7f2196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6374109f-5e5c-4d33-a304-f8e25df8cdcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d326cb35-9043-444d-9b35-9e24de9e72da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeedb43c-c632-4639-9e62-b6990eb2cf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbac750-dd9f-47c0-acda-b1e59c8f0c06",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d395b073-3327-4336-bb14-6760239e6773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a823da-698b-4bb8-80f2-e0b54c4ad993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336375c0-8bd8-43b6-b0bb-ec9bdc006bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "415c52c3-03e4-4bfb-86f7-d1028e62dfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ab1dbc-e1bb-434a-a818-f41d32feda48",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8049ae11-0421-4365-8ae1-fcea74622ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345fbae6-4664-4d88-9072-5a7fd1174421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9072f9c-f975-47d6-80b2-6cdd1ec2143b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bdb2ae-4b7a-4d0b-8587-e48071670cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b839dc-c5b0-495f-8346-066d296cecf6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7623fc23-38a9-4d70-9ea3-f0149b08dd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d460e726-f46f-4402-8fd8-9d13ac6df52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3293f7-8b96-4016-9822-283830f5e8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11d03885-5671-4036-90aa-95cac7aff3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee2bdb5-51d6-46ab-837e-33a3667510e0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6243eca2-70e0-488b-8fc5-e4ffe9100647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed62f653-1a53-4c58-adef-e21034afc07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee41e4fe-30ac-42a0-980d-9be030d96f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b115f404-2634-4937-b944-0206da01d06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae06dde-5796-458f-afef-55696d67f556",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06deac59-6a7a-4581-a2d7-3d25831a4cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efe7e69-1a06-42eb-be97-3868bab519db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673a6bff-c1bb-4f30-a3e7-a12ee3088037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d7e802-6e60-4fa7-b8cc-9c646fc87937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fcd563-a7b1-4f1b-b255-531dc5792595",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d54011-3c30-4108-9ee2-e9630cb0d35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a0ed52-368a-4807-a9db-a312ff61f069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1141b5a4-c164-4219-8f24-bdac16139153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd200d2a-37e7-485f-a687-1da75031689c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d679e70a-4c1e-46fe-97cc-43c7527c64cc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9207cf53-65b7-4347-a59c-b6e72af273ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7d6022-b8f2-4b50-99b5-330613a6197d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926a3632-dc49-41a0-91bf-22e123f7fde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9485abe-443e-4077-9f0f-badbe83c6c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102e9e70-1610-46f3-8fec-9b134bafedd1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20413fc1-e486-41dd-be86-da3430d94d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337097ef-4142-4123-a9ce-fde7f38353f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57aee803-d70f-45d3-b7d6-97a4b8883a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7b00f2-64c4-4229-a1f0-451c95b3188d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d8aca1-8c5a-4701-949c-f207e087e7a3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78890c55-5f2b-48a8-9d70-006783d2ed59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1191b6d4-18b5-49e3-9008-552bbaf9131d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb6ad4d-03c6-46d2-a5f4-f0ca7a40fcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65325483-c89f-40b5-bb55-6285e2f71340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d650b8-14a5-4b79-81f8-b6c53405e280",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913e3bc7-e73f-4324-bafd-2c9997231b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92430a7-5017-4f52-9cf9-3292c9dda4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d642a15-1ae2-443c-a617-7d46a6ed6dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0541546d-8a2f-4677-ac88-d5d9f49ecdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3110df1f-3f87-4ab3-bce9-71ac8ce91161",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2358757a-8421-4852-9f8a-156af858c1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737f101c-c18d-4d23-9129-6daa10fa6d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27480383-b5cb-42a6-879e-5563f6ac7365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8488402-1e65-4d23-9350-f7cac60192f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e27452-a54e-49d9-8cc7-152e8cfcd610",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dabd28e-cc69-4712-8f65-d542ddd83ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5181f9-828e-4993-bc91-d26790209509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c9b3c3-418f-411d-98f2-643f1225e96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a12a1531-6f03-4655-9769-be8f581f1b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3c1d90-f414-477c-91ed-37a9ebb14dfc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8d740d-b74f-43d5-9494-1c4fa44c2a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24eac1e5-e50a-4a60-9230-da75cf19d818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa673ecd-f401-425c-90b5-8ace45e7c408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3836bb14-6250-4917-a3ec-0ce55235a3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f801211-f2d7-49cf-b0c2-4075f7061993",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb31867-42f9-46d6-b6ae-25c4749d02b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930e5e48-54c5-4bad-ae84-143d02afac41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57e1499-dd7a-4b1c-82f5-f8729e2df7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "513ac581-afcf-479d-bf35-58ad807f71fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b07c1b-4f80-430e-ae2e-bd4b6e3a49cd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6e5047-b858-4ec4-8d34-509aff22ae8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9533da01-b091-452e-b01e-d4c67545d53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac68c65b-db23-4b23-97df-e6073d0e7ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "71d0ba92-cb8b-458f-a8ab-5bfed46bb04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7833478-d75b-46cb-b906-ee9c683b8eef",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be560635-37c8-4831-9ec9-5e6c0db32382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c88d392-6eef-465a-a3c0-cb58724abdb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cf4f2d-c169-433d-97c7-a2238820679c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01a7f52c-a743-4811-b38f-2817a7051be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab1db39-e8a4-41b0-9e7c-28b7f57764e0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be6d59d-e5bd-496a-9cbf-81d6262aba4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1a3a67-e3ff-481f-a89e-38dac5323e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4f1a2d-46ec-412a-9971-4dd41f4aea51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72899fe0-0048-4c34-b38e-cdcf17806027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e9e9a5-64e6-4622-8d37-ca5eb32e3fa2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402a0705-7ca7-4767-bdf3-c0fb3e84a1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f8878a-09dd-4737-9d37-6b67ca36baf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdc8e15-070d-440e-8559-3ea2842e73d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7cd3088-eb3c-4dd1-ac02-4202f907e9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734e46a0-cb49-434a-a9a5-f55d138baafc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697b0b24-e566-4fca-b66d-4846e58c2021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b5d91c-a8b8-4e35-921f-8f630e54d632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb95b57a-7406-457f-b1d0-67e464f1e8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95da09ea-280e-43a5-9914-489f443c1420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1eda04-de5c-40aa-947f-c8646121d799",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fff1c1d-d4cb-45fb-88e8-794209c8e71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ecd44d-a00e-4454-8f72-4187e00a9d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47324304-504f-4fdf-9f5d-cba5d339f2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2db87a95-ff73-44b2-9893-33834d5760c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667fb842-a39b-4ee0-9916-b1672694d4f5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef7073f-763e-47e3-a20b-36008f56c195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b476e6-65cc-4534-ae97-44e2b43becac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805a8657-ddae-4346-8306-441f057e27ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66f9de92-62b9-4c4a-b895-a171b6c330e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f9123c-5fc9-402b-bf86-405ebbb0be90",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6080769d-a6e1-480c-b695-358b01e3bd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84bde02a-e55d-45fd-b4f4-deb7de1b3ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bcdcbd-8cd1-43bc-aaeb-d33044d4f056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6870fdca-9fca-45ca-9366-b9f950cc5f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2de3037-a738-401b-9810-db35bcdce731",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b428442b-da7b-4b43-9d50-5c3e3aa38594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e35b32-0817-45d5-9b1e-3d89013a8320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45aa9de3-f997-4a98-8f6a-9fb9f18dd393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5675a8-3545-437e-b70f-caaa52780ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf66ee3e-1d76-4a67-938b-54e14aaca6da",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca56d59-e600-4194-ae30-f83505b876b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8dff9b-85bb-47d6-8774-4d118df77d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e5126e-a8f0-4915-9b56-bce8f1435306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09670a74-184d-44b5-9cc8-0fc30c16ddf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8139fd76-fc7e-4334-b42a-318a4cdb3fa0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3eaeb26-d374-4422-aaf2-3c2b19fcd9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ba19f6-d702-4d3c-81e7-776b0896d192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab59e16-6269-4b9c-bc9b-ce776c7fbb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91ea5ad6-fa50-462c-b833-73432ec9307c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b8d154-9960-44bd-94f1-2982ad4d67b5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b6d6ce-04d7-422d-ae87-e00e8fa73107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6c3bba-bff9-4255-9b2e-61f49b7a8898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2967ff1a-f591-4326-a08d-e96495ced3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38a46489-981d-4c59-9aac-dd2c74724118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e39b07-a420-403c-ae93-ef340fff7e60",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ccd15f-3bca-4468-b1c7-d1db59e5d918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61830a87-f1c8-4997-b7b5-5eab99221dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579f94b5-22d4-41b1-8023-0fde3ffdbf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eedb6c89-be27-460f-8da3-fc9aa4fc12cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c89493e-fee8-4729-8056-f5c55c299640",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670eadf0-7d86-4cf0-917a-93c38512e3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa16b359-0dc1-48a0-82b2-b7e93d0884f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494ac168-aa45-4e41-8359-4b05126b3922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b00c062a-b493-435a-9f60-66a27e9d1865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc59b3a1-42c2-458d-86e0-a3037dbe469a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f437b4-2b1b-4f60-8d87-cfdea17654a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b9057b-5b2d-4b18-acfd-cd0ea37bc6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41edb96a-326d-4cfb-bfdc-9547159f2a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6048b2f0-daa5-47ca-a8bc-2a9e58ddbf09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f7d0587b-8d18-4a2b-bf6b-58defef020b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5af914ee-1dd7-4df2-8a47-d6879f763563",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba8ff2e-1801-4dd7-927e-26f59ecb86b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c539fd52-4484-4e9f-8fc3-564cecf77c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d89bde-dfcc-482a-868f-636358ccd6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e82dbe2-b1a2-43b6-9a36-46dae8f80daa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55bdc506-7b10-4916-8534-bfd935fa6f1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60e24852-ceeb-48a3-a5ca-90ad017a0cb7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f068298-32ea-46dc-8d4f-3d69df5a5a9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ab4c36d-845c-4853-b8dc-2becead4e666"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "544bd500-ce55-4eab-8d8e-81c52c836cb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be6001d9-6131-4e4f-a1b1-54db8cd5784b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10d8b9a5-66e8-40ed-8ba4-31e60a757772",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c70458c9-6388-46b0-a000-4115963e7949"
            }
          }
        ]
      },
      {
        "id": "d72be0d3-e77e-4eda-9fe6-2481985f378b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e269cf8e-b1d8-494e-93b3-50ef78ce1fe8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a896dbcc-1f8b-4d78-8ac1-6b5370030f12",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a1693ef-e502-467e-bf83-3c771534fb1d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d75bfa-e06f-4769-b4a2-b9b91de27b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12aa611-ba7c-4b52-84ce-fc7445e130f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6053fe-e40b-4e0c-8002-2fea13f6c524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a5797b-1bc8-43f8-a9f1-b6a6fd49d38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ee8dab-ee40-410d-b8b8-753237a6f9e6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa16b8d-9a48-494b-8110-4aa00c1d6f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d36909d-a283-4633-86a2-2fbbc8b2f22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9dbf85-02b5-4ab9-a86a-37a882d08411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13610238-8230-4796-820f-be29d77cc8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2babae31-6d74-41ef-b0d7-b950770baac4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175b140a-ea0a-4911-8b09-0f7e72e328f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f798d0-ec55-4c72-9211-dfcff16bfed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605270cf-ff62-410b-af3f-f1a37a6b7e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "471f0ae3-b198-40fc-adf8-44b44a8d3702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadaccd6-6564-4f0c-8809-182b928f1db0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21370fff-b132-4c2c-a8c0-7bef9725aa9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e0db21-7d15-4e3f-ae44-77a5082d19f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b8960e-5370-434b-80ce-8637914ef740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d793793-7ec6-4c63-ac7b-59e0f598f2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809abcb2-fe56-4ea7-93bd-f6d231fecd91",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5e0efd-114b-4ef1-9ed1-e48a5c422a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ea86c4-c3c2-4b69-af18-1ebe1470d803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fabfeff-92e7-4c8e-a28e-22981e26384b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "288d4b44-883c-4df4-acc4-ec6cfeed9b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f20d565-6a14-499b-b678-c4f76d3cd723",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b489de-65ea-45c0-aa57-3df4b37032d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376eb61a-df87-4dc3-82fa-d2a79c253445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f6e5b0-8e1d-4e11-bc1e-d7c6fed69630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25edf681-084b-4407-975b-a7bcae74a5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b77962-3849-4be9-8f10-844f25ddd405",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4995619e-22c3-423f-8e36-03273764e124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6f5699-f1fd-414e-b992-116860668596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8f0475-ff11-49fa-a317-76b1806db9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7109d38b-6dc2-47c3-9ba5-a43cc4a9f3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9f320f-3fbc-4a0c-badd-8751aca7cf77",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eca6854-4bf7-4a30-9db7-319aac4adfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4ba27e-ef94-4488-b240-766348c0a5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acae9f7-bec5-4262-8490-3a2c5fb88d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9533d29-9927-4dbc-b21b-ce74f760dba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c08b261-6324-46b2-b529-43f7063bd5bf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f12054-92df-4b8e-bae0-d2213274bcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d079a6c-db1c-4a4b-a732-f2640bc0d5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a431571c-19e6-40ab-9e0c-5ac9bec0dcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22abd587-26e9-4e16-95f9-893d3d02d4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47188658-ef86-45ef-b2f0-856ebe23c2dd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe2ab3c-ed8a-4957-81fe-24563c34ebc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d13f92-2212-4bf1-95f7-2a533e146c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad4905b-d1c1-454a-aaa5-83e75fdca6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9af6b7f-ef1b-4351-8a2c-87c8ab776e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f763948-c929-4881-b3ba-c7c5e1b61186",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a13ef15-d59b-4be3-880a-f1c0cd8f5863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da587e21-4c05-4bdf-a582-0ede275b319c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717a6d24-c9e8-4898-8e86-de16650249f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "692f9e3e-5043-4b14-9b08-03d50b256901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b985c3f1-72f4-48b2-a43a-47d62e335ff4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d051b672-e154-45d1-8cc5-9983031128ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0651ed3-9a25-4ca4-9c5f-55a1b9287cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af60adfa-1e48-4079-961f-49c1c1e583d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4cd5e9-8971-4d7a-a130-9afb2648d975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e6c512-e33a-45b7-8641-2a00105c2e53",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5341d2-ae1b-41c0-a758-99564aeb3941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c60dafc-3879-4e3e-a230-c1384eeae742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca71eac-5cbe-460c-b645-91aeada54c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c24143e-90f0-49cb-93b5-94088b0aae11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054026f0-19a5-4669-8e50-bc5e32e05584",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505b889a-6491-4612-a360-104c68785cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761fe4a7-e68c-4fe5-8197-d4f94312ad93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09d115a-9927-40d4-983f-73838d4897e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d2ca78-a340-4713-8510-b2f54376ef34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33644ae0-dc6a-4d0d-9da6-e1e20d4a159e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19555f6-6fe5-4b9d-a51c-9215f61973c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552a0ead-e7d5-444b-b4c3-9901204e768a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ce45fe-2763-4410-b024-13146a6c1707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf47566-0f1c-4b06-83be-9bddfaa93d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226916e9-47e9-4bcc-b74a-1b558021379f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c498bac-0bdc-4270-a535-bc78f6b41000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94db66a-5718-4110-bfd4-038d9fbdc41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b128c992-c3f1-4335-94a7-192aa4d8ddbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "78b54525-2347-4e40-8ebc-0192edea2079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f40568-730a-4c0a-aa9e-a086084ed9b1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "025a4d59-6af5-4052-8d77-514315ddf26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49383f78-8321-469b-96e7-609f3ef0e803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af07db2-06cd-4bcc-badf-b678daad1330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "057bad00-c9a0-4d2f-886c-a2ec7f9953e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02030d70-7e30-4128-9156-ae6060c0131d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a239b99-079f-4458-b13f-43203b9e65f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8d8eac-8c8a-48fe-a013-dbe1f950846d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a20f45a-52f1-4a82-9ae0-0b258b42586c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b57bf0a2-0bce-41dc-a079-9b9c5188fc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0a9dc0-745b-46bd-9888-00d02a7313ef",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2bd969-b0d1-45e2-8c59-401a61c586fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a86469-c63e-40ca-83d7-79f7910873c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c363b41c-b144-4fca-ae42-abefeba8c957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38bd93c4-ccec-40d5-b733-dbe678a7f4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53546996-8ede-41a8-b36a-95e053aa82bc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5794bd0-7101-4641-8f39-dab24f42d906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921899af-5b65-47f0-b7b4-548cfa4d6078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f13a73-a1d3-49f0-abcf-8f9e8c09c471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38065005-94e5-49d1-81c5-7d08eb495760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97119f3a-b9b3-4b29-88d8-9ee1d4b7e67d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf6bf77-24bc-42a4-aa81-c6dfbf185033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bc0625-1a05-4d27-8632-4f37b2ac4e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192630fd-6d16-4c00-8cfb-50507df455d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0feb5ec4-bc10-46ef-af1f-65c841f2a51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591fcc94-2c2b-4239-adc9-22ebdfa54a2b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2237e8-35bd-4ad6-845a-898d0a06493e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5cfa48-5319-4761-9733-e3d012e408cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f356ca51-2e63-4c78-b954-03218b385136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06edc10c-8d31-40f9-a00e-b87de76379d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54aa7e0d-5233-4379-b813-92ab15797602",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c53646-d35f-4d81-9876-d1713bb0007e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690ac1b7-0ab8-4f94-be33-d476c3e591b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d4e128-dcfc-4a45-af45-6daae2e61344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddcd605e-efcc-4470-ae44-b9cdacafb59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6e9d49-9f22-4a5d-afe3-c9dddfcc8ac0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb850ec-be20-47dd-8686-a301ecc126cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc2e1b0-5aa0-4e3c-a01c-82b5e5647162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1a6a36-b358-40a3-8e86-32dd806bf101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7c81a4-1347-47b7-8a5c-e4b9eb8aa0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4bf52a-a00c-4c5b-b962-9c81161e2a4b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47d38a0-c1f6-461f-a2a9-cd06bb3255b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21ed9de-da78-465e-a1c2-21a3dfc66237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2520a6eb-f8d7-4dd6-9ade-eb16e49b4910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80477184-2599-44f3-8358-52cf92d01962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a08f6ed-590d-49fd-8195-2cc6650be6cc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8856fa6a-3823-4c1b-80d4-1c96e508d474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208599e0-8767-4504-9ed6-83a698a47fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdc649b-eacf-4d33-94f3-38e7655b24b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "543568f8-80fa-4c0d-9921-c0b54655e578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51a5f69-cf23-42f2-8787-895d4c6052e8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f75e0a-a708-444d-9e37-476c2afcd440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8563ae34-845e-457d-ae3d-55f60c312af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679e5d6b-ef32-47cf-818f-545ff6dc05ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2208dbfc-491f-4c5e-ac3b-9b84bd9bae43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5877da43-a322-49fa-8ec6-094f395102c8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e46e9a1-9cf8-4c5a-98e6-1e393a6f51b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd91e117-0492-4b76-aabd-683faa02660c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f503114-b910-4fe7-ae8f-3b1d6f97489e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9f1b78-5fa2-432f-95fd-c90a25c77759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33637585-6ecc-4f69-80c3-d93a87898de0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067b0a10-2fae-432a-a3dd-51402ef415ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e41f65-3691-469a-a80b-b41f6898ce69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c792d487-40a2-4a8d-ac38-6cee9dac7602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce8dcb2-877a-424d-be0e-c1d939ba7261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fddecc6-666f-4532-8511-b912d3fd8a5f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07d72fc-35d0-4dac-835d-001a20a43e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad691921-4475-4b1a-abb8-4f7f2f6cb2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f8fd5e-9ad6-447b-97e3-dee2653095f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4af9bc3d-9f9b-4b21-967f-04edc909fdfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94d7091-b098-4f99-8561-41058cf7f167",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb0748d-d3de-42b7-ae05-4b200ebbfef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fd3fc5-a6da-47d5-bc90-8fc8b0d99bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdd7168-fe1c-41b7-b2bd-24702e9c2ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa7a930-5f1a-496f-a0d8-fada60d45028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0d7590-1c43-4f1c-9388-c2aeee2ae9c2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2547e439-f262-4282-b99f-1b44372a5454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c82187b-0d77-4a89-9e47-2ae807332048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757ad45e-f7f1-4461-9534-efedd3cbcca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2936f03-6559-487a-bcb8-02796d7e751a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c6c673-5ec3-4827-8ed8-64c3020451fc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31d3d73-0e8f-4f61-96db-9356e06ea309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00595650-312c-4ead-825c-fffc312fb8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9f4f21-24dc-490a-b543-a9c10238b552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eff8be83-7cf1-4d7b-a278-0e23876f76e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e86459a-04c7-4fe0-aeea-ebd211cb5416",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7146f7f6-eab9-4ba6-be26-f572a50521ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6905a0-eee9-4599-bb45-51e5f50ca1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6561391-f1d9-4bd3-ae68-56b8b7ef8ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60acdd39-4e75-4c13-ba89-9e2bd4ad4462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa33d53e-b513-4baa-8613-22b2d03a0f51",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b398340c-239f-49c4-84ee-53dd2017c30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c841897-d0ed-4931-b0fc-21ea7e226b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8b9dd3-1bd5-4b7c-af04-dd1b2c1412aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e22654-a6fc-4ca1-a175-5905afcb6974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b86b92c-7f39-4ada-9583-3bdf6e2fbaa7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf14f34d-32e4-4f64-9736-518ccccc66ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c27a83-b3f2-45cf-aab9-d0050cf40074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22245a43-48a2-47d1-83ca-a096f1ab6ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cec0cd1-6dff-4865-9dcb-fea0bf6da0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727d5d8f-ca8b-4233-ae88-c99137532fea",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2b46ee-9965-4ef5-aaf2-9e646cd07efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78c3bec-d3d1-48b6-9ad3-be6278ea188b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fcf641-aced-48fe-a6ba-98b489aafc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bafc7cb-ed36-4040-866c-2f0360f388bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fcb22833-6150-4f34-986a-f0297b0aa0d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2f5f0c0-466d-48a5-8111-bdb731eea335",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeea2d0e-f1fa-473e-9577-0ad48310a9fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c55efc-3db2-4297-859b-b096b9abfa48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172f4e04-bdf7-4462-ae83-6b707d23a551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f0cbcf2-e81e-4317-84d1-5fdcde02f384"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e28f953-2afe-405b-b091-f665d4fea09c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb5cef10-22a3-44c8-bb6a-dea4776ef5fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f52a4e14-aac2-4cc8-a65c-fbde4b00f4bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9deaeff2-06dc-47d6-90be-5bdae6ae7b9b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c73e0695-1f4e-44f4-b950-ceb7a99cc850",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0b422104-314e-4992-b60c-2c0655a8642f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06f39ca3-9de7-46fa-85e5-333ad54882ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe431b5f-1c22-491d-9fdd-0a4e81b8c8a3"
            }
          }
        ]
      },
      {
        "id": "3a7eba44-adca-4493-b894-0211a5f86419",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "827a05b7-3271-45bd-a457-b4973e12c65e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e38d5c37-1843-4b67-be96-b9e0266845e1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4cdd1a1a-c327-43c2-b31b-eef3be3a7d73",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9251e54-9627-4f51-b02f-742818b77000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd5d93a-167a-47e4-9266-8cbe62ab16d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a0a2f2-c76d-46ad-8bc6-43282635a58e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f0608b-74c5-45d0-96c1-d9dee87fca8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cff8138-fd00-4a40-902e-58e25880c663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b84ceaa-4248-44c0-8437-eca18479ee4e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52cd820-633a-4979-b217-8385e22165b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972c9fce-ac9e-4554-a4af-ded005bc4db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14d0e58-c071-4a42-8730-c96b2859c07c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234ca4be-db92-41c1-90ae-df75ae3a9794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40347fe2-e359-44ef-afcc-cddb6db37be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c84ac88-c088-496b-8a64-1441455c05e3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c898ee5f-e710-4ec2-a721-cc50fed9f61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d9e07a-fc2d-4bc4-a05d-facbd75dea97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24b5586-cdf0-4417-ac6f-2d76b05fffd3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29a286a-45ad-465f-8fa8-46effe17588e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8d2367-34a2-4138-857b-bd544df794bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da10d72-ea6a-4aec-9130-178671994b0f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a77bc7-aeaf-4bbc-8fa8-ff948c39e5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f932ff5-e6c2-47bd-9166-b4ab216c3887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a9a374-4825-40d4-a172-978bc023676b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284c9bf1-0922-4586-a68d-36b50be2e227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210705b6-0b00-44b4-8b6f-33b70c5b8c7c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7615d27a-a8f0-4f17-9f00-d5c80d1f365f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92a95384-9f89-497f-a905-b30b1d4ecd2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562257b9-4488-4f10-a74e-2302d8529b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa856a2-5671-4e4d-a28f-37fee0ee5c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1f67b6-0df9-484e-a135-c3a9ef81b28c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9a393d-cccc-4b18-b402-05bd0bfdfb5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e09af6de-ee05-47ff-b3a4-f7c4526349f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1731390-fc21-4fbe-bfc5-313a2947c79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee31e3a8-9a05-4bc4-8246-45dc916893d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0c4365-5d8b-49aa-8534-4a9432de5ed5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7283eda-c61c-4ec6-8be4-7e4c32779c57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baad3c20-641c-489a-89d7-3bc102e6063a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87eb1dc2-c5cd-493d-b0f0-9ce07238562d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c90f8b-19bf-473b-84c0-a47c16fd1c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e812cec-ca16-43c4-9fdd-01619468358c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6426ebc3-ab25-405c-8628-09457f04755a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f79916-eead-4a0c-9570-6937c1adc988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c3be7d-13ce-4c35-a8a8-f2bbb61ff8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41706051-f96c-4974-9e84-3eff19805a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204e5f07-129e-4345-bbc4-1bbf33d98249",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605285ef-ad14-48e0-b0a8-4b8440788ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd524efc-7fa5-4978-b260-0d5191d01450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c16ec1-f61e-48db-87aa-ba32b37459fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c19d4b82-4a94-4027-a6e3-3fd227212762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4482afc-72d1-4fc6-9bea-e8727c780859",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf26ca57-235a-43a8-90b4-2f588a7bf177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "081c4ed6-e9a4-436a-aa4f-e7104c200bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02eeee3d-6646-431e-ae06-8c16b99fe6b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f02741-86a1-4f16-bd0b-4d8622c9b6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8817cca1-62af-42e3-a25c-cb769de244ec",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ac5b5b-1f77-49d0-b8ff-90ff2cf157f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "995e5907-64de-489f-a311-a3d94692a361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98924ade-9f50-4de3-a89d-fc525b717a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bdb1a96-9389-4968-a0fd-f4f26c4de1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128b771d-7773-4d4e-bb7b-00b657de873c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1e81cf-f7d0-446a-bbf2-d98a6c043d4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cd5c083-d966-4737-aa44-097c49f4619a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e82039-cb8c-4f99-b9c5-8f48feb1049c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4eaefad-c166-49da-8528-3608cce7e439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2807f26c-6196-4cd9-b77f-fcae19c8cb68",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dec94c5-337a-4c94-be05-f8e899760a20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf97f0e7-b77f-4e9b-83c2-28e92d0a38f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8e4640-2efe-4e2b-9339-f6468e8e0a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e17dfd-deaf-4bf0-905c-621767f9193e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3635aee6-eaeb-44ed-be55-4b352e46cdeb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628944f2-bde2-4467-ad95-6d7452381cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b74539-7a79-4ce0-a545-607e86ea6c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458825be-edd2-47c3-b4aa-dee9fbd6a9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8da06d7-9bb4-4a30-9ce8-43c888d419e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab05b67-c3b4-45cc-b6c1-b4a49cb56adb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89df7f1e-ddf1-499a-8077-7dfa818541b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d35c5b-22a6-4adb-89b5-bc909945ceb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e65ff75-5e8a-46b3-8025-3edb5c0a67dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8c4cc2-c04c-4af9-8e74-9a507cf312bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6aa7043-528c-4f59-b75f-fa36489b2bce",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07aea2c6-36d5-4925-a016-eb2e7fd0b142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2f99a1-d38f-429e-b100-7a38ad60d583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "260424fa-6767-435d-9fc7-6a95f4d571fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edec849-b9d3-4c95-847d-1079b6d89d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f751de9a-c0a0-43b4-9241-909d8456a91e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cba82d2-bc29-4293-9995-091eae6efe5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8baa82-7915-4494-b79b-c8bfec57428e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81445a92-7b95-436b-adc1-992c8808deb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7addf0-9730-4655-bc03-570a9789c27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8884a4-1b22-4223-9cb3-17063ef218a9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe73583-69e0-49ed-ab96-2e79ef193213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b24fb7-bcaf-4089-9ae0-0303c82f00d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73e74fb-9d72-4467-8c50-ca3ecaf3f61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35789e4-0ec7-461f-a2c2-be6a8855c9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cd29aa-2fe8-48b1-8ef8-10c2072cd4fe",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2303e5-452f-436b-b9b4-c2614c31c1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f4b540-8f5b-4302-858d-cbeeeb60ba53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00032a6-f308-4930-b80d-ffff5f25fc5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88032e41-0e62-4d2e-ae65-94716a70497a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04484f8-a859-4259-a5ca-cc8ee39625a9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49ebae5-9fd4-4330-944c-6e9396d51800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4ef324-e5ce-498c-9dfa-d1ea5e69f805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef8865f-a091-4e1c-8ed2-b902ca9fbc3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2336991-080c-4219-9ac6-b44cb0ecc6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156e6b6d-3ef2-4a5a-8544-a543ea509f22",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af9c0b6-9802-45cf-aa62-411fe459e807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "178935ed-4a88-4ea8-bbff-bda255d30243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67e58aa-0b0e-4ab3-98a8-5107eecbff98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fff10ed-9c25-4d27-8df6-25345304717a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121458fc-72bd-45d9-8733-9b702993198b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5678c2a8-6763-4af3-950d-0a365a60aa34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abdcebb3-9523-4f78-a88d-951d222a2696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd16824-14c5-41d6-9512-4baefdab8088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae730db-a767-490c-8579-48ecd2ec2093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8ec4d4-9393-404f-b6d8-96b6526257e5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc5c1d6-65f5-4ac4-9ede-a0aa8a2fcb92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad82f22a-24a0-4777-beb3-0df467cd7a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b572cabc-42d0-48d4-b2ea-0d4db56da0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e37cf94-7d30-49dc-8d95-0dbddb151324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab596f14-2bd0-4a2c-b59a-e4076c803061",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b16157c-3d48-46be-94bd-0639cdd684c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d69a3f2-85a4-404d-94d2-cabfdaf1354f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cff1496-ac85-45cc-9ea4-c36af83a31a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961a7cab-6508-4dfa-918b-ed4219373da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b288e5-bb24-4500-92de-0c3b6f253419",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceea5123-43a6-4555-a5d0-ef4770e477a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd66fd2-a3da-4e69-9f62-d71df1fdfe6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b05df8-aed9-46a0-83d7-19e3fbdebbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffe575a-24b9-45c8-ade0-6db36dae93fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b103d3-f6be-4fb7-b4bc-9a38a56f5814",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ede349b-26c1-411f-a21e-c03d4c2098ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee6b85de-91f6-4958-9336-fe4d8f6a8423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e743fcea-5d48-4f72-86e7-15c1eedcc772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be86b912-4d3e-4890-b3c2-094f6f6c5ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ef9cc2-b29d-41e7-a211-ee9ef37ea838",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b079f0-54dc-4403-9118-1299890d69a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "051c0fe0-5cb3-4e84-8a88-0262d8b967e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefb7bd9-228c-4ba3-bdf8-5e03ff75c91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d85586f-9a46-4fc4-baab-4754648e717f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9a44fb-0ccc-4eac-8bf1-a5131fe1d1df",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a33b4e-577d-4b97-8a33-ccda300b2b67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d985de73-4e35-46ac-adfd-6a0a0047d5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddee8afa-1088-476f-818f-f976e6b534e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56647b0f-4de1-46af-a57d-727ad02102e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea76dacd-5ed9-44ac-a912-db18aeca3610",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a49ccc-4510-4af4-a786-b1bf6c137eb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00bea30b-9e11-4730-821b-e62b6ac20d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d4e939-0406-452e-9b47-b4c875141bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77098e7-b7e9-470f-ab4e-95986618a7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038ff802-aea0-4773-993e-26e2fd76a105",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad977d9c-5c9f-4eac-81d1-9863a1411aa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58630c85-7903-4851-97c3-7a6a44feb257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5771f8d-5133-41c6-b967-2361afd66ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f561f2-b193-47f8-aa9a-60b0c645b4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e26b66-9766-4edc-84b8-e7270d5fc5ba",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0052b67-81f4-470f-aeb3-954393a2b8bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c2596d3-19ed-46bf-92e4-c93cce7703d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634c1836-eb86-4397-b605-50c8fde0fd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df3d1d3-bac1-4f9b-b71e-1d04f7279de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e4e1f3-c6cc-49aa-8022-a4c60e0b85fa",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26168f1a-44c8-4dbf-afd1-d25abc62be59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c573ff68-8c05-4643-91d8-a08286c16ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47ce039-b1a9-4a4e-890f-4914de400a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8a046a-7373-4414-b591-a7d1e94d5ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af6daa2-c1bd-4699-8afe-e65ee5a99a3d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b484dff-89f8-43c4-b47f-7dd35f977e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7feeee-10de-4ce5-95cc-15cbbf6afeb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c56f1ba-4220-4cf4-b170-561d7ec9f84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0da9252-59db-4837-885a-afd353eb54a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f49a45-0187-4d60-9fe5-c38dddfb75c0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fffea32-51e4-4e4e-b53b-ade406ae71bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88720737-d726-49e2-8cf9-dc6b1e443938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25a15c1-3baa-4991-8c02-1b37bb019340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad05ac1-af90-4946-9e27-4d14d419945d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe90004-5be0-4843-8653-aae7521d9c48",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008e6c8a-1632-410d-aac9-98671bd5aa8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0811781-bdf9-4813-8a66-d4f795a9dedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744546b4-b757-4c2f-b9fc-8b597aadffa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6632c6bc-c989-4fd4-9883-f0e993f75bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df9cb6f-2d0a-43ba-a435-dc5bae189970",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c0b711-6810-4f1a-b8f2-789aaef66a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a870afda-faae-4fc0-b7e2-14fa83ee5f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6e15c1-001e-430f-b2f7-8e77ff33eb15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984d3fb3-d015-4394-8220-52c3f3b02334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c113490-f3b3-47d5-8ba5-0b2e1c02762d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1580c96-df66-4a6d-8889-365ec097658f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553803b4-85a7-49c0-b2af-8355f3cb963f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1928b3-3826-4440-9f2c-17e5ca124be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e09aa6-8231-4cb6-8607-e627f1686ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319f593b-38af-4cd9-a460-99fee3d4512e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ed4038-3c6a-4966-bc79-c81630a2e057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc46876-e373-4d0f-b861-42b32e5c6e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ba3047-3840-4c34-9880-7b02028770de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453dd474-7044-4c1d-bb69-6f8243a6f6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c3fb43-c02c-4cb9-97e8-b8a142325905",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e840178d-2bb3-46dd-8e5e-fd556e43b99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb344e3-ecb9-4526-bdfd-fe7a01f0cad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a452b08-940d-47dd-a71e-2eaf236a950a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23e2231-2849-4332-ab94-518b2060d64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7932e70e-96db-47d5-bea5-152aea5fd3f1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a16f67-d60c-4be2-8134-e13e75e1cebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5bd33f-f61f-46e4-88df-d20f4ef8bca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8706a1-d1fd-432a-9efc-a558cfd9802d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6a9290-965f-4839-aae8-827d50c11422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bce0338-eded-4378-abce-6c2812cc1a45",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba2cb81-d0c6-45e2-8e20-d1c94f19d22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5697363-7269-408c-b50c-c156cacad08a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc6a5e1-4b54-44ec-a4d7-8420bc7af11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4e303c-c14b-4a61-a660-13179b055278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881fd425-e1a6-4ff0-b92b-243dde001d8d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dff6e61-5757-437a-8049-1410a1024799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde401fa-2788-412e-966f-c94edb6696a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0ae7c4-77ea-4112-ba29-855b760553c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0dbf5a2-564c-4cfc-b081-c3e05652d0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ba3e02-23ae-4b9f-9faf-32e9554ca7e3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb4af49-ed25-4d87-b2fc-98889e52893a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ded89c7-b226-41c9-87ac-7752356df747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2a8edc-fb48-48a4-9178-1ba6860d4a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0127e5-274b-491c-80e7-e58a55a1fa2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36441a5-619f-4ee5-82f8-f7cc7e55bfaa",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199147e2-7948-4e15-ac7b-8356adcef1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52effb47-1314-4257-b28f-df0a364d303e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "968be678-4452-4f18-9820-da1372827d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ab2998-ffd0-43e0-bd05-d504dae59e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13176730-1200-4786-ad46-e3dc69a69144",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270de410-ffdf-4ad5-9f27-b3401a209697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406a336c-1b17-4734-afae-0ef60cc65c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce13760c-1511-4516-b1ec-06377766fd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838d0a24-b41f-42e5-8377-c42b9a0e4b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732652c8-8c97-41ff-88c1-c1dcc2501bdb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1005890b-d279-479a-bbb3-e2527b224bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e73f54a-e210-4726-96fd-30d8a62986a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21052c14-5fe4-41c0-9ac2-47dff45c9b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e384fb-ade7-47ac-a038-f6b3e1452827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22439498-a085-41ed-88c5-d02f8466b70e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de8a526-14b4-433e-b56a-48bc9c864fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4814e90a-cadf-4960-9805-de3ba8bd9d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2ea959-556d-4598-a582-358880092ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f00c0d6-da91-4f6f-9383-a30dac1ce9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99338c8d-036a-4ca7-b146-45b77cfc5874",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81838e17-1803-421a-a8a4-06b5270b76d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4e76a7-d018-4bed-a593-7c8cda16a963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f66d41-ae74-48f2-a315-2f31c60bbba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b791c617-d0b6-4f0f-a608-b9be20267dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6a001e-93c0-42d2-9fae-05a7bc79300b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ea6e35-9700-45bc-8b8a-1cbc4ebf85bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08870549-96a1-44fd-95ef-85e802f66b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8156b72-bf94-4151-90e6-e006e68ee99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6dd861-2dfc-4a02-bf04-5c682cc1a56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecdae15-cc5b-4480-9d9d-60a72fa771d0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c534209b-23e0-4281-8ec1-930353970327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c623ce89-0132-4cab-b200-b21b676ba8e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e82a710-7951-476c-98b6-5552016dc30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916a281e-4e3e-478d-88ee-022d5fe17cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086a99aa-986b-4290-b6ab-6c91301a7863",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5966730-8550-4a92-b7ed-eeee8dda894c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f54525-8163-41ad-a502-55affa75d7d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf5c15b-96e4-45b0-a7e7-1f0eb281d44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023b379b-671e-4274-862c-21ec7f99b0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7784736b-647b-451d-958e-589cd05ed8cb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee4b86c-8ea9-4cb0-8eb1-45510c05d12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb8e816-180e-47ea-aed1-202d420371c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "700be139-81ef-4385-b26a-a19f79e39dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844a5a94-8bf0-4d5d-844a-f68538baee25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db7b9fe-a2af-478f-91c6-04ada6235188",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c20b27-27ee-4a35-a84a-4a18d07154d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d39cb81-453e-423c-9f4a-4deee5d6275c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f71ee34-6f5d-4781-be39-1b6402f0846c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b961b85-51d8-4971-8a48-731fd0bb73d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbb6ad0-c709-482b-a36b-23e8fb185952",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c0b93d-cd24-4bf3-8dc3-a8968f0d10e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9b0541-2a07-4b6e-a62c-bddc93ad01cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d359df-eedd-43d2-992c-77981879308a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca39be4-fc9d-4a14-bd8c-d018f5ade3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56de2dc8-6f8d-4b61-b888-16ae827b8857",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d950a7-039b-4c87-b726-2c00816eae86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f0cf9b-af62-4153-b3e5-c8cfc1394d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed53d01-a378-4ca4-942f-01ab17dd58c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855775e7-ae18-4bcc-bbd6-125695e2ed8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eeec98c-da5e-4d98-a9be-c6b10b3e9333",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cef2f78-d8af-40f5-b495-a3cbba4f286f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171fa282-aa4b-43dd-93fd-fe06202ec20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2288d82c-4edb-44fd-8a09-5aaf0d00e53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce8177d-e973-47be-81fd-23195c774459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbf9a55-ae49-4b98-ad70-41a6aef82b46",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228253d0-fcc4-4407-981d-3d8b5ba3070a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33203317-8107-4b37-9c89-949e571e6d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7acc3b-9d3f-4446-941a-271c9fdd0f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbeaddfb-3c17-4151-98a0-879d40734af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423a9003-b132-4a07-a102-83d7ea1a7644",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9927e0-4634-4a0b-94f1-3cf5f675f944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9924647-3cfb-472a-9104-b74d3f11dc87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5feb969-9619-46cb-9442-14acb5710aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644720f1-9465-4dfc-bb58-db02dc669782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63d0e98-9a65-434b-b7cf-77f6c88706e7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6503e1e1-d9d9-4592-ac11-dff19f819ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606557e3-321c-4c6c-a749-93da93577095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21480d89-1d64-4a46-bb88-657ae6925bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a32bde-b7a4-477a-ab3b-e2abd0caa3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e610e7b-1afb-411f-9b59-1a39dd8644e5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c846bdcc-8dc7-40a6-8231-f2b016074a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa12a876-b9c5-4ce3-a6a3-2bf564bd39d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea408c4-9981-4837-be4f-9f363471206c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fe1ba9-c9e9-43a3-90ee-fbd31a712fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac77f957-2352-4683-bbb4-c7cf488b192a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998ca1e6-5c22-485a-94dd-2b1860c4f5ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90615a5c-c51e-4939-8239-c6f3ac345e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624d459b-9c2a-43ae-bdf5-6e05298cc8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ef5aff-5189-4a85-b55e-0413a21ae572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dffbad4-de6e-41cc-946e-8e15271373cd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce32dde-2290-4181-bf98-2381ea82282b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "235447cd-24b8-45dd-b71c-d0303e8d4caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d23910-574d-478c-9699-26bdf07e4538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ffa599-ab55-4a9c-bb01-9e0785608e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1c0d9d-b159-46fe-956d-db42eadd4968",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22991894-795e-4498-bb90-4464852a21a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd9cdfdb-8d11-4905-b087-5625c8cd7084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "810cd2b9-380c-4195-8df0-aa7764ed1458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57289b89-409c-4a9e-bef7-5800eb83fe4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383a1006-ba45-4012-8c75-baa6594d7d05",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43513a85-0b42-4618-b65d-8dddee29724e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef6b7df7-a0f5-46dc-8d0d-af511af0912e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab81d982-b0dd-4720-aee0-02ae4e40142f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5270c7ac-d9ed-4a11-8ad5-cb157abd4cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e145b74b-deaa-4eaf-9710-6314f3ebb9d6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9f5bf7-ea0e-4168-bfd5-05ad74fac6fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25817f95-eb3d-459b-83bb-7076a31a03c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4565043d-d9fc-42ab-8cbb-7af176ec5d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3db23cc-f49f-4b50-9a7d-bbe71645d59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89faa68-757c-4927-8074-da032bfb47a2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19a038e-7480-4fc4-a37c-f33d537a6cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f6ae9ec-1f0e-4317-b551-ab6bd018de1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe34e66-be4c-490b-a197-ce433ee3fb58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aada9e7-80c5-42e3-9969-8b2867463f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff0ccab-8e05-45c6-9dca-e437bbd48fe8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc063440-7bcd-4261-8645-a5c27bb4b893",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef70021-e006-45f7-b32c-c16af65ae0e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac28236-22aa-4054-8343-2d50fcb3af4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23271786-ba8e-4111-a723-ef9aa1c88641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc92796d-8bd3-4e50-ae6c-dbae6575c287",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e268eda-adbf-482b-93ed-ff53a6ddc9db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77bf1dfa-5f1a-48ea-a2f2-42573895d882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2e8ed3-955a-4f91-98c3-208ea958c0a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6592ac0a-f201-4566-87d7-695939afd9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b9d1bd-3b38-46bb-8867-01415708c681",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebfc190-1c22-4260-a8f3-2afb4679ca60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ab67805-7304-453d-a953-b3b60626e246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a93159-a939-4ee2-8429-0af78360ef4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f93eba-2bd5-494e-950e-d62efc6ea349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fc0a16-9f56-494b-9884-ee2206770a19",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cd6914-b26f-40a8-8e7c-ec5a67ff9ee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63fd3ece-6f5c-46e7-b36d-ccc2f8feafb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd839f0e-766b-4fd8-881b-5dea9415e053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a87a11-88ea-4970-b065-5bb46dc39b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f83ff1d-f402-4161-93a2-5da745bde827",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26481f8d-abcd-41f2-87d7-e1e6d9e43f07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69042b03-19a6-442a-b53e-db312b337a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f09bc6a-3bec-4adc-bb74-18efb8effc78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32535f28-c1e6-4f20-afd7-7b4740fa1cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3135f251-0fa7-4efc-9ecb-61d6500a0204",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa36418d-15fa-4852-9e5f-fdfa6cbc8a90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcbfe57a-0de1-4c73-9ea4-f80de6ece680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8146088f-baf0-40db-b79e-96ab5e94292e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef59efda-d707-4abe-97cd-0e8befa9ddc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e860d0-c9b7-41df-96b6-eaf644da2b56",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5d3273-ba7e-4c50-aaba-bcb21d45044e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81617821-74c5-43d1-9b4a-3ef19820d252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c2fe69-3e9f-4c88-88a2-2cbeab4f4d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4830eb-f583-4ed3-a2d3-ac42dc6cb556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41760d0-41e8-45fe-bd5f-43794ec55fc6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f0c562-5d8c-4795-adc2-8f4e6c2ef61c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb5e8694-1a5a-432b-b61d-2e414c673c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48b14dc-e5d7-44b1-bf05-39b69ab0879e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8a19c5-94b0-460b-981c-9ba30a90d4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7db35c9-0a33-4d3c-b0bb-d84dd40beb0d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371f1863-e37a-4244-bfec-ee18133dde23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1ae7681-3d70-4867-a519-1c688752f354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29538ca9-1f8f-4ada-b855-66600a6ba514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9419f8-4c0e-4fe3-82c6-1e3b8d5a764e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68eced01-3e80-4199-b5dd-292ff2f9a3e4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635e51e2-4e5b-4d59-aedc-1f1c11193e6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bdac071-caaa-45da-a4ec-621d4dab27af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bf0f23-9e13-4233-9213-0a5a67ec6d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c450ec-6bc1-4c10-99f3-f8b4439cfe28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5266fd17-9ea7-44df-8298-0914ecf452cc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebb7cd2-4029-4e79-9ed2-521710a86ee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2130d241-97a9-47ea-973d-dda158181673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b946ec-92ad-4b81-8edc-cf94076623ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68037d17-1550-445a-8198-c3b1075a138e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4febaee2-879c-41d7-b6d2-3a67a2bd4f65",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ea32fd-6cf0-4fba-8a4a-97ae08559c16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dc1ec56-4c18-468a-96a6-b764b8e55e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2897e304-6b9b-4cfe-8c62-5a0e42c1f5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7c3069-e863-4f8a-8432-df7bdd3e7e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b295da-9bb8-4245-b9b7-d84178c4a333",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb566ca0-c52a-46b6-b5db-c518b3938ee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "765fd54e-20ed-4d90-b976-3ebca4de5ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f6e578-b741-491a-b1ed-c986d6d18002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6da9aa-66d4-4685-91fa-961d7250e733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c72e0c-9c24-4db9-891e-551d37d95d3e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921643ef-6953-477f-a8ff-f0fd2303745f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f3df012-5851-4d22-aa12-ad1cddcc6985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef1cd75-b049-47c0-bf89-6baa28728c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865b93f8-f106-4ae7-86e4-8345e3556324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbc75cf-6b8c-4192-9204-cdc1fb384374",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f43537-2416-4e59-9ae2-a549e3b68a8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "968d64c4-f728-4e75-bb25-0623086af5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e68a5d1-8b76-4ccb-a817-309ddf012575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08437f6-7f32-4210-85a6-e0f2aba141bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf8a31e-efaa-4370-924e-db05b74604ff",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e3a415-5791-4f83-ba9f-b2e44c2053c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bd43cd3-98f4-470b-b159-32ccc18f4fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0ba54d-90b5-4167-a04e-2f74b847ee45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab0e6cb-e7b3-4e07-b9a0-51285d2094dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92253b58-38f8-4227-b960-a93536469796",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a788251d-473c-482c-9736-274e9136f30d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ece9b0a4-c359-45c6-80df-b16ed6e5d3cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50d49b6-9b12-4c6b-9891-d4829e53a4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fff46b0-f2f2-4dd2-a39f-67c61dc357cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c390f2-70cc-4c16-8c47-b537bd9ccfcc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adcb588-c250-4f62-bf01-da95722b17e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61382870-b5a9-4fd7-b043-4e21e81b8678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a369220c-4a38-43df-a0a9-70c20ad34c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e38677-4051-439a-87ed-03d2b6032a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc96e99a-c52f-4ed9-b959-f6b14a8c787a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaf991b-d8d9-46dc-9ff5-f2ca539ef629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d77e53d4-5d2a-49ef-918d-ffd39c0ee115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9dbaa5-f6fe-403e-ad1c-1911d2a037f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6579cf41-32e5-46bc-960e-7104f41ca565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac2ba32-a8d5-40bc-949d-0176ad4a56a3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fe9fcf-69e4-4066-bc5e-0e5ca0cf0209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93e0c488-b16c-481b-a291-2df55e54bf9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44a7c79-252e-4ba6-9264-516997dccc5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05eeabd3-8a07-40e9-bafa-f37e16069e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2355cf-934b-4971-bc91-5fed209fab88",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e78ad9-8e48-4abc-97f0-c4b6c336d907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccaf5b10-a561-4231-94da-c1736907467c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7395b7-bf4d-42a3-a428-10e2e5104530",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd72269-9569-44e8-b88e-d356e489cb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a6e04f-a282-4e67-982b-7d0af037338b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2d0018-a23a-4294-bd1d-07c144f85a80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "333bdc6a-9b74-4d30-97f9-d46535e2480b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061cf890-3950-481a-87a8-bfc058082a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728e2cc2-2860-40a1-a649-19cf79b6ee86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87fe32e-ee59-40bd-a121-397e93376f2a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbb1fc3-1a8d-4696-aedd-107ea725179b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aab9f00-f290-46dc-b3dc-b36724824f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a34d87c-240c-4c21-a2a8-763ead3aa5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c742fc24-a9c5-45de-8fee-70f53852c3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67875f9-de8c-4f25-bfb0-7c37ceae0e3a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e45682-208b-475d-b8d9-95118a85ea36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92872891-130a-4d6c-aa4c-d45e9cf4a2bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc57774d-d971-4ad7-8b8e-5fe53358e30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2a87f4-aab3-49f8-b4d9-ff9f8189d430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a88cf45-e301-4fdf-9dbf-53602f0a3bea",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b158c82d-1796-4e46-a422-1fd7cf25a10f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50b6f87a-a89c-410c-9995-66ffb0ff48e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ab7f65-2e09-48f4-bb5b-e98e653612ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10fa6538-8712-4c44-a31b-22c35874cb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd29902b-090a-4555-8cdd-b43b2d16289b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ab65eb-4cac-439a-a4f6-a2637c740c7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eef1beb-5ff6-4b4e-a489-0a0eaeffc480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8b07e9-2548-4379-8687-259067a557e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2696d439-aff0-439c-9d51-9182df2117f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d29146-b411-4a28-8cb2-345da5f7240d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904746b8-f1f2-4f72-9e3e-fefd0fa24d93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35c25aa7-7d15-4bd2-a9d6-94f8cfff4ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147697c7-5308-47dd-96e8-7bcf9b7f7d45",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b23ca1c-2a25-4732-b589-9fdb9660410c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd5073b-2c2d-4420-8b2a-8b3f700935f2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d353b1-5a5c-476d-9f01-fe364f008695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4f0897-6fcb-4e58-9b42-de042d4fd167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d895b758-b186-440a-be52-96e55ff058a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e6639a-84eb-47d0-a665-963530fa2932"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07ccb799-7ed0-4c3d-919d-e72dc146b326",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92044585-f982-489e-92e6-684822f1073f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e297ee7b-2fbb-41d8-8e13-aaf49255acfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4362daf-fb98-4ae3-82da-678c8ba7f401"
                    }
                  }
                ]
              },
              {
                "id": "842c840e-d06b-4f63-ad2e-9394476030e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "029f585a-170b-4fb9-b318-ed17af07e425",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41a7890-bd23-4d77-b8b8-10a69a66bf09",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3f62c91c-a593-4879-a55e-5daf7e3900a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ba0e52-ede0-477a-aa26-d7abf1436751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "116f3919-1bc6-4a9a-9d86-e3e13c21bb43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bebe606b-ab6f-418a-86c1-b04ffc4532de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08b99619-edeb-49c0-8d41-c075cae445fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b01a184-f3a6-4885-98c0-dec8012b6aae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63db8e84-bfd2-44bd-89b4-1e1eeb066306"
                    }
                  }
                ]
              },
              {
                "id": "95b53f6e-628c-41f2-8f6a-fab20c450cab",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "24093723-57f9-413a-8a95-1d1483e422c0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e4fe8d-9ee0-4eb3-9b17-6013e63e0705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2c6b3693-9098-4bfb-afda-3ac29219101c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc847a39-38a9-4346-a58e-f6ab9209e09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d5f864-1e38-4b66-8531-7b603b756c6d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a85962ad-94e8-4a47-8de8-f0fbe1b88907",
            "name": "Positive Testing",
            "item": [
              {
                "id": "37a9be05-a1f7-4ca8-99b3-e03a3211a10f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "060b2bef-6f97-41f8-9c11-80ad1e6c45f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e460ee4a-8ceb-4525-b9ea-3b42a35dc09b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b63e510-81a0-45c6-b1ea-9b20843e0ca5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a9799e5-cd32-4316-8c88-b6f00646ef27"
                    }
                  }
                ]
              },
              {
                "id": "0c04db43-5422-4823-879f-b1538d808e22",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "503a4fd7-f5b5-405b-839c-0e50c87c51e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b9dd8953-b7b4-43b1-bed9-2d5bb2142087"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7ad1960-54f0-4bdb-b188-a38adb472378",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01fe6b95-f299-4754-a664-30a10e679794"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fb39f9b-f65a-47ae-8a32-2fefe230fc66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2172fe2f-df5f-4a38-895b-e7da035c917d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "555d0309-c107-4ca4-afa9-299f0e7faf3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5851665-7403-4e24-b03f-0b6f5d20c577"
            }
          }
        ]
      },
      {
        "id": "ca4e1d1f-1317-4a5c-8fc9-7630359890ee",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b37987df-517b-4360-a4fa-496f92f2b572",
            "name": "Negative Testing",
            "item": [
              {
                "id": "014e75e8-04fa-4361-b52f-05ed221395bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f32a5bf-7b97-4617-8bfa-8cd7b747929d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d14b70-fb6a-4849-8f18-d7920b4225fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aaf6722f-0af3-44b5-9d74-fd8633b9b199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8b7847-8acb-4d94-a80f-e86375e653e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c12cff6-915d-4fd0-8963-17908ddce88f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d422e61b-b1e9-4669-8478-7748fe846373",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2db5d9b-b678-484e-8723-8a8d397c9a24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "549cd16e-5755-4cd6-a5e0-1eb584a8e80a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95e56a0c-c391-4d4f-92c6-885f40a0f236"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "504708e6-3064-4603-af55-eac8e5da58d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5a8acd28-fdef-4c9e-9749-34a31019cf7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e902a07e-c03c-420b-b0c6-d72738c57da6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eab8906b-e68c-4eac-a4af-a29cd589f3cd"
            }
          }
        ]
      },
      {
        "id": "63cf33af-d69d-4549-b3b5-20b410258ab1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1ab181fb-5f54-44a1-b7ef-3315cb4cdd28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3f30ca0-4bd6-41d0-9706-e324ac82c109",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e3dd20b-122a-4656-b933-c4ba0a8da935",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc8115c-a135-456d-8d91-b30dec5fe071",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de478511-b124-4382-a909-d8c9e875cd37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54dfc79-dc62-40cc-ae98-832a2da2e4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5a5baec-f2a3-484b-acdd-7b9fb4c0f0bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff4742e5-f3ff-4047-9955-6b8b0490a893",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0841bc98-7f5c-44ba-9cd8-5938e54a5cbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a6f422d-94a7-4397-bd5c-5146dbc9cc77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3bd3c77-48e2-4bbc-87ea-0e2caca060ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d34fd8d-894b-418f-8b04-81a18117c4fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "31e57a64-7863-403e-900a-45c9d9279b3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ba31fb7-c286-4b10-a4c1-3f68d8278a71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "556f5080-9e05-4161-af30-77634e1500b6"
            }
          }
        ]
      },
      {
        "id": "abda0c40-33d8-4608-a594-468c325f309b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cda1496c-7f47-44b6-9673-dff01fdea878",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2bd4539e-3b6b-4b30-a08a-0c2b73397563",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a44966d-ca11-4de4-a19f-2a209b1be7bd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9af427-daa1-4d54-bb51-84cb4d5e9340",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55f03f1e-736d-4669-86c6-f4e0e66c2e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8a15c3-2bd6-4a06-89b2-ac182705a65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9732440e-c107-46e2-9122-f505bd59f8b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "070c0849-e428-4b1b-9362-a39984261e02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dd31ecf-7197-4242-8157-4d36a5374f12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e87f52ee-8491-43d7-b455-f2bd6de2df7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f343cd8-11c3-4af8-9c42-e15c1167d03c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46253b4b-270d-48e4-b0e9-461030adf8c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d6fe0f6c-b96c-4ac3-8ea2-dbfbce0a6473"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72223eb1-aabd-4c1c-951c-38b45f956aba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16dceeb7-b18d-45fd-8536-0a0d053c065b"
            }
          }
        ]
      },
      {
        "id": "4fd3c165-a3cb-44c5-8ed6-16ff7d440e1d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73162a91-ced7-4ecb-b1cc-788ad2a6242d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3004893c-afd6-46ad-98d5-5204f70f6e1c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7bbafd00-7be5-4e15-bddb-341d1ebf0422",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83ddd94f-8111-4aa3-8f39-ffd6b6a4b1da",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f4256a6-6c53-4149-8eef-49491f21693a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 89.83450704225356,
      "responseMin": 6,
      "responseMax": 5208,
      "responseSd": 421.64508146634086,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694997201883,
      "completed": 1694997239228
    },
    "executions": [
      {
        "id": "01eb8ae5-9bc7-4573-ac23-c9bdd1e9db73",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "63e1a41e-6b1a-45ba-86b7-4b58e24047eb",
          "httpRequestId": "272b6e23-389c-4d8d-aea7-4a02b6b582e0"
        },
        "item": {
          "id": "01eb8ae5-9bc7-4573-ac23-c9bdd1e9db73",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "572bed0a-d935-47ce-8908-cf77c44b0f26",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "3c5468ae-c945-4ebb-a980-5ce622cdadd2",
        "cursor": {
          "ref": "478347d3-aa96-48ff-9abd-6d45c1dd8dd2",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6b66ece6-f14f-44fb-ba4f-39ba2150f350"
        },
        "item": {
          "id": "3c5468ae-c945-4ebb-a980-5ce622cdadd2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "413f6272-658c-466a-b35b-5d1424d29f01",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "321e5067-f367-4392-89dc-0304c737fa84",
        "cursor": {
          "ref": "d108f433-735a-4872-a8a2-6de5d76c260b",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2cbc1057-0efd-4887-9d7d-82722c2f6503"
        },
        "item": {
          "id": "321e5067-f367-4392-89dc-0304c737fa84",
          "name": "did_json"
        },
        "response": {
          "id": "bc107202-aaac-4fd3-8244-272ab497ecbd",
          "status": "OK",
          "code": 200,
          "responseTime": 330,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28ccc8b-e6fb-4f5c-a82d-f0879fb89dfb",
        "cursor": {
          "ref": "0602b3b0-d0ec-485a-8718-44d88813de67",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b9d8b9d6-3f30-4476-b4bd-4899110c7f9d"
        },
        "item": {
          "id": "a28ccc8b-e6fb-4f5c-a82d-f0879fb89dfb",
          "name": "did:invalid"
        },
        "response": {
          "id": "296ef9a5-028d-4702-8755-52cba4d90cec",
          "status": "Not Found",
          "code": 404,
          "responseTime": 337,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28ccc8b-e6fb-4f5c-a82d-f0879fb89dfb",
        "cursor": {
          "ref": "0602b3b0-d0ec-485a-8718-44d88813de67",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b9d8b9d6-3f30-4476-b4bd-4899110c7f9d"
        },
        "item": {
          "id": "a28ccc8b-e6fb-4f5c-a82d-f0879fb89dfb",
          "name": "did:invalid"
        },
        "response": {
          "id": "296ef9a5-028d-4702-8755-52cba4d90cec",
          "status": "Not Found",
          "code": 404,
          "responseTime": 337,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d9c458-2abc-4c1b-8b67-05113a57a48b",
        "cursor": {
          "ref": "d75b1ba3-9832-469c-9ebb-288b75003d24",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dd7d3fdb-6391-429f-a256-c3783c253f22"
        },
        "item": {
          "id": "f4d9c458-2abc-4c1b-8b67-05113a57a48b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6e2b1cd2-1394-4468-8701-0258fdf39a76",
          "status": "Not Found",
          "code": 404,
          "responseTime": 108,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639c2e71-7830-41b8-8664-64319a9ffa43",
        "cursor": {
          "ref": "e5bbbe1a-8e08-4dd1-bd79-bf58a68aea89",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "36141daa-f98c-4309-9ac3-6049ba6c2cd5"
        },
        "item": {
          "id": "639c2e71-7830-41b8-8664-64319a9ffa43",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "203aac85-9548-43f7-946d-f3cefaac709e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bf70be-104a-4097-b5eb-36a86ec872c1",
        "cursor": {
          "ref": "0354822e-22aa-47d9-a530-9ffecfa1890b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9605a9e4-5ff3-474e-b3f4-ffc09f2f7542"
        },
        "item": {
          "id": "70bf70be-104a-4097-b5eb-36a86ec872c1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6edbe886-0f57-43ec-88f2-9ef4d182bb3b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bd7546-9379-401b-941a-33070151c056",
        "cursor": {
          "ref": "cf5fc3c3-e503-4699-9be8-ad0625cee661",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "71d5a410-ad95-48cd-94e7-c3edadcace65"
        },
        "item": {
          "id": "b2bd7546-9379-401b-941a-33070151c056",
          "name": "identifiers"
        },
        "response": {
          "id": "1dbcd49e-2b89-476f-9b71-fe3705774b31",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d772fbe-81ad-43a0-9532-c67bc1667e76",
        "cursor": {
          "ref": "8d611f9f-3ac5-4d9c-bfd9-aba44229e68c",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3655abc1-0559-4c37-b5a8-513de0e70268"
        },
        "item": {
          "id": "4d772fbe-81ad-43a0-9532-c67bc1667e76",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "afb3b14f-1751-4704-aa5e-6a6d47c62cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ddd6dc-acb2-43be-bb03-cd6176c71aa6",
        "cursor": {
          "ref": "87a28ca9-1d48-4012-90be-d08fb1863bd6",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8f492956-5d94-49bf-b090-a8572847b788"
        },
        "item": {
          "id": "d4ddd6dc-acb2-43be-bb03-cd6176c71aa6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7ae76715-7ddb-48e7-a1e6-20c0f20e8075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458c1a6d-5977-411e-9c41-7329ffd6e48f",
        "cursor": {
          "ref": "194d79c4-a94e-4ae2-a288-bb8e064b2b05",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e291821d-53d1-4794-b236-10c362776537"
        },
        "item": {
          "id": "458c1a6d-5977-411e-9c41-7329ffd6e48f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "182bea01-b90d-4873-a3e1-c14d4f1ef75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde085a8-20ff-4bb5-87b5-39dd781e1d34",
        "cursor": {
          "ref": "014c0b32-3d10-405f-bd3c-443eaffd01d7",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "05b91aac-a5eb-4769-bf67-dff0ddf8c6da"
        },
        "item": {
          "id": "dde085a8-20ff-4bb5-87b5-39dd781e1d34",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7b857cf6-5bd5-4c9f-b95b-ed4fb9f7cab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a320fff7-77fd-4479-92df-b86da5aec61e",
        "cursor": {
          "ref": "1bfdc1a9-51ad-4994-b2ae-75049b476091",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2c61328a-fbe9-43f2-b2af-ade6ed8ba539"
        },
        "item": {
          "id": "a320fff7-77fd-4479-92df-b86da5aec61e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2971c1a8-eff7-49d3-807a-038ad5081e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51093af-11b6-4d48-9a43-950542aa553e",
        "cursor": {
          "ref": "f0bf4663-bde3-460e-b307-f2f45c078851",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "479a7e57-d79f-4463-ad33-b12351dfb338"
        },
        "item": {
          "id": "b51093af-11b6-4d48-9a43-950542aa553e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cfad043c-e07d-4187-84c7-19d41cd44299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e2a205-c2dd-4c65-b040-1a4a912c8895",
        "cursor": {
          "ref": "93fbb876-a570-4777-8e07-544298bd8c18",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "701bf925-b686-49bd-8755-2bc554cf8d25"
        },
        "item": {
          "id": "76e2a205-c2dd-4c65-b040-1a4a912c8895",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5c198ad0-8b1a-4c5f-ae7a-15723c52c460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ceee28-6011-485d-b136-1c2d93b2d164",
        "cursor": {
          "ref": "91216f31-1836-42c7-b039-18cd284f85f4",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4291cf5f-0bd6-4dbe-8d6f-96832a1cf41c"
        },
        "item": {
          "id": "94ceee28-6011-485d-b136-1c2d93b2d164",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a8213b31-19a9-4b62-bcbd-c2494413eebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec10bbb0-8e21-4080-a115-8c5e674f3aab",
        "cursor": {
          "ref": "ff924c04-5f60-4989-8a4c-aeaff4357d98",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e5c2a7b6-4f1e-42df-8a6a-f2c6d5bcc193"
        },
        "item": {
          "id": "ec10bbb0-8e21-4080-a115-8c5e674f3aab",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "402c1b56-9cb6-47f4-b2ae-8b537bb85e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7236a226-09d4-415b-a720-8c492a488ac2",
        "cursor": {
          "ref": "2426fd5c-15bb-44b1-a472-bd36ef46df71",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4ffc37fc-9162-49ac-8852-6eb3ae17b668"
        },
        "item": {
          "id": "7236a226-09d4-415b-a720-8c492a488ac2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2a363b83-1002-49e3-b7c7-2b5d5b34f847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd39fdde-bdfc-4f20-99c4-120e67294c35",
        "cursor": {
          "ref": "12e1aa07-3689-4c48-81bc-da389561783e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c9c2e668-cc4e-41cf-87b3-c7c284438ca9"
        },
        "item": {
          "id": "cd39fdde-bdfc-4f20-99c4-120e67294c35",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7fee1f38-e41a-490e-8761-d8d3d5f43c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c5fe58-48f9-4482-9b8c-614c2f447d2a",
        "cursor": {
          "ref": "59fbb3b7-403c-415d-ac0c-ee0fb999b5b5",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "002a24d5-0c32-48a3-9e12-7659180b68c6"
        },
        "item": {
          "id": "03c5fe58-48f9-4482-9b8c-614c2f447d2a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8780242d-fa7a-47fe-bf01-7b2d67f48804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e2c662-171b-479f-ab81-78d0d36196f3",
        "cursor": {
          "ref": "f4486781-5450-4a6d-9619-e553ef92d6c8",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "be8ed2af-3e5b-489b-8cc5-4d2a47e6c1b0"
        },
        "item": {
          "id": "42e2c662-171b-479f-ab81-78d0d36196f3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e4c3abc1-16d6-4330-bf17-a2ea9199631a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b7b1b1-2d97-401a-91c3-e8bcc3d32915",
        "cursor": {
          "ref": "cc51fe45-4ef4-4007-b065-d831b218fe9b",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "484a61de-b9c6-4d04-a5cc-156155bf53da"
        },
        "item": {
          "id": "76b7b1b1-2d97-401a-91c3-e8bcc3d32915",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2cb1da70-3994-4c38-9da6-16e9eeb7b8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db9649c-3ec2-4e42-9da0-d16e59302681",
        "cursor": {
          "ref": "5f3893d7-1cb8-4374-ac53-756b12f3e241",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ade8f245-35b6-48f7-8538-7a2ca78a322b"
        },
        "item": {
          "id": "9db9649c-3ec2-4e42-9da0-d16e59302681",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a9457aa1-9e8f-4adf-a353-ab25f5f5fe6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab95efd-7857-4164-8250-0eac64a508ae",
        "cursor": {
          "ref": "955f8829-adc2-4487-a04d-d317d2113ad6",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "80a12ddf-9d5b-475f-af07-42425d89d092"
        },
        "item": {
          "id": "1ab95efd-7857-4164-8250-0eac64a508ae",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "89515c12-bcab-4cb3-9c35-c962c5dd7ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccc43c4-425d-463b-a0c5-3853724cf482",
        "cursor": {
          "ref": "4754e3ab-82f1-447d-acfe-3601b4d8bdc9",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c9ca2a60-7d8f-4438-8cd5-fa24711b595a"
        },
        "item": {
          "id": "bccc43c4-425d-463b-a0c5-3853724cf482",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5ce6497e-52c3-44c7-bd37-863d6a001b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df818a1-f695-4fc9-9e59-c4362d220992",
        "cursor": {
          "ref": "b4184330-3169-4f4e-9983-b1e2eb1209d8",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6b7823dd-2861-45b0-8600-9ce2776da17a"
        },
        "item": {
          "id": "9df818a1-f695-4fc9-9e59-c4362d220992",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d9297ef4-e5b0-4195-8edb-9dd88e83282e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61905257-6367-4fed-b89b-e88c9c299dba",
        "cursor": {
          "ref": "d7d598a0-b3e6-4b88-90d5-73988ccbf84f",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "37a91098-8dc4-49ea-89bd-562543c61f91"
        },
        "item": {
          "id": "61905257-6367-4fed-b89b-e88c9c299dba",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "208e47b6-f3a5-49ce-b92a-f20eca6bc2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d85b47-aff0-42f8-847e-f474c444a6fb",
        "cursor": {
          "ref": "ed460dac-2155-47d4-bfb3-ca2bf22b5cc1",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1a13785a-0eb9-4d2d-8ce5-5236d33ceb0c"
        },
        "item": {
          "id": "21d85b47-aff0-42f8-847e-f474c444a6fb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e436288e-5119-4494-9d1d-c601b8e724c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7f802e-9d59-4e9e-9e62-168009a9e1b8",
        "cursor": {
          "ref": "8798df06-5690-49e8-8900-26b26fa678fa",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8200e061-f523-4620-8bed-2d0301f48120"
        },
        "item": {
          "id": "7d7f802e-9d59-4e9e-9e62-168009a9e1b8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5a1229e5-765a-4f48-951d-f3efd970b633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb70b296-cbdf-43fb-a38e-3cb2af519876",
        "cursor": {
          "ref": "f26db07f-50a3-479a-bd69-09ab2ff63b6f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9d8a7eb0-9bc8-4989-b192-0a2d4de3bbe8"
        },
        "item": {
          "id": "bb70b296-cbdf-43fb-a38e-3cb2af519876",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "266a4979-a9d5-439c-9af8-fcc833527398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17132813-073c-4419-ade7-adb859393079",
        "cursor": {
          "ref": "986954c0-ce71-4ad3-b7eb-49b368f766a9",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "56cc8c3f-e9d2-4996-bdb4-6c0b976abb41"
        },
        "item": {
          "id": "17132813-073c-4419-ade7-adb859393079",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c083b00b-113c-44dd-a9a1-54b1378db1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2984e15-e1d9-4647-938f-853dd2190e12",
        "cursor": {
          "ref": "23029491-adfc-432b-be87-bd2ac28ca824",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d5cbd377-3f98-4f92-8dfb-729bfac05f46"
        },
        "item": {
          "id": "b2984e15-e1d9-4647-938f-853dd2190e12",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "de33348a-f8cf-47d3-b64d-17a380d259ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37d5a00-26e3-4682-b12a-11a4cdda8150",
        "cursor": {
          "ref": "92dc85ab-34ab-40c9-92dd-5cae2f34aa54",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2eea1c27-d42e-44ce-b9e2-53e8229df74f"
        },
        "item": {
          "id": "f37d5a00-26e3-4682-b12a-11a4cdda8150",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "794c80db-29e0-4a22-8079-c2c4d8aae1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb156f7-f0ce-4e77-b8ca-d855f5bc4450",
        "cursor": {
          "ref": "8a1df46a-0596-49d5-9b5d-6273ff3bd766",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7414e235-699d-4565-b1ad-7056835b4c6a"
        },
        "item": {
          "id": "fbb156f7-f0ce-4e77-b8ca-d855f5bc4450",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0aa17e09-20ea-4883-a361-dc3aa4c0b81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ae1ffb-73bb-4c7f-a748-a159726a95cd",
        "cursor": {
          "ref": "9e4811b4-7948-4989-8e97-05e97e96b903",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d94f48b2-c451-4bca-ae95-b182532d5504"
        },
        "item": {
          "id": "81ae1ffb-73bb-4c7f-a748-a159726a95cd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d19c7fe8-7427-47cf-bc7b-6197a5853c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e01173-744e-4e6b-9dad-c7b8b08c06f5",
        "cursor": {
          "ref": "1c6e3242-db02-4f45-a9bb-40f31c7624aa",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c50329e5-30ec-482d-b34a-7ea4502d8851"
        },
        "item": {
          "id": "c9e01173-744e-4e6b-9dad-c7b8b08c06f5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4f532424-882a-4929-b392-e5a09a1546ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c480139b-57c4-41f9-9b72-78b9d90959bf",
        "cursor": {
          "ref": "8005bdbf-c2c8-408e-9bbd-eec0b39d6091",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "786b9e51-b690-43ac-89c6-37212e0fc757"
        },
        "item": {
          "id": "c480139b-57c4-41f9-9b72-78b9d90959bf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ca598305-9343-4d18-9f61-60adbeb794d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7152ef27-a211-4728-90e8-4df6619cc476",
        "cursor": {
          "ref": "3f26f4dd-b30b-4cc7-a27e-1cd79ddf2a69",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b80bcd44-8615-4a2f-be53-dc6a3d350225"
        },
        "item": {
          "id": "7152ef27-a211-4728-90e8-4df6619cc476",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c1adc143-56b6-41f6-84ff-f67d151ea0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8254e16-c94e-4b38-8318-b93da4d843d4",
        "cursor": {
          "ref": "c9210ae5-a620-4eb7-97a3-f5bfe09be375",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "63a43b86-6917-4061-8718-2461973d3b11"
        },
        "item": {
          "id": "f8254e16-c94e-4b38-8318-b93da4d843d4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2e0def4a-b0e5-4b0d-99e6-833b841d7c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9434c5-fb7b-4cdc-a916-800753e9d881",
        "cursor": {
          "ref": "e52b31d4-e068-443f-832f-fb1fb66f652d",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "38fd55c0-cf57-456a-8871-ab6683461696"
        },
        "item": {
          "id": "3a9434c5-fb7b-4cdc-a916-800753e9d881",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a4b2d776-cd71-4282-b967-fb3ffa87b2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c30ffd-6aee-4d3a-8fa7-2ac0203b7b28",
        "cursor": {
          "ref": "4d7e9268-1545-4447-bd1d-588a40726a10",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3eee993e-89b2-453a-9a6d-524eb633f99b"
        },
        "item": {
          "id": "81c30ffd-6aee-4d3a-8fa7-2ac0203b7b28",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "89fefbe2-ebfb-448c-ac76-5b10f3bb89f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd68f18-80fc-43bf-9518-50c61d5e06ca",
        "cursor": {
          "ref": "90b9c4ce-b0aa-42e0-ba31-f347937131da",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8e526ab6-a23d-4e00-8152-fca9ce5d4fc8"
        },
        "item": {
          "id": "7dd68f18-80fc-43bf-9518-50c61d5e06ca",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "809c05c0-1fca-476b-b445-656a6faf8622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b0ce07-3236-4e72-8126-3145c007034e",
        "cursor": {
          "ref": "590fcd2e-31a3-4442-8305-7d4bea9a0fca",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "37a46c7e-997d-4bd4-878a-cb6e0359d90b"
        },
        "item": {
          "id": "d5b0ce07-3236-4e72-8126-3145c007034e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "360f503f-becc-445f-b6f0-8c3de5692cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c1a103-0377-4776-bf09-13cbd4d25c7b",
        "cursor": {
          "ref": "ec5580a2-aa78-4554-9e10-9ef01e71ab3b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0b0575fd-1f9c-4216-a2af-0bc3494e4da5"
        },
        "item": {
          "id": "60c1a103-0377-4776-bf09-13cbd4d25c7b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c9ad5d11-69be-448b-9c12-de459f403f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbdf8e0-057f-42d4-bdd5-af27f9979cda",
        "cursor": {
          "ref": "e4722141-577f-4877-89f4-423180fbbd4c",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fb94cc04-df51-46d9-bd59-56dc60bbb37d"
        },
        "item": {
          "id": "6bbdf8e0-057f-42d4-bdd5-af27f9979cda",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "abb02413-2dac-481f-aa64-209ee7986813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f21d431-fc23-4d1d-b703-cfd8e232df7f",
        "cursor": {
          "ref": "0a2b59bb-96c3-4a10-acad-d5b05bc3fe70",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4c08e2d4-700e-4675-8d90-cb1a1ade1d25"
        },
        "item": {
          "id": "0f21d431-fc23-4d1d-b703-cfd8e232df7f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "da413624-d875-4224-a701-2be5b65b8a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a118ce7-4054-4558-b5c4-d80fa8bbcc45",
        "cursor": {
          "ref": "89787c7b-69cb-4b3d-8f02-cc1bd272014c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3dcaca28-4251-4025-b5ca-65feae43b79d"
        },
        "item": {
          "id": "3a118ce7-4054-4558-b5c4-d80fa8bbcc45",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f3c878ed-014c-46dd-a11d-b4efea36bf71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e626161f-3ce4-4f57-90f2-cad60d4d967a",
        "cursor": {
          "ref": "da8ea5e0-bc5a-4abf-a861-6dd95666bdeb",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "767d5c0d-ea9e-4317-81de-7987f71a3e63"
        },
        "item": {
          "id": "e626161f-3ce4-4f57-90f2-cad60d4d967a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "02d19e6b-5887-4e8c-b042-bb0f16e09439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f7dc6a-0d01-4437-9d54-bb63be9bdce1",
        "cursor": {
          "ref": "0fec5f05-ed90-4f08-becd-d374198a905d",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "141a8e67-69fe-45ae-8f28-cac65d69e406"
        },
        "item": {
          "id": "76f7dc6a-0d01-4437-9d54-bb63be9bdce1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cafbf0d4-3b7f-45e2-94c4-c111d4f5c5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417deac4-a728-4f3c-a36f-c2d3fed0eec0",
        "cursor": {
          "ref": "64e1468f-25a9-4806-b94a-bd51233ee0bc",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "de5baa61-1dfb-4375-b2e7-29424ca8e7e0"
        },
        "item": {
          "id": "417deac4-a728-4f3c-a36f-c2d3fed0eec0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "70c1e708-dee0-4301-bdad-757659ddeefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4e00a6-f02e-4ab0-9b29-a3431347a189",
        "cursor": {
          "ref": "58f8cb90-fd90-4205-a758-7860ceed6a98",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "70bd0207-a478-4c02-9994-e4a710b1b85a"
        },
        "item": {
          "id": "2f4e00a6-f02e-4ab0-9b29-a3431347a189",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6b1d261d-37d2-4c6c-a528-d2d911539cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7524468a-db99-40df-8566-bb125aee56ee",
        "cursor": {
          "ref": "17642d4b-350e-417b-aa5d-04d1ee2c9bf6",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "45137826-f6cb-4c71-9d61-023ad9add4e7"
        },
        "item": {
          "id": "7524468a-db99-40df-8566-bb125aee56ee",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "698b1e02-68d9-41fe-baeb-682f5a422bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa054a9-7f48-464f-b7b1-0b2ba0490d28",
        "cursor": {
          "ref": "b3c37b55-95a3-4c69-a0fb-8f9f90367bbc",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f84f3791-653b-4e2d-b5a3-8efee850d71d"
        },
        "item": {
          "id": "5aa054a9-7f48-464f-b7b1-0b2ba0490d28",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d7f67835-8bd1-4c4e-bf92-b6edafaaf83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a39ab98-1f70-4c57-9dce-e2a32bb7214e",
        "cursor": {
          "ref": "e065e01b-6076-4a45-9d57-b0ceb3a9a9d4",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "109b420c-a180-444c-9e3c-31186610486b"
        },
        "item": {
          "id": "1a39ab98-1f70-4c57-9dce-e2a32bb7214e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "51de549c-881f-4c8d-a532-6dee251b4fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b232f151-a9dc-421e-acfc-1aff5c0f98f5",
        "cursor": {
          "ref": "324a5e33-297b-4bc4-9313-4977fa0366fe",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "08e8c521-0c60-4beb-b705-e9d4295f600c"
        },
        "item": {
          "id": "b232f151-a9dc-421e-acfc-1aff5c0f98f5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3e367c88-ece5-4b39-9f6c-3e693eb3c16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f4406a-254f-43da-8ca5-9ea81c6e3e43",
        "cursor": {
          "ref": "857d166f-847f-4c3b-8864-95eca5b078d9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0da03ce2-fb9f-42c2-9079-1f891a4ab798"
        },
        "item": {
          "id": "06f4406a-254f-43da-8ca5-9ea81c6e3e43",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "38ff4b2a-b947-4727-ada1-45e5f490ff6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af26d48-51fa-4380-a7d8-7513482627a2",
        "cursor": {
          "ref": "d16e0bb4-d866-4a02-a946-7fdf6130de34",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7e9020d5-9496-458f-8909-551442da2e42"
        },
        "item": {
          "id": "3af26d48-51fa-4380-a7d8-7513482627a2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a819aac8-844c-4c66-9d89-4c942f11e653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0be18d9-0f7a-46ec-b6f1-b6d9d51067c1",
        "cursor": {
          "ref": "eea1e22d-bdc4-4f86-bda5-6059964f4f97",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f4170a65-ab26-453c-b70b-b494a840ed09"
        },
        "item": {
          "id": "d0be18d9-0f7a-46ec-b6f1-b6d9d51067c1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "405c0367-9ed7-49b2-bcb6-74420702f97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d49e37-cab6-426f-b1b9-b0e0eda2f8d4",
        "cursor": {
          "ref": "bbf54dba-b935-4325-85b0-e3014c8f5fe4",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "562d3cc8-6c63-44a0-86af-4f36c24ef042"
        },
        "item": {
          "id": "92d49e37-cab6-426f-b1b9-b0e0eda2f8d4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "71d6438f-ccaf-4d81-8aff-14e32e9be946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24833496-1c4f-46a8-8767-c3986bd7cd7b",
        "cursor": {
          "ref": "a92c117d-94e5-449d-a15b-0ef223eb0d9b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "326b54cc-88a9-4ccb-a555-24f41c7fde71"
        },
        "item": {
          "id": "24833496-1c4f-46a8-8767-c3986bd7cd7b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c007ccfe-7d4b-487e-a0d5-a551fb60ad44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f111b81d-2ba7-4743-8361-165012cdffff",
        "cursor": {
          "ref": "44951433-d248-472a-a049-f15f25f8f75b",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "32bc9935-fdf6-476a-be94-81f7dfc6603e"
        },
        "item": {
          "id": "f111b81d-2ba7-4743-8361-165012cdffff",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "246bb873-01e4-4e23-8e38-2ea1fccbe019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaaff78a-7bd3-4178-87b4-92014ce02938",
        "cursor": {
          "ref": "714541d1-57f9-48be-ada0-328b2198595d",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4b0859db-f24d-449a-a3ec-f764739e8d48"
        },
        "item": {
          "id": "aaaff78a-7bd3-4178-87b4-92014ce02938",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "31467405-4dc7-4d37-88db-4c7b58dd1db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b235cb6f-bd65-481f-a974-6d62d8eb2f1e",
        "cursor": {
          "ref": "174b8775-59e1-476a-bf6d-de7528ccfdce",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "20ba3bb1-f650-44c5-b2d6-29000d5ffeed"
        },
        "item": {
          "id": "b235cb6f-bd65-481f-a974-6d62d8eb2f1e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1cae3509-b8a7-4eaa-ad91-12a926dc31fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55617a43-31bc-46c1-880e-9d4ceee57bd2",
        "cursor": {
          "ref": "f8492e65-6000-414d-be55-4e746340e83e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "eafc3883-28f6-4139-a9bb-8a5875ffec86"
        },
        "item": {
          "id": "55617a43-31bc-46c1-880e-9d4ceee57bd2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "85cf6355-1f67-44de-932e-dfa641624902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d032b2-04ba-4c82-8ec9-95f3a552308e",
        "cursor": {
          "ref": "f68543de-0ddd-4efd-8bb2-ab5dc884e071",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b9c195d4-bcfc-4124-b6b1-efc149c0ab24"
        },
        "item": {
          "id": "75d032b2-04ba-4c82-8ec9-95f3a552308e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "75e096c9-3208-4ea5-83ac-f64fed291103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664f4012-5e23-4269-8e6e-84a403e76cc1",
        "cursor": {
          "ref": "9c378b58-8198-4955-b5b6-70b6837f5ea7",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c58759df-ed62-425a-a2ab-3b963d615665"
        },
        "item": {
          "id": "664f4012-5e23-4269-8e6e-84a403e76cc1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "78a8f495-a645-43c3-8097-0285110293dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d31c7c1-25fb-4711-b007-f3a92bb8a1d2",
        "cursor": {
          "ref": "a5e16dbe-ad4f-4e58-b686-b68e2820e0e5",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5c6f5fd9-1623-45ec-96f4-1ce545fa0c88"
        },
        "item": {
          "id": "7d31c7c1-25fb-4711-b007-f3a92bb8a1d2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fb170f53-c31d-4395-8031-bfe00f28fbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e379fd9-bfb6-4587-9260-e8d8ed8a81f0",
        "cursor": {
          "ref": "a38e5c30-dbea-463f-bdf3-ea7bdd2e1100",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1a65be35-3c19-45d0-8c96-f18d345e6000"
        },
        "item": {
          "id": "6e379fd9-bfb6-4587-9260-e8d8ed8a81f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b3f3da38-f944-4221-a0bf-c0519ac0b390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d8fbf3-c8de-4065-b75a-4ffbbd14b24a",
        "cursor": {
          "ref": "342c80a2-86c2-4c25-942b-8fdd67e890b6",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "515e0c4b-815e-4e15-aa33-3f9570dcacad"
        },
        "item": {
          "id": "31d8fbf3-c8de-4065-b75a-4ffbbd14b24a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0cb4bd7d-dbbf-4229-8ed3-14c85dc6801f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0215d1-bd7c-4a6b-8a6c-e4091960aad5",
        "cursor": {
          "ref": "eb52a77d-0c51-4247-9a5a-1f8e0d3b0c1b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "91cb210a-36b7-4a67-b13b-12dd1e0a0540"
        },
        "item": {
          "id": "0f0215d1-bd7c-4a6b-8a6c-e4091960aad5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e1399013-e06a-4b40-87bf-941975101852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f121e9-58a3-455d-9b18-8409ba918e80",
        "cursor": {
          "ref": "660d8dc6-5271-4695-8f6d-a46c251ed926",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "84f802b2-a61a-4ae7-849a-f391c850cca4"
        },
        "item": {
          "id": "08f121e9-58a3-455d-9b18-8409ba918e80",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5f24fe94-820b-42af-b450-19272f5ccb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ba1bbe-4415-4c6d-8a25-40135bdfaf8c",
        "cursor": {
          "ref": "c8da90e0-cf4d-4e50-9742-bc6c19ceed9b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ff54c045-20b7-4240-bb09-a4485f48e4fb"
        },
        "item": {
          "id": "20ba1bbe-4415-4c6d-8a25-40135bdfaf8c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b87491b8-d95b-4bd4-9316-01cac409d22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a76da64-3ddd-4319-bd25-a7762fadad35",
        "cursor": {
          "ref": "0efb49b0-11ad-484e-a82a-33ce02958682",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e13cf4d3-6d10-4349-a92e-096472ef9c95"
        },
        "item": {
          "id": "2a76da64-3ddd-4319-bd25-a7762fadad35",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "428308b8-eef7-4a42-addc-d33d141a263b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4a37a8-1592-45b9-85e1-81ad48f20fdb",
        "cursor": {
          "ref": "ddce7fbe-87af-495f-b123-ab524d6328a6",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bbc8c641-f5d0-4ab2-a790-29860dcb5b4c"
        },
        "item": {
          "id": "fb4a37a8-1592-45b9-85e1-81ad48f20fdb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "637076ac-2fb3-40a9-8be5-a9e12487e81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eedd5b0-75eb-4525-abae-ac9c5db16d3a",
        "cursor": {
          "ref": "fbf8e0a4-b9dd-4b50-a461-21d2e99c9fba",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e70ed002-35a3-48a0-959a-b04e0b8b9c8f"
        },
        "item": {
          "id": "7eedd5b0-75eb-4525-abae-ac9c5db16d3a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "64524f52-7f8e-4893-8c1f-d43f9b9189f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b7772c-c034-4f96-a475-2832dcf155d1",
        "cursor": {
          "ref": "7275d2e2-b99d-46d1-92ad-94cd2214b063",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5c73eb34-7988-484f-b205-2e841d200240"
        },
        "item": {
          "id": "13b7772c-c034-4f96-a475-2832dcf155d1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "15caa6a6-3a89-4cb7-bf89-491b09fc2b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce38fff7-caec-48c8-ac17-60ee1e2485a1",
        "cursor": {
          "ref": "39776731-b500-4a97-b580-17d9a4c11fb2",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "542f6270-22ce-4a45-a6b2-0fed6c2e3929"
        },
        "item": {
          "id": "ce38fff7-caec-48c8-ac17-60ee1e2485a1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "33d424de-6cfb-4562-b8c2-17d855cae930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e2e756-38ef-40ee-b9c1-b8a491ac53f3",
        "cursor": {
          "ref": "6781ff27-868c-4352-8ab9-4af90e1b5cd8",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bb372512-076e-4942-ac02-c073c3f1a527"
        },
        "item": {
          "id": "e0e2e756-38ef-40ee-b9c1-b8a491ac53f3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9cf6ac97-415f-48fe-984c-b27461a69930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e640d04-edf2-4826-bd39-cfcb08caaa13",
        "cursor": {
          "ref": "df1ec3fc-1a78-4350-8e18-e21e51c7f757",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "712857d2-dbf5-4a7c-b5f0-a30124110960"
        },
        "item": {
          "id": "0e640d04-edf2-4826-bd39-cfcb08caaa13",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6526b8c2-e776-4235-9d14-364e0982f45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5dea8e-b9e3-461b-9124-529a3bbadfdd",
        "cursor": {
          "ref": "0b506d17-b8f9-4b7e-8cbd-74845f349bb4",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d034cf8e-5157-4c7e-9e68-336128a2d3a3"
        },
        "item": {
          "id": "4a5dea8e-b9e3-461b-9124-529a3bbadfdd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5a411e37-2124-4d99-a040-665af61ce8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3839c1f-a4f9-4f74-8147-c0aa22a4e310",
        "cursor": {
          "ref": "a6c24c97-b142-4b55-acc5-530139954f42",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "16eaa045-ec03-4ef4-9fab-22817ceee93d"
        },
        "item": {
          "id": "d3839c1f-a4f9-4f74-8147-c0aa22a4e310",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "22ee0118-8a62-4ee3-a807-e5c2149b1f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2dcab2-244e-4e86-b19e-6aa3d340e684",
        "cursor": {
          "ref": "7cd25435-3ce6-49b4-b919-c66ee0532680",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "823d7647-7169-45eb-83c2-0a493d844537"
        },
        "item": {
          "id": "2d2dcab2-244e-4e86-b19e-6aa3d340e684",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d2fbad5c-0e41-4493-aedb-5afdc8a8cc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41873e49-bc0e-468b-aebf-04c036b8bc4c",
        "cursor": {
          "ref": "49dd2a09-f966-4e47-af83-ede85f88035a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "33933403-2d81-4d20-ac0d-ff8c9141aa89"
        },
        "item": {
          "id": "41873e49-bc0e-468b-aebf-04c036b8bc4c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "77ccd9c6-640c-4edd-a7ef-a42af5b5bf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c756d2b7-4e7e-4ae0-ac9e-a71a1393a2fb",
        "cursor": {
          "ref": "1e495688-df22-4b62-bd93-a9e49de8b887",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d9180383-6334-47ae-aef2-c1e24b1ff168"
        },
        "item": {
          "id": "c756d2b7-4e7e-4ae0-ac9e-a71a1393a2fb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1057574b-eeb0-439b-8e63-cc6b574d2b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80c1b95-1be5-442f-aecc-835c7d54fd56",
        "cursor": {
          "ref": "f556b7f0-9f1d-4fb9-91fd-c41fc3d447a0",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3f2879c6-8645-4deb-a808-a86ac4f5a730"
        },
        "item": {
          "id": "f80c1b95-1be5-442f-aecc-835c7d54fd56",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f719b709-0f17-4e88-9edc-345602b7264f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9319ebe7-2ac6-4188-b802-241713e7c192",
        "cursor": {
          "ref": "463affcb-8d1f-4715-a160-fcae0dce8db3",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c5259435-ed5f-4fd6-a5a6-5bb98d28f382"
        },
        "item": {
          "id": "9319ebe7-2ac6-4188-b802-241713e7c192",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4a1b2fe1-aacd-4ef7-ac9a-c54e7da5dfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d1d6fb-8548-4a9c-bcfe-1e2d7f332b51",
        "cursor": {
          "ref": "bfacdd39-5f84-42a7-8620-8ce4fb3da72c",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d207a7fc-92a9-4bd2-a482-71782ce640fb"
        },
        "item": {
          "id": "00d1d6fb-8548-4a9c-bcfe-1e2d7f332b51",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ab955254-e988-49c0-a437-7ed31c70eea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fa91bb-a259-44c7-8242-cb28372da54d",
        "cursor": {
          "ref": "9ea1647a-d1b6-4004-9c81-c01e3517deb1",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "990541ab-932c-4957-a846-71c59e4f787b"
        },
        "item": {
          "id": "32fa91bb-a259-44c7-8242-cb28372da54d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e0f359de-dcc9-4734-843e-42fca106583b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8593482-34a7-4fff-a408-e2e65e8ac461",
        "cursor": {
          "ref": "77c2c360-e13d-47f4-8547-893c2afd9478",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "08f936cb-c365-474c-85cd-d98d57acb302"
        },
        "item": {
          "id": "c8593482-34a7-4fff-a408-e2e65e8ac461",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "805565d9-46a3-44a3-96c5-3a0826b0daab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae01da9-52bc-43b7-b587-e6b116715a6b",
        "cursor": {
          "ref": "7dd1718f-82e9-42c6-9f96-14dc297fb0d7",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "50b005fd-d8f5-4dd7-98a9-c1ddd0d3fd62"
        },
        "item": {
          "id": "7ae01da9-52bc-43b7-b587-e6b116715a6b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f9e6b0ed-a271-41ea-9a67-a07c9353053f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c760350f-7fc9-4700-a7d4-78333418c7d0",
        "cursor": {
          "ref": "f94885c1-ddc2-481f-82a6-5354fbb87fd4",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "02d1f872-2181-4302-8dd2-944ed6d01488"
        },
        "item": {
          "id": "c760350f-7fc9-4700-a7d4-78333418c7d0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "79247edc-0163-427d-bb3c-9431a8e31a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721627c7-e049-45d1-9744-ed436ddcd13f",
        "cursor": {
          "ref": "8d42f67e-f5ac-4105-9c4f-6883371401e5",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "057e7f09-3d9e-4619-a357-ab26282433e3"
        },
        "item": {
          "id": "721627c7-e049-45d1-9744-ed436ddcd13f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4395ebd1-44f1-47fb-8b46-7fa8cc88b1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3dd846-a3cb-4863-be40-46a0b63b5bbf",
        "cursor": {
          "ref": "999d3d08-7758-4144-8ac7-ea1539fd9042",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6ec5a75f-6a13-463b-9e5c-37fba2b33825"
        },
        "item": {
          "id": "1c3dd846-a3cb-4863-be40-46a0b63b5bbf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1dbaf0d2-7b86-4ac1-8260-9810611afd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a61675c-9337-4325-a317-128bc400e0e7",
        "cursor": {
          "ref": "a1fd3124-b50d-4598-a161-f520aa676d6a",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "74490885-8070-42cd-b312-fde2638afece"
        },
        "item": {
          "id": "8a61675c-9337-4325-a317-128bc400e0e7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2f8696ff-aca1-4819-a5e2-011755426b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91fa8782-c10a-4c12-a542-7b8439d3f957",
        "cursor": {
          "ref": "3d953920-4351-435b-a4a0-849a9293a25b",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "81c902a5-c4b8-41de-929f-9aa6fa1f2a74"
        },
        "item": {
          "id": "91fa8782-c10a-4c12-a542-7b8439d3f957",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "77d9b015-bdd6-4bd9-97df-e278172587ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876311d8-aafc-4e1a-ad0c-2669edb5589e",
        "cursor": {
          "ref": "a66abb09-b897-48d2-8017-c0811d603b19",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0e719e15-dca6-48e9-9ba7-66a35d5d9825"
        },
        "item": {
          "id": "876311d8-aafc-4e1a-ad0c-2669edb5589e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d48e009a-a793-4606-a6d9-cd809852a346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cde133e-0ed3-48da-8e9b-bccfc0e80a52",
        "cursor": {
          "ref": "199462f5-cea8-40e7-ba58-45f01d8435fc",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ff150327-fbc9-43ed-aea5-2b580e0044ae"
        },
        "item": {
          "id": "4cde133e-0ed3-48da-8e9b-bccfc0e80a52",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "047d047c-30a5-4080-a7b5-67f54eaaa07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9280c72-f174-4b44-8d42-11dbbe185bff",
        "cursor": {
          "ref": "9640e0b8-248b-4250-88ed-ead92da59d5a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "88e2dd74-c3f9-43e0-aba7-5c73905203a3"
        },
        "item": {
          "id": "a9280c72-f174-4b44-8d42-11dbbe185bff",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "aa826db9-8178-40e3-8207-e62fa401219d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c453259e-9ed7-4c14-81ea-105fd793f575",
        "cursor": {
          "ref": "73e04457-41ed-4501-b819-36576b45ff03",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0860dd73-250c-4201-9305-c0f2bdd6de44"
        },
        "item": {
          "id": "c453259e-9ed7-4c14-81ea-105fd793f575",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5a1cf5b0-ef66-4f3e-afff-3469d276d223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac024145-c016-47ba-8574-664d84612ca8",
        "cursor": {
          "ref": "483cec00-aee3-4ad0-bc4d-9390176242c9",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8c84a7af-9dd2-460c-81ca-22b5e56bfb48"
        },
        "item": {
          "id": "ac024145-c016-47ba-8574-664d84612ca8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2ac68b23-2594-4688-8f95-6592d38945c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d71dd55-70e3-4005-8b55-c9861b732071",
        "cursor": {
          "ref": "edefc905-4f98-498e-b5c0-6c0e93bc086f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "007f8bfd-671e-4e28-860d-6cd4f2bb322e"
        },
        "item": {
          "id": "5d71dd55-70e3-4005-8b55-c9861b732071",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d99beb70-3240-4f12-9e01-c5a700455c4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2936fefe-9756-49c2-bae9-9b58a78d59e4",
        "cursor": {
          "ref": "046e8c47-ba1e-46fc-9d47-7dc6bfe4c983",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "43433187-496b-44e9-9bb8-3b2e5bf28eab"
        },
        "item": {
          "id": "2936fefe-9756-49c2-bae9-9b58a78d59e4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5c3ae6ef-d073-4065-a115-f67594aee2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "a2358617-c91a-4e47-90a4-c8fe3c8dd6bc",
        "cursor": {
          "ref": "42db3969-3bdc-4cfc-95bc-6bf0f67548ca",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ed192940-8e2c-4f3d-b814-3baebbcb355f"
        },
        "item": {
          "id": "a2358617-c91a-4e47-90a4-c8fe3c8dd6bc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dbb1e644-17ca-49cd-bbff-949816b4085d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "492f1cdc-7992-4f78-ae86-d482a4143e16",
        "cursor": {
          "ref": "75847206-3bf6-4be1-9abb-059b478b6541",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a8c25457-1477-4af0-a05f-274bf97aa32b"
        },
        "item": {
          "id": "492f1cdc-7992-4f78-ae86-d482a4143e16",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bc997f7e-e468-4223-a114-840e6de404b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7c8106f4-9e72-48a7-ad0a-4f483a76d117",
        "cursor": {
          "ref": "422e10c7-19dd-47a7-86b0-53a9cea06d23",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d93d5a7d-c18f-4680-9677-bdf42f542f57"
        },
        "item": {
          "id": "7c8106f4-9e72-48a7-ad0a-4f483a76d117",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ba202e24-08b1-4908-a572-ae9951dd8abd",
          "status": "Created",
          "code": 201,
          "responseTime": 5208,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a3f143-292f-490e-9dbc-e8e33e69ea88",
        "cursor": {
          "ref": "0fb23e5d-e800-4814-82b0-ae4c1a0bbefa",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ebe4757c-27ca-4079-a2fa-e9460a809a72"
        },
        "item": {
          "id": "99a3f143-292f-490e-9dbc-e8e33e69ea88",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c4e30794-79d8-4b79-a0e4-1a01396ca3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c02a2689-d8f6-4669-b14f-25b679abb160",
        "cursor": {
          "ref": "8fdf32ee-09bf-4c92-9d50-9717aae21d31",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e8171a30-ed0b-43ac-a24f-0934d5b429e7"
        },
        "item": {
          "id": "c02a2689-d8f6-4669-b14f-25b679abb160",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6d95d5d4-5330-4e77-9d2e-1f309f40b31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "4f868594-7108-453b-a86b-17f86648e315",
        "cursor": {
          "ref": "b0349a2e-795b-428e-aaa1-0b14f493f915",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9bc91d04-80c2-407b-aba3-ea27d6466476"
        },
        "item": {
          "id": "4f868594-7108-453b-a86b-17f86648e315",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d5c8d7bc-2259-45a4-8960-1c0818d7b0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a134fa27-e97a-43fc-af61-8ef035f9abff",
        "cursor": {
          "ref": "ca3e1a66-0460-4f0b-9d1c-800bf5746d06",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dae895c0-c2c5-4fde-91bd-cf842e6a6ae4"
        },
        "item": {
          "id": "a134fa27-e97a-43fc-af61-8ef035f9abff",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c70a751b-6424-4b3f-b5aa-a190ea40189e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aef25d6-7803-4b00-8235-de09458db750",
        "cursor": {
          "ref": "6aed1265-b48a-457a-afdd-0cca7b641789",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "daeb08b5-7485-441d-9c01-2a455c1656b3"
        },
        "item": {
          "id": "2aef25d6-7803-4b00-8235-de09458db750",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4177ace2-a92f-41d4-ae2c-bdcb35510f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbac750-dd9f-47c0-acda-b1e59c8f0c06",
        "cursor": {
          "ref": "8a195eb9-65f7-48d7-a46f-a3130ca30280",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "570fd63f-f914-49a7-b30e-9a229c9c0b5e"
        },
        "item": {
          "id": "cbbac750-dd9f-47c0-acda-b1e59c8f0c06",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "788b5c72-6972-45db-9450-5472fbdf496b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ab1dbc-e1bb-434a-a818-f41d32feda48",
        "cursor": {
          "ref": "f9f4a914-b46c-4b7a-a490-c48083370981",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "716a0a30-8326-4e3c-a62b-6f9c5454fc09"
        },
        "item": {
          "id": "98ab1dbc-e1bb-434a-a818-f41d32feda48",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "efc9b0b8-871e-48f3-b41d-b4f8fb709241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b839dc-c5b0-495f-8346-066d296cecf6",
        "cursor": {
          "ref": "a7e8b22a-0d8b-473a-bce7-f351975531c2",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2437eb49-a39f-4c72-8d26-7461695d1c04"
        },
        "item": {
          "id": "51b839dc-c5b0-495f-8346-066d296cecf6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8daa8713-b462-474a-abea-a693e411b10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee2bdb5-51d6-46ab-837e-33a3667510e0",
        "cursor": {
          "ref": "5ee9ed5d-8643-4ab2-9283-b720e1d35cb7",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0d4009ad-7477-437e-85cd-c482a028c4ec"
        },
        "item": {
          "id": "2ee2bdb5-51d6-46ab-837e-33a3667510e0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "57491a0a-9a87-42ce-9b97-fb516a01a20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae06dde-5796-458f-afef-55696d67f556",
        "cursor": {
          "ref": "02d94a5e-d318-49a7-8f52-643659da763c",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d7339f95-3f46-40d6-9480-3c5c917a7622"
        },
        "item": {
          "id": "9ae06dde-5796-458f-afef-55696d67f556",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "012132d1-be13-4e6a-89a1-69a524eda641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fcd563-a7b1-4f1b-b255-531dc5792595",
        "cursor": {
          "ref": "7cf85e46-c13f-44b8-9a17-a5e85a2cb870",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "021b6ad6-e26e-4370-8254-6466148d657c"
        },
        "item": {
          "id": "20fcd563-a7b1-4f1b-b255-531dc5792595",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e0bf3c31-692d-4743-b6a7-8aef31ef4120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d679e70a-4c1e-46fe-97cc-43c7527c64cc",
        "cursor": {
          "ref": "c430680e-9489-4440-a0b5-6516132a9474",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0f538c75-9920-46de-b931-01d8c41e6d21"
        },
        "item": {
          "id": "d679e70a-4c1e-46fe-97cc-43c7527c64cc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "24c1268f-1fe7-4189-9f14-a1ed5558eedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102e9e70-1610-46f3-8fec-9b134bafedd1",
        "cursor": {
          "ref": "4a00d17a-d4d2-4a0d-9d5e-68745e56fe57",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "689a9877-74ff-4aea-9291-f64977c25638"
        },
        "item": {
          "id": "102e9e70-1610-46f3-8fec-9b134bafedd1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2eebde12-30f1-4cde-be23-81ae725bd625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d8aca1-8c5a-4701-949c-f207e087e7a3",
        "cursor": {
          "ref": "f413760b-a897-42e7-b074-c37cde3fb6e9",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f15a4e51-7935-4c20-9e83-db9e2f55e04d"
        },
        "item": {
          "id": "60d8aca1-8c5a-4701-949c-f207e087e7a3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bc565616-dc6e-464d-a0f2-fef6eacdf41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d650b8-14a5-4b79-81f8-b6c53405e280",
        "cursor": {
          "ref": "d3721b4d-09de-4ac1-af92-06679a7324dc",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7f393909-9f9e-4bc0-b094-42ba93985542"
        },
        "item": {
          "id": "27d650b8-14a5-4b79-81f8-b6c53405e280",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3392b0ee-8ed0-42c0-9a7d-699f2dd36d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3110df1f-3f87-4ab3-bce9-71ac8ce91161",
        "cursor": {
          "ref": "7efbb77e-9187-4701-9790-14f41b2f3dd3",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "86f464ef-d60f-46a0-83d2-9befbb94af66"
        },
        "item": {
          "id": "3110df1f-3f87-4ab3-bce9-71ac8ce91161",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "05f337d8-05fa-4ec6-b68b-619618023484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e27452-a54e-49d9-8cc7-152e8cfcd610",
        "cursor": {
          "ref": "9dd06cfa-3b88-4b47-b368-040e81ef05c7",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "17caee5e-039f-4ef3-8e73-c1a9713dfb83"
        },
        "item": {
          "id": "e0e27452-a54e-49d9-8cc7-152e8cfcd610",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "43c78f02-231b-4ea8-a3a2-7758f106c1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3c1d90-f414-477c-91ed-37a9ebb14dfc",
        "cursor": {
          "ref": "a803d620-e17e-4d9d-a3e8-268746fecfcb",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5c20f4d3-06bb-4274-8cd6-54293ff061c2"
        },
        "item": {
          "id": "ee3c1d90-f414-477c-91ed-37a9ebb14dfc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f0747bda-be11-4b2e-9634-95cb72aef351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f801211-f2d7-49cf-b0c2-4075f7061993",
        "cursor": {
          "ref": "a10e20dc-62db-414e-8edd-b9db91fa0b5d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b7531ba8-99eb-4dfd-8068-325e342896bb"
        },
        "item": {
          "id": "8f801211-f2d7-49cf-b0c2-4075f7061993",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "033cc24a-b25e-45b1-954e-5f03d93e14de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b07c1b-4f80-430e-ae2e-bd4b6e3a49cd",
        "cursor": {
          "ref": "12c893e1-f282-4972-b8f1-b597873e4430",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d4eff901-7bcd-480f-819e-b616d57679d1"
        },
        "item": {
          "id": "98b07c1b-4f80-430e-ae2e-bd4b6e3a49cd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "056dee01-7cb8-4040-b521-24e86fcc87ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7833478-d75b-46cb-b906-ee9c683b8eef",
        "cursor": {
          "ref": "5bc9da1a-73ab-45af-ab86-3fb2b0083a43",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "40562ba0-1eec-43e7-aed3-461a9f6d81c3"
        },
        "item": {
          "id": "a7833478-d75b-46cb-b906-ee9c683b8eef",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "24b4c105-72c8-4610-acd3-ecf8957e9884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab1db39-e8a4-41b0-9e7c-28b7f57764e0",
        "cursor": {
          "ref": "e68594c7-d324-4595-86c1-6ddffc718af5",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4c7b0483-2344-40fd-9905-5f9417377bdb"
        },
        "item": {
          "id": "dab1db39-e8a4-41b0-9e7c-28b7f57764e0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0d42f279-c6ee-40dd-9b15-177a8f970d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e9e9a5-64e6-4622-8d37-ca5eb32e3fa2",
        "cursor": {
          "ref": "4d481e74-86b8-4f63-8241-85a4c81a1e5d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e0acff89-06aa-4530-b700-254a73bae0e2"
        },
        "item": {
          "id": "f2e9e9a5-64e6-4622-8d37-ca5eb32e3fa2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0e19be50-bc52-4e1a-9ddc-2d79424388f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734e46a0-cb49-434a-a9a5-f55d138baafc",
        "cursor": {
          "ref": "b77077d9-f249-4439-967d-fe29b8a4cac8",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fd0f6181-6446-4013-acb0-207e438e323b"
        },
        "item": {
          "id": "734e46a0-cb49-434a-a9a5-f55d138baafc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "aae0a4a6-15fb-43f4-8044-2ae7f916d81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1eda04-de5c-40aa-947f-c8646121d799",
        "cursor": {
          "ref": "06f3033e-e4b8-49a1-b9fa-718500e22741",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a1f4b168-85b7-47c6-8fbb-ed91ae0735d3"
        },
        "item": {
          "id": "ab1eda04-de5c-40aa-947f-c8646121d799",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a1b9d0ea-7121-4a08-b0e2-717cde3607fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667fb842-a39b-4ee0-9916-b1672694d4f5",
        "cursor": {
          "ref": "8ba6b9e6-4c3b-44e5-b93a-be37eadbdc64",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ca2a632f-c19b-42cb-820e-e38ac9007c4c"
        },
        "item": {
          "id": "667fb842-a39b-4ee0-9916-b1672694d4f5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3baa3df5-155b-4391-8e31-b30ef7752e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f9123c-5fc9-402b-bf86-405ebbb0be90",
        "cursor": {
          "ref": "86cd8421-77f2-4abd-a2ac-a7a8ae6dc680",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "12ca1cc7-77ba-45b8-9560-32218791b90d"
        },
        "item": {
          "id": "24f9123c-5fc9-402b-bf86-405ebbb0be90",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d1d21e11-6160-403e-a3c9-1c8ecc994b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2de3037-a738-401b-9810-db35bcdce731",
        "cursor": {
          "ref": "382f316b-c432-4a7b-9e4f-f999c15c23d2",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "76cc5d63-058a-42cf-b236-4bef478fda2f"
        },
        "item": {
          "id": "e2de3037-a738-401b-9810-db35bcdce731",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "180b0d4a-f1aa-45e1-910b-fe2e49e36cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf66ee3e-1d76-4a67-938b-54e14aaca6da",
        "cursor": {
          "ref": "03f5c694-c120-415a-8771-7e8d80672873",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f2266495-44b0-43dc-a7b2-75b555131f71"
        },
        "item": {
          "id": "bf66ee3e-1d76-4a67-938b-54e14aaca6da",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2224357a-b2aa-4a8a-984d-68b6a09611d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8139fd76-fc7e-4334-b42a-318a4cdb3fa0",
        "cursor": {
          "ref": "3dbcecb1-399b-493e-976f-8904b11b499d",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4451c73a-891c-48cc-b2a5-57d9a8287a8d"
        },
        "item": {
          "id": "8139fd76-fc7e-4334-b42a-318a4cdb3fa0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f4c95274-a8e5-4bd2-a30b-16b00920b38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b8d154-9960-44bd-94f1-2982ad4d67b5",
        "cursor": {
          "ref": "3f363597-476d-41ab-97a4-d2f0430a7778",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bb0ecca3-ceb5-4610-a625-0b6e33e51730"
        },
        "item": {
          "id": "61b8d154-9960-44bd-94f1-2982ad4d67b5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f9ea3254-dc71-4ebe-aa7b-bd8d66e11cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e39b07-a420-403c-ae93-ef340fff7e60",
        "cursor": {
          "ref": "88ced236-115b-423f-aeaa-4459aa9d1a80",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "de5bfea5-67a7-44e4-8032-e13264f075c7"
        },
        "item": {
          "id": "f4e39b07-a420-403c-ae93-ef340fff7e60",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "28d51d6c-b4b2-421f-930b-855a6a4a71db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c89493e-fee8-4729-8056-f5c55c299640",
        "cursor": {
          "ref": "9446096b-1f06-4acd-a7c5-99313a99460c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0c3755f3-a7e2-4ff6-9c0a-6c6220672b0e"
        },
        "item": {
          "id": "2c89493e-fee8-4729-8056-f5c55c299640",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "758f70e7-c9c3-44b7-a2e0-30b57c4384fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc59b3a1-42c2-458d-86e0-a3037dbe469a",
        "cursor": {
          "ref": "d76240ca-efba-4e19-a920-86d2771b19df",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5815d567-0293-4647-8ac8-4bb68fe5bf85"
        },
        "item": {
          "id": "cc59b3a1-42c2-458d-86e0-a3037dbe469a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7e6e4128-9a8e-49f8-ae8e-4691f01e05de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af914ee-1dd7-4df2-8a47-d6879f763563",
        "cursor": {
          "ref": "debe55b4-3e7d-4640-98de-aed1ea332705",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "80358240-5b4e-4acd-8a83-ede75009018a"
        },
        "item": {
          "id": "5af914ee-1dd7-4df2-8a47-d6879f763563",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e7f831c0-a1b5-47f5-8997-7210cebd096c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1693ef-e502-467e-bf83-3c771534fb1d",
        "cursor": {
          "ref": "e19b989b-6534-4594-9366-82dcb2bd212e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d6e69e56-2f91-4f13-bd98-65b8a724573b"
        },
        "item": {
          "id": "4a1693ef-e502-467e-bf83-3c771534fb1d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b3f9817d-8acb-4666-83e8-1bbee8d89fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ee8dab-ee40-410d-b8b8-753237a6f9e6",
        "cursor": {
          "ref": "167c0842-6e35-43f2-947c-f76898a66b37",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "283698b3-5596-49d1-b5ee-1f662c920e7f"
        },
        "item": {
          "id": "64ee8dab-ee40-410d-b8b8-753237a6f9e6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a43a9ac4-581c-4048-9020-8f0b5753947a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2babae31-6d74-41ef-b0d7-b950770baac4",
        "cursor": {
          "ref": "669256f6-09e0-4104-bda1-1a14473b1edb",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b8c08664-a8ff-4bdd-b25e-09d326067104"
        },
        "item": {
          "id": "2babae31-6d74-41ef-b0d7-b950770baac4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "15f235b0-aae7-4211-9eef-d1c155e2a0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadaccd6-6564-4f0c-8809-182b928f1db0",
        "cursor": {
          "ref": "b03490a8-5ebf-4170-a8ef-1697fd00ec11",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "06f7afda-d94d-4eb9-849e-c71b01f05f6b"
        },
        "item": {
          "id": "dadaccd6-6564-4f0c-8809-182b928f1db0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fc9810ff-f086-4f10-bae1-6d339dfb56d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809abcb2-fe56-4ea7-93bd-f6d231fecd91",
        "cursor": {
          "ref": "28c83094-ec47-4a85-b620-e8a1003187a8",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "74595203-9acd-4d2a-a2b3-18020ab27a35"
        },
        "item": {
          "id": "809abcb2-fe56-4ea7-93bd-f6d231fecd91",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "75a589a5-5c35-4075-a955-a5f60d9f3c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f20d565-6a14-499b-b678-c4f76d3cd723",
        "cursor": {
          "ref": "70c59c29-ed03-4d64-84e3-95b2feab8fe6",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4d059edd-b9f2-44dc-b470-3d906c84b62c"
        },
        "item": {
          "id": "9f20d565-6a14-499b-b678-c4f76d3cd723",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9dcd5624-13ec-4832-bac3-a9218958cc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b77962-3849-4be9-8f10-844f25ddd405",
        "cursor": {
          "ref": "815c827d-64fe-4779-80d5-8ee4b5031db8",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "da9647ca-cdb1-47cb-8c59-6b0f69cda49b"
        },
        "item": {
          "id": "47b77962-3849-4be9-8f10-844f25ddd405",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2f6377d5-5acb-4d28-bce9-3eda32f6dc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9f320f-3fbc-4a0c-badd-8751aca7cf77",
        "cursor": {
          "ref": "75bb8dfd-4baa-43b2-b592-f38dbca0129d",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d23cfa3b-5fbc-4780-90e9-1122176ef283"
        },
        "item": {
          "id": "2e9f320f-3fbc-4a0c-badd-8751aca7cf77",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "00b21301-348e-4e3d-a52c-12e168021f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c08b261-6324-46b2-b529-43f7063bd5bf",
        "cursor": {
          "ref": "773a6c10-66da-4eb1-ab5c-cca0af0994a9",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4f415796-d619-4a40-a9e4-2b82f934c929"
        },
        "item": {
          "id": "4c08b261-6324-46b2-b529-43f7063bd5bf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "516072dc-7df8-4fa7-a56a-7954655251ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47188658-ef86-45ef-b2f0-856ebe23c2dd",
        "cursor": {
          "ref": "9ce90a58-1769-472a-835a-ce6fefdb9986",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dc4a96dc-42c3-4899-8c8e-57774fd8e5df"
        },
        "item": {
          "id": "47188658-ef86-45ef-b2f0-856ebe23c2dd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0cb81c8b-5db7-4c6d-90a6-f2b0c386ad38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f763948-c929-4881-b3ba-c7c5e1b61186",
        "cursor": {
          "ref": "668ac8fd-72da-47d1-a99f-bda0e536d357",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3815a9b3-764b-4376-a517-aea900790349"
        },
        "item": {
          "id": "7f763948-c929-4881-b3ba-c7c5e1b61186",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bb0035bd-e04a-4bfc-98df-d9d14e429934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b985c3f1-72f4-48b2-a43a-47d62e335ff4",
        "cursor": {
          "ref": "de1201f1-2498-4989-81e0-cfc5833d9f00",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e37bb91c-7c24-4593-8b13-63f5fee6608c"
        },
        "item": {
          "id": "b985c3f1-72f4-48b2-a43a-47d62e335ff4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "53754453-4e63-490a-a969-6739f7c8007d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e6c512-e33a-45b7-8641-2a00105c2e53",
        "cursor": {
          "ref": "2437a74d-2c1f-45a3-96d1-9e217136203b",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "56e0edc0-831f-4cbb-b291-02ac35def80b"
        },
        "item": {
          "id": "75e6c512-e33a-45b7-8641-2a00105c2e53",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6179b7c4-622e-4e50-ad3d-d59a89b7ee1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054026f0-19a5-4669-8e50-bc5e32e05584",
        "cursor": {
          "ref": "9f1b8692-b649-472f-a394-aa9e3a9fa0af",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "80378004-a8ca-451d-b6fa-c44f85952788"
        },
        "item": {
          "id": "054026f0-19a5-4669-8e50-bc5e32e05584",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d70eeae1-dbee-4741-9744-91afc0065e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33644ae0-dc6a-4d0d-9da6-e1e20d4a159e",
        "cursor": {
          "ref": "3af649ff-b52f-4bcc-95b1-e6cfcfce35a1",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bb54a394-9378-41a6-9d36-e3083defbf87"
        },
        "item": {
          "id": "33644ae0-dc6a-4d0d-9da6-e1e20d4a159e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a89fb306-9282-4d80-a1af-165ced74ca85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226916e9-47e9-4bcc-b74a-1b558021379f",
        "cursor": {
          "ref": "5997fbc1-34e4-480b-86c2-a3cd9cde155f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "904d0d85-119a-4436-abc7-72520e5a5741"
        },
        "item": {
          "id": "226916e9-47e9-4bcc-b74a-1b558021379f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cd65e60b-0c8c-4327-a630-5cb679262404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f40568-730a-4c0a-aa9e-a086084ed9b1",
        "cursor": {
          "ref": "b9a2d349-f8ba-46e2-8fa8-4e8b887f71c4",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c054b494-9d2c-4b3b-9a72-ad5ed34d9104"
        },
        "item": {
          "id": "19f40568-730a-4c0a-aa9e-a086084ed9b1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "946dbda1-6aaf-4193-9661-548392805feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02030d70-7e30-4128-9156-ae6060c0131d",
        "cursor": {
          "ref": "70b1cc45-79f7-4719-a80d-b6d517243449",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "08c40aed-1318-4b44-9a27-72af4e010de9"
        },
        "item": {
          "id": "02030d70-7e30-4128-9156-ae6060c0131d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "650be37c-df24-43a0-b5cb-7ef5fd1b749a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0a9dc0-745b-46bd-9888-00d02a7313ef",
        "cursor": {
          "ref": "cfa5a7d9-ca4d-4957-a23e-8c6240112a24",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "91a48b86-3850-4030-aa2f-3c088ed0d37c"
        },
        "item": {
          "id": "3f0a9dc0-745b-46bd-9888-00d02a7313ef",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "42e3963a-d997-4289-a4a4-e3aefb93dca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53546996-8ede-41a8-b36a-95e053aa82bc",
        "cursor": {
          "ref": "52269e72-53cf-4f26-950f-9310706be620",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a84ca83f-c767-431f-b408-0d96028bcd21"
        },
        "item": {
          "id": "53546996-8ede-41a8-b36a-95e053aa82bc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6cd411e7-678b-4bad-a5aa-a1041c2143e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97119f3a-b9b3-4b29-88d8-9ee1d4b7e67d",
        "cursor": {
          "ref": "f3e4e630-df4e-40a2-8893-1d62ea855b4d",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "92417a26-7505-4cb0-9fa1-6e4602de1897"
        },
        "item": {
          "id": "97119f3a-b9b3-4b29-88d8-9ee1d4b7e67d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "127fc579-6be1-4ad8-866e-fa7980eaaf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591fcc94-2c2b-4239-adc9-22ebdfa54a2b",
        "cursor": {
          "ref": "c780ca8f-5a85-4202-829f-c096a4020ba4",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3dbbfacc-1e50-4b27-9fcb-d909ec5f3f63"
        },
        "item": {
          "id": "591fcc94-2c2b-4239-adc9-22ebdfa54a2b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d0e4e5f2-0f18-44a0-a094-924085be9389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54aa7e0d-5233-4379-b813-92ab15797602",
        "cursor": {
          "ref": "51df9ac0-ce30-46d2-b5dd-a384462eb29d",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "eadd462c-fcd1-4179-a982-9353f850593f"
        },
        "item": {
          "id": "54aa7e0d-5233-4379-b813-92ab15797602",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5c5137dc-8a11-427b-9da2-01c8aaf5c596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6e9d49-9f22-4a5d-afe3-c9dddfcc8ac0",
        "cursor": {
          "ref": "00a09c0a-206e-46f8-a834-362cb00a8c2c",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c1565180-4dba-4169-b66a-d466407cd530"
        },
        "item": {
          "id": "8f6e9d49-9f22-4a5d-afe3-c9dddfcc8ac0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "261d8519-adb7-4628-83c7-b87211ec054e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4bf52a-a00c-4c5b-b962-9c81161e2a4b",
        "cursor": {
          "ref": "c006ee54-2258-4e60-baf4-27bf8a9d5293",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "03a8723c-d5d0-4c0c-81fa-5d9a59caf126"
        },
        "item": {
          "id": "ca4bf52a-a00c-4c5b-b962-9c81161e2a4b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6d8d8bf3-567c-4a51-bfee-febb05b67ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a08f6ed-590d-49fd-8195-2cc6650be6cc",
        "cursor": {
          "ref": "fc14a861-ffc1-49e2-a730-6f69eb365709",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ab5a9d77-4a45-4a5b-abb8-fe8ecd2a99be"
        },
        "item": {
          "id": "6a08f6ed-590d-49fd-8195-2cc6650be6cc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ac452274-ee70-404d-bf85-02ebc746c023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51a5f69-cf23-42f2-8787-895d4c6052e8",
        "cursor": {
          "ref": "158904d2-903e-4808-87a7-2bd355255e40",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "435be904-504f-4ade-b0a0-fb7ab3c72384"
        },
        "item": {
          "id": "a51a5f69-cf23-42f2-8787-895d4c6052e8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "692bd4c9-c4ac-4c48-a597-7073ef004c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5877da43-a322-49fa-8ec6-094f395102c8",
        "cursor": {
          "ref": "edd5bcaa-370e-4165-9e9d-f03884b5bfe2",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6cd1b902-9c7c-4be6-8e6a-df034ec0f684"
        },
        "item": {
          "id": "5877da43-a322-49fa-8ec6-094f395102c8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ca785c2b-b657-44bc-8f94-f121f1a59157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33637585-6ecc-4f69-80c3-d93a87898de0",
        "cursor": {
          "ref": "699d142b-5a5e-4608-aae3-b98a18c36d25",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "37f5b974-231a-484a-a8ef-fe6d8801d60a"
        },
        "item": {
          "id": "33637585-6ecc-4f69-80c3-d93a87898de0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d3bf1fce-5e4b-4345-ae73-5a09daaf7e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fddecc6-666f-4532-8511-b912d3fd8a5f",
        "cursor": {
          "ref": "4dc4e18c-7e5f-4cde-bfe8-1ca9c82628b7",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bc031d7e-7284-4dc8-aaa7-316f188eae0f"
        },
        "item": {
          "id": "3fddecc6-666f-4532-8511-b912d3fd8a5f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "270a8db2-51c7-401b-aa04-6aac44cfb016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94d7091-b098-4f99-8561-41058cf7f167",
        "cursor": {
          "ref": "c45ebf30-27ff-4891-8e4a-bb7865d0d364",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8bd361ea-94c6-4c85-9095-8d8a94e70ba5"
        },
        "item": {
          "id": "a94d7091-b098-4f99-8561-41058cf7f167",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "72ff9028-2866-4067-9338-9fd946381978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0d7590-1c43-4f1c-9388-c2aeee2ae9c2",
        "cursor": {
          "ref": "ef054284-8273-4d89-be8f-5ee72faf8e19",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7eca936f-cd0c-448a-88ab-e41f45cddf3b"
        },
        "item": {
          "id": "8f0d7590-1c43-4f1c-9388-c2aeee2ae9c2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "43ff8a19-1078-417d-b492-c1cd5ab54130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c6c673-5ec3-4827-8ed8-64c3020451fc",
        "cursor": {
          "ref": "36880a3f-845c-42d5-9f25-b2394d762018",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "86633d99-e7b8-429d-bca2-95979c59a879"
        },
        "item": {
          "id": "a0c6c673-5ec3-4827-8ed8-64c3020451fc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "84bd8f36-63c3-4962-89a9-d0a62dc33f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e86459a-04c7-4fe0-aeea-ebd211cb5416",
        "cursor": {
          "ref": "cd66bbda-ad51-4259-94e7-405ab4fc21b0",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "93bcef5d-8c2e-4a0a-9231-0aa86160d761"
        },
        "item": {
          "id": "8e86459a-04c7-4fe0-aeea-ebd211cb5416",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5d4a918f-6473-4430-b0c6-90e122846d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa33d53e-b513-4baa-8613-22b2d03a0f51",
        "cursor": {
          "ref": "77151d32-4c0e-4b97-b715-16d55d6ca252",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "529796ad-3d94-4d87-9ab9-8201c79fb637"
        },
        "item": {
          "id": "aa33d53e-b513-4baa-8613-22b2d03a0f51",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "95538ed7-6fa8-4469-9c84-14be4887b456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b86b92c-7f39-4ada-9583-3bdf6e2fbaa7",
        "cursor": {
          "ref": "6d28b9e3-1aca-47fb-bb56-fe74348fd6de",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1cd75d69-f639-4b5e-8eea-6ccce74a68f9"
        },
        "item": {
          "id": "9b86b92c-7f39-4ada-9583-3bdf6e2fbaa7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1c99c849-0eff-423f-9619-1a60adb0c1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727d5d8f-ca8b-4233-ae88-c99137532fea",
        "cursor": {
          "ref": "3a634111-597a-4957-90d7-54ef97063924",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9955edb1-5be9-4a97-a498-6fdc3912d0a5"
        },
        "item": {
          "id": "727d5d8f-ca8b-4233-ae88-c99137532fea",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "53c95f0e-bc51-4ab7-bef9-e8f1203ea765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f5f0c0-466d-48a5-8111-bdb731eea335",
        "cursor": {
          "ref": "897452b8-fb29-4a6d-9bb1-0013a8db2f67",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2283351d-e06d-486e-9b90-4edb4a890434"
        },
        "item": {
          "id": "f2f5f0c0-466d-48a5-8111-bdb731eea335",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6531e12a-9b88-435e-ad0a-19a80ac816e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdd1a1a-c327-43c2-b31b-eef3be3a7d73",
        "cursor": {
          "ref": "18169086-700e-407b-ac6f-82d17ef5609e",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1218ca87-5ae9-4c1c-86a2-3409aa4a28dc"
        },
        "item": {
          "id": "4cdd1a1a-c327-43c2-b31b-eef3be3a7d73",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8ed9a6e2-c0ef-488a-881d-5a55582c28dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a0a2f2-c76d-46ad-8bc6-43282635a58e",
        "cursor": {
          "ref": "f752e935-d21d-4a40-a36d-93ddaae47793",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "804ea6b2-2b45-4587-a014-53e7d9dc12c7"
        },
        "item": {
          "id": "77a0a2f2-c76d-46ad-8bc6-43282635a58e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8a0f4ea6-6ec7-4827-b921-79eb2faf48a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b84ceaa-4248-44c0-8437-eca18479ee4e",
        "cursor": {
          "ref": "b1247529-7b16-49c6-8f1d-122a5bcc47d5",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "72d56525-5a7e-4f32-9533-811630916cb2"
        },
        "item": {
          "id": "7b84ceaa-4248-44c0-8437-eca18479ee4e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3c0b0a87-d611-414e-ad9b-8970d55efce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14d0e58-c071-4a42-8730-c96b2859c07c",
        "cursor": {
          "ref": "323e6aaf-0675-449a-b211-be91e1871cf6",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2de52fcc-f0bb-4175-ab4e-b624c5ba5656"
        },
        "item": {
          "id": "b14d0e58-c071-4a42-8730-c96b2859c07c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c965746a-e56a-4406-80c4-73edfe27239c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c84ac88-c088-496b-8a64-1441455c05e3",
        "cursor": {
          "ref": "82ce3f8d-781f-4ffa-abde-b1845d7200a8",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e78758d4-96b5-4e0c-82be-dea681806e80"
        },
        "item": {
          "id": "7c84ac88-c088-496b-8a64-1441455c05e3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c6e6238c-4536-4b90-b5da-d1f146331fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24b5586-cdf0-4417-ac6f-2d76b05fffd3",
        "cursor": {
          "ref": "85fb34f0-93db-43a1-aa8b-db3bf09cff71",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8c8a6872-f107-405d-8596-c31a026389a9"
        },
        "item": {
          "id": "c24b5586-cdf0-4417-ac6f-2d76b05fffd3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e7604b9e-0029-46cd-8700-901294ca1b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da10d72-ea6a-4aec-9130-178671994b0f",
        "cursor": {
          "ref": "3a0285cc-a4ba-45a5-95e1-b342c4132e7b",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7ab1b35d-53fa-4c85-8064-9edd4eff1a57"
        },
        "item": {
          "id": "6da10d72-ea6a-4aec-9130-178671994b0f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d09e94b7-0538-491e-bae1-51f655284336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210705b6-0b00-44b4-8b6f-33b70c5b8c7c",
        "cursor": {
          "ref": "9074e309-7bb1-458f-be95-c20b1a711537",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b3cbd617-3706-4546-85ca-c47ee84145c8"
        },
        "item": {
          "id": "210705b6-0b00-44b4-8b6f-33b70c5b8c7c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3c21ec01-dfc5-44b2-a92b-d977909657aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1f67b6-0df9-484e-a135-c3a9ef81b28c",
        "cursor": {
          "ref": "be99eb46-70f4-4cb2-aaba-15408dd96e62",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a0ceb0c4-50cf-4754-ace6-cbd561ee6958"
        },
        "item": {
          "id": "4f1f67b6-0df9-484e-a135-c3a9ef81b28c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "23a08658-2653-44e8-91e4-14fbe708850e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0c4365-5d8b-49aa-8534-4a9432de5ed5",
        "cursor": {
          "ref": "1f99a851-0716-4369-a5df-28c81b6a373f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b1065c60-0add-4ffc-8dc3-e538fdeb138d"
        },
        "item": {
          "id": "1c0c4365-5d8b-49aa-8534-4a9432de5ed5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5ed884ce-b2a1-4989-91ea-ef5c08ddba1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e812cec-ca16-43c4-9fdd-01619468358c",
        "cursor": {
          "ref": "609fb0dc-d4a4-40e7-8148-28dc064dd56b",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "16ed9cb6-829c-4bce-9c36-8e2fbbeca0d1"
        },
        "item": {
          "id": "8e812cec-ca16-43c4-9fdd-01619468358c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "10a9497f-4a15-4ab7-9d81-1220a9f499db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204e5f07-129e-4345-bbc4-1bbf33d98249",
        "cursor": {
          "ref": "368e030a-597d-4254-a5af-b699396d575a",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5ec915cd-a1ec-4ca1-be51-f47aa834cce8"
        },
        "item": {
          "id": "204e5f07-129e-4345-bbc4-1bbf33d98249",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ec392fb4-bc34-41ff-ad8f-b75d56cff086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4482afc-72d1-4fc6-9bea-e8727c780859",
        "cursor": {
          "ref": "59b1ffa0-b98c-4ecb-b703-60e6f0f4e284",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9785a0d0-0f25-4b4e-a6eb-c575746b2a46"
        },
        "item": {
          "id": "d4482afc-72d1-4fc6-9bea-e8727c780859",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "36dec98c-9533-459d-8f49-9ee448aeeb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8817cca1-62af-42e3-a25c-cb769de244ec",
        "cursor": {
          "ref": "b1abc730-1af2-4153-b81c-813249e7db22",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5f59ce71-ac2f-41d8-a9b9-15f564862a0f"
        },
        "item": {
          "id": "8817cca1-62af-42e3-a25c-cb769de244ec",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1eeb9571-91b2-40da-a9c6-85cc07b4d939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128b771d-7773-4d4e-bb7b-00b657de873c",
        "cursor": {
          "ref": "9d6ab9e7-557a-438f-9699-7aac4f130e4a",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4555d61b-5537-4584-b2b7-351a7559f2ec"
        },
        "item": {
          "id": "128b771d-7773-4d4e-bb7b-00b657de873c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cbe9dab8-584c-46e1-b0d1-d9380a43192e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2807f26c-6196-4cd9-b77f-fcae19c8cb68",
        "cursor": {
          "ref": "4e544e47-c744-4689-bc8e-9fc11dfe7d58",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6f3a8b5a-a5e8-4745-8cfd-aa4d067734e9"
        },
        "item": {
          "id": "2807f26c-6196-4cd9-b77f-fcae19c8cb68",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bd497913-7169-42f0-a482-012c7ee19563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3635aee6-eaeb-44ed-be55-4b352e46cdeb",
        "cursor": {
          "ref": "e32fa7e0-d0ea-475a-944a-aa3ddf1b9148",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a75effc7-8671-435e-8ed9-b120177d4e68"
        },
        "item": {
          "id": "3635aee6-eaeb-44ed-be55-4b352e46cdeb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "31f7a0fb-ce7c-4e74-8ea1-58cb11cf1306",
          "status": "OK",
          "code": 200,
          "responseTime": 173,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "3ab05b67-c3b4-45cc-b6c1-b4a49cb56adb",
        "cursor": {
          "ref": "a1ec137e-7fad-4960-9593-2b789adc3a72",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a55595ae-3193-4ffc-bdc6-7e0eb7e14201"
        },
        "item": {
          "id": "3ab05b67-c3b4-45cc-b6c1-b4a49cb56adb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "61595d35-f777-46a3-a30a-a8b861ae5521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6aa7043-528c-4f59-b75f-fa36489b2bce",
        "cursor": {
          "ref": "1e019591-7a8f-4564-9215-d8b7b753a36f",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "597f46de-28f8-44d3-ba66-f2353904d45a"
        },
        "item": {
          "id": "d6aa7043-528c-4f59-b75f-fa36489b2bce",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "00331c5e-ea08-4f7a-9c15-cf37c62de530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f751de9a-c0a0-43b4-9241-909d8456a91e",
        "cursor": {
          "ref": "a35af103-eb8f-4d28-a6da-32e2d1127872",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a9f0bc0e-65e7-4af5-b90d-4f1d0c52c297"
        },
        "item": {
          "id": "f751de9a-c0a0-43b4-9241-909d8456a91e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "37281e93-c772-4b89-b134-79acb6c9b4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8884a4-1b22-4223-9cb3-17063ef218a9",
        "cursor": {
          "ref": "d39ae6c2-a00b-44e1-af81-82e46b6f78ef",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1ba9a0bf-c6db-4195-ac3d-d1eda9433b1e"
        },
        "item": {
          "id": "3c8884a4-1b22-4223-9cb3-17063ef218a9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3265dcfc-d8af-43ce-805b-f842fe2ae096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cd29aa-2fe8-48b1-8ef8-10c2072cd4fe",
        "cursor": {
          "ref": "fc8262a0-c4b0-43d0-925e-b2f9e5ab02c0",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "606dc6e1-bac9-4e9d-908b-b4b6a96c6a65"
        },
        "item": {
          "id": "c3cd29aa-2fe8-48b1-8ef8-10c2072cd4fe",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c4e6e997-2264-4539-81c5-adb1593ba09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04484f8-a859-4259-a5ca-cc8ee39625a9",
        "cursor": {
          "ref": "0b063ffc-2ca4-4c21-beed-41bf9fbb4095",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cae22c86-c336-44ab-9379-85eda80d4fa6"
        },
        "item": {
          "id": "f04484f8-a859-4259-a5ca-cc8ee39625a9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "00911c86-c705-4673-91ea-952457556fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156e6b6d-3ef2-4a5a-8544-a543ea509f22",
        "cursor": {
          "ref": "43e64a62-b441-4a8b-9861-7230b07ae609",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "86c29fc5-ea24-4bfe-a512-3a0ced8ec5ce"
        },
        "item": {
          "id": "156e6b6d-3ef2-4a5a-8544-a543ea509f22",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c5958492-9eb0-49e9-beb8-cb2dbf8beb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121458fc-72bd-45d9-8733-9b702993198b",
        "cursor": {
          "ref": "e50e43c5-383e-417c-9140-e9878495335d",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "12403849-52a2-4027-ae98-8a914eace404"
        },
        "item": {
          "id": "121458fc-72bd-45d9-8733-9b702993198b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "74a83c16-2622-48a7-8062-e99cf9d317fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8ec4d4-9393-404f-b6d8-96b6526257e5",
        "cursor": {
          "ref": "2a22913c-36fc-4ed8-9b62-badd641d00a4",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "36f38efd-da14-459c-85bd-76433453f767"
        },
        "item": {
          "id": "fc8ec4d4-9393-404f-b6d8-96b6526257e5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5d355e1e-d1b8-44b6-be76-7d80076b003f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab596f14-2bd0-4a2c-b59a-e4076c803061",
        "cursor": {
          "ref": "561839bd-7963-4c4f-bac5-f1ca65161276",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8b9c19ec-350d-41ed-8c68-b14707398772"
        },
        "item": {
          "id": "ab596f14-2bd0-4a2c-b59a-e4076c803061",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "36ee4878-725b-45ca-8983-845cfffe73cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b288e5-bb24-4500-92de-0c3b6f253419",
        "cursor": {
          "ref": "09b27058-b19e-47ae-be81-52c6bf997844",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c1e9adfd-50bc-46c1-a35b-63a801654cd4"
        },
        "item": {
          "id": "72b288e5-bb24-4500-92de-0c3b6f253419",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "90bd646d-16f5-46b3-99e6-e93a25b61f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b103d3-f6be-4fb7-b4bc-9a38a56f5814",
        "cursor": {
          "ref": "a02a5634-a5a5-4fee-b34f-2d3ad7e48e9d",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "697a6150-efc5-4970-a71d-c76566ee8bc8"
        },
        "item": {
          "id": "79b103d3-f6be-4fb7-b4bc-9a38a56f5814",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8854ad35-0b87-4e85-a51d-a4ed14aa9268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ef9cc2-b29d-41e7-a211-ee9ef37ea838",
        "cursor": {
          "ref": "2a9f3728-ef09-4147-8a0c-e5080ec1a401",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e1ae1c81-055a-4f52-ba13-1c90d096bef5"
        },
        "item": {
          "id": "38ef9cc2-b29d-41e7-a211-ee9ef37ea838",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d04533d4-06bf-4c91-a242-1917de6ea715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9a44fb-0ccc-4eac-8bf1-a5131fe1d1df",
        "cursor": {
          "ref": "82f6636e-1426-400e-9b94-240ff30fb910",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b5bb2130-b4b2-4058-ae5d-026ba5227ce5"
        },
        "item": {
          "id": "2f9a44fb-0ccc-4eac-8bf1-a5131fe1d1df",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0077e8e6-0cbf-43fb-b44e-7da82b6d1f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea76dacd-5ed9-44ac-a912-db18aeca3610",
        "cursor": {
          "ref": "551f7b95-047b-46b2-8fd9-cdfce20bfb85",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "415d1742-86a2-4de9-86d4-c3a3ac1a8a0d"
        },
        "item": {
          "id": "ea76dacd-5ed9-44ac-a912-db18aeca3610",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "99a55789-d5d8-4bf2-a7a0-5e768089592d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038ff802-aea0-4773-993e-26e2fd76a105",
        "cursor": {
          "ref": "dd083ae1-1892-4d38-9de4-c442ed0bd77c",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a3fc3fe2-3008-478c-8c81-e0aa267f85da"
        },
        "item": {
          "id": "038ff802-aea0-4773-993e-26e2fd76a105",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9ffc6423-5ec2-4ad2-9ae6-53b19c2f3967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e26b66-9766-4edc-84b8-e7270d5fc5ba",
        "cursor": {
          "ref": "787b952c-8201-4f69-ba89-ab37a982b897",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0fd82508-46a9-40dc-9430-061435973405"
        },
        "item": {
          "id": "86e26b66-9766-4edc-84b8-e7270d5fc5ba",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7b4205c1-3b7b-49a3-a258-888031b0c933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e4e1f3-c6cc-49aa-8022-a4c60e0b85fa",
        "cursor": {
          "ref": "d9f59b06-971f-422d-8693-a99cd52bffac",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c7a80e32-9552-4d89-b56f-bc6a5a679741"
        },
        "item": {
          "id": "35e4e1f3-c6cc-49aa-8022-a4c60e0b85fa",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "78c73133-59a8-4db3-8a38-282726e425f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af6daa2-c1bd-4699-8afe-e65ee5a99a3d",
        "cursor": {
          "ref": "b3dcc3e5-e27e-4fde-91c0-c9dd23bcdbf6",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "42277427-da72-4dbf-b299-79d94735cfa7"
        },
        "item": {
          "id": "9af6daa2-c1bd-4699-8afe-e65ee5a99a3d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b3b8a4c8-12a0-4591-b5cc-abda0de88ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f49a45-0187-4d60-9fe5-c38dddfb75c0",
        "cursor": {
          "ref": "4eb25634-0892-4e7d-89a5-122eeb9a82d4",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3b6ced47-d16c-4d19-aa8d-fe22afa79a26"
        },
        "item": {
          "id": "89f49a45-0187-4d60-9fe5-c38dddfb75c0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a3335752-7639-4d29-a174-0293cf8e13ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe90004-5be0-4843-8653-aae7521d9c48",
        "cursor": {
          "ref": "b897490a-7704-472a-8296-4849f95d2424",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e1507001-840d-43fa-ad62-4bc25f556b5d"
        },
        "item": {
          "id": "ebe90004-5be0-4843-8653-aae7521d9c48",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8763a517-a84c-4a69-a69a-bb74cf9f932c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df9cb6f-2d0a-43ba-a435-dc5bae189970",
        "cursor": {
          "ref": "1c6ae8f4-cb15-486c-9211-3a4785e479ec",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ec24212e-1a9a-4767-b5b7-848e217552ac"
        },
        "item": {
          "id": "9df9cb6f-2d0a-43ba-a435-dc5bae189970",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d878e71b-f034-468a-bfad-974520564f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c113490-f3b3-47d5-8ba5-0b2e1c02762d",
        "cursor": {
          "ref": "00f9e589-5bd6-41a4-bbed-aa7a85c7733f",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "25993482-46fc-472b-be35-0e179cc0fcd8"
        },
        "item": {
          "id": "2c113490-f3b3-47d5-8ba5-0b2e1c02762d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "93a1cb0d-9dce-4402-a105-6c75015654e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319f593b-38af-4cd9-a460-99fee3d4512e",
        "cursor": {
          "ref": "dec4f843-e4ef-4bb3-93ce-dba97af19450",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "62622fcf-83a8-438a-88d2-d2ab9eee196a"
        },
        "item": {
          "id": "319f593b-38af-4cd9-a460-99fee3d4512e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7c156ba5-f2f7-4527-b511-85f20bc7f204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c3fb43-c02c-4cb9-97e8-b8a142325905",
        "cursor": {
          "ref": "9d41807e-8dd9-41ab-91a7-f219fba527d1",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cea76e3d-51f5-4cfc-b196-3db19da3f5aa"
        },
        "item": {
          "id": "b4c3fb43-c02c-4cb9-97e8-b8a142325905",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fcde9312-1d11-4a3a-a4f9-ab6031410c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7932e70e-96db-47d5-bea5-152aea5fd3f1",
        "cursor": {
          "ref": "67f7919d-4cb2-4197-8344-15aeb50be88a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4b961933-7c44-466e-b7f7-de8d965c69bc"
        },
        "item": {
          "id": "7932e70e-96db-47d5-bea5-152aea5fd3f1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4b33b535-cd2f-42f2-a184-0b4d33e372f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bce0338-eded-4378-abce-6c2812cc1a45",
        "cursor": {
          "ref": "f644f8aa-8b04-4aa6-a6ba-1c00d06c1a84",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "895ba650-0e0c-40a3-b153-d907ea5dcf64"
        },
        "item": {
          "id": "7bce0338-eded-4378-abce-6c2812cc1a45",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f9dccbdd-7cfb-4aba-8fa1-6c5a52a04634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881fd425-e1a6-4ff0-b92b-243dde001d8d",
        "cursor": {
          "ref": "62775a47-cda9-4a1f-9db3-4c18ab92ae73",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "23c02711-daf0-46be-b59d-2f768484ecda"
        },
        "item": {
          "id": "881fd425-e1a6-4ff0-b92b-243dde001d8d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c65b3815-5b8a-4fc5-be9b-5c6519f3ea6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ba3e02-23ae-4b9f-9faf-32e9554ca7e3",
        "cursor": {
          "ref": "0fcc48fa-faac-4814-9f61-bcc2b0bac6a5",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "68caf301-23be-4b86-80d4-16f3758b9fe9"
        },
        "item": {
          "id": "05ba3e02-23ae-4b9f-9faf-32e9554ca7e3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "53c00791-c4e2-45e7-9639-ed873e2d71f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36441a5-619f-4ee5-82f8-f7cc7e55bfaa",
        "cursor": {
          "ref": "8803c925-a98b-4e00-90e3-4962e541b4fb",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c4f02405-bc01-4375-92b9-262413f2ef46"
        },
        "item": {
          "id": "e36441a5-619f-4ee5-82f8-f7cc7e55bfaa",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "20b0c4f2-d30a-4ac3-b8f6-295373d8f095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13176730-1200-4786-ad46-e3dc69a69144",
        "cursor": {
          "ref": "6db2567b-2722-4060-bf07-dabaf3354a60",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "32a3d0f3-4dea-4232-a157-2629cf81be1b"
        },
        "item": {
          "id": "13176730-1200-4786-ad46-e3dc69a69144",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9c95a545-4f82-4f3d-b626-a5d4ed178d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732652c8-8c97-41ff-88c1-c1dcc2501bdb",
        "cursor": {
          "ref": "c62c5745-0805-4721-aebf-8096b39a225c",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a1f23059-313a-48df-a79d-cd836e1b5fc0"
        },
        "item": {
          "id": "732652c8-8c97-41ff-88c1-c1dcc2501bdb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b795a89c-1435-4210-81fd-5b4fc73e3c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22439498-a085-41ed-88c5-d02f8466b70e",
        "cursor": {
          "ref": "c575cbe9-f55d-43dc-ab2a-cb109eb7917c",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "554dc9c2-f727-4787-9aff-2a30cd72c89c"
        },
        "item": {
          "id": "22439498-a085-41ed-88c5-d02f8466b70e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c8577e00-9a98-45f9-be28-1c0dae2f3b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99338c8d-036a-4ca7-b146-45b77cfc5874",
        "cursor": {
          "ref": "cba628f4-2352-49ac-8e6c-10e4ba11361b",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "adb2730a-4f0f-498e-90d3-594a597f4964"
        },
        "item": {
          "id": "99338c8d-036a-4ca7-b146-45b77cfc5874",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6ebbe6e9-7fda-463c-86b1-3c9882c35683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6a001e-93c0-42d2-9fae-05a7bc79300b",
        "cursor": {
          "ref": "001f5c2a-1244-4456-aa63-48b9a801fbf9",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "df9699ca-5de0-4a10-8473-b594feae888a"
        },
        "item": {
          "id": "da6a001e-93c0-42d2-9fae-05a7bc79300b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "06a2cc6a-89cc-494f-9f2a-251f4a1d2389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecdae15-cc5b-4480-9d9d-60a72fa771d0",
        "cursor": {
          "ref": "c4a022f6-6a6f-40b6-bd1a-786d7a3187b2",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "149fd2a6-5001-4f66-9288-2f4b619148a7"
        },
        "item": {
          "id": "4ecdae15-cc5b-4480-9d9d-60a72fa771d0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "04e6f85b-4f16-4b05-aef5-51c698cf0cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086a99aa-986b-4290-b6ab-6c91301a7863",
        "cursor": {
          "ref": "4803ecbb-3bae-4e02-a3fc-e43ca35e2add",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d76dc12a-c0f1-46de-820b-a0caf3aa2426"
        },
        "item": {
          "id": "086a99aa-986b-4290-b6ab-6c91301a7863",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "969ca17f-1ee6-4a7b-85b4-8a9e98c65246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7784736b-647b-451d-958e-589cd05ed8cb",
        "cursor": {
          "ref": "a61d3c62-4f15-4d44-bbc1-f803c8a8ee8f",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "aab8ce8a-deeb-4706-b1ea-37f8727959ef"
        },
        "item": {
          "id": "7784736b-647b-451d-958e-589cd05ed8cb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "75961d7d-c664-47cc-81a2-b553522da645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db7b9fe-a2af-478f-91c6-04ada6235188",
        "cursor": {
          "ref": "b1039623-c4a9-497b-bc08-4b90f8dca79a",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5dc02c99-2d2d-460c-b058-12d56671d8ba"
        },
        "item": {
          "id": "7db7b9fe-a2af-478f-91c6-04ada6235188",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "393725f8-a909-4b92-a7a8-a0679beea002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbb6ad0-c709-482b-a36b-23e8fb185952",
        "cursor": {
          "ref": "ecfe3409-9a74-4e6c-a800-638b74056b11",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "33cbd362-0b60-464a-9a5a-fd6d12c7243c"
        },
        "item": {
          "id": "fbbb6ad0-c709-482b-a36b-23e8fb185952",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8c8de810-043c-45ab-ad5c-5b36b9e95d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56de2dc8-6f8d-4b61-b888-16ae827b8857",
        "cursor": {
          "ref": "25691ce4-13bc-45c5-8c99-4ddabb113a88",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1cfb3092-dda8-4750-b598-855e58308a22"
        },
        "item": {
          "id": "56de2dc8-6f8d-4b61-b888-16ae827b8857",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d0e166c2-ec25-4e32-9957-9213f63e0917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eeec98c-da5e-4d98-a9be-c6b10b3e9333",
        "cursor": {
          "ref": "bfd0e601-6bd3-45e3-86c0-e1cea4ad3527",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7d16c5af-a229-4a00-892d-8ed4f619f1c9"
        },
        "item": {
          "id": "7eeec98c-da5e-4d98-a9be-c6b10b3e9333",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "64097182-6112-43ea-8a39-bbda5a204dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbf9a55-ae49-4b98-ad70-41a6aef82b46",
        "cursor": {
          "ref": "a2835ba2-2ae3-46e2-8f83-148d806aba41",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3bb0458d-e221-4a13-bbb1-af76791544ce"
        },
        "item": {
          "id": "dbbf9a55-ae49-4b98-ad70-41a6aef82b46",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "98746e45-b71d-4df7-8a7c-affcc2085f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423a9003-b132-4a07-a102-83d7ea1a7644",
        "cursor": {
          "ref": "61441828-8c09-41e0-bbdd-e03051dc0bda",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "857c0eea-8d7a-4a2d-bd63-4bb63fbec819"
        },
        "item": {
          "id": "423a9003-b132-4a07-a102-83d7ea1a7644",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "706c8a28-4826-45dd-a27f-666f9c42f0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63d0e98-9a65-434b-b7cf-77f6c88706e7",
        "cursor": {
          "ref": "bbf71c6a-02fc-470d-8c8e-8c5e86b41299",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4f772781-d6fa-4aa3-8ce0-a3869b8d6e34"
        },
        "item": {
          "id": "e63d0e98-9a65-434b-b7cf-77f6c88706e7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "11dcd586-5edf-48cb-bfd8-18937e2d596d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e610e7b-1afb-411f-9b59-1a39dd8644e5",
        "cursor": {
          "ref": "f75193fb-e767-495e-812b-a42af7507666",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "99e6576b-1660-4ed5-9f6a-c471ec394b20"
        },
        "item": {
          "id": "8e610e7b-1afb-411f-9b59-1a39dd8644e5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cae3a5bb-d42e-4844-b0fd-cf9614c30558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac77f957-2352-4683-bbb4-c7cf488b192a",
        "cursor": {
          "ref": "3e87be8c-8c49-4ee3-858a-79c78ae8a9b0",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d4c4172f-9090-4a75-80aa-a86026a7901f"
        },
        "item": {
          "id": "ac77f957-2352-4683-bbb4-c7cf488b192a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4db55731-b875-4f3d-987b-cec2da1e3944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dffbad4-de6e-41cc-946e-8e15271373cd",
        "cursor": {
          "ref": "35895de0-8fce-4836-96fd-9f6a6d1b1899",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b88de8a4-0191-42b9-9d26-c80a1472ed9a"
        },
        "item": {
          "id": "0dffbad4-de6e-41cc-946e-8e15271373cd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2a817044-cf6a-4152-859d-048c558f4915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1c0d9d-b159-46fe-956d-db42eadd4968",
        "cursor": {
          "ref": "063c3c9d-6632-486b-953e-38bedc16ab9c",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d22cea21-2eaf-4738-9bfa-5997a24c5fb7"
        },
        "item": {
          "id": "2d1c0d9d-b159-46fe-956d-db42eadd4968",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "938126d5-3e42-4fcc-8176-9b7faafc7243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383a1006-ba45-4012-8c75-baa6594d7d05",
        "cursor": {
          "ref": "dd86e302-2b9c-444c-863b-033da912802a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2c0c789f-7436-449d-9324-53e66cdee78b"
        },
        "item": {
          "id": "383a1006-ba45-4012-8c75-baa6594d7d05",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "95d777e8-f75a-4a45-8b32-ed7436c96453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e145b74b-deaa-4eaf-9710-6314f3ebb9d6",
        "cursor": {
          "ref": "c8a78308-7d13-410a-be0c-ad6bfd3ba418",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f68a9804-a5ce-4741-a2b1-9c29aab90ac8"
        },
        "item": {
          "id": "e145b74b-deaa-4eaf-9710-6314f3ebb9d6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "552a3175-5196-4e87-8eb3-37d02ec1146e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89faa68-757c-4927-8074-da032bfb47a2",
        "cursor": {
          "ref": "578864ec-872f-4931-9c0b-69859367da88",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "22cec68c-9285-4f0b-8371-8ac6838f2987"
        },
        "item": {
          "id": "a89faa68-757c-4927-8074-da032bfb47a2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5bfdb732-af5c-4673-9837-d803ece51904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff0ccab-8e05-45c6-9dca-e437bbd48fe8",
        "cursor": {
          "ref": "80a15934-0097-4433-9e9c-8ee52a2f2a78",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "13843785-fbe6-4872-8188-5961140276ad"
        },
        "item": {
          "id": "eff0ccab-8e05-45c6-9dca-e437bbd48fe8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "84c729c0-e70e-4fba-9683-f84ed93f41d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc92796d-8bd3-4e50-ae6c-dbae6575c287",
        "cursor": {
          "ref": "8de37602-ad0b-4e2f-a0ac-0d181243994c",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "135c7c3e-fc6a-4df8-a6e9-91b3b729fdd0"
        },
        "item": {
          "id": "fc92796d-8bd3-4e50-ae6c-dbae6575c287",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0c6a267b-1dca-42dc-ab06-b0d1a3c26203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b9d1bd-3b38-46bb-8867-01415708c681",
        "cursor": {
          "ref": "118dd6eb-8696-4bae-9550-1df7671e99d0",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f5822e70-ad8f-4919-90fc-9c20a85444c3"
        },
        "item": {
          "id": "51b9d1bd-3b38-46bb-8867-01415708c681",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c39742d6-afa2-4917-911b-f4f0edbc67ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fc0a16-9f56-494b-9884-ee2206770a19",
        "cursor": {
          "ref": "2bf33e2a-378b-4282-85f8-c83475a3e418",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "35de1670-a27b-454a-bd9b-00f3dcbf022f"
        },
        "item": {
          "id": "d8fc0a16-9f56-494b-9884-ee2206770a19",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "250e337d-b06f-4e35-83d4-951cf0c5ffc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f83ff1d-f402-4161-93a2-5da745bde827",
        "cursor": {
          "ref": "2e8fe9e6-356b-42dd-95d9-c489e2c0126a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0cbebe2f-76dc-4098-a5e2-589e6999b3a3"
        },
        "item": {
          "id": "9f83ff1d-f402-4161-93a2-5da745bde827",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a1bfc58c-70fd-49bc-9783-03d84e4c4a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3135f251-0fa7-4efc-9ecb-61d6500a0204",
        "cursor": {
          "ref": "f30a88ea-0407-486a-8a68-366391a41af4",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4eed9056-3214-40e0-a6aa-19e386f5e51d"
        },
        "item": {
          "id": "3135f251-0fa7-4efc-9ecb-61d6500a0204",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8b326cc5-f99e-44e0-bc80-21a0a9dc1004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e860d0-c9b7-41df-96b6-eaf644da2b56",
        "cursor": {
          "ref": "51006897-f1d3-47a6-8d15-c01568312122",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "95f54d1a-aa41-4517-9299-17a53bf881f2"
        },
        "item": {
          "id": "69e860d0-c9b7-41df-96b6-eaf644da2b56",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "00eb3a49-e105-4784-becb-f30b1ca661e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41760d0-41e8-45fe-bd5f-43794ec55fc6",
        "cursor": {
          "ref": "130c0a6b-b1c5-4d64-8a17-aaa3ca85c7f2",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "fa392067-435b-4205-886f-c17712bd5ed5"
        },
        "item": {
          "id": "a41760d0-41e8-45fe-bd5f-43794ec55fc6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "036bed5e-b2ee-459e-b8f7-72904f931a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7db35c9-0a33-4d3c-b0bb-d84dd40beb0d",
        "cursor": {
          "ref": "f58a657f-4398-4871-9280-d284042cbc5d",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d0c9cda4-5c2f-4c4d-a034-f9cc40536230"
        },
        "item": {
          "id": "f7db35c9-0a33-4d3c-b0bb-d84dd40beb0d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "53b900b4-a882-4285-a712-73dc9497682a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68eced01-3e80-4199-b5dd-292ff2f9a3e4",
        "cursor": {
          "ref": "d4be7a0f-52a6-42c5-9821-99798eeaa4ac",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f0e50671-bf42-4ad9-9cb1-9cf3c73af202"
        },
        "item": {
          "id": "68eced01-3e80-4199-b5dd-292ff2f9a3e4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3aebde5a-7a2a-4321-a4ca-5e78de45b50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5266fd17-9ea7-44df-8298-0914ecf452cc",
        "cursor": {
          "ref": "1aa09c92-9f72-4f04-ab8e-9e11df392f1b",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a0cb87f0-0396-4871-b2a1-5b53c4b1348c"
        },
        "item": {
          "id": "5266fd17-9ea7-44df-8298-0914ecf452cc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c4a29871-a5aa-49a0-9795-e98edbd8ffbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4febaee2-879c-41d7-b6d2-3a67a2bd4f65",
        "cursor": {
          "ref": "4a8978b5-f13c-475c-9489-6512d18ec4b0",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9e7dca88-edce-4deb-9fd0-af59af62eb85"
        },
        "item": {
          "id": "4febaee2-879c-41d7-b6d2-3a67a2bd4f65",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6bc8f15b-a709-4fd6-bbe9-071c8dfa91f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b295da-9bb8-4245-b9b7-d84178c4a333",
        "cursor": {
          "ref": "8154be66-46b8-4d64-9d15-4c2d9f68f92d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "611d58e3-e8b9-465f-8395-7f8b370c8bc9"
        },
        "item": {
          "id": "30b295da-9bb8-4245-b9b7-d84178c4a333",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "69dc0d0e-5577-4adc-8711-5ef1da884286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c72e0c-9c24-4db9-891e-551d37d95d3e",
        "cursor": {
          "ref": "a0c2351f-1171-4426-83a6-b26d28fb356f",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "61fa0ce0-5980-4a61-bb3c-f859fd9d2c2e"
        },
        "item": {
          "id": "35c72e0c-9c24-4db9-891e-551d37d95d3e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4ac9f81e-9984-49a8-b1f0-76d47f97bc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbc75cf-6b8c-4192-9204-cdc1fb384374",
        "cursor": {
          "ref": "2b013a0d-36f9-4434-96c7-f6bb9b04d74f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "060d8b87-d9fb-45fe-b9b1-a85905e040c5"
        },
        "item": {
          "id": "bfbc75cf-6b8c-4192-9204-cdc1fb384374",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "215b9995-5574-41ec-ac03-51d7ecc5d90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf8a31e-efaa-4370-924e-db05b74604ff",
        "cursor": {
          "ref": "9db69975-51ff-404f-9ccc-49ee9351dc0c",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "825d500f-c974-499f-9f9e-be5bd243df88"
        },
        "item": {
          "id": "2bf8a31e-efaa-4370-924e-db05b74604ff",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "385b9eeb-86ce-4241-8f58-52c0bec07f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92253b58-38f8-4227-b960-a93536469796",
        "cursor": {
          "ref": "544b878d-b941-4f87-ab8f-79641c228da8",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fe2f10aa-6331-4af2-8df2-e0e4dee617d2"
        },
        "item": {
          "id": "92253b58-38f8-4227-b960-a93536469796",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f429acf7-6fb2-4e47-9499-276fd3508e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c390f2-70cc-4c16-8c47-b537bd9ccfcc",
        "cursor": {
          "ref": "e7b45444-3336-42ed-bf89-68426f694f2b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "01d66d3f-405d-4e80-9d14-5f51a1024569"
        },
        "item": {
          "id": "60c390f2-70cc-4c16-8c47-b537bd9ccfcc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bebfc4ad-416a-46d6-aec0-1be48437e2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc96e99a-c52f-4ed9-b959-f6b14a8c787a",
        "cursor": {
          "ref": "0f09a4eb-400b-4854-ad44-bc9218ce560a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8f0fc4b3-6300-41df-acde-437fe75352ff"
        },
        "item": {
          "id": "fc96e99a-c52f-4ed9-b959-f6b14a8c787a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "402ef7c2-ba0e-43a5-906a-dd7a2f88ef97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac2ba32-a8d5-40bc-949d-0176ad4a56a3",
        "cursor": {
          "ref": "210773c9-ea6b-415b-8b42-e6226d356f33",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "09788568-36ff-4e50-89f6-2f8ea65b3814"
        },
        "item": {
          "id": "dac2ba32-a8d5-40bc-949d-0176ad4a56a3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "82446889-9a2a-4d02-b798-96f9334c61c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2355cf-934b-4971-bc91-5fed209fab88",
        "cursor": {
          "ref": "e1acd312-4589-4155-831f-527fa0c975de",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "35cb9b88-7098-4f6c-8a1f-36798375852c"
        },
        "item": {
          "id": "bb2355cf-934b-4971-bc91-5fed209fab88",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "70b67ac6-329d-426d-aa94-47ab3d627949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a6e04f-a282-4e67-982b-7d0af037338b",
        "cursor": {
          "ref": "b89cf344-1747-455c-b52a-7e3069604917",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "eb26212a-ea42-4fa9-a716-e022b46b85d4"
        },
        "item": {
          "id": "96a6e04f-a282-4e67-982b-7d0af037338b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "094ab06f-b0a8-4f24-af1e-10b82cad7fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87fe32e-ee59-40bd-a121-397e93376f2a",
        "cursor": {
          "ref": "d26aab68-ae5f-4384-8a42-c7cd9acd7674",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a471d40c-fb0e-4957-b1ba-2191993b2e06"
        },
        "item": {
          "id": "f87fe32e-ee59-40bd-a121-397e93376f2a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b925dacb-128e-416d-9f8f-0b559a32216e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67875f9-de8c-4f25-bfb0-7c37ceae0e3a",
        "cursor": {
          "ref": "e57bf89b-27d8-40bd-8e0c-76edcb6863af",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f7e1a74d-151f-4f65-96fc-572a86ace459"
        },
        "item": {
          "id": "e67875f9-de8c-4f25-bfb0-7c37ceae0e3a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b7889667-ba5e-4832-8a77-3fc1d9a6552a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a88cf45-e301-4fdf-9dbf-53602f0a3bea",
        "cursor": {
          "ref": "17a8fd6f-2f92-402c-b090-b8c2751ad91f",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a0f1a0f5-2532-4e27-87ca-89a9b44b22fc"
        },
        "item": {
          "id": "1a88cf45-e301-4fdf-9dbf-53602f0a3bea",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6a63f6eb-a1d6-4491-9902-b4a8271059bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd29902b-090a-4555-8cdd-b43b2d16289b",
        "cursor": {
          "ref": "45432dde-e060-4e75-ad9b-dd1f8c969c8e",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "cb3b0ba9-a278-4f4e-b4a9-3ef3d2aa884e"
        },
        "item": {
          "id": "bd29902b-090a-4555-8cdd-b43b2d16289b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "416d4d80-205a-4920-93d5-6f3fed093be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d29146-b411-4a28-8cb2-345da5f7240d",
        "cursor": {
          "ref": "c0f3bee6-1458-4312-896a-048d1451b327",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0fd5bc25-b75f-4d7e-84c1-3e7608bd3e79"
        },
        "item": {
          "id": "b8d29146-b411-4a28-8cb2-345da5f7240d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "61d65c79-e793-41c8-bea1-1797bfbff5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd5073b-2c2d-4420-8b2a-8b3f700935f2",
        "cursor": {
          "ref": "9ccdd013-051a-4af8-9021-fc1d1c05ab17",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2f564d63-4070-4b07-a6ee-0cd9de476f2c"
        },
        "item": {
          "id": "cdd5073b-2c2d-4420-8b2a-8b3f700935f2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fe92f88c-6304-45d4-8624-2b7d76e4bbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029f585a-170b-4fb9-b318-ed17af07e425",
        "cursor": {
          "ref": "25009d8d-6aca-436c-a4d4-160100544769",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "0039d7e9-1e64-4567-9500-1c669c7e4849"
        },
        "item": {
          "id": "029f585a-170b-4fb9-b318-ed17af07e425",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f2e88770-afb7-40d6-a5f0-661bd9f71591",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24093723-57f9-413a-8a95-1d1483e422c0",
        "cursor": {
          "ref": "f5da62b9-995c-4e2f-a3d4-4f69e2f64de6",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "81597647-a301-4f3e-a42b-9c1c1d330a35"
        },
        "item": {
          "id": "24093723-57f9-413a-8a95-1d1483e422c0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e8dbd808-333f-42a1-8d63-d98786f7b0bb",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a9be05-a1f7-4ca8-99b3-e03a3211a10f",
        "cursor": {
          "ref": "cde6bd0b-ab93-4617-9f10-c9ad6c648cca",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b1c3e705-74e4-4cf3-9a0e-495d08a61000"
        },
        "item": {
          "id": "37a9be05-a1f7-4ca8-99b3-e03a3211a10f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "62f29119-51bf-43a3-9a9e-a512c2098119",
          "status": "OK",
          "code": 200,
          "responseTime": 3320,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c04db43-5422-4823-879f-b1538d808e22",
        "cursor": {
          "ref": "d895419d-f621-470a-a88b-c10cb703e8f0",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "cd926f5b-4876-43f1-813d-1128621e4e8a"
        },
        "item": {
          "id": "0c04db43-5422-4823-879f-b1538d808e22",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8b5124aa-b496-4f0f-b9a5-02f205c85417",
          "status": "OK",
          "code": 200,
          "responseTime": 3524,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f32a5bf-7b97-4617-8bfa-8cd7b747929d",
        "cursor": {
          "ref": "619a1e75-ae6a-4f07-ae2c-b40d2212380f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "20197d21-69de-4c51-9dec-3aab4d61add8"
        },
        "item": {
          "id": "9f32a5bf-7b97-4617-8bfa-8cd7b747929d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6c4ef5ea-7a78-4f0c-bfca-e79cc33f6018",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 134,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f32a5bf-7b97-4617-8bfa-8cd7b747929d",
        "cursor": {
          "ref": "619a1e75-ae6a-4f07-ae2c-b40d2212380f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "20197d21-69de-4c51-9dec-3aab4d61add8"
        },
        "item": {
          "id": "9f32a5bf-7b97-4617-8bfa-8cd7b747929d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6c4ef5ea-7a78-4f0c-bfca-e79cc33f6018",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 134,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3dd20b-122a-4656-b933-c4ba0a8da935",
        "cursor": {
          "ref": "3bd03ae3-da4a-481f-a24f-097b7d349a3e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7d0f18c5-c64d-4fde-8ad3-a16f48ea3d4d"
        },
        "item": {
          "id": "7e3dd20b-122a-4656-b933-c4ba0a8da935",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ce9b5218-ba35-49c7-9b28-802b8b6e393a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 192,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a44966d-ca11-4de4-a19f-2a209b1be7bd",
        "cursor": {
          "ref": "2948660a-7597-47f3-b17a-6234c41b7b6f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fb26b5b9-4d3c-4d12-ab76-51c060d833ae"
        },
        "item": {
          "id": "4a44966d-ca11-4de4-a19f-2a209b1be7bd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "78f310fb-15b3-4578-91c0-e0d4288c1319",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}