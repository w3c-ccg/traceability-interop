{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2d24c7be-a8b1-4ab4-8c00-69218299ba7f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e16ae85c-4196-49e5-8e58-1f334f78442d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9232e722-a389-4ff0-b73b-c2ed9975eea3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8afe8363-d672-41b0-88e9-9848008c2b89"
                }
              }
            ]
          },
          {
            "id": "45c4e844-ef1d-428c-8979-9a335c889ec0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "033cc90f-ded8-4cb4-a053-0b077dda03ab",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "15a8ae4f-993b-48aa-b05c-d093fe3ebf03"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ff23d55c-30b8-47b1-a870-274d90e16bba",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "213fb6c4-e385-4074-8806-0f8220f101c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a08d73da-63c9-4c1d-8dca-f523f34124e5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75186a8d-d7af-48a1-b8e9-088a7f4ff2c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a63c685-890e-4c2f-9c76-14ea2e2dc911"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd863a30-94cf-45e0-862a-3f8650e2a4ac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3b2746a-5ba3-4e0f-8503-8d51e71f4965"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "927db723-bfa4-481b-bb56-27a9e0bfa345",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a73e7e8b-1319-4749-b88a-13a52777fe9f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a9c9e48-d2ff-4d28-b87e-e6f39101c530",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "98dc26f8-d61d-43b4-9895-2e39887c4ed9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2a8d62b-dbbf-470e-b759-f232e0578e3e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1424379-8d78-4d33-af24-efefa20dca19"
            }
          }
        ]
      },
      {
        "id": "fb76b020-51ec-4ffe-80a4-ecd1c98b7507",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ae9b73aa-5de1-4ba9-afe4-92e1c660e0a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7d40f55-5fe7-4086-90e0-b549ffb2fe9c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fcb6b7b6-4d12-4508-8c7c-4de4e8b95d41",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c162e38-186f-4ee0-863c-038ff34dc78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15ba792b-798f-41e5-a25d-3f4dd1a032c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f191c782-6b48-420d-9967-3d37940d30e4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73cc448-9f51-4df5-951e-4738fe55aca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "333a3656-7eb8-4630-90c9-52821f35a654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25906218-c44c-4f53-a8d7-239f590c7204",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960d052d-4d1d-40a1-a16a-608c0af099c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfffe354-e67b-4f18-ab52-f9c64d88ff5a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17aa2e5e-01ec-42ea-b66a-066e1b32027f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9382834e-420e-44be-b6cb-83076c39dfa4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75718247-40a4-407b-93a2-a669074a8d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a187a99-1330-4a95-8dfe-954f0084b988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b340daa8-28db-4ffb-bdfc-ba391de06c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aeadd02-b3cd-4df0-b473-ccc504453b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27de28ad-d314-46a2-aba3-898a427ae2f1",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3433c028-87c4-47ac-ab18-38594b566666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08feae39-2edc-40df-8c4c-1c6308319eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d560e9d5-677d-4f25-87b3-d0ed361eced9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "cc55a015-ac13-46d5-a888-56bc42dc22c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ff36b4ff-2730-4a42-a0b1-506a93843473",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d5cd1b52-c97f-4f82-a063-166be275471b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50587726-b01d-4f42-bac0-82b516b191e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b870062c-c518-4460-a6c6-53ed3aac8d45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2aefb2b7-5b54-4aac-8f08-fe91aaf0b2ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "584ae181-a168-4a41-bdc1-eb982d1d2163"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3bdf0f7-485f-404b-bcd3-e58b72754304",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e728e36e-bd8e-4c49-a1a0-9891e3b98345"
            }
          }
        ]
      },
      {
        "id": "20b44e0b-8147-4128-a55b-95c59d48f4bf",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9423ee81-9861-4c12-af73-f79080bc7634",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74694839-d601-4974-87a4-386babab2e93",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "102a2743-1902-4e4f-80e1-a012d316a399",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0228f8c0-27ab-4db1-8e17-04b45512bf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9010d6be-87df-4083-aad5-7087f92558cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3071c46c-b53e-4ee4-a02b-4ccd761e2a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f56a7a48-fba1-4421-aac6-cb3ef63d5a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fffde3-c521-4c2f-a3fd-19f63912e4eb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ddfb30-de8a-49c7-b46b-108d07ddf645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e2c5d8-0c0d-403d-b03a-95bf09c76b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d470c58-84fd-4e77-9d0e-279d3cfba2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e602c46-9a24-4cd6-b661-4c2a68e158dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2146a921-5da1-4769-a51a-6d81a44b4179",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe11792-8bf2-4a10-946b-5557bc393569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fa8237-3c60-401f-bd2f-a46d043b14fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986ed501-44c2-4689-bc32-04733ac13135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e104c9b0-58bd-4f4c-96a8-9ad3b707d23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a163d38c-1a3a-4a3f-b937-33c475e393c3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b18f80-ebe9-4d72-bbb6-440753f5adf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "062fea83-cdd7-41fb-99cb-77e056be639e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810c970a-3b48-411c-ad23-2fb7abed092a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a56a9f7-93e5-4563-a19a-b62eeb417d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb3319f-4e7b-4510-88c3-724252488f00",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce55ebd-4232-4c39-b95f-9f3ee9cce4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc857fa0-71f5-42af-a1a3-3e366bd55f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ecd6d9-2f83-4262-99b2-bab1c154380d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f74d5f49-0d7f-4c5b-a44f-c9eed2f8c498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5831f37-7872-476f-9772-038dbc9bd512",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924874d3-173b-49bf-86e9-36550b32686f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa2f163-bb84-446b-8d0b-8f81d04023c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d444bbc-1ba8-452b-a11f-87335882edb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "770e98a0-8a2a-493a-b473-091094b3eb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c146bf-5700-4a29-95ec-0327999bf37c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75919910-6671-41e6-b9ea-600b430c9498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02c0da8-4612-4fcf-b942-5a0058afaf56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dc8621-6e90-4958-9d0a-52d0c4f69c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "715a0c20-37ae-4779-aa9e-39c9674f3f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0932bb36-fd95-43d2-aad1-7906ccf5d2c1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5eeb842-a697-4d49-8d2a-a74104644e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36af9eb-9e20-48c7-95a6-f6ecab5849cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e71195-e0d8-406b-9daa-38005d579e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd1e8750-f5a0-47d9-9ec6-77d6df667824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a88574-709e-4f36-a3d5-7279f23b00d4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e605974-055b-42ff-aa9e-8eeb4c368b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d736011-2848-4363-9279-62b1bef93710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cef9dfc-294d-482c-9433-51b9bbf8ad79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8088e283-6fba-4646-a36d-210cf3283a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cd9edb-7aeb-4051-b4c9-c54e7b4047fc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff6df8d-59df-4388-a3b3-936b6f48eca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23ff232-38ab-45e9-9a1b-70c1d1b50665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf34c340-e8b1-4974-8cfb-6460b52d39c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02a82331-8568-41bb-90d2-ef857618bc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3418be8-4bd2-4835-a238-d3e707345039",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32704fdd-f13c-4a21-8702-53e9fb6de81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d79a97-08a7-41ac-ae1c-3380d1e8ab23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cba7f9-1634-4705-a0e7-d2159384db4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5fd2f37-152a-460d-8109-c5de7ca51a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871eadba-4df2-4d9a-8b5d-22b92d47ce78",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9f02f6-76c1-420a-bf5d-25fb8003e364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beabe6be-5c63-47b0-a6d7-7c85bfb3d1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad78f021-d4b8-4d37-8bb9-64e6c4a9a955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ce84b00-f6a4-4583-b7d7-ab79837fad2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70652526-48f1-43f3-8584-7946cd5035ac",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0a613c-11bd-4f1d-9381-94c51580b509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48404a92-8d23-44c5-80bc-0b2ecd65670a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b571b02d-b00a-45be-8de4-52c47d3dcdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4052448-84da-47df-bd61-29674aed9c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13d4a4a-790e-48ae-a93d-fc4d8dccd0ce",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ce134b-e115-451e-b249-7ec614359f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d586ac6-1158-4119-af2f-7ba579dd74a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6508cdd0-777e-489a-b4de-d288e7bd6e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd7d4049-6b0a-440e-a0d3-39cebb977b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1124139f-ddbb-4219-b647-50e2e9e87fcb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209f7282-def9-4c21-ba94-c62cf60b3a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028f682e-6119-4347-a028-e5765f46b8b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb37642-b13d-4384-b990-4a74f50abccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a57ea026-435f-4d90-abd3-bd2ac2dd1efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4535a2-4a6b-488d-9312-e5875a10926f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93235c6-22ee-4053-b7fa-2ff6d996134d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a97ac94-7747-4947-812b-f8b1f89b8d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883b05f1-2c6e-46f7-9c34-6b47cf682773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "553dcbd2-a08d-4704-a137-2cd2e944f676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c44c5de-ecb4-4f6f-9fce-4d85d67049f1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95bd567-8eca-4014-84ee-d350e3db4bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7628bc3e-db8f-48ae-93ad-99ec0b73235e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e839cb8e-cc18-402c-8723-de704ff38d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b47f7193-09c7-4bca-a432-8de67960e9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0202ec-bf84-4cc1-9873-9beb80837455",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327a48a5-c34b-4082-93a4-abc500bba6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96dc7420-a725-4b20-b21b-22ba538dddbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d20eeab-b136-4852-b086-bf47216d9816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "03cafc60-17ae-4c4d-96ef-49c206809272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f98eec1-0e15-4dfa-9b23-c6f383890c63",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6387507-da37-4e13-bc5a-4119443993f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22458e27-f3aa-4399-9a48-50eb0e6f054f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bc2b59-f126-4e82-90b2-b9e6a7f31f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca2aa2e-f858-4f30-a222-0b5a0668015f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d72d03-1fed-4843-9906-abbc02be6e86",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b287e3d8-a353-4c7d-a82f-d2966f2a9032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6b9609-fac1-4d71-b9f7-fd18845a06cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283c3f69-c343-4589-8971-39ea4c3ee2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e36c36b-558f-4404-a03d-504e02ee0ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2b4bf1-c4e2-4f21-a805-c88bb95d1b8a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c1135-5453-4fa0-87c6-a0f6afa8e4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e26d7c-0d3a-47c9-aaea-25a103ea34fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e46ca0f-9d7f-442d-9872-8552311d4c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3daabd0a-0871-4243-8e30-29f76fb78726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b19d32-83fb-41e0-8a09-52dfdd1d7ee0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee8fdff-14de-4a60-8b7d-9b4bed9a37ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5e882b-ef70-4f1a-9f64-77180641db97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c688ac-8d0c-4cf7-b3f4-d5a88d434bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97860965-b8ab-44cf-a681-6c61fe9c78bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725b90ec-71bc-4cd0-b16c-7cdc21ed7d47",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4b6958-404c-48c1-9fec-49f12d9aafb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e276ea4-14b8-4b2a-926f-a0a9d3a35119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f75cc6-ca93-4e42-963d-1c9168cdd28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c90fc54-7602-4f21-a1f4-cd56585d1254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9997b29-d4ae-47b6-9f64-9b2befa3ef4b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142a05a7-3d98-4ed5-811e-d8ea95909b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2433f2e-82d7-4b1d-959b-0c4174619de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf669a1-4532-4b47-8735-20079cac1fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a207471-204b-46c0-965e-03c3b24dc0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479eccaf-9834-47bc-a43a-e4e886689839",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbb8d95-ae55-4160-b50c-695a809a0909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de31148-c8cb-4bae-8c09-c98790ad2511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117327fb-e809-42ea-854f-b42058929067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b66f5574-2f86-44da-9332-3eca160ef0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828d30cb-760f-445c-806c-0834fb710a38",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320f9e8d-13a4-4854-baf5-2b1720af0767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235e8a8e-bcf0-44f0-af8c-87400f07214a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d817df-7fb9-455d-a86b-e7dff18a2e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "da9dc9ee-de61-4dd7-8f65-838a51077e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bdd904-1f5c-4575-ba1d-677c63a0f025",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc81a6b4-53b1-46a0-9a5c-9177b9da25e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11eb47bb-0b37-4de9-9fea-185840adabb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d430adb8-e030-49da-a6a4-f93b51313d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5edc89-1162-4bd7-924d-abd333d58ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c344f7-c054-4821-80e8-74b238bf7390",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7db9d4-b521-4079-9af2-2cc6a871ae51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887e65f8-e1a1-4571-8395-4562a381a05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3721831d-e371-495d-9c3b-c9586e08b02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15894fe-b9b6-4e30-9342-9b22c4b7d85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99ac88e-0197-42bb-bdb5-bcdf3f58d647",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c819bd3-9965-4171-86be-47e312b3ae1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037c13f0-2ad7-42c4-b495-0cb7ce86465f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4e823e-efb4-46a0-a7c9-c55b83aa7ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b24bb605-fa4b-4872-a087-c7307020c7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5143178f-95a6-4f81-8ec1-6965179d9857",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823263d6-8e3f-4810-b2fc-01197c9e5191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714a6871-4dc5-41d2-bf8b-a5c927eca8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9426d4-9619-41bf-9ea0-985d1bc83cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "815a2127-b8e2-4f0e-8db9-183c991be8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59454f45-ddc5-415e-9830-98330ef089e7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6078769-f1f0-43e4-8c3d-b051e0a083f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efccf715-b6b8-4f8a-98b8-94ecdf2229f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcdd3e3-e205-41f7-ae8c-1b01cdd76dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7752456b-abe3-4851-98e8-2ac0c277817e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ba59ba-b32c-4ecb-9f93-1b6a660f86c2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dd5f80-8c44-4431-a618-529ec50fde8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f383f093-e67c-4cb7-85e5-4151eac70024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b65739f-4df4-416d-b1f1-3e8db6248b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f7b9d3-528c-436b-8f02-fcd97a24f6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a3fbf4-1455-4ed1-8efe-78fbaf7a3223",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba563d2e-ce1c-4adf-8072-c40486e8047e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fad06b-38dd-48a4-b400-42ac36f2b2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2e191f-e320-499f-92fa-c2b18d1a92fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86f2ce89-acfe-4277-93c2-80145b39a9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e92d31-985e-43bf-b5f9-6bf1ff4e5e77",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbcf174-d4b2-4d0d-8d6a-0bd518b53d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee4c245-2746-46f6-828d-a359ab30f39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a090a9-4946-40ce-b865-03115bcbfaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f415f5-9722-4540-845b-93b198c76186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc5823c-129c-4e4c-b257-1e0384b006f3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6237497d-3afc-42c3-b1e9-0d8f680ea81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e35566-3157-4216-8092-cb240d4c5af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba074abf-6a4e-47c5-b4a1-0bc18c9a0c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "95006a34-7275-494f-9032-3fd047592f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfc5f7b-97f9-414d-b920-66515fbbe663",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43348659-0da6-4967-9e33-5c390f100bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1560a49-28d7-422c-88ae-d8c5b40fc93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e1a1e4-4822-478d-8d4f-5f5659780c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f77cd26-8814-4dc2-bafe-54f03b3bec51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e49f8d-caef-46f0-81d6-1b97b202f0a5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b467b43-f5f0-457e-b1a3-a822b35ecc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6436044-e254-4cec-bbdf-a9feecff2a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a5e75b-60df-414e-b3cd-e5fde9d230cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f89dc45-8058-4c93-b61f-c709437a515f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb93ae8-88ab-4c12-9add-72c0bd301571",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1114d7-b561-4fde-8ed4-6d74f1f8eca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537f2bc0-bcff-4d65-b44a-17f63b19e35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69fafc7-2a1e-45a2-b105-c3fcd3474163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7caff30b-8733-44ad-8d01-4b08dcdefc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b110df29-cec5-42df-ac69-72f0751d9e98",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1f5e0d-ac03-44f5-a04b-e027b2c562c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e574a8-1253-413a-b3ab-26fa96e3bdd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e805f729-58d8-42e7-8e26-5b88a356fc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e749c0-ff92-4e6d-b3b2-451e253fec06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a88146-3134-4a77-b367-46a0481f8f52",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94eeff12-3042-4b94-8118-15be59c661cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3c6949-9f38-4dbc-8471-beef6f8f4f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde375fb-d1e2-4fb4-9ba2-b84e8905c619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "403278a1-f7a3-4309-a23e-25e9d6d7465e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0e7ce8-96f1-4825-ae6b-0da5e442c29c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a4b666-1c3f-4c99-be7b-14921538d7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798ecebb-6471-4db2-b2bf-ccc0cb2b3b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c6cc62-e48c-46dd-b6db-bd166c07a7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2f050a-f2b2-4509-b047-e0c13f6ab59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69a2974-eacb-47fb-9cbd-73daedffc8d7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bb4758-c9a6-4545-a659-507d23593597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9837c9e3-e396-4347-b792-754f353dc5fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bfbbd5-9d44-4b82-9a71-430af8462c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "925c99c7-7a3e-4e35-b9d8-1714542a8b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5a86ef-30b9-4a26-b59c-e0b75374a1d1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f27a07-ac6c-4ec8-9c38-04b291e02ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c1c726-bc5f-4c20-ad4e-f69d0867ed7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90a3fc5-87f7-4bdf-ac9b-66628f22440b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a118d625-dcd8-4fa9-95ee-fa2ce3ed38f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d7d4e8-35f1-459a-9ddd-d0a0b11ae9d9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2daf402-5837-4a99-9cc3-1d5c1de240d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e52b2e5-3a0f-43b7-9d9c-873b4ca298ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927c5f64-062a-43db-8495-e56c96b82a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9940e6e-35e7-4d71-b594-3efc4f19f408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c5ffde-e15a-46ef-adb4-d948a9073d8c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbb25ab-971c-455f-acba-7c7dcc8acb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e944222-ab33-415f-88c0-f8ca21fa4d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d156c329-0a24-49d1-bc6d-773e573be0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e70ca431-88ac-4d71-8280-36dba5194f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafc206d-84a3-44af-ab97-e12f0d638f2b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82b3d4a-3b27-4408-b7e6-e1417b94da23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33d58e6-a002-4c4e-ad25-0358b3e0e11f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758b339f-d182-4ec0-900e-edee2ff689dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88e3a3c1-c6b1-483b-a4f6-ed4c7d243123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d062b3c7-3d7e-45af-a54f-c012c138fe3b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458a3af5-41fd-4a5a-99c7-9382ed47cd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642ada18-0d85-490b-852a-edf3f29b240b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c49203-f3aa-4a9b-a457-93f401d20f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "902ac5ec-89ac-4ed6-89f0-03065f672241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e4a7fd-9a1f-4aa4-bce0-349e7426a1a1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b823005c-ec3e-415e-ba0e-a3c6a77df391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97bee896-16db-4519-9ce0-58d79b6a934e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5585f270-240d-4736-88e9-52efc001507f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99084e2d-7a3c-45dc-ad24-46c31a67107f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072845c4-4512-42f4-bfed-17abbf2e19b5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59199a6-988a-48fb-a387-ca7e0b6e7abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5fdea0-4344-455e-a6dd-f6a4756d2102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad62be3-5717-40cb-95b2-9da5110c20fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbdac914-2fe6-474e-ba4c-d021e7fb37fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3867ad84-70ec-4916-9506-95ef664be09e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55e8f07-9ace-4146-96ca-0ad51a1c5781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4bcabcc-c827-44ec-b207-910b85fa1ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd1cf63-1750-4a77-8073-7ede82d2fbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d704b40e-f903-4618-9ea7-5463e39bbc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e20d5e0-45b4-401e-83ff-92fce8466d22",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d26c4ae-a630-4708-abfe-33f694148d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769829c0-dbd0-4829-9b56-6ba330a47520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e44b7e-2c1e-411d-9818-02fed4ff7bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1b8db1-e193-41b8-bf30-68341e8a4e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21af04f2-6249-413c-8962-6c4042f09f9e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c0c089-7540-435b-8f52-76339a2ff36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9c4fc5-dec8-4b51-bc4f-6a5a7b975749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582290f5-634a-4c5e-b85e-863a270c39ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "52994490-9643-416f-a8c6-47bf33d859b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12c469b-165b-485a-8389-687308cff51b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45505ef4-ef04-44f2-bd81-ad6a35b0421d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2c878f-1cc5-46bd-87a4-e6461c5ea139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0582a4fd-a79b-4337-a0da-8fd7ecaca54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "193c6ffb-70ab-4834-bf40-5c5cc515271d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080e0986-829d-46af-938d-fc2c1eff81a9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8757bb3b-4fab-4e75-b7e6-a418d38c6025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3f6b32-bc79-4640-9831-70bd80b322b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa5c552-f826-460e-a67f-e70563fe7d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9766a557-8693-4127-91e9-ac332df7051b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad512a7f-3a26-4a53-aff1-8e611709bd38",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b440d72-b7cf-4897-9a88-822abae74143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612c1b08-ec37-4c1e-bdaf-96ef37f7c5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18cab47-ddad-4ced-aa8d-25fd53dafe21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29e9c3b9-6099-4866-ab5f-3b4dc42dc671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d6bf4c-7036-4796-b014-78ab80b1afa2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539909d5-5b08-499b-874f-ee179115f0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236cd72f-bae1-4a3d-8fb9-dfd4d2f4a3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00326e4-2ff9-4c72-b779-bb945af7c331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "353be1e5-174d-48bd-bdd2-ac3563b7fe15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52795476-b20c-40a2-a1ee-c09a5e00085e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4199e76-f358-4076-9284-bbbd11425145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a8afc8-cd42-48e1-8a31-6b55b34d6c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08008b0-661b-4678-86cc-52af4a37b05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b8c75b-a489-4698-a8aa-b357585125e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1177b19e-9864-49fd-aa9d-1860c0ad3948",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb414538-13e5-4f96-9f6b-8c3353e6bcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9baec4d3-b1f3-4ff7-9235-c45654afe053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26edf326-5ab9-4b5c-908c-84aea89a09da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9605cafe-81ee-48ed-8eaf-4a2749f9d0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58374ec-10ca-4b9c-b38d-cd669b1c1e29",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ab33f1-6a62-46b2-a693-19368faa2711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f10abe2d-367d-4b2b-b18f-800237175333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510e4a20-5e3e-4ed2-860f-33034d36d7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "be54a386-5c07-4c91-a375-b0f3207406a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5621c7f-319c-4507-9c7f-fb24437deade",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e243f7a2-9373-4729-9eff-058055b6d061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762b5077-9855-4067-9bf8-6c0e608acf98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9b3c02-a0c9-4594-aa86-d627434c8901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "845e5493-2b4e-4aeb-8f17-85fe94b12b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4527239d-09f3-4dd7-87c9-af7bac86e7c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11e1952-f9ed-4c02-be8d-b4e521a7f2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b046ce4-c022-4c8b-bb9c-7a3817362ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026c2da4-57e5-4148-b6f6-009a54073280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfdb5e54-b944-44e5-b96d-ccb9cb4e70c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c23152b-bdc2-4f46-be7c-6720695abf3a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a24a7e-96ba-413d-82bf-35c98a1e7c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e6f0cd-0e42-494c-86b8-b8fc2e2cbcf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9862f4db-75d0-4ddb-8f02-cba9fe1867c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b122b2e2-c26a-4f57-929d-2d33264e8f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efb1935-9cc1-4c6a-9a14-df868968e569",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff080599-2d64-4dc7-b21f-602581f77aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f972714-8d4c-4124-b3f1-a18b35570039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1380db7e-8610-4dbf-944b-dd39378c1c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "085c06b0-ce58-423d-b09f-6b250cb7a745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70b1ad4-49d0-417e-a644-51545c35bb4b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3f1f29-50ed-48d6-bcbc-486ed5fcc6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874e573b-1dba-4328-b635-4bf506c54c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8777ac-bb1c-4524-bc57-e3fb9d35221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c12d1c6b-b376-4558-bfd4-2b47171d01f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44205564-8d76-4bf1-b106-60500429e765",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742ec6fc-42bc-4492-8398-ec3af4005505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f5a271-4f56-48dc-8e03-4d481f7eab5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2941a3dd-6438-442a-86e9-f005917ede1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b768e16f-dac9-4c37-bf75-8c34db9ccada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4743d573-276a-4edd-a13e-0f3777b3ec89",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c06979-2faf-41fa-8a45-4db6171c4c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67da947-8dda-48a3-917f-1b5c0b9ad116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac45fb7c-8905-4a47-b4bb-af126be885aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afdaecfc-3753-4078-a2fb-0652581f90d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bec690-6c33-48bd-a399-1948dafb36c7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c90aa7-a926-41c4-9937-661b33d70243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2247a9c9-0a7f-4c80-86c0-126eddd82f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a252651-bfe5-4aa0-bcb5-e719f4e447c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd467bf-4f2d-436f-b5c2-42f6113dd3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6beea303-f446-47ec-9c4a-3a51bc901b1a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6ac4a0-4980-4ee5-b253-4634efbc0da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abef2610-e745-4cb2-80f5-ab1aea653fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368b790f-6567-4d24-88df-99d041d03e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3173b994-24df-4ff4-a035-b56e5964b601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26fb505-0d3f-4380-809c-cb977c797bbe",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e258df9-58cc-4393-9ca2-65c32736e895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ca2b7c-2a5c-47ff-b8b1-e9a60030f81a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57e43ce-5704-465f-b9c5-2f67841967fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9604911f-53b4-4c22-b37c-6dcd5434eb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc12460b-f432-4e38-9ac3-014c435b2a74",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4ea36f-fa45-44ff-8c84-6755990f8330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6c7386-28c7-4fe2-b132-e7a6f4014fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c052a08-b235-461c-82b2-cb1e02582c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6438f8c9-feac-42e3-96f2-b410f7278317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fcd187-ae55-4453-b2db-a7a29694002b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b7e746-9412-45c9-8ce1-c02a48333704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0931814d-3f9b-427d-962c-d7fafd6fae4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64acfa57-bc90-49e7-ba7b-7077a6897273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c84a91e-5c79-477c-b845-b7e3115b48e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f64d2e7-9e33-4f74-9d40-ff9eec541605",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c65102-8ad6-424d-bf81-66c9122adcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29167f1-e600-404f-8df3-d63c3937831d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ff7361-5573-4921-9d3f-c108ca576742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17b15308-5dd4-46d6-97f7-7d0767404527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9391e6f-1953-40b3-8257-e22f0bfaa635",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c056989-98f0-49d4-b301-8a9305a616a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0dccec-81d6-46f6-b07e-302172067320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2fe1e6-18a6-4019-a656-647ecfbed23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa7040c-b359-46bf-9d0f-7a9266156a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a879722-5b25-4d8d-88ca-352cafbf8f20",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43606bd7-2329-4aeb-a481-b53e3a8bd10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291c4aa2-9770-4dd9-bc42-0d31aef84552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae7dd9f-9fd8-4eb8-993e-3314c1eefc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe6c3c3-2967-4812-9de6-c922eeea5b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d7b632-8619-4461-a102-f051ffab26d1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed14fa2-2720-4ce4-8217-8ce335760b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92535c31-13d1-40b4-a579-6beeccc1bfab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702e2ea4-b7a6-47e8-8aeb-20ea5710c10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8905c90a-419d-45c4-9964-8c7463b86d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711a651d-4b2c-4448-b3b1-a627a31ec8eb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf2c2d0-49fb-49b7-a15e-8807576c460a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897d3233-8ce6-43b0-8dcb-d855daa13188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab097bc2-7628-4f36-bc02-974f0c755797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ee50dd-f6b6-47c5-819d-777a369b30d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8ccd0a-dadc-465e-beda-de2084423f06",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09460e74-e190-4ca6-be00-0f0db32cf556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f3a906-c595-482c-8f03-b0e2d39e26b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2ff8a2-59e4-4c2b-8fb9-730b41cac9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c4b4a4-4846-4302-8f1b-f671574f8adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ba2210-23d9-4951-96e1-ed41487a4276",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc38c96-f15c-49b0-968b-ec218b1ff4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc1f0e7-f173-4a6b-b43e-01b1d418afcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73190c6-b25d-4cda-be11-70bde92a2fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7e07ff-f925-4738-85a1-7899d3c7317f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12e4a1b-ddbf-4078-bac2-ddeb32671f2d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dad1da-dc86-47bd-82e0-4cd3fee398a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f919ce-c168-43af-853b-397846be33dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547846c4-13d5-4c27-a4e9-1ee4f67b4479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0351689e-e803-44a6-812d-5fe6a7c8a895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e86c00-207d-430e-80ce-e8f742f93cd1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1eea9b1-02d6-4e13-ba4c-72eb8df96d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fa150d-6e20-4f03-922f-ffd835bacfef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8c4aa4-3bbf-48c9-8c7b-949bced86dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae42bf7-a228-4c6f-b494-58bacea0d074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a17403-f723-449b-9328-d8be2ce014b6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae56bf85-6c5d-4a89-9c57-4c70fcd826d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303d3929-74a6-45d0-8e81-7b1d3e7346ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43a4a2a-2bdc-44f2-a82f-206f006f5e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe12957-1628-4230-b9e8-ee269f83dd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c712ad30-d1d6-4d07-8fe9-75e2363b13a5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64e090a-5f19-4668-9d11-3b0b4145af44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a61fc6-449c-495d-92df-cd4ec3e88914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6596a4d-3a5d-4437-a329-7505e23190a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "286727bc-4199-47a2-801f-2d1bae121454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02578ee1-8f90-4bd8-8f2a-6466557e9a17",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482c8fdd-e06f-4174-ad13-b1c59cfa29d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5576a9de-caf6-47b7-aa68-47d823f77bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fddee9e-ee40-4453-95c6-2f5a565f91df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92bb6311-a61f-4e89-912d-e428425313dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8786a8db-2b43-4d08-9e05-65fa606ef15e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b141d3-ee6e-4328-8b6d-894dfad02bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbe1d81-eaae-45f3-943c-5d6e806a0264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29564dae-d9b6-4c59-9e26-deab493e4b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47de769a-3a26-4054-8bc4-b2ea94c06d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a107dcd-24ac-433a-8fb6-a0376bccfa12",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cdac55-b4ea-4041-ae5f-41d671854ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d021bc1b-3b99-4076-8f51-372bef80cb74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74a491f-a390-4b6a-93ff-0737fc091e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97167a59-7d6c-4442-a24a-78b38e188a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c7f94a-60d2-47f2-86e4-7a96b304d8b4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7523af1c-a9e7-4bf3-a976-b45f46c99e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c317329a-a9bd-4028-830e-35d7b1e5c278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d216f2f7-6a98-4a61-8aaf-a463f17d69b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63ed8165-6435-4ce6-8377-56592928caac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7fb5b5-f9bf-4d9c-95a8-0e7b93a92dbf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edef466-be1a-41cc-aec4-5ad442fe5372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb2ee36-e200-4787-9e77-8044291a282c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7823474e-dcb6-4937-a710-bb3358554cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1b61c1-a070-4979-8818-8ad059fa5384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9ee264-fc3a-46db-a440-15d56ca0bcde",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5955951-f63f-4ec3-bb38-dc03f6b2b9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eecc527-3361-45b9-bba3-9811c9b387d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb35d92d-b906-4227-b97f-ef4089465293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4b5e45-f1af-4342-9674-958f4bfa336f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9697bee9-fe62-41d6-b48a-af421ccf4b46",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12025e4d-53b8-4a2e-a828-642d67302f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a7735c-716c-4e95-bff2-6193f4bd102b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f67bb99-d2d3-4f64-93ed-9a0670afe5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa7498f-6add-4c45-9a6b-c3780b0403e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41710577-111c-49da-8b60-4d948f2ccd8c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb272ba1-3b6d-4309-ad36-b7dfb16df99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a079af07-5f05-4ed2-a918-98d197e8a1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8884e0e8-b5f3-4a41-a0d2-0fd518b8fa4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc5cc4f-3288-4cc1-88be-47d9c63b56b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a993c4-689d-4b6f-a406-07df88f4aae4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc0964d-592f-4944-a047-5581893a6360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b252a1b-3932-4624-809a-dac5e99a93d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d3ceec-49de-4d4f-94c6-d523657340af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe5ea15-4d80-4dac-a8b1-680fecd53dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3797e38-9745-4ec0-a665-acd3643ca854",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d796c553-3c6a-4c7c-878a-6ae409142f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4eeeb043-fe67-4991-bc35-b0cc3253c171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad89e754-4a81-410c-9b78-adbeefb87bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb44dd6-5c34-4dfd-a56b-f45cd1192694"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8c5e8a6c-51b8-4fb7-833e-896ef3664bca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21d15539-7638-4acf-a3ee-c4b4d0f1f84a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec9a520-c433-435e-b744-2824a1a16118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c8d090c-1850-490f-b160-7c378d6f9d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1118202-975c-4fd4-b72c-fae7ec419524",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf7238d4-4263-4c42-badf-1564ff93ffc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b32279-566a-4a5a-a42b-89b84105f185",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5d93a3-de39-4d95-a607-0cff6f8d2705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4ee7b53-c0bf-4d4c-ad30-8670f888e3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c2328d-5399-412e-acc2-3ff638357202",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fe6bcbe-e968-41da-b18f-9d13479a0f51"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1e04e48-4dd2-4236-abf1-0f5abe75933d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e11fb20-ffff-4c71-a508-75c42aaa2e8e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d3da109-ad28-45ef-8c59-28a5708ee486",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12fe440d-648c-4355-839c-948fbd29bf3a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "28962346-87c4-4ec1-9b83-24a3734100b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b7ee5c2-b7dc-489d-b9e4-951af774841c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "09bcca81-cb1b-43ed-8fe0-992bf990f7a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7cbd9ba7-7abc-4ab5-a4b7-ceaab1255626"
                }
              }
            ]
          },
          {
            "id": "a2bd6a0b-ea3d-4a1b-a2ec-46fe330457c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "587ef188-fe6e-4692-b64e-37c4b3fdbc02",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ede5d640-5712-4d80-aebc-7a203dca9543",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12d7d69c-cbac-4941-ba3d-7fc7b8797693"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8f4d65e-e8bb-4c04-8f99-54c79a5711fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "31320992-7e68-429d-aba2-ac2078f1a7d2"
                    }
                  }
                ]
              },
              {
                "id": "27b9ccca-df81-462c-a1bc-1380bcfa9340",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8be57a91-5a19-45b5-8ec6-90ac831b823b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90ff4ef4-9aff-4a7f-9f0d-b13df4165daa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a8ea6ff-906a-4091-b1e8-23d4bb099537",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "236f3928-63bd-4855-86af-b7c2dd6433b7"
                    }
                  }
                ]
              },
              {
                "id": "f4893a8b-bd92-43c9-b52e-f9d50bfaa6fd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "613a14fe-4c1f-4053-9666-a4a8f69f35b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2504aad2-d0a6-44c3-b455-06bb0f0b87db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7c19976-c2d3-4d30-a2e4-72ca6712b47d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "72813efe-e0dc-4d8c-bfc8-73734e5c1e8f"
                    }
                  }
                ]
              },
              {
                "id": "d14b3065-87c5-4777-8546-ef8bb7b13450",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c20c231-f6d6-4584-879b-b362d7a6b838",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f99ce36c-7004-480b-be5b-a02a45899336"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6daa98bb-ffcf-486a-9b62-01e317cf3297",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f38ff73f-8b8d-4ea2-85e0-de98bec4733a"
                    }
                  }
                ]
              },
              {
                "id": "09bd55ec-d802-4033-9838-50e5ffde027c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f687860-0740-4862-aa7b-a77e21240a72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9bdb74de-412b-4380-a31c-2aebce1e8317"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ade8be9-7107-41a7-bfcb-bac99fca51c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ed7af0dc-decb-4914-8b9a-f73e0fcac1da"
                    }
                  }
                ]
              },
              {
                "id": "1f67f588-9812-4884-8cf5-f2baadab8c48",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40d1dc99-bc61-4ff2-bc3c-ef66276dbb79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c68d5ca-8f97-458d-912e-3b9372b446f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a4544ea-3da4-42d1-aacf-b6e3925265f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "69119370-b0b2-4151-b446-1b0a8bc3ba39"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "66bff20c-cc9a-4827-898e-f029193551ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66c62f30-d9cb-48aa-aa58-c8ee0cbb7787"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ce692a57-6d93-4433-8b54-2a33f2947568",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a2ae49b-b423-401b-99c5-f9338131eac8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c089462f-37eb-48a6-aea7-e60b12dacd42",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2b40a91b-2c08-42fd-a064-d3bf455da292"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9671fec-18f9-4aac-94c1-08e7e29690c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8eb4a371-d3a1-49aa-9d9b-4c1d18a2a5bb"
            }
          }
        ]
      },
      {
        "id": "8ba36071-3310-4e6e-8c07-f583e851018f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9d6f98c3-9642-4dd7-9f87-039b6c9f10c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ec80514-c20b-4fbe-937b-0af370fcc9b8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0301cbc7-e700-4594-8506-f81cc5f8e093",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6613ace8-0fc1-4120-817a-ab1c2bad57e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7910d8c4-44de-4823-be0b-5f97f16e3fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fd7962-242b-40e7-8d7b-5a7d8ff15d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "81b8f122-0f78-4a61-90cc-4d0ee31aa572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fb409d-2447-4297-9bc3-8dd9a5729571",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969bf607-4477-41fb-80df-5bb8445f4391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0deaf87f-5d56-4de9-b470-c570f45673c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c68ed6d-c72f-42bc-9344-6842bd648f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf4151d-8839-4ace-a218-dd027fbe1d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8678d24e-8baf-4370-bede-e045e50c5945",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a132d0f-556a-4222-b794-cb7b2bc7492b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f09148-ed70-432a-9a36-eae46c5e40f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714a399e-cef8-4baf-a97b-329507ef8925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96007044-e8a4-4fa5-9462-b08055921cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a027d7be-af6d-4290-a009-0c72c2aad0bc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60a05d4-34d7-4325-bf8c-fdb477b04ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439a98d7-66f3-4904-9af6-aa2a2dfa691a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9465d6-cea7-42bc-9090-cb9e7aea168f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "441bfd5a-cda7-4687-9f66-7ad03d758c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac5e2d8-7aa9-426c-9266-ab90a2b3abcf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e0f534-44b4-464f-9734-fec32f153898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6029ded1-3ba1-45b9-b77e-084f1d9a4ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf01dde-916b-46a9-baa5-9a62fa5d42e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49a516f4-ceb8-499c-963b-7d4397e4ed98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be7e2dc-f8f4-44f4-81f7-621b781a9dc9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f86e3a3-8a79-4e37-83e9-c6679dcc83bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108124d6-88ca-4961-a5e6-c0d6543d4a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eed77f4-d2c8-42ff-983c-071a0a549cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8bf636-6fc5-4942-ba57-11a6b97a7381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830e0417-cb8e-459f-8d9f-e5b509a6fa17",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e547038-f7c2-40ba-a9f4-2b0c3401e058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5802fda-5f71-4153-8c03-f8c4cc4fcd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae78a0b-23a7-48db-91d2-68aed2711570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "de181a00-e406-4db2-ae1f-327edfb5367e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e935206-24a0-4114-a3c0-01703b9cf36f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dcc079-8e48-463c-9ec1-e1c9c027c136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0323bd2a-cec6-4b93-afa9-18b65ea8af52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe26c82-9ce2-44d4-8f9c-87cb7356cf0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be1f9836-ef7c-4dc1-8907-cbcf8666ad82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbca114-72f6-477b-b559-3a21996ef25c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01caaaa-2235-4427-9cef-74a213522ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfae3c1-1487-4e72-b6bc-543aa8891f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71809a1d-1ed7-495c-80e4-ba528f3719b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90507606-042c-4166-914f-bbaeb036a883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eecbad4-8415-419f-862a-e0a009bd9b5e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b78d46-f75a-4859-b458-8cdcf3b04d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f702bb4c-dfca-41b1-acd9-afc9e64f184e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e68e20-7f02-4475-bba4-31b612c62161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1642844-c475-4b28-81b4-f4d2ddb9921a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dce2f66-1917-42b9-be44-d2a633ed38ac",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613690d1-844b-41c3-8a2f-4763a88ff869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4917c171-1c24-4150-96e8-fa7c955137c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c68a5e-1fd1-4728-9feb-0d2530ea5036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e035730a-25e1-4f45-b0f7-3923317d0904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735ff197-3b6b-46da-82e8-5f426015af89",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c495cff-d308-4070-875b-124cac31d73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbcda06-31da-465c-af96-c4ae8e83239c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d78b4c1-9a50-4eb8-92c4-c63657d6854f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9468e2d-1744-40c3-b4ce-62e621710ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2ce0e0-daa9-4d63-b8ef-7e4ad4eab7e2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcbff04-f0a2-4427-868a-b7ead6d188f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7511a226-39c8-4440-8291-328032791336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8d2361-86c9-4434-b6d3-348530ac17bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "122bb7cc-fc25-482a-926e-90ca5b6afc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a775e5-8ad4-4837-9c6a-5aee6bdaaab6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2e26ff-2f4d-44b7-a15c-7770df93dd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a450fe0e-d59c-437d-bf2b-a5e9e755fd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999bbe8b-e13d-407c-b482-79bbe6f32b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a8eee2-94d9-4cda-952b-39fc8369292d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2efa94-878e-47a0-bcb3-b6dcb7dcf3f4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d670a569-2c6f-4633-9bf6-d5237a48ef4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5203af5-2224-4a9f-bd48-ae772b01c8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ac27bd-dbab-4c3e-8a56-b554e8f66908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f44a3a-4786-443b-9e03-67116beae96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28812b0c-7d9d-40e3-8ba0-acd8c27e99e2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785a6d2f-3d5c-4c94-bf8d-a250abb94e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e999a55-2a06-4967-8113-22619bf443e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c300c81d-8059-47e8-a716-6dca3eac85b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8db50386-18ad-4da2-b354-58d7d9a3c991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83aa0232-d323-4a5e-a096-fae8529004d9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b58cb8d-7f72-42ad-9fdd-604a32937e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae3e0d3-0874-4bef-938f-5b91f595d1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07fcb31-94fe-4465-bc85-a718cc139af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a95ea7-4bd0-4661-94c4-eabf1616a29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d20e35-7e50-405b-b147-9fc150299aa9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806cc54b-08b3-42aa-b0e1-e7d7999bcfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c960a88d-2e29-436d-ae45-19c9a862fe95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ac2434-ef3e-4e56-a624-887b15fd420b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "95ebd85f-8fce-4b73-8903-d891f2634c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40669de1-227b-45a7-9324-81f00db71bb7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160b43ae-c29b-43de-882e-af75bf83c6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c0a75a-cb02-48a7-a154-3625b210bec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9ce30b-4601-4317-a111-6697ceea1dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb1ba17-961c-453c-b5eb-089daeb1d7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1d4cff-9875-4003-8fc3-e4d68979b719",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60a6831-2a99-4adf-b057-fdff13e84c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0ff409-1bed-4e20-b4c2-f5eb4df2a480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb9d0d9-0f5f-41b8-ac8c-f8375a947a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d33ac911-63d4-4f1c-aeb8-b9f59dd2949c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898dd7e8-314a-4d58-83f5-7296c659202c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cbbe17-6117-4979-8ac5-532bcfea0e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bc6806-9c74-4be9-bd77-f71bb1659dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687fdf40-be36-4338-bdaa-f69634dcfe23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe050a0-7fde-421b-9ed2-67906dce313c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a4c9b7-fd61-439f-990b-fe2a7efb034d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6193275-8921-4c40-82e8-df79147c69df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38ed17f-a20a-4340-bf57-60d769a0b5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268647b2-e01c-42b6-8c7f-1e5685f63fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0339255e-1a25-4391-9bda-979e20122a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ddb51d-9afe-49a1-94c0-8ff755bec858",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf9c944-4597-4b0f-b1e7-e5f0af994949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42eda34e-00f0-4398-8028-a4bb5a871378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050f7e4f-019f-4759-8fcb-20e6ddaac46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "343ab2b2-9065-4c48-95bb-7b48f1ced3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862fe7e7-8f45-4a69-b726-47c0eb562884",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11db9a99-d897-482b-b2b6-0e06021db232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78411e83-a498-49e5-a90d-2b13a0241091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e453f65c-bfc3-4d9a-86f5-7e7278b2ef7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6163efe1-78e0-490c-96fb-160fd5486aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b7f1ed-4e3c-4c95-9421-4c3450825100",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca4bada-72cc-4632-a2c7-b174d6dda8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19194fb9-acd2-4d44-8fe4-379ca621cfb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ecb5ca-faf1-46df-a157-06e0686f52cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "920ade2e-9af5-4da6-b4b3-d6c1d7586731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee15ea8e-1f04-4177-8282-d908f1e02643",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7430a3a-d474-456b-9966-0b16d54c0f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85243b2e-b81b-4bd9-8fcb-129d86c46268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0500dbb3-bbf1-49f5-a49a-a4390a146c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75b35e0-b82c-4048-a5d7-015d6a961adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977e4d02-c073-4356-bccb-618d13962269",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53dcbc2d-65bc-4744-bbdb-24909cc51ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19cd706-4716-4c45-bf3f-312208d3b9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236b63c8-5123-4cc1-bfa3-d34a48d44519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5d642f-fbe7-4398-a472-eb13ddba75fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58290901-8070-40ba-b52e-b05e565ddd42",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051461e0-cb1b-4c43-aa7e-0a797919cf35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770d4d0b-c0c6-46f5-ba56-6cddd728eba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9470783-82e9-4dd1-8201-3b28fc5d10e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd77159-f384-4998-a7a4-6b3d64dab1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e23189-1a31-4819-b67b-341940adba80",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80b20a4-f27d-4d85-9ecf-8a143514ef5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe736b0d-6415-4853-81a1-69a680951cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66de78df-f791-47b6-9d6a-e67ea38ac118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba48744d-b136-45fb-805f-49ace8e77e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fe571a-d30f-4e99-9307-fc2f2097811f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f7fb7c-47ee-4a98-a1e6-87cb57288b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3719b25b-15d5-4821-85ed-fdd0a037bd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9948551b-12c1-4407-8039-aac5a13e4cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b296c778-75fe-4e72-b1cb-4d3e831efa9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca11d38f-177c-4cd4-985d-a2532eaa040f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968b4f93-682b-434d-b641-622f60043ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed58387-da43-44d2-a59e-f2b93e415a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464ac835-8a0f-4404-b12c-781aefbc7b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "910a18d5-570d-4b99-9ab5-96f54ce23c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05319098-096b-417a-8b07-303d5aa699d8",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdec8df5-d662-432a-bcf3-c2c124f204ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51f3cd1-052e-4cad-bce8-545099a42fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856bbc5a-fdbf-426a-9932-7d3fc25cc50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38f1c4bc-9269-4a08-826d-20d9e085bb84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "736426ff-ad05-448d-ab81-bd6caae86974",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfb5151e-75fc-499e-a396-5c2afb82616c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0916e2-0e85-497b-a43b-bd632a68bf82",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1916e2-ebd9-419a-b51a-f9178f6a7515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbeec3b-0e7a-4052-a23b-c51f533bd426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55cf5243-a40f-4fc4-9f56-9bd1c3ce3106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c278ef77-143c-4525-baaa-80d994f3bb93",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284470ff-43ed-4104-9a91-988a1fa33657",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdd3aa0-5d26-4b19-a430-594345ced545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed652139-0821-4e74-99a4-10cc15352bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b2a77b9-969d-424d-9544-acb2a3cc64ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b657d0f-2acb-4598-8575-ef3ce215a900",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "396fe3f3-57dd-4139-82fd-21e94365b339"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f8d42d6-0bd4-496e-a1fd-a9b536d7e60f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bab4e73-6e9f-485f-ae16-18ef4fde8830"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66657d6a-1c4b-477e-b38d-b4852ba160dd",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3c976c3d-f528-40a0-859c-e031dd1e76a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36dc1a3e-d6a6-4a5b-ab11-d8728ef7ec0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07c5ff21-b67e-494e-b2c2-2694c7807f52"
            }
          }
        ]
      },
      {
        "id": "1b6956ad-3756-46a8-8562-cbdabd8ecb72",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "59e26ccb-aa1e-4e41-a5bf-8cd99193351d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89febda3-b5bf-4548-b19d-44be1ee4a001",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1bd82a4-00c7-4d69-aa04-1f07fbceafc4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9199cbae-49f8-4de5-9038-9d877744a4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d58fbbe-0cb3-4943-872b-229025860fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3ded8b-3719-4fad-b0b4-d3608a92f34e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d5f561-c180-4265-900e-6382be118bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a5b227-c9ac-4c5e-abef-da18b2a2d879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f55950-e179-4b6b-aea0-c51d60310baa",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6953e518-e268-4a5b-87a1-f51c9794d211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a80f152-7cb1-4531-bf04-9285a9ce9f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162634db-0774-4855-ad21-bed2a11f264c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09056add-95ab-4525-96ec-a467a63a3cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7333ac7b-b944-4181-a643-46badbbb6b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d8825e-5ea7-4ac4-b962-36b1f267a77c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5e965a-1c09-46bf-8895-f23d24df2840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f7caca-81a5-43fa-895b-8503484dd412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccd1473-ad97-4846-84a6-9d0db102572b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d7eafe-981e-4f44-8f6f-9f1dcadd609f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8069bd37-e419-4d7a-a030-484d0ca855eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad04f7fb-40c2-4c3a-b044-9a920790368d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc893d4b-5f55-4dc6-95e7-f44f68e95402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf67d1a-2bfe-4d27-a98f-8b3b1034b603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bf0586-9603-45f4-b59f-4496265e6897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c05930e-af2d-4ed1-bacc-2712596e7465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd64cc2d-ae47-46db-bd83-0ea138014afe",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1133b4-561e-4f7c-8dc3-76c11661796a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cda46ef-f376-4d2d-997f-60f93a68463e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c871fee-3eaa-46d5-ac67-d42d0d468505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8107b702-ee1f-4674-a34c-31d7b1f4dd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096c4b3b-7ec4-45ca-986c-7805d364e941",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e7eb22-9947-4239-bbbb-0424680f00c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa943d1d-1486-4c46-834b-0d11fcf2663b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec97736-800e-4ae7-98cc-df2df543843e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba89e9c-1e19-4be0-8a4b-15fc1a54ba02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21882595-9abb-4c97-b679-570c8f25edb4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866a9006-ad48-4c60-8fb4-1451b98e9bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73439df1-0ef6-4c16-886c-730840cfa681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442f8ef3-1677-47cd-bd3e-1b6fad7057b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b2ceb6-6e45-4980-9a82-d7486beea218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426e54a4-4b7f-413f-b73a-c8ed14305fd4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32e5f08-3e23-4220-8990-afe3c3c4545d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a36c3b4-231d-42ee-905a-217eb5677a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "354afcc6-d0f3-4f3d-83db-980312e1d968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bbcefd-a44d-42bf-88c2-3bc4c57deb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943f7fc3-159f-4c0b-a78e-7377ca62900d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86fdaf1-f2ff-4dba-b5eb-594ff631e3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d614daf2-9664-469a-87b5-34b6c0d45d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49367f6-a43f-492f-84f3-de18766fc671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0d5152-d3eb-4548-9d7f-1f7bcf96bd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce3daaa-c60b-49ad-b836-c0974262ad2a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f32e1f-06f0-438c-a7fb-7bd3e53863b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1a27fc0-86ee-411c-8bd5-0d6c99be128b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c341db-b454-4310-8635-73a6937c6369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b580166f-ee4e-4724-93d7-e402ade1e4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d3800b-a753-4d16-b9f3-53e477f18f44",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c38132c-3603-4c30-b44d-b589a8b32785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fbc7b16-2dfe-4e1c-8fa2-15c023aff71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d0775a-1f91-4335-80d3-e2f7481fced6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c45bf1-41f9-4276-bfb2-641cd290dfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e64176-d7c8-4221-bc51-570aaaba3b93",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43b7df1-c88a-4dc2-a115-907bf5d4ef49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ec2574e-f6c1-4661-849a-2e125e19f3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98503e34-0570-4a32-8ad4-901192f7daba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b14a783-483b-4241-bbe4-166139a755a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2207f8a6-b065-4f10-ad25-c09455a2dc63",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb468650-f46f-4206-ac74-3e9a74918d9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29eeed1e-7ce8-4e21-8f28-85f7eebef856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6314ab0b-bf47-416d-aa17-6c85a1f945e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e36044-6a8c-4b0a-af62-c6aaa6dd7b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6874ec00-fe5b-40c1-9cf0-104dbfeb0df4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af606038-f234-4c71-aeb7-b9a7cee8d370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce06feb-2055-4b45-9a54-6b3380d92247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d421bd32-4f4c-4f2d-b2b8-18e5d35498e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ae4149-eb5e-48b6-9ae2-8f9ddb6f1265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255d4be9-61b0-4a41-b50f-0ec0853a6935",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94264ac8-253e-4b94-bb00-eafadf8a30b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b22a09-01c4-4177-a33e-e8c0ee9305b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1047ca4-5c4f-42b4-86ce-71d78c0981b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33a34bf-1d45-4f2c-a726-93cbeac699db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e035860a-5b15-460a-818f-5d54f7a5cdd6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2026f9c-3aae-49e6-bcff-cfacc1bca589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e9403a-82bf-4280-873d-3c1be6e1d5a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8442c2fe-54fa-48f9-ba89-58d1a6278dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e044c4e-361b-4f63-8521-10a185b42484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91be7a2-67c7-4ece-b09f-319ee08cefa4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207384ef-2ec9-4e05-93cc-e0ce11b8bb9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7fed0d-c458-440d-a1a6-e32cad6cb50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a26dc3-2918-4924-b8dd-ab66e25c1949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0719b1-f2b3-46ab-babb-773b9f8ccfe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5567a3b3-c74f-4ab3-9b13-c97042af2ec7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3312e20-3ead-482f-8d29-45b3dcf5ed01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27236d3b-1c0e-42ac-9790-1411358c0b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2aa09ba-2fda-44f4-929d-cb83bc298fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b0cde8-d18e-4e02-b0ad-a3d5a8f35639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac8334d-2a52-4107-a69d-6697c4428d09",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2474127-652a-4c84-912d-5a249d6630ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ecf66ac-6961-4f33-8832-b6d261f92b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e60d090-9a0b-4287-b0eb-17d345ec9d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb5de1c-c1e8-4145-ae24-33cb60fc59b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b35f34-7c24-4f00-8259-d123abf948ce",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155abd78-f125-4f2e-a520-07ea61139e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786183c9-3d56-49b2-a00f-f84ce7006ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f761eff7-1818-48e4-bf48-842b099d00f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b51936-7ae6-4e58-9620-fe7a49e9d796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e270e035-2ef4-4504-a672-3f1006dc5573",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfd5197-69fc-4bac-ba30-a5e620b532d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e031eb1c-0fd7-47d3-ac09-90449337985c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84c0ed5-69cb-4fc0-af17-edbb2a3757e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5d6646-4df1-41cb-aea2-529c171ca537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd256f1-f13f-4067-9d89-5ce745be0889",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ca89fc-1b28-4ac7-b508-4b1befd39026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c60d16b-7c60-45a1-a365-3464b09a7787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4186a82-1064-48d1-9697-21e3532cda85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c10d23-d5a7-4ef0-9c35-f839f774c80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6be459f-3ba1-4207-97de-aed8821c21aa",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498fc700-b623-47bc-8eec-5b03f3962007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7be9855-3724-4b70-a67c-f76fb0d9c1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8ff252-8ad5-4779-9e2d-9128f78e9a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c0255a-3b94-42de-acc5-b3863ee3472f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fff9e4d-5c45-4ddc-b07b-b3bbbfd6f1e6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ef5709-d556-47c6-b4c9-2395c5a1b9e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24f1866d-3359-4c4f-ad4a-430356d6a377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f550c287-43aa-49a6-9dc4-475f5d8f900b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c33589c-b18b-40d5-98e1-c0df87e1b75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97df51bb-54e4-41db-9bb0-a06a41641c97",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aacdb7e-0c3f-4785-8507-cb6f37075f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bb9e98-0832-4f2b-b5f5-fabe4eb50d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3369e336-d8e5-4969-8445-3902b46e7ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef693a38-6a8e-48bb-9e4c-af082e8b274a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fd8e56-d837-4cb6-bf4c-a698352453ae",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b16a6e6-21cf-437e-b3b5-2f98968e922c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6ed6a86-392b-47c2-b95a-f305937f7425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f4bd47-f9dd-437c-b38a-f0236bb0b35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881d9f24-ee77-4311-9974-571c9d2649ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5682d110-ffac-4ed9-8509-378d09924331",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c820eb-ea2b-40f5-b076-311ad5fa019f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b68f9aff-aafb-4cbf-b207-e400b31f8a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a97364-4ac6-42b4-8faf-dec027380a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd2048a-9597-4b0a-96f4-b9989ff76021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a155b903-e1d7-4711-b1b2-70df69a22193",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d7f70e-71df-4ae8-a9ad-b917827062a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8033b992-3cdc-405b-8415-3e1aa671be9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03c4815-fb8d-49c2-877a-a208c1844deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a8b3e8-453f-4bca-8bfd-9b20f6ec6371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074dae32-1f78-4ab6-823e-4ca3e13e3f09",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85da799-47a6-469e-804c-986fc2fd9423",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39a9baf6-2436-4e68-87a7-b98b3d43f7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1973e750-6fff-4662-9082-5541a2b09497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4414d4f4-762a-454f-96a5-a55cf4a86db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39106838-6282-4747-af29-d20525a45bbb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620bf95f-f596-4a01-a3f9-19b740b09ceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39dac3e2-6495-4ece-9674-a94da4c71084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61339a5-2936-4d44-a1ee-dbf5d08e6744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ab9f7d-8fc9-4d2b-8395-aa07af3263ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52c2965-6c7f-44c6-822d-1cb52dc971f7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec45b66-608d-45c0-8200-a5047929d526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11213800-d590-4c3e-b00b-3a49b68267a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724ca61b-b46c-47c8-ad99-aecb657d3aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ce9e0c-662f-4711-8740-8dc5b0849cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d323b6-4f71-47d6-8dff-36fc6e7d1549",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4e3958-e67d-431c-8c57-de8a2a82c523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab671cf-4037-4e2a-870c-0069da8c5079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2efc62-7b4b-44ee-b45d-1c8d49c62e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45037151-0687-47c5-b352-67bdbf8a956f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06aa219-1bbd-4164-8579-2ff5a88355ae",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ba3ef6-332f-4164-8f13-19fc0c642a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50f9baa-23fc-402e-9fb1-fda9c4736c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63777af3-e2b7-4f7e-8e3f-301fdf384c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2adcafbe-2f78-4f6c-9567-d740c336fa05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8c6cc4-c073-4de4-b313-87b3b77ba7f7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b210ca6-b683-437d-a8e0-290113fab940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7eefbb3-d4bb-4875-bee2-6956e45807e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5c2ce8-5004-480c-ae21-42e8a2cc119f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8a5910-41ac-4c40-87a3-1aa0193d582c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70218f3b-99c7-4494-8318-413add51071a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ca0911-6d1a-44f9-aebf-7da6f7b4a36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57faf866-916d-4632-8e06-3d274054edab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52912ed2-6ca8-4451-987e-af4c085b380a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f106206-6f1f-4eb7-9502-6a9a00a91aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be78f5ee-d0ee-4144-af59-d0160c143ee9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83532a7b-808f-4ea5-971b-f41cb880055a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1603b300-dedd-428d-85b4-be6e6d098880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2eeddf-b78b-4978-baf5-09b97304e9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9ae08b-38da-4748-bb56-62ac1e9a019d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ffb0fc-8989-4e87-b1cc-df464a091142",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8c2046-02dd-430c-abb0-c6d21c33681f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827c3ee0-baf0-4a92-9682-cba138e6bede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87e81b5-bcba-481f-96cb-6a64d12b5976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf5d2ab-bf20-4969-b32d-c1ad16a51a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f846d52b-ceca-4eb1-8084-ca996f006c97",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18584bfc-f98f-4e9e-8f6b-25735ed8bd3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b790732-1430-46c9-b105-c2f189d974c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bedad1-d1a5-43ce-86a6-a285f5f0496f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7690905-4d76-45b1-a626-1c867b7877e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0baa7262-0646-44cd-a0c7-72894ac39f13",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b8a475-225f-4463-b9b3-dd07768deaac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d55c63d-eeda-460d-9c6d-f60300f76cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc33bb7-e055-4566-971b-8cd071978ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075a75db-1814-4df8-bdcf-2354a682558c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40d13a5-e4c0-4bf7-9e30-b60bfce4a317",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f6f7de-6322-4e39-bafd-1e527d4a53c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d062c13c-76ef-4922-a108-cc263f471b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4c35cb-4d3d-4766-9b8f-e9b3663ea07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4535ff3c-5f36-4ccf-9d24-b73340139a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009c7d3b-1ba5-439b-ba49-5b13ed8ec67f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102ceb86-19d1-4972-b86d-06935111fd8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1508a0c-e1f3-4e9b-be2a-579d19ef1c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a9d09c-026a-46ea-8bee-790a93e4e51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d432e76b-b8c1-432d-87c8-4bff1f433ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d77a62-69fa-43c6-821b-863cc115675e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8a8321-1967-4169-aea4-81a0ebdc4a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa0e196-b8e0-4de9-a889-e875c22b394a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ffc828-e8e2-4b51-a79b-23641da71d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9775ab43-7f56-4443-bac2-a3ab48c76c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae8c51b-53af-4a36-8d3f-a0fd14df32bd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3aaa1a-617a-4484-82db-e4678a05e366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c5376a-864d-4675-a071-d07d8b24751c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5078903-ca21-4c74-9bf0-26d9eb27f540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf42ef2a-1495-46b6-987d-2047a8fa87eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c2d050-058b-4baf-b4d9-bf3304e5e16c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12a71aa-bb3e-4fcd-856a-3969998cbb92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12491848-899d-4989-8a38-94b4efe1d498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8170f7e3-e196-4e16-a031-7508d657129b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606eb11b-c72c-4eb3-a4dd-4c4fb34972c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fc6236-e48e-4367-a0aa-0bfc4b3f850c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e7d671-ace2-43cc-b135-ddd57ef48ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81e2600-d7ad-4730-b6ee-0058f2ae37ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45aca99d-0939-4e0a-8060-7829b3ec1e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e37c7ea-b09d-48e5-b00e-6e553f79597f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcc32b7-027d-467f-9296-a2c7daf3259d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1032f67f-d103-48b6-9d8c-107dae0bbc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf721187-5590-424b-935a-4cc9fbe072b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12be2306-ad85-44ca-8bf3-71870119d084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc43e24-07cd-4f7f-9593-10d649e4937e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01063ee-ed11-4d80-b672-1715c39cfeaa",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99543e3f-d201-40b1-a37f-615fe739a562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfc0b0a-eee4-4b58-9e6f-d362e579581b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb698ed0-a4d8-45e3-b599-d7ffd37822c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f0ba4a-6b03-4338-83a8-5cf4e14a892a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae58f86-0ead-4e40-8f84-fc46182f62a1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f274165b-0655-468d-9ba7-3f0ae61a7355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f30858-ad8d-4653-9b83-037166351c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed61cbf2-7d22-4328-b0b3-5f0be27e9835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b0e529-e59d-407e-8cf3-ba8d30dfd67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0472bc24-540a-43df-8907-97e21a1a89ce",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b13e836-db2e-461a-b843-852d4a4b2826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5710ee-9bed-4ee3-82bd-07538570a593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98a386d-8b67-4b83-8875-34398a57c30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca6c312-9a3f-45de-84a3-059c16daf5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96240d26-80b4-48e1-a650-e52178d13184",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299deebb-2ff6-4601-b6f7-c0e703e8e925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461b4c37-6d0b-4453-ba63-f9c888d68945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1fe00c-a43d-416b-8d6e-0514f8cfb99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb85370-67b4-46cb-83ee-5bc9f59fdbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ddeda1-a341-4d25-a152-fa94a4c6cdb3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5da982-efe9-49c3-869e-475b1ff2d236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0543d578-6503-4294-9d45-da1ffe1df116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e335dc9-d774-4e8c-a9d1-220a3f066edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f1c3a0-0c74-457a-bb7f-a71abf9013f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6493d533-c164-4e01-9a28-1bad0e973010",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84af873d-5fa4-44cc-89a4-7e5204ba32a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2343bc1f-91d0-48f7-9fb2-bf498fba20da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64c73f3-8d6a-4c20-9291-0309d0133079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6968aad9-252e-416c-aaee-7b01965ef533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d4c6a7-78db-473e-80a3-7461555ad64c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60aa42b5-1913-498b-8c86-3922942511cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ac3c83-8cfe-41af-8814-8e5f105c9c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb93f2b2-afdd-4b05-95a9-119ea918a19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e666d8a2-e855-4fba-b219-7ae440e604d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8577e7eb-4300-4289-b6c4-cee169da707a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312b8c80-c9f4-4ba9-a808-6da0a0c48ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8f09fe-8416-4b3a-9dc7-0630d23efada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f9d586-6962-4af8-b569-e031d72b0597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ba08d4-b22b-4cc0-becc-571963d7cb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428c8122-e13c-49b9-8b24-afead5e46591",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e85b13-f762-425a-bfc8-791b66caf8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859ca751-aaea-4431-8cd8-911d225430dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1e30e2-2188-453a-83b9-68cf676466c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d33a235-9238-4880-809c-5fd4a9fb9c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1677a1a4-db83-4f5f-a59b-a28ab60b93db",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cb498d-3835-444c-bb8d-745b1e8562fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7024e5c2-3e7b-4614-82df-4d59352e5584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16232674-1519-4e1a-b8d6-77e05e23da32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac344785-35d3-4e17-931e-16dd14ac1141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000922b1-bcc2-4a85-8612-b7b634a62302",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0d058b-e881-43e0-af05-b904e3bc2598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7c1dbf-846e-4716-b2fa-56eb44dd5ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a43ae6-9505-403c-8925-a03bf7659fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1cd5a3-73b9-467d-a4b7-06ad30809f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101f5cea-7b0b-4e16-9278-8cf054585d96",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926171b8-fd12-4815-b9e1-dc477cd1dd94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623765f2-d4f1-46a8-b41e-6cb8381add99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af104d24-ab32-46b8-93de-3fe5e4213980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c722b8c-4622-4b97-ab0e-de0a97d14c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be38d747-1c96-4911-88c8-e114527e31e3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1e7b7d-f56b-42f3-ad90-c983132f3833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8b845d-04bf-439a-9c36-d91782855304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67139d1-6051-400c-92f7-745dfac10a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd4b605-56ce-4c1e-81c8-2c980ad0210d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c733df-c06c-45aa-ac75-0b3e5c327209",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8214a7-5bd7-4879-891c-fb25a93182f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5ddc1c-9f94-40c1-a028-2d2e720747ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcd93b7-18a5-43cc-89da-a946dd77582d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e82313-cd2a-4fc1-b855-24010106be25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5692c278-52df-4a2f-a2f7-6aa34684072c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a11a8e-e174-4619-ac28-d169e4086bbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97933a93-befc-4e6d-a1ba-0ae185ff794c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5dbffbe-0f3c-4d7a-a976-82a9b3234624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ab5883-2093-4686-aadf-ea67310ce15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c603ca-bc7c-4e85-b889-e7a5e7863978",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb070fb8-b825-4386-8073-63102a1ab3ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d5a7a38-c829-4ffd-b493-abd0766684f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "339b5e18-22c0-41c6-aa19-a165e44b0e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a02205-9a73-412d-ab4e-fd6c87b0e6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954cdd24-998a-46d6-9912-d4f5c89f5dcc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fffd6c-e249-45fd-9ad9-86dd7ec2465f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d432be02-8b38-4c70-af10-3727e2324829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313fda03-b548-4ccd-8ad3-5125ba364a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995e0179-feaa-4c21-8d25-290736ae8412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190100ab-c0fe-44bb-9401-df590f8bea3b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394c33b9-3f39-4c40-b3a2-7ed35b95381b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a62575d-2667-4a9c-af73-79a909a8843b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7922128a-bbff-41b7-81b0-e82f5648826d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a725ab0-dd46-4477-96a4-d8daaec41d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793a4905-71e2-4a05-bc4d-b1289269061b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef315086-4fce-4ff2-a79e-38dc0562b498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19c11639-7586-42a2-a89d-b2dbf7f0a872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c9415d-af28-48ae-8331-405a32d204bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9420a5de-f0d2-4782-9502-26c97366a2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bd76b0-54b4-4395-bd2f-d37dfdaa81cd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f56c9d-3f9e-49c2-af53-da8bba6b0cb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf76a41-c106-4aa8-96ec-01aebb383457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabc9656-1ffb-4785-bfe3-e61677b15a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6906d10c-bf63-4c4b-a6c5-74e9d9b7bb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4c203e-6b43-4592-ad91-73b72f252c7f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabf3fb3-b0e2-4856-ba12-4f6ee9f08aa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8995d898-49ae-4482-84db-466ad40b5ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29f9c51-3152-4a22-bd64-ec4e85516373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7fdc8a-2b05-4fb7-881b-667d6f0ac6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd21e30-c88d-48a3-a25c-bffb8a6d146b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7a783c-348d-4b28-b37f-8b1f905eb46e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c86b0d9-8837-4633-aed2-b2c30307039a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68e666a-a401-4bca-bb57-2512efcd5448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f57a16-fcb1-44c0-b837-9d8fd4028c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3102470-ad41-4074-a72a-a9bbea0b700f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f8994b-aee2-4fce-b298-d5ffa94f6138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f3c6b5-5055-46e3-bf1b-1f408c73e0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5efa44-cbeb-40cd-b030-519608b3e189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa42f05-e0ff-4ed9-9a5d-88048a19a52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef3393d-5ba2-456b-a8ab-165bdc3097ca",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838c0682-0233-4b18-8ea9-0119154af2bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c256228c-467d-456f-8394-73eba8284028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f5e859-76db-4ddd-8b25-1d4b536031b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e529768-6193-492e-a200-8c316b6e3d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cd046f-60eb-47d5-816f-3780ddd05e73",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d077da4-b7d0-4d0b-845d-c939cacfb62c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be82629d-5239-4ad3-8a62-133e580f8234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a948ef87-9b95-45b3-99d8-a5e6a1e05ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631cb76e-53a8-4701-b0a2-2a59628a0717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bac50d6-393d-4f1e-bae5-815a79b5d970",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e072e1-b50d-46ff-80ab-48c25d289181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04d8cf2e-9a4d-4274-8242-04bd25f89d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92aaf42c-f5c4-4d77-a7f2-3d2e23172517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3392ffbb-a174-4aa1-bdc8-8bb393fc6ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52015fd7-14e2-40bb-8535-9601a3efbd6b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03a5ea5-e1a0-4e10-9691-505fbef0d3d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48e759e4-fa0e-4fdb-8e11-d93c2855f4da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cdb7d0-250b-4ad9-82e3-0db60e433554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704468f4-4592-48af-83d1-8f6e95fe6896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93edf77-520d-4e48-aa85-3273b3703850",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1a7079-ffc3-48f1-ada6-07b32a8a0d6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69dc1d20-92e0-4807-bc91-6cad631046cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7ed301-efdb-4bf9-a200-80155a48de3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ab8eb6-875f-4e00-bf97-13a3a9167b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23f1670-cda0-4e26-bd15-43efd075c198",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f715f8-a7e0-4c84-af13-1e8a48de7336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eceab0b-9a86-4ae0-9de1-21d0906c2a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103ab65b-8163-40a7-b8cb-1e0b67f466e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491fc02a-1a30-4fca-84b6-e2c374f44394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370a67d1-7077-4cdb-8694-852aaba12625",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68daf987-cc90-4f9c-9ed2-16cfa3fa8d95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ef89585-e235-4498-917b-7027ace995d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb843f4-e2ba-406c-9457-1caa298c0f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d6ab05-3eca-4eb7-a1c3-6c6a9be03087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3bdd9b-8fef-4a53-9a0f-b513602783ed",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de7ab29-287c-4d1c-88d8-e097cf17af85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea4276a8-2cb2-49e0-a35f-d7fafaa1e351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f31348-8f7b-459b-9c68-77121e5dca5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe87cca-b8de-4722-9546-6bd166f32074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f991be1-bc55-405c-b5c9-7e6ee9f53dff",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61d57be-606e-4691-b451-a1cd867169e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12fde99e-4147-4f50-8233-803eca32ed01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6551a2-fb32-4228-9b63-4312f33aad38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500e6bbf-d702-43a4-9591-e6f065d3fa99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368315c6-b74f-4a01-aa21-9f7e0f34945e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2edb51-40c0-4c73-b833-6a62093ed36b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff9450eb-8dca-49e1-9f7d-443b30c970ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d460e94-d9a6-4ee8-b609-ce54ab60c7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f37060-5b77-49cf-915e-11c01d1c4a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a95af99-4669-416f-969c-bab28d9c389f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f716cbe2-2e30-461f-bbb4-ebc86b6dc773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31b6970b-56b7-4af3-8aa5-52a82ee25951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8108353-5962-4f23-a3e9-191def5f7e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d571cb8e-b9dc-4251-9eaf-37213467d567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9877809c-9949-4447-ae07-a38de74f0c06",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acdf056-03ab-432c-b109-31dfc4850f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beb6b005-e32b-490c-a5b4-d3036036b20b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a643775-d208-471e-8472-11224a953b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cec7e03-d5cf-48a4-880f-9b33418ee219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d7c201-14d3-4bcf-9e08-3a40015a77be",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ca61f9-555e-4f66-95b3-37973ad61682",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba65d00f-817d-4af7-8b2e-4d54f80e505b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c157f4f-04a7-4cb4-9cd9-bf1bfa16232d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ace8679-1ecd-49c3-981b-9598d4568719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9bfcb1-7e17-4721-a7b4-460c64c41715",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310d0802-5cb7-4894-a44b-0f0a9cd88269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc1fa1ca-8b92-4e5b-a1f2-6a14605337ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363531d8-c4bd-40a5-9f47-25a579d4d529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ad7579-8079-4750-85fb-1d11f49fe566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08414376-8c3b-4c27-9d4e-8a1d5af5a41e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbc1939-b044-4f7a-ac4e-dd3bc2598c04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32b13979-4e57-4a99-a556-c95592140391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5ac0eb-da19-4d64-92b7-e5944198ce35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74aa8db3-bd64-4d38-992d-818ec19db991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bddb7cf-930a-424d-911f-2b87b15ab6d7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfbbba0-1ec5-4d42-8b93-1a1817d70886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acd954c6-7cd6-4ac8-af91-d4e690c80f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76e864e-e068-4892-b36a-8fafc85bd2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743d67b9-f044-4383-bb52-b3d0eba7bae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b897412-3d7f-4db2-a5f2-ea4c93958cb5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fd4028-66c9-4c40-a406-35e9347f552a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9a31a97-4c7b-48e6-9cc0-44fad8316aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92334c2-d58f-4757-add4-11684ad9d101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ce5ac5-a884-419f-98e9-247217c962fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603070a5-7512-4007-b323-2c10fc1bf44a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbaaea04-8679-482e-95f3-0b98780a500c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5761930-f26f-4143-a081-b6093ce85761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe915bdc-1f82-497a-a050-91a4098ce6a3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce2a01e-2c7b-41e8-a7cf-db4d9c97e68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9de26d-a470-4903-bd78-548fb185a3da",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c887a2-2338-42f8-832a-649577aa776d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa2120c4-036d-4703-8849-fa6be2b7d8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b12f6b-07c3-4c55-9827-f20d8173892d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b26b6f-b4ab-46b3-b73e-6db7a488f89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b819ca3-5292-43e0-ab09-d802d82de265",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bc9647-3aa3-4428-9410-abc08a9045f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f7c57b5-9581-4cf7-ac91-220946d34f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9c5e88-3d14-460c-a5a2-bc030fdf94e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189899b8-8904-4fb3-b5fe-b17985fb08ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac293aa0-cb7c-403b-ae04-db89e2d4fbd1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17eea85-5af7-4757-b574-52f3d614058d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb8a025f-d32a-498b-bc4c-1f4c78b48cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c7b893-5725-4191-b21b-0f440886f2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df26461-a3de-4829-a67a-b2bf46557f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4baf2b-e67c-41cb-a622-5faf32db7389",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a7989f-3224-4ff5-9b8a-13decca9d196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e59487b-a6f5-4a59-b224-9a8b138915ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59375c77-d4dc-4868-b31a-c255a340bb79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061f78c6-1920-4eac-990b-d1239dc0494c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d96777-4f81-4d67-b20e-9921367b512b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0c0f8a-ea00-4b86-8dbe-3c6f4ec74399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b4a154d-681c-4969-996f-3dd06c5b89f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cdcdd2-ee63-4139-a28c-107a595332c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0927e6e3-64f6-4cf1-87d7-2dc5a97e12e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b848695-7741-44d9-a669-05718f330885",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df761d7-55e1-485a-9b3d-8064bb01f8b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8b5b6df-ee1a-4458-aaf1-23654db01316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db40126-cab5-4cf2-a682-8844a137f7dd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0a0d7d-eef6-4f25-8070-292d17839f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f947b3-0e2e-41e7-88df-98fede184fb0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af7c401-bbf3-4d0e-9215-72bc45798e9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02e6bca9-152f-4f46-9b0e-85d3ecc40bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11fa8b8-c327-40a4-a611-f10e4ca3057f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495fbefb-b19f-447a-882d-03db40472039"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e60514d-fa5a-435d-8cd7-e04fe3cca052",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd6642c5-0e04-442e-8698-b06e869f2fe1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5abe70a-4176-44f6-981a-33ba0f82c348",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc39a709-0f98-4177-b93f-e5e6e58a3799"
                    }
                  }
                ]
              },
              {
                "id": "38736001-4182-4e49-861d-827b0326bdd9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "909f597f-b4ae-4ce3-865e-60c61df43de5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf51e621-b0bc-487d-9fd6-54f8d9f0d576",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c3a0891a-7350-4807-8737-e5773b45886a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f8e914-a967-45e3-b750-2a0eaea514ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec6be187-4a28-4a00-b481-4399adf6cf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cc8f19-ac64-4852-b7f8-c28d9bc5098a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7e98e1-c608-4e85-bdac-a28aa6344530",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "13c0ad48-7d09-493b-8b71-d4c336112d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5206dcf-4cee-43b2-99d2-5bf945183d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5150ef7c-bbd6-4a80-80ff-cce330906a0f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdf776ce-86fe-420e-938d-cda0b9e567c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c99492b3-dc43-4a42-91a6-e33671b6ff28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb8af047-f1d9-4e09-8e10-2355e066d4aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c9df407-210b-405a-976d-c154d5d62924"
                    }
                  }
                ]
              },
              {
                "id": "1568ce2f-f08e-46cf-9920-25c3a3faaacd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0b1d5384-18d2-49c6-8ea3-7843f85e0894",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c109fb9-c0ba-464f-abe3-c881ecaaad78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0c64c025-5cc4-4710-b1f1-e136450279d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d20442-b423-4f99-9796-f9ec51577d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f36303c-8fc6-4914-bdec-6285b6ed0851"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f3a84982-55ca-410a-bc1d-c98f0bf9f5a9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2403777a-513a-481b-af1b-a69d483c2852",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8296d706-052d-4ade-b818-7b3b9cc4b6b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f5a8be52-c2de-4648-9f57-061c6a2163c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aba4db57-5bc6-48e7-b2cd-3b33c62bcdd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adce256f-b900-4556-a67d-aa4bddf585d9"
                    }
                  }
                ]
              },
              {
                "id": "581ae421-82c5-4ea6-902f-180afb471dff",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aceb1821-f079-4184-a9e7-ef9910ad1832",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f8442fab-b388-451c-bdf9-942f8574d884"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8f316a7-db49-4c57-bf79-ea91872e2403",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1477d4d3-79b3-483b-9ee7-0bbc9582bfb5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f82b3e15-d403-4422-a43a-268a9ba7a2db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1b61a1c6-8afe-4e48-9272-596e620ec6fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d6358fc-1d39-42e4-ad4f-eab56e93ac21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0cb7ea8-7159-4adb-b808-fded6a3595f9"
            }
          }
        ]
      },
      {
        "id": "1966c62a-29b2-44f2-ab2f-e6f12c9f37d4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "906f6bdc-b2e9-4aa3-96a3-d59c0038ed03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1493774e-e622-4fe7-a734-131b6b2f7361",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f6abcef-46e3-415b-82fb-93574ca23726",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808fa5c8-8d21-4e39-b7c7-6155161c0308",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "66337267-8a99-4911-a717-c3ef82008d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8065fa57-edae-4db0-a872-920387c9cc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa62014e-6451-44ab-a8b9-1fb47fabd9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260e10ff-56b2-4208-96e8-1c46795076fa",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c059efe-2bb7-4eaf-99c1-c346daffdab7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "09b632a4-b75f-4e9c-84f4-6d03b5f524eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1616246-5ae7-40fb-a548-30c250a5cbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db03ea1f-a739-41b2-90da-bd09f52dc0d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a15a7cf9-40be-4990-9316-9f17c43d2792",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8518bc9d-1111-4174-9ed6-abdab19bb214"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b08ab079-0c61-4de5-b4a7-7fdaa3123868",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a3ddb94-eac7-40d9-942d-699789a4f210"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1edf6133-c783-49dd-88f3-6fe79d908278",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "719b5f1d-bb42-40e3-adca-aa95faf0f97c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c185138f-84a8-4c66-82f5-3823b1c863a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cdbfbedc-9f53-426a-b527-a4faf054dda4"
            }
          }
        ]
      },
      {
        "id": "9548f6ef-8c46-4189-b68e-9b38689d6fb4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f8b5f240-fa02-406e-bb56-4cfd64c3714a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b470464e-bf03-4ad6-916f-25acaf8644b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4ad9fea-e2a5-4894-b32a-5016bb1e0448",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd9013b-1d11-41dc-9492-829e10b08f2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "025e0f64-9b67-431e-b99d-5f86ba592135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26c5664-785a-4214-a9f3-c92178d142a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c426b8f1-9088-41f6-8e20-99df1d35521a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07208500-1940-4b45-b207-14d2cacf8beb",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb565a4-f0c4-4c90-a054-97bf90a6321a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f38601e9-0891-4ce4-a219-22a0ab8c2c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cb2529-51f7-441f-970d-a6ebac1ed4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c98e987-c081-4b4a-b97f-ca92f189683b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78e20d61-7206-4cd5-8845-c8f46eadbaaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "280a4818-4a14-4acb-a97a-14fa9373d17c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e57d4aac-5d95-460c-9561-e9a94fde573e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b0f7ac9-74e0-4ad3-921c-e5717a82555d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f0f771c-0755-4d14-8d90-d54a75aa082d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5442ae29-3e4a-4ce3-9643-4134705c9b3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd59b33d-a648-4a32-884b-761f758da4f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a098254-fec8-409d-b372-67c07fbfb898"
            }
          }
        ]
      },
      {
        "id": "a409fc32-2a88-4db3-b643-1200d0e9cc0a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "801e4bf3-b1ab-4b42-9357-018e7c53268f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a5a2c21-8289-4626-9db4-f7f0d21e26c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26b6a009-520b-40ee-baf1-060e0e87abf7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac290528-e424-4438-8133-4d9b9c3c6b9a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17492af6-02c2-48f0-9bed-5a4f3177cae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa803f22-d2d2-4764-b463-34853e713558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c68e2b4-213a-49f3-9738-8134d0e911ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67d6daf-6df8-4cf8-8058-7d87850af9b9",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77eb659e-3db1-4256-b9e5-6dc07d7b7056",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f09e3586-74ad-4d16-ae9f-d780784736e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f787f9c4-592f-43d8-970a-22a8ebe92a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e71098e-8078-4395-8e44-9666549019ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f080d3ab-bf38-4f9e-8658-3c37a1408263",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f25a9e7-02ac-4398-b8c2-5c2439b52d80"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5046dbad-7082-4e77-985d-eb3f9e1f7f74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "601b5cd4-a176-4682-9758-ea9d6a78c426"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ddb793c-f3e9-4d79-9bea-1b1208990a0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0906ea13-15d1-4b08-837a-e5e026bc8565"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c668655-7624-4cdb-89ee-34e7d59cbd0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4088098d-c8d4-467e-8a15-058e4d3f0140"
            }
          }
        ]
      },
      {
        "id": "cbc5b481-6670-42d6-91ad-7ac30f50d360",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39be7d13-473a-407e-9ace-853dc73eb899",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5111640c-5431-402e-be9b-7dee43f6c0eb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "39862687-27be-4d44-adb5-26ebd389074f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fad4d57c-7c5d-483d-a869-a87ae5f3f15f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eec142db-ac44-4b14-ad12-a3258a5fe801",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 725.0384615384615,
      "responseMin": 12,
      "responseMax": 6600,
      "responseSd": 879.6227898178091,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681000689575,
      "completed": 1681000888594
    },
    "executions": [
      {
        "id": "e16ae85c-4196-49e5-8e58-1f334f78442d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "21834996-76c3-4e5e-b924-382a93b21a58",
          "httpRequestId": "bfc669c5-1b9e-42f5-a3bc-84c0fac9dbf3"
        },
        "item": {
          "id": "e16ae85c-4196-49e5-8e58-1f334f78442d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3a40df70-5073-4356-8200-8b53e222cadb",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 0
        }
      },
      {
        "id": "45c4e844-ef1d-428c-8979-9a335c889ec0",
        "cursor": {
          "ref": "f7ecd407-5364-4451-b1bf-2966783f75fc",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "06641de1-444a-432c-a80e-60901d3a2407"
        },
        "item": {
          "id": "45c4e844-ef1d-428c-8979-9a335c889ec0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6c3caa4e-76cf-43f9-b143-c151be3b21b4",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "a08d73da-63c9-4c1d-8dca-f523f34124e5",
        "cursor": {
          "ref": "19d383e9-71cc-4894-8270-643789150b40",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "15a51d41-4a1e-45e3-9980-6433e147623e"
        },
        "item": {
          "id": "a08d73da-63c9-4c1d-8dca-f523f34124e5",
          "name": "did_json"
        },
        "response": {
          "id": "3ee77d6e-f209-45ff-86e2-4b60258d6035",
          "status": "OK",
          "code": 200,
          "responseTime": 818,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb6b7b6-4d12-4508-8c7c-4de4e8b95d41",
        "cursor": {
          "ref": "8b6d7910-dbeb-43a7-af57-ae1523f52611",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4346f211-e7fa-4d84-a17b-241240d37803"
        },
        "item": {
          "id": "fcb6b7b6-4d12-4508-8c7c-4de4e8b95d41",
          "name": "did:invalid"
        },
        "response": {
          "id": "4e214710-ebf4-4385-b4a3-7e96f1121e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb6b7b6-4d12-4508-8c7c-4de4e8b95d41",
        "cursor": {
          "ref": "8b6d7910-dbeb-43a7-af57-ae1523f52611",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4346f211-e7fa-4d84-a17b-241240d37803"
        },
        "item": {
          "id": "fcb6b7b6-4d12-4508-8c7c-4de4e8b95d41",
          "name": "did:invalid"
        },
        "response": {
          "id": "4e214710-ebf4-4385-b4a3-7e96f1121e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f191c782-6b48-420d-9967-3d37940d30e4",
        "cursor": {
          "ref": "0edb394e-49c8-4730-a9e6-0f3925eea317",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "97dc62a6-99a2-412a-ab8e-f60155ad3839"
        },
        "item": {
          "id": "f191c782-6b48-420d-9967-3d37940d30e4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c86e4046-032b-4980-b2f0-72c030adeb49",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1238,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25906218-c44c-4f53-a8d7-239f590c7204",
        "cursor": {
          "ref": "ac0b1aa4-f523-4e1d-bbab-32b979c332fa",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9765161f-1fe1-418d-95c4-43691b82e4e0"
        },
        "item": {
          "id": "25906218-c44c-4f53-a8d7-239f590c7204",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "013935a9-7c74-4a7d-b477-5f4dbed141bc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 992,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9382834e-420e-44be-b6cb-83076c39dfa4",
        "cursor": {
          "ref": "96e36ec4-c505-4a17-9562-101e741a56c2",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "03c0df1f-e03f-495e-8923-1b74bca7adc8"
        },
        "item": {
          "id": "9382834e-420e-44be-b6cb-83076c39dfa4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c7ccdbd8-2677-4e72-969a-ddbd407de8e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27de28ad-d314-46a2-aba3-898a427ae2f1",
        "cursor": {
          "ref": "424c592c-5801-401d-a65a-f03d0de3c2b5",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a8a5de6f-8c5b-4373-8b2e-a860b9bd90de"
        },
        "item": {
          "id": "27de28ad-d314-46a2-aba3-898a427ae2f1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "415b0f46-6902-4645-91d4-00f2444b85a7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 860,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27de28ad-d314-46a2-aba3-898a427ae2f1",
        "cursor": {
          "ref": "424c592c-5801-401d-a65a-f03d0de3c2b5",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a8a5de6f-8c5b-4373-8b2e-a860b9bd90de"
        },
        "item": {
          "id": "27de28ad-d314-46a2-aba3-898a427ae2f1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "415b0f46-6902-4645-91d4-00f2444b85a7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 860,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cd1b52-c97f-4f82-a063-166be275471b",
        "cursor": {
          "ref": "0b890b9a-583d-45d9-a220-4706ec8989fc",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "719c372a-0950-4e0c-9efc-68c7f152b261"
        },
        "item": {
          "id": "d5cd1b52-c97f-4f82-a063-166be275471b",
          "name": "identifiers"
        },
        "response": {
          "id": "4bab9b38-728c-48fb-af9c-683cecedbdc9",
          "status": "OK",
          "code": 200,
          "responseTime": 1198,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102a2743-1902-4e4f-80e1-a012d316a399",
        "cursor": {
          "ref": "4fbe8489-b49f-4dd5-855b-f2366df74204",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "74014d75-7040-47b2-bcf8-e553adb2eb55"
        },
        "item": {
          "id": "102a2743-1902-4e4f-80e1-a012d316a399",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f1e8106d-7587-4269-8c8a-6174032e6b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102a2743-1902-4e4f-80e1-a012d316a399",
        "cursor": {
          "ref": "4fbe8489-b49f-4dd5-855b-f2366df74204",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "74014d75-7040-47b2-bcf8-e553adb2eb55"
        },
        "item": {
          "id": "102a2743-1902-4e4f-80e1-a012d316a399",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f1e8106d-7587-4269-8c8a-6174032e6b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fffde3-c521-4c2f-a3fd-19f63912e4eb",
        "cursor": {
          "ref": "949ccb71-e2b8-4d57-bd0e-7fdc417fd5f5",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f3ff399f-fe0b-4a5a-9f6c-f0b488683695"
        },
        "item": {
          "id": "a0fffde3-c521-4c2f-a3fd-19f63912e4eb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3bfc3954-d27c-4386-8d86-265be37651c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2146a921-5da1-4769-a51a-6d81a44b4179",
        "cursor": {
          "ref": "7617ac01-22b9-40cb-87ac-0568527e42e7",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7737be53-6d16-4503-bc6d-e6d2e1ec3c4d"
        },
        "item": {
          "id": "2146a921-5da1-4769-a51a-6d81a44b4179",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7765d841-6983-4953-a5f0-9269b758d221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a163d38c-1a3a-4a3f-b937-33c475e393c3",
        "cursor": {
          "ref": "e683cca0-1500-4891-8ad8-1caeac904bbe",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4c9f9cc0-128e-41f5-a5d3-cdcc2e7e3b36"
        },
        "item": {
          "id": "a163d38c-1a3a-4a3f-b937-33c475e393c3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b04ab5d0-e687-4d59-ae0e-e31e7d835af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb3319f-4e7b-4510-88c3-724252488f00",
        "cursor": {
          "ref": "6e4c5156-3349-441a-8000-d4f0e810c9c8",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "36d37e53-2364-4025-b090-bd871635512a"
        },
        "item": {
          "id": "7fb3319f-4e7b-4510-88c3-724252488f00",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5fa26672-5780-4ee3-9fe4-7cd80525e927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 946,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5831f37-7872-476f-9772-038dbc9bd512",
        "cursor": {
          "ref": "d7c238af-bd74-46a8-860b-8db0fb0b6bd9",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b6611563-cd1f-4986-b34f-9c84076cc0dd"
        },
        "item": {
          "id": "a5831f37-7872-476f-9772-038dbc9bd512",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "094a13f8-4a4a-4d09-a188-bc1694b7dbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c146bf-5700-4a29-95ec-0327999bf37c",
        "cursor": {
          "ref": "c9d9d415-c161-42f0-8383-7d0d395eb681",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "85b129ab-5214-4b2b-af6f-a2acb267e52f"
        },
        "item": {
          "id": "63c146bf-5700-4a29-95ec-0327999bf37c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "20d8b09d-0ea8-4892-aeb5-ea81119dc06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 919,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0932bb36-fd95-43d2-aad1-7906ccf5d2c1",
        "cursor": {
          "ref": "d987a7f6-d8d2-4db9-8130-3fe77d23f02a",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "31c7d55c-b805-4000-85a7-fb12b03b97b2"
        },
        "item": {
          "id": "0932bb36-fd95-43d2-aad1-7906ccf5d2c1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8a53c0ef-51d1-4577-80c7-b5d3a3d1112e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 974,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a88574-709e-4f36-a3d5-7279f23b00d4",
        "cursor": {
          "ref": "e9a99ea1-f746-41a5-8d0c-eff08754dcda",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b13cf25b-0cd5-43c9-b8a0-0731d978911a"
        },
        "item": {
          "id": "74a88574-709e-4f36-a3d5-7279f23b00d4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7fc39b32-5121-4068-8bd6-09eca9e2f75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cd9edb-7aeb-4051-b4c9-c54e7b4047fc",
        "cursor": {
          "ref": "593450a1-d659-4579-ba25-8123ebbbc12f",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5dc7ba67-7656-42b7-a9fd-bb284221bd78"
        },
        "item": {
          "id": "85cd9edb-7aeb-4051-b4c9-c54e7b4047fc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e8a45164-4d23-450a-a8f7-5d825b04b8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3418be8-4bd2-4835-a238-d3e707345039",
        "cursor": {
          "ref": "6ef139b9-17ba-4317-87e7-d7b541de0769",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5b02e3b3-1ec5-40ff-a7f1-7cbc591c290f"
        },
        "item": {
          "id": "c3418be8-4bd2-4835-a238-d3e707345039",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e54a0d19-2335-4402-9541-2f0bac26fd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871eadba-4df2-4d9a-8b5d-22b92d47ce78",
        "cursor": {
          "ref": "822154ce-1ee5-48c9-8e14-a090fa27c71d",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3270f544-a1ab-4363-88a0-4c258b435d5c"
        },
        "item": {
          "id": "871eadba-4df2-4d9a-8b5d-22b92d47ce78",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e9e7e605-3dfc-4f9a-89d2-545f82316f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70652526-48f1-43f3-8584-7946cd5035ac",
        "cursor": {
          "ref": "9c8a60e2-a363-4a8b-bcfb-3a41e767c9ca",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bd979f6d-722b-43bb-8341-ede4a7af39df"
        },
        "item": {
          "id": "70652526-48f1-43f3-8584-7946cd5035ac",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "000f0420-0347-451f-927f-81ec3e5b0fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13d4a4a-790e-48ae-a93d-fc4d8dccd0ce",
        "cursor": {
          "ref": "157d27d7-b136-49a8-98e8-c6cbbcf86074",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "444e7bd2-c00c-4aee-91b0-d7edf8f8878c"
        },
        "item": {
          "id": "d13d4a4a-790e-48ae-a93d-fc4d8dccd0ce",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e774c51f-98d7-467d-8296-1abae5726071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1124139f-ddbb-4219-b647-50e2e9e87fcb",
        "cursor": {
          "ref": "b237778e-2774-4bde-b348-4f7a651a64b6",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6f903273-171a-4238-93f0-0624e68a2b79"
        },
        "item": {
          "id": "1124139f-ddbb-4219-b647-50e2e9e87fcb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4dd4e396-a18a-4dfe-9b99-ab61182d81ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4535a2-4a6b-488d-9312-e5875a10926f",
        "cursor": {
          "ref": "4dd5b7c9-a090-404d-a79c-3b617a9dc80e",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4ac7977d-e770-482a-9174-4b48039e794b"
        },
        "item": {
          "id": "6e4535a2-4a6b-488d-9312-e5875a10926f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "123d273a-2e96-49cf-86d9-e02eaded17ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c44c5de-ecb4-4f6f-9fce-4d85d67049f1",
        "cursor": {
          "ref": "d171c8d0-b1fb-41ea-832d-a416ff6256c6",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c0215112-0b26-4cba-a635-d8201ef5ab1a"
        },
        "item": {
          "id": "4c44c5de-ecb4-4f6f-9fce-4d85d67049f1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "803c8042-abec-4a31-aa58-2a0b44b7cec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0202ec-bf84-4cc1-9873-9beb80837455",
        "cursor": {
          "ref": "bc507c7c-0a9f-4d81-a4a6-bb5d350b16cb",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6b65fb57-fa4a-410f-baf9-6c23d09ce13b"
        },
        "item": {
          "id": "8e0202ec-bf84-4cc1-9873-9beb80837455",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6f7ca317-3fbc-4d82-aaf3-381b103d18e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f98eec1-0e15-4dfa-9b23-c6f383890c63",
        "cursor": {
          "ref": "1d7f3f60-f0e7-4e6a-b1a2-9ff0cc2749ee",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "98939bf1-2267-4d24-8101-a55f7709dc6b"
        },
        "item": {
          "id": "5f98eec1-0e15-4dfa-9b23-c6f383890c63",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b8664373-9727-4907-adc9-4c79c32ce81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d72d03-1fed-4843-9906-abbc02be6e86",
        "cursor": {
          "ref": "7ad8cc7f-edd5-4982-b023-e6790a99ae51",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5d6be009-6343-42d0-aed0-a9e4250e71f4"
        },
        "item": {
          "id": "c3d72d03-1fed-4843-9906-abbc02be6e86",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "34a0700b-d7b1-4671-8dca-63fd7d8c8025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2b4bf1-c4e2-4f21-a805-c88bb95d1b8a",
        "cursor": {
          "ref": "f8341713-ab8a-4dce-b0f4-8df76cdd7c53",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f9a206be-2099-4e9e-8524-47a95b38dccc"
        },
        "item": {
          "id": "1a2b4bf1-c4e2-4f21-a805-c88bb95d1b8a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fa41925f-c962-457c-b108-5eae7fb87b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b19d32-83fb-41e0-8a09-52dfdd1d7ee0",
        "cursor": {
          "ref": "acf1b76c-e1e3-4ddd-a0f0-00d21f03274f",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9cd7ca02-53eb-43be-b5d1-db2eb50682f8"
        },
        "item": {
          "id": "d8b19d32-83fb-41e0-8a09-52dfdd1d7ee0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "293be09d-e81e-46b5-9cb9-e2063407162a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725b90ec-71bc-4cd0-b16c-7cdc21ed7d47",
        "cursor": {
          "ref": "d210ac42-61bb-4408-ac65-13b8bb1c83a5",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d3915039-dbf5-41e3-a535-1ded5ba7b95f"
        },
        "item": {
          "id": "725b90ec-71bc-4cd0-b16c-7cdc21ed7d47",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4aa3dceb-f80b-4541-8334-6c39d56156f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9997b29-d4ae-47b6-9f64-9b2befa3ef4b",
        "cursor": {
          "ref": "e8878666-cea5-45e6-b3ad-d86b1604d94e",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "acdce38a-1f0a-4e5a-9ea7-5018ac8c29eb"
        },
        "item": {
          "id": "c9997b29-d4ae-47b6-9f64-9b2befa3ef4b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "98a5e219-38c4-4b6f-93db-b56606003bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479eccaf-9834-47bc-a43a-e4e886689839",
        "cursor": {
          "ref": "587c2be6-6f1b-4e22-b8d0-a82ab4015d5c",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d621b32d-1f2c-4446-8886-7dcb806bc9b9"
        },
        "item": {
          "id": "479eccaf-9834-47bc-a43a-e4e886689839",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "745ab690-25f6-4acc-a4e7-68ad6f8bb2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828d30cb-760f-445c-806c-0834fb710a38",
        "cursor": {
          "ref": "d912641c-6947-47c9-9de0-8ca505985a08",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c474b9de-8394-4079-97eb-a107d9933c29"
        },
        "item": {
          "id": "828d30cb-760f-445c-806c-0834fb710a38",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7ae2711c-c2d5-40bd-9667-7d692d40e0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bdd904-1f5c-4575-ba1d-677c63a0f025",
        "cursor": {
          "ref": "da1d19df-a981-4959-83c6-991ba7055ee5",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cee44218-bc64-4b6c-903a-9f0ed1874353"
        },
        "item": {
          "id": "62bdd904-1f5c-4575-ba1d-677c63a0f025",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3fa2a479-4035-4d59-83e4-7fac15a33065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c344f7-c054-4821-80e8-74b238bf7390",
        "cursor": {
          "ref": "1ac1a367-2c5c-4e84-bf22-62f22c4ab2b8",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2f995169-548f-421e-ae38-485acef4d319"
        },
        "item": {
          "id": "62c344f7-c054-4821-80e8-74b238bf7390",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f4b6062b-6d60-43ca-88a8-8a82a4556ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99ac88e-0197-42bb-bdb5-bcdf3f58d647",
        "cursor": {
          "ref": "32982f40-6188-4d89-a62e-b0683bebc928",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9aaa4597-7693-4e3d-821e-247d9a6046c5"
        },
        "item": {
          "id": "e99ac88e-0197-42bb-bdb5-bcdf3f58d647",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4b727be2-7bfc-4704-80ff-35f5862230a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5143178f-95a6-4f81-8ec1-6965179d9857",
        "cursor": {
          "ref": "0ed75ca0-375f-4f65-af2c-40361e6ad38a",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d315ee7d-f94d-43fc-b442-436b9f0a8e16"
        },
        "item": {
          "id": "5143178f-95a6-4f81-8ec1-6965179d9857",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "669a3301-fbb8-4aa9-bf3a-53f1810e5cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59454f45-ddc5-415e-9830-98330ef089e7",
        "cursor": {
          "ref": "c1baf86b-6b93-4d3f-a731-5b5e5eadcbe8",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f3fb3b37-bb48-4b26-88db-3ed671b14fe5"
        },
        "item": {
          "id": "59454f45-ddc5-415e-9830-98330ef089e7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b9ac2765-c5ea-40e1-9ef6-c563acdd2161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ba59ba-b32c-4ecb-9f93-1b6a660f86c2",
        "cursor": {
          "ref": "14e5b364-a810-40c5-9aea-269c30b19dea",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bf11ebd5-6213-4477-919a-931671ef10c1"
        },
        "item": {
          "id": "21ba59ba-b32c-4ecb-9f93-1b6a660f86c2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c63d6ffe-622e-4e39-ae07-abe1b30e8768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a3fbf4-1455-4ed1-8efe-78fbaf7a3223",
        "cursor": {
          "ref": "8c5b1d14-e9b9-40ad-94e7-8df1ed2a49e9",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7a9f247a-bbb1-4ef8-8c55-f7f80981228c"
        },
        "item": {
          "id": "06a3fbf4-1455-4ed1-8efe-78fbaf7a3223",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "26aee8af-cca7-4586-b08f-04ca617da639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e92d31-985e-43bf-b5f9-6bf1ff4e5e77",
        "cursor": {
          "ref": "889875ae-e5a2-43d9-a87a-944c476654f9",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4bd2c1b1-fa61-41aa-845d-3738284e2264"
        },
        "item": {
          "id": "57e92d31-985e-43bf-b5f9-6bf1ff4e5e77",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f94d0ca4-50c8-4040-8e4a-352a21310153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc5823c-129c-4e4c-b257-1e0384b006f3",
        "cursor": {
          "ref": "aa9d16ca-b693-48fe-acbc-052fc483febc",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a5fa9858-36c5-49a0-8100-d85490d8af21"
        },
        "item": {
          "id": "7cc5823c-129c-4e4c-b257-1e0384b006f3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ce1d2753-8223-47a9-b932-58e94fd99abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfc5f7b-97f9-414d-b920-66515fbbe663",
        "cursor": {
          "ref": "fb1175fe-90bf-4cf7-bdee-7785622442b9",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "526b0e08-6f86-4e23-a63b-ac4755661281"
        },
        "item": {
          "id": "2dfc5f7b-97f9-414d-b920-66515fbbe663",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f471ffee-9383-43ef-b567-ffc63909b996",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 689,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e49f8d-caef-46f0-81d6-1b97b202f0a5",
        "cursor": {
          "ref": "b1d7a340-c78b-4604-8fc8-7b06acb9af58",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ff50412d-67b9-46ce-acc7-337341cb083c"
        },
        "item": {
          "id": "32e49f8d-caef-46f0-81d6-1b97b202f0a5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6b62a161-d7a5-48b0-bd24-8ae3cddc1326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb93ae8-88ab-4c12-9add-72c0bd301571",
        "cursor": {
          "ref": "4ac8900c-52a1-4064-a27f-d715c3197ee4",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dff2a11b-9cd7-4910-9bed-5eb3e0a26d51"
        },
        "item": {
          "id": "9fb93ae8-88ab-4c12-9add-72c0bd301571",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d62e4fc9-cead-4005-bcfc-9cb8e65c14f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b110df29-cec5-42df-ac69-72f0751d9e98",
        "cursor": {
          "ref": "0ee5792e-62d4-4e9d-976b-dc1521793dfe",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ceab5f15-7c55-4961-a4eb-91b7ba8164b1"
        },
        "item": {
          "id": "b110df29-cec5-42df-ac69-72f0751d9e98",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d9d69470-3a68-472f-a5b5-88797fb9f8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a88146-3134-4a77-b367-46a0481f8f52",
        "cursor": {
          "ref": "4daa0340-8872-4f37-9886-31f14eedea94",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ebf32337-e4f1-47f5-b1d0-74573d56ae08"
        },
        "item": {
          "id": "a7a88146-3134-4a77-b367-46a0481f8f52",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8c8b4bdf-c2b8-488f-837b-28d747a2f5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0e7ce8-96f1-4825-ae6b-0da5e442c29c",
        "cursor": {
          "ref": "d82b508c-15b2-4849-9bf9-84319f2e5fac",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ab965358-5d35-44f7-96e0-70e16f8de5e9"
        },
        "item": {
          "id": "df0e7ce8-96f1-4825-ae6b-0da5e442c29c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "81be461b-b6b7-4bd7-aec9-c277409e1d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69a2974-eacb-47fb-9cbd-73daedffc8d7",
        "cursor": {
          "ref": "70a65d81-b81d-4891-bb73-b47085340aaa",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9a37bd2d-869e-4223-a4c5-8c42b8cf75cb"
        },
        "item": {
          "id": "e69a2974-eacb-47fb-9cbd-73daedffc8d7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "81fada95-78cd-4e15-b6bd-3e0959c1d222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5a86ef-30b9-4a26-b59c-e0b75374a1d1",
        "cursor": {
          "ref": "ca58d592-ea36-4f95-a090-9527751a04a2",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "83df0c38-70a3-4709-82aa-e45c49421643"
        },
        "item": {
          "id": "0e5a86ef-30b9-4a26-b59c-e0b75374a1d1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "549a9934-9926-44a9-b65a-607dd02448fb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 711,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d7d4e8-35f1-459a-9ddd-d0a0b11ae9d9",
        "cursor": {
          "ref": "30d67e21-e3c2-4903-9454-e05bb2f3c668",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "80bcb4e4-38a3-417d-8db3-a7409804045d"
        },
        "item": {
          "id": "62d7d4e8-35f1-459a-9ddd-d0a0b11ae9d9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "78763841-474d-4d90-9127-64378f63cb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c5ffde-e15a-46ef-adb4-d948a9073d8c",
        "cursor": {
          "ref": "d529cbcc-5767-49a3-a302-c5871c521b87",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c53bccfe-0146-4bf0-a7ed-d8173a1bd8df"
        },
        "item": {
          "id": "a0c5ffde-e15a-46ef-adb4-d948a9073d8c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1d0e4464-f81b-4bb8-93d7-4780b0ab474f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafc206d-84a3-44af-ab97-e12f0d638f2b",
        "cursor": {
          "ref": "b5ffc86f-16b2-4bc1-be57-71d3dc84f024",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4531ce84-5398-4552-96d2-e1711d008e0b"
        },
        "item": {
          "id": "fafc206d-84a3-44af-ab97-e12f0d638f2b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "05c5a302-cc79-47a6-b30c-057d5a53c565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d062b3c7-3d7e-45af-a54f-c012c138fe3b",
        "cursor": {
          "ref": "f6a19e96-3d06-4b42-a623-680fae7bc5cf",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "92ced60b-6e71-40a1-9352-195b031cac84"
        },
        "item": {
          "id": "d062b3c7-3d7e-45af-a54f-c012c138fe3b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6692c899-aa4f-42be-8bdb-ec33956b34e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e4a7fd-9a1f-4aa4-bce0-349e7426a1a1",
        "cursor": {
          "ref": "28351304-febc-4be0-bc87-d61bb65119b3",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "55514ac9-8ae3-429e-bf82-7347e8aeb8e9"
        },
        "item": {
          "id": "d2e4a7fd-9a1f-4aa4-bce0-349e7426a1a1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6411da82-ffa9-4d3d-93ac-5bd1a4406dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072845c4-4512-42f4-bfed-17abbf2e19b5",
        "cursor": {
          "ref": "44529227-f8a8-458e-9e66-9705d9f15239",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "78c75b5e-1e9e-42f5-8150-9c9499aa8066"
        },
        "item": {
          "id": "072845c4-4512-42f4-bfed-17abbf2e19b5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ce1d3f9e-a47d-45c7-880e-e3ec740f7e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3867ad84-70ec-4916-9506-95ef664be09e",
        "cursor": {
          "ref": "ca0ce3d5-53d7-435c-9ebd-0a28de325eda",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "62ba3c71-85b2-4484-8919-730c851997fa"
        },
        "item": {
          "id": "3867ad84-70ec-4916-9506-95ef664be09e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "487bd2ba-ffd4-4894-87b9-be96252f1d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e20d5e0-45b4-401e-83ff-92fce8466d22",
        "cursor": {
          "ref": "5c54ab87-0eaf-4ef4-b649-57b90b4ff784",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "59278124-8b69-426f-8022-453c909481de"
        },
        "item": {
          "id": "2e20d5e0-45b4-401e-83ff-92fce8466d22",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6d6f81fb-b7b6-4406-b402-6b6e0e654624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21af04f2-6249-413c-8962-6c4042f09f9e",
        "cursor": {
          "ref": "b77e9f47-ad42-440f-b837-7f450386b693",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "846136c1-cc14-4adc-9147-cc99ca4366ab"
        },
        "item": {
          "id": "21af04f2-6249-413c-8962-6c4042f09f9e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "dfcd18c8-689c-4efe-a5f0-2462e168bd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12c469b-165b-485a-8389-687308cff51b",
        "cursor": {
          "ref": "3a13d967-4c2a-4f3c-b40d-518682fb8130",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6c1d61aa-3a78-42c7-b476-75e54b5179bb"
        },
        "item": {
          "id": "b12c469b-165b-485a-8389-687308cff51b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a476f3e2-4102-4279-95d7-62096fb8b9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080e0986-829d-46af-938d-fc2c1eff81a9",
        "cursor": {
          "ref": "b57220b1-3b2f-4d3d-b415-f2e0abfafd2e",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0d8dd2a7-266d-468f-ba61-422b0e02ab07"
        },
        "item": {
          "id": "080e0986-829d-46af-938d-fc2c1eff81a9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "47d599ba-16a2-493f-be9b-b7333f8199c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad512a7f-3a26-4a53-aff1-8e611709bd38",
        "cursor": {
          "ref": "27490017-f015-4557-8ae2-41c91cd0b0f0",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ce95c915-54a3-4059-995c-38d95eae302a"
        },
        "item": {
          "id": "ad512a7f-3a26-4a53-aff1-8e611709bd38",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "75408686-1349-44c8-995d-e0c74e25fc0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d6bf4c-7036-4796-b014-78ab80b1afa2",
        "cursor": {
          "ref": "fd420195-efca-466f-a0bc-9bf5a69f6da9",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a48be398-ffcd-4e4e-83a5-85d2a5487514"
        },
        "item": {
          "id": "e8d6bf4c-7036-4796-b014-78ab80b1afa2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a57cf4e0-89c2-4396-b488-ab01a284a244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52795476-b20c-40a2-a1ee-c09a5e00085e",
        "cursor": {
          "ref": "35fc1346-ea60-448a-b9cd-54d9fcf0166b",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "04da2cc1-b71e-4bde-828e-35a0517ac24b"
        },
        "item": {
          "id": "52795476-b20c-40a2-a1ee-c09a5e00085e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e644086d-633f-446d-aa01-9c0c3ed7c333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1177b19e-9864-49fd-aa9d-1860c0ad3948",
        "cursor": {
          "ref": "b3149a65-29d7-40e0-8fe4-fa39282fb7a4",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cb736956-f6df-4982-9822-19f623153fa5"
        },
        "item": {
          "id": "1177b19e-9864-49fd-aa9d-1860c0ad3948",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "899e4a40-d225-4d49-9e5c-2ed22afd7126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1032,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58374ec-10ca-4b9c-b38d-cd669b1c1e29",
        "cursor": {
          "ref": "350f46d0-850e-4555-b568-4a2470a31953",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "34a18f36-212b-40a2-9c7a-3caeb3fac5f6"
        },
        "item": {
          "id": "a58374ec-10ca-4b9c-b38d-cd669b1c1e29",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d3205947-836d-486d-a6cb-7db3fa064327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 918,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5621c7f-319c-4507-9c7f-fb24437deade",
        "cursor": {
          "ref": "7ebd3715-b1de-44df-82c3-fbaf3b6b92a6",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4da42cb1-9dc6-4141-ab38-5e6408e0d097"
        },
        "item": {
          "id": "d5621c7f-319c-4507-9c7f-fb24437deade",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "42e46a8b-cd08-475e-a900-cd3949b9c067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1126,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4527239d-09f3-4dd7-87c9-af7bac86e7c8",
        "cursor": {
          "ref": "83ac7e3c-8eb2-4151-8dd2-141e3e0daea0",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "959f5fa9-1d05-4c83-8d35-1bdfb46b70f3"
        },
        "item": {
          "id": "4527239d-09f3-4dd7-87c9-af7bac86e7c8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6f0f42b6-d3f8-4cf7-b4f0-b8a1d921927a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c23152b-bdc2-4f46-be7c-6720695abf3a",
        "cursor": {
          "ref": "2c7d6112-30b5-4554-8c8f-2b3944255a98",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "04a4d574-b078-4338-9c67-32eff21c8d10"
        },
        "item": {
          "id": "3c23152b-bdc2-4f46-be7c-6720695abf3a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3b6a2001-98af-4396-8e9f-015ef1dccf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efb1935-9cc1-4c6a-9a14-df868968e569",
        "cursor": {
          "ref": "8cd87e9a-26e3-4fb0-9461-1296b49aea42",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "82aacf19-dd75-4e0f-9065-e1f3df01e539"
        },
        "item": {
          "id": "5efb1935-9cc1-4c6a-9a14-df868968e569",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b38468f3-ff1a-4b38-ac96-76530b0e9ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70b1ad4-49d0-417e-a644-51545c35bb4b",
        "cursor": {
          "ref": "9e6445f1-34da-4cd4-8285-a9de041ea727",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7e2448e5-9858-4195-aa2b-035b531a7d2d"
        },
        "item": {
          "id": "b70b1ad4-49d0-417e-a644-51545c35bb4b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "68af6c27-21f5-4f9f-beb3-5ffeb6b35b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44205564-8d76-4bf1-b106-60500429e765",
        "cursor": {
          "ref": "b7d72547-9cd7-4b4c-8a05-25647be0b760",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e39f1cb1-e37c-4f49-9522-834267c4d750"
        },
        "item": {
          "id": "44205564-8d76-4bf1-b106-60500429e765",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c9fa9f1f-d0b7-43a1-97a0-7ef4b39b32f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4743d573-276a-4edd-a13e-0f3777b3ec89",
        "cursor": {
          "ref": "6408e25c-8275-4e78-a5c9-f75f30b868be",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0ef13699-b333-4e4c-89ad-904402b7fb1b"
        },
        "item": {
          "id": "4743d573-276a-4edd-a13e-0f3777b3ec89",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ec18b48a-e1ae-47f9-bb52-e68aaa25f5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bec690-6c33-48bd-a399-1948dafb36c7",
        "cursor": {
          "ref": "4fbeb5f3-ed80-4ae2-8c64-aeecea39cd4b",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "321891c2-0d85-453b-92ea-ed3d471c9074"
        },
        "item": {
          "id": "37bec690-6c33-48bd-a399-1948dafb36c7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f326cf4e-c28f-4e09-a9ac-b0ec2cf07a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6beea303-f446-47ec-9c4a-3a51bc901b1a",
        "cursor": {
          "ref": "a99b1eac-aa98-4f9e-83ff-8a2b557b67f5",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6107ee5a-f119-4c16-abfd-0408ab059ca7"
        },
        "item": {
          "id": "6beea303-f446-47ec-9c4a-3a51bc901b1a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5ae0da0b-6c2b-434f-8f05-274b204cf18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26fb505-0d3f-4380-809c-cb977c797bbe",
        "cursor": {
          "ref": "64b1b4f0-60b7-48c7-b886-5dbd99a941b4",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7ec37a3f-9d64-475b-9291-da42302b2132"
        },
        "item": {
          "id": "a26fb505-0d3f-4380-809c-cb977c797bbe",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f6419c5f-ea63-4f03-8f0f-0221babc4de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc12460b-f432-4e38-9ac3-014c435b2a74",
        "cursor": {
          "ref": "dca11c1f-0a86-4ca7-99bf-2d5ec27f7a5c",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d1f4cc5a-94b2-4304-98e1-08f8392b0c42"
        },
        "item": {
          "id": "bc12460b-f432-4e38-9ac3-014c435b2a74",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2ac4cc63-1c08-46bb-8a81-5a43172eeb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1034,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fcd187-ae55-4453-b2db-a7a29694002b",
        "cursor": {
          "ref": "4a3445fb-a08c-4c0d-a1c5-c99d91a36228",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "65a5ea9d-d419-4b13-a49e-482b9f79f0ce"
        },
        "item": {
          "id": "a9fcd187-ae55-4453-b2db-a7a29694002b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3a6f61d5-a7ae-401c-a8e2-5466bd796a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 986,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f64d2e7-9e33-4f74-9d40-ff9eec541605",
        "cursor": {
          "ref": "af05f853-1e88-47c4-8f7c-7f9d2a9dfdf2",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "144267a0-df41-44ee-8072-d0c655b89762"
        },
        "item": {
          "id": "8f64d2e7-9e33-4f74-9d40-ff9eec541605",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d6295fa3-0112-40b7-be94-4c99511a47e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 965,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9391e6f-1953-40b3-8257-e22f0bfaa635",
        "cursor": {
          "ref": "cec75b37-499c-4be5-92da-22e676741e5c",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f00486d7-c6fb-42f6-9580-65eb238f5eca"
        },
        "item": {
          "id": "e9391e6f-1953-40b3-8257-e22f0bfaa635",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "50fcd568-56c5-42b2-b1a5-1f689396860c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a879722-5b25-4d8d-88ca-352cafbf8f20",
        "cursor": {
          "ref": "1cd10fa7-6ecd-421d-aa79-73d64bb7ec4b",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "012a7198-be5c-4225-83c9-e84ac2e41789"
        },
        "item": {
          "id": "7a879722-5b25-4d8d-88ca-352cafbf8f20",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9a26d92c-c25d-4ab7-ac9b-099559e74532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d7b632-8619-4461-a102-f051ffab26d1",
        "cursor": {
          "ref": "fae76df2-1b8c-46c9-a8c5-8ff5883e2b7c",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "123b8394-174d-4dab-af89-7753226b443b"
        },
        "item": {
          "id": "e8d7b632-8619-4461-a102-f051ffab26d1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9e5c808e-93b7-4094-be04-88b278e292ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711a651d-4b2c-4448-b3b1-a627a31ec8eb",
        "cursor": {
          "ref": "1b0a91a1-71de-4350-81a9-1377e258543d",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "435bfba0-0d1e-4716-b3a7-cd54eaced90e"
        },
        "item": {
          "id": "711a651d-4b2c-4448-b3b1-a627a31ec8eb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "343e172c-25aa-450c-8f55-83d4bb19783e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8ccd0a-dadc-465e-beda-de2084423f06",
        "cursor": {
          "ref": "b1a3e70f-620b-4322-a4db-c370c7ec2a85",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8212f154-a978-4b8d-af8e-a149bfa32fb8"
        },
        "item": {
          "id": "ac8ccd0a-dadc-465e-beda-de2084423f06",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "318978f7-b076-43bd-811d-3789ab9b5337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ba2210-23d9-4951-96e1-ed41487a4276",
        "cursor": {
          "ref": "2dc74433-37b1-4103-a781-9c5191544b76",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a211a067-6709-42ff-bf19-a18da51cd117"
        },
        "item": {
          "id": "68ba2210-23d9-4951-96e1-ed41487a4276",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b5a462c8-ffed-4850-a8ed-75628b748e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12e4a1b-ddbf-4078-bac2-ddeb32671f2d",
        "cursor": {
          "ref": "7309fb63-8008-4614-b6b8-6c294c263ede",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b50b1421-f1fd-4f43-8e4e-3d07c940d241"
        },
        "item": {
          "id": "b12e4a1b-ddbf-4078-bac2-ddeb32671f2d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "48515fa8-8009-459b-afac-6336384d6a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e86c00-207d-430e-80ce-e8f742f93cd1",
        "cursor": {
          "ref": "d24e4928-3796-44eb-acb6-08efa2f74b6d",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a4e72a32-5f13-4e26-a337-4a25219fbbf4"
        },
        "item": {
          "id": "14e86c00-207d-430e-80ce-e8f742f93cd1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a7729696-07e1-4770-b9f3-d464cfe11dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a17403-f723-449b-9328-d8be2ce014b6",
        "cursor": {
          "ref": "4224b397-5742-422d-8f9c-9066cabb18af",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "13bdba83-d3d8-41d7-ae04-e9d396f848b0"
        },
        "item": {
          "id": "e1a17403-f723-449b-9328-d8be2ce014b6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7e8881c2-f042-4d06-890b-a225f8a8b3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c712ad30-d1d6-4d07-8fe9-75e2363b13a5",
        "cursor": {
          "ref": "73165a3d-99a0-4757-8f0b-d131c5123747",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0d00a999-8e11-4fb0-80d0-dfe7263f7211"
        },
        "item": {
          "id": "c712ad30-d1d6-4d07-8fe9-75e2363b13a5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "17f62d68-248c-4171-ab75-bcca635eeb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02578ee1-8f90-4bd8-8f2a-6466557e9a17",
        "cursor": {
          "ref": "793efad0-af2c-4e56-ba57-d4b81e430fc2",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4cf30fcd-636b-4bf2-be8f-3410035ae07a"
        },
        "item": {
          "id": "02578ee1-8f90-4bd8-8f2a-6466557e9a17",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8482c9df-60ff-4a65-b380-ed5281db7948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8786a8db-2b43-4d08-9e05-65fa606ef15e",
        "cursor": {
          "ref": "9d889b2d-b10a-4e97-b203-6548d2a9b1e4",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "44516f8d-0a81-4f9a-9dba-d78c8a85396b"
        },
        "item": {
          "id": "8786a8db-2b43-4d08-9e05-65fa606ef15e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9f0ae629-6b66-4b60-92f8-4c505310416b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a107dcd-24ac-433a-8fb6-a0376bccfa12",
        "cursor": {
          "ref": "4b83e2e3-57ae-4f1b-9cd2-55727cdc222a",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e2e9b675-b41f-4b8d-8aca-2f2b66677ab6"
        },
        "item": {
          "id": "8a107dcd-24ac-433a-8fb6-a0376bccfa12",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6268eace-1875-45fd-b226-503f1df365e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c7f94a-60d2-47f2-86e4-7a96b304d8b4",
        "cursor": {
          "ref": "28c8821b-64ed-4a79-8216-19ca9eb45852",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0b640831-6cd8-4991-a49d-93589b5771ae"
        },
        "item": {
          "id": "99c7f94a-60d2-47f2-86e4-7a96b304d8b4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "070cd9d7-b67d-4d9f-baa4-fdb96f89110d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7fb5b5-f9bf-4d9c-95a8-0e7b93a92dbf",
        "cursor": {
          "ref": "4f9f57bd-b621-43fc-8132-aca88fc4d3d8",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1f18f677-0d5c-44d6-9dd7-99a4abc4b2ce"
        },
        "item": {
          "id": "bb7fb5b5-f9bf-4d9c-95a8-0e7b93a92dbf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "92011cb0-b2dc-4eeb-8208-90c11dfa5cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9ee264-fc3a-46db-a440-15d56ca0bcde",
        "cursor": {
          "ref": "6ab94a6e-8a1f-47e3-9980-7d308882f66e",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a101dff4-6659-4dc7-bc23-c44973639d8f"
        },
        "item": {
          "id": "3c9ee264-fc3a-46db-a440-15d56ca0bcde",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7295a931-f4f7-4289-b17b-47c7a61b5c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9697bee9-fe62-41d6-b48a-af421ccf4b46",
        "cursor": {
          "ref": "d2780a89-0bc7-4335-9f4a-9f93f36ac810",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "98477d74-8a28-40f1-8682-e5b5e11b05f8"
        },
        "item": {
          "id": "9697bee9-fe62-41d6-b48a-af421ccf4b46",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dc55175c-8f54-4b72-8a05-d6d9252bbeb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41710577-111c-49da-8b60-4d948f2ccd8c",
        "cursor": {
          "ref": "a621cad3-73d6-43a2-98a8-5375e72fa766",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2225edbd-f0ca-4cfb-8f30-7ba010099129"
        },
        "item": {
          "id": "41710577-111c-49da-8b60-4d948f2ccd8c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "30982e31-b3fb-4f69-be34-7b9f44109080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a993c4-689d-4b6f-a406-07df88f4aae4",
        "cursor": {
          "ref": "6c4523d0-bf2b-41fa-9569-42a55ab26cd4",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e7a538ec-48c5-432a-837e-64231f3b792b"
        },
        "item": {
          "id": "47a993c4-689d-4b6f-a406-07df88f4aae4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3bd63951-3fae-4c64-82a1-0fb1fd553de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3797e38-9745-4ec0-a665-acd3643ca854",
        "cursor": {
          "ref": "8c777dbe-e55d-4ad7-9405-a1e2a4e0ab7b",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "61b7c6e5-84d3-4b26-a5db-a71659b5139c"
        },
        "item": {
          "id": "c3797e38-9745-4ec0-a665-acd3643ca854",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d72c750f-3f40-4da6-a09f-66c46a89c7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d15539-7638-4acf-a3ee-c4b4d0f1f84a",
        "cursor": {
          "ref": "956e7502-fb07-43ca-9665-514736a67e98",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4d5788ca-7094-4677-9ff3-768efacb0003"
        },
        "item": {
          "id": "21d15539-7638-4acf-a3ee-c4b4d0f1f84a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "17899f19-e992-4dac-b2ab-9b16d59ff137",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b32279-566a-4a5a-a42b-89b84105f185",
        "cursor": {
          "ref": "5f900df8-881d-4671-8f74-42a5d229dd80",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "420377bb-88f4-4b40-bc6f-f47999832f94"
        },
        "item": {
          "id": "38b32279-566a-4a5a-a42b-89b84105f185",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "e2e0fd3e-d22b-48b2-9e93-8fdea63f4a64",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 607,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587ef188-fe6e-4692-b64e-37c4b3fdbc02",
        "cursor": {
          "ref": "9edf6922-7ef6-4a4a-9845-f7ddd42c8237",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a7af6dc0-e491-450f-98ee-738514acffb8"
        },
        "item": {
          "id": "587ef188-fe6e-4692-b64e-37c4b3fdbc02",
          "name": "credentials_issue"
        },
        "response": {
          "id": "51458923-0206-4590-a776-2eb1048ac57d",
          "status": "Created",
          "code": 201,
          "responseTime": 6132,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b9ccca-df81-462c-a1bc-1380bcfa9340",
        "cursor": {
          "ref": "1d839a4a-1eae-4415-a3a1-3d4e0ffaeee0",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "aaba698b-e3b3-4c87-b8d1-932c169d1e06"
        },
        "item": {
          "id": "27b9ccca-df81-462c-a1bc-1380bcfa9340",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b02b6b06-d287-4c34-ac83-e886cbe97f80",
          "status": "Created",
          "code": 201,
          "responseTime": 6421,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4893a8b-bd92-43c9-b52e-f9d50bfaa6fd",
        "cursor": {
          "ref": "63858e4c-9f92-411a-bb37-1cd1714a2675",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8957b5c4-1b51-4499-885d-b830c1b67d9f"
        },
        "item": {
          "id": "f4893a8b-bd92-43c9-b52e-f9d50bfaa6fd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ee85e6bb-4b87-450d-9a51-363453586065",
          "status": "Created",
          "code": 201,
          "responseTime": 5909,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14b3065-87c5-4777-8546-ef8bb7b13450",
        "cursor": {
          "ref": "1fe5396a-1d1e-4649-91f4-b22532d737cf",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c080f632-a824-415d-8820-dbe068794f51"
        },
        "item": {
          "id": "d14b3065-87c5-4777-8546-ef8bb7b13450",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "880f94d5-13f0-4e45-9824-6fc1cf8eb32e",
          "status": "Created",
          "code": 201,
          "responseTime": 5332,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bd55ec-d802-4033-9838-50e5ffde027c",
        "cursor": {
          "ref": "3d89bd4c-5399-4c82-8cda-87b2a33a611d",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "36539693-3609-44f0-8417-121bd82bab51"
        },
        "item": {
          "id": "09bd55ec-d802-4033-9838-50e5ffde027c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "440cd537-c5bb-489c-a769-96c0847489d3",
          "status": "Created",
          "code": 201,
          "responseTime": 6600,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f67f588-9812-4884-8cf5-f2baadab8c48",
        "cursor": {
          "ref": "a6d0b9e8-5ffb-400c-8e6e-0126746f988d",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "36f55d7d-7db0-43af-b0ec-7ff3ea03a1f6"
        },
        "item": {
          "id": "1f67f588-9812-4884-8cf5-f2baadab8c48",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "26b11bf4-3566-4abf-babb-749bf06ffa83",
          "status": "Created",
          "code": 201,
          "responseTime": 6415,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0301cbc7-e700-4594-8506-f81cc5f8e093",
        "cursor": {
          "ref": "1bdcb671-f67e-4b0b-9d40-998878b1a0bc",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e05607a4-dbe9-478d-92e1-678b1bff21ec"
        },
        "item": {
          "id": "0301cbc7-e700-4594-8506-f81cc5f8e093",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "73b3aa24-926e-4e04-8a0d-9bd5f5e411bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0301cbc7-e700-4594-8506-f81cc5f8e093",
        "cursor": {
          "ref": "1bdcb671-f67e-4b0b-9d40-998878b1a0bc",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e05607a4-dbe9-478d-92e1-678b1bff21ec"
        },
        "item": {
          "id": "0301cbc7-e700-4594-8506-f81cc5f8e093",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "73b3aa24-926e-4e04-8a0d-9bd5f5e411bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fb409d-2447-4297-9bc3-8dd9a5729571",
        "cursor": {
          "ref": "489b9878-3857-4ea5-b0c1-6ffcc0bdc2b2",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fab94636-b72b-4dc9-b35e-ae39a0f206ef"
        },
        "item": {
          "id": "b7fb409d-2447-4297-9bc3-8dd9a5729571",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "76b6e92a-3abc-4bc2-866b-ad62cea7b242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8678d24e-8baf-4370-bede-e045e50c5945",
        "cursor": {
          "ref": "030a7112-adde-4d8c-b743-b666956de0bd",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4c1f4d31-4eaa-4685-a52a-f56bffbf2a51"
        },
        "item": {
          "id": "8678d24e-8baf-4370-bede-e045e50c5945",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "651a6ad9-dbf6-4d13-8c73-554f1bc0d342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a027d7be-af6d-4290-a009-0c72c2aad0bc",
        "cursor": {
          "ref": "f1e518e6-7c39-47a3-8e9b-ee64db7cea4f",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "337e13b7-ddf4-48c2-ba3e-e18ad026d191"
        },
        "item": {
          "id": "a027d7be-af6d-4290-a009-0c72c2aad0bc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fabc499f-aeea-4922-b16c-5e0d885497a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac5e2d8-7aa9-426c-9266-ab90a2b3abcf",
        "cursor": {
          "ref": "5527f4b6-94b0-42c9-99ec-8d1b777febeb",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5ec7bdfe-0d47-406f-b672-a6c40c6391df"
        },
        "item": {
          "id": "5ac5e2d8-7aa9-426c-9266-ab90a2b3abcf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fd290614-2e2b-47d6-9dbd-ff0fb68d8a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be7e2dc-f8f4-44f4-81f7-621b781a9dc9",
        "cursor": {
          "ref": "00718511-002e-49f9-9de8-f5cc678f3e18",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f63f657b-3a1e-481e-a6df-4232a6c651c8"
        },
        "item": {
          "id": "9be7e2dc-f8f4-44f4-81f7-621b781a9dc9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4bd1a197-8979-4918-b0a9-326d128bed74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830e0417-cb8e-459f-8d9f-e5b509a6fa17",
        "cursor": {
          "ref": "8f5bae16-324b-4f45-ab04-ba50ee845413",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c01aa1e7-f735-4154-9032-6d453b45a505"
        },
        "item": {
          "id": "830e0417-cb8e-459f-8d9f-e5b509a6fa17",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "830f1548-cf97-43e1-89ee-6f0486ec04f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e935206-24a0-4114-a3c0-01703b9cf36f",
        "cursor": {
          "ref": "a8b9772e-9cd4-4f34-a978-08daff8c09b4",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "65ffb02c-cd03-4393-bf64-a3e30933b0cd"
        },
        "item": {
          "id": "8e935206-24a0-4114-a3c0-01703b9cf36f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d8bb79ee-3199-4866-a68a-37d0cba30acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbca114-72f6-477b-b559-3a21996ef25c",
        "cursor": {
          "ref": "6dc1185c-8acc-40de-90d7-a2c4f3783e51",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d9c99d60-4636-4364-88bb-0f66ff48b38c"
        },
        "item": {
          "id": "ecbca114-72f6-477b-b559-3a21996ef25c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f441e58d-22b2-4b52-a50c-06eb1005a3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eecbad4-8415-419f-862a-e0a009bd9b5e",
        "cursor": {
          "ref": "c85ec431-a92a-43ce-9fdc-f75c5e69bd32",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6c8f5c22-de4d-4fc9-bf67-3e41b2c5d417"
        },
        "item": {
          "id": "4eecbad4-8415-419f-862a-e0a009bd9b5e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0b6dfa39-ec9a-4859-bb3c-5413f2511589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1789,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dce2f66-1917-42b9-be44-d2a633ed38ac",
        "cursor": {
          "ref": "08934b2c-cf78-41bd-bc36-460c57755334",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1089e89d-7539-4ab4-8b47-580d03690d2c"
        },
        "item": {
          "id": "6dce2f66-1917-42b9-be44-d2a633ed38ac",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1947fb4f-539d-4e68-b64b-71d8bf81c499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1852,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735ff197-3b6b-46da-82e8-5f426015af89",
        "cursor": {
          "ref": "d4e27399-d5f3-4270-849f-2e0d1dd8a990",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5aa10d0e-0660-40a7-8e6d-32075adf4d8e"
        },
        "item": {
          "id": "735ff197-3b6b-46da-82e8-5f426015af89",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1dded3f8-3422-4ff7-b379-23d771a0f96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1385,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2ce0e0-daa9-4d63-b8ef-7e4ad4eab7e2",
        "cursor": {
          "ref": "64c26562-6bd9-4099-9881-05e24eff41c3",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "093dab0f-af4b-4e58-900b-01b7365587b7"
        },
        "item": {
          "id": "9b2ce0e0-daa9-4d63-b8ef-7e4ad4eab7e2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "582e739f-5927-4363-877f-94008631d743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1068,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a775e5-8ad4-4837-9c6a-5aee6bdaaab6",
        "cursor": {
          "ref": "62911b57-5397-4522-ba1f-76f5a4314ae2",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "76646c3b-a780-4871-9269-67fa17c0d1d7"
        },
        "item": {
          "id": "c9a775e5-8ad4-4837-9c6a-5aee6bdaaab6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2c26d443-5c68-4fad-a89f-5d64fba80585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2efa94-878e-47a0-bcb3-b6dcb7dcf3f4",
        "cursor": {
          "ref": "3179b3c2-ee3d-49df-8e9f-c8bbecbb8697",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "df250f53-b605-4c2f-8be3-07020723ed6c"
        },
        "item": {
          "id": "0a2efa94-878e-47a0-bcb3-b6dcb7dcf3f4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a847c91f-bc04-40c6-9686-a2d0f2f2f5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28812b0c-7d9d-40e3-8ba0-acd8c27e99e2",
        "cursor": {
          "ref": "5ddbd049-b93b-4e49-a367-13b26e0cc4d9",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "89f35bac-6df7-4c83-8f4d-9fcb90dbfe27"
        },
        "item": {
          "id": "28812b0c-7d9d-40e3-8ba0-acd8c27e99e2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1fc1317c-2e61-42a6-b841-79cae812efbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83aa0232-d323-4a5e-a096-fae8529004d9",
        "cursor": {
          "ref": "1a635b94-4998-4b0c-ab40-e126c0ee602d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "78b47c9d-c724-40dc-b93c-6869d0e4d3b1"
        },
        "item": {
          "id": "83aa0232-d323-4a5e-a096-fae8529004d9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6ed82e83-fc03-4847-8548-f490208b886e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d20e35-7e50-405b-b147-9fc150299aa9",
        "cursor": {
          "ref": "04b8b6fd-fd98-4bbc-94df-084490c5401e",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a967d591-a585-4d44-b8a3-f0d37d3379b5"
        },
        "item": {
          "id": "92d20e35-7e50-405b-b147-9fc150299aa9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "372822c5-abab-404e-9122-69191c408b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40669de1-227b-45a7-9324-81f00db71bb7",
        "cursor": {
          "ref": "e8e96c1a-e9ab-4895-a2a2-cc1cc9b3e1ee",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "80d25f49-65b5-4a4d-9130-12863f33113a"
        },
        "item": {
          "id": "40669de1-227b-45a7-9324-81f00db71bb7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ddacee6e-69ac-4a65-9ead-1c9af46a545a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1d4cff-9875-4003-8fc3-e4d68979b719",
        "cursor": {
          "ref": "bf34c4a8-ca6e-46fb-b705-c851f76f32b9",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c8eef854-9293-44e2-8c6e-0abee88e044d"
        },
        "item": {
          "id": "dc1d4cff-9875-4003-8fc3-e4d68979b719",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "74ce88e1-c178-486d-9e5c-edc3039f80fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898dd7e8-314a-4d58-83f5-7296c659202c",
        "cursor": {
          "ref": "e9f68bc0-63c9-4898-b981-068b54380772",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ea0ba6f6-abd3-4397-a4e0-6187d79353e3"
        },
        "item": {
          "id": "898dd7e8-314a-4d58-83f5-7296c659202c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "26364c4b-5eff-4b82-b309-55514792af04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a4c9b7-fd61-439f-990b-fe2a7efb034d",
        "cursor": {
          "ref": "2a127f99-2ee7-4af5-9431-572c6910cbd4",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cc798610-c703-4963-adb9-c261d347021f"
        },
        "item": {
          "id": "10a4c9b7-fd61-439f-990b-fe2a7efb034d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "69ee3312-ed4d-4112-8720-d07386c63e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ddb51d-9afe-49a1-94c0-8ff755bec858",
        "cursor": {
          "ref": "82e715e8-79a7-4f5f-998e-6ed7d13aa208",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7ba23770-5496-463a-abf2-3b99121c39ea"
        },
        "item": {
          "id": "00ddb51d-9afe-49a1-94c0-8ff755bec858",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6d71f052-4392-437c-be2d-c87ebdb32821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862fe7e7-8f45-4a69-b726-47c0eb562884",
        "cursor": {
          "ref": "c9bbecb8-9481-4cb3-ab0c-527f6afde51a",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2542dbeb-b9f7-4aa5-b9f8-427058aac2aa"
        },
        "item": {
          "id": "862fe7e7-8f45-4a69-b726-47c0eb562884",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "891ab3ca-ea31-47f0-8dad-193400bde4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b7f1ed-4e3c-4c95-9421-4c3450825100",
        "cursor": {
          "ref": "332f068f-c2e9-4e58-b73e-213137252ea0",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "02200dfe-e875-4a9a-a1a7-6edc687ca840"
        },
        "item": {
          "id": "a8b7f1ed-4e3c-4c95-9421-4c3450825100",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "17bcda9b-5870-4288-903f-a2c9a1cbf420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee15ea8e-1f04-4177-8282-d908f1e02643",
        "cursor": {
          "ref": "dafdfac8-e6d1-4f37-9721-7129764c0b40",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "252565a5-9b1b-4c9d-9620-2c5700a5660f"
        },
        "item": {
          "id": "ee15ea8e-1f04-4177-8282-d908f1e02643",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bb602dda-0929-4417-9481-a9684ee0b0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977e4d02-c073-4356-bccb-618d13962269",
        "cursor": {
          "ref": "5e34f7aa-8bcb-47b9-8534-aea2a0696ecb",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8790d2a0-36dd-4dc7-a855-d9e1746f38df"
        },
        "item": {
          "id": "977e4d02-c073-4356-bccb-618d13962269",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6d7c82bb-8770-4fd5-a0cf-6edeecb6197e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58290901-8070-40ba-b52e-b05e565ddd42",
        "cursor": {
          "ref": "48518a5b-9c44-428b-afe8-357068264e46",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3e1edee0-7404-44d1-a03c-d535690fda83"
        },
        "item": {
          "id": "58290901-8070-40ba-b52e-b05e565ddd42",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "158686bd-3771-4f5d-b405-075f1c4534ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e23189-1a31-4819-b67b-341940adba80",
        "cursor": {
          "ref": "215c50ba-f10a-4e02-b958-8c9244341394",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3e7c8f9a-5e7c-416c-a6fb-d5688762ba75"
        },
        "item": {
          "id": "d6e23189-1a31-4819-b67b-341940adba80",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4f5dce51-dc58-4644-ac64-11a04b356125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fe571a-d30f-4e99-9307-fc2f2097811f",
        "cursor": {
          "ref": "f02ca93c-3404-4bce-846d-fa3a4b4bc534",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a9c0214c-68df-4aa9-8fd4-c02ea7c80822"
        },
        "item": {
          "id": "b8fe571a-d30f-4e99-9307-fc2f2097811f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5a6c2cc4-0176-4639-8ce4-5f5fc0107d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca11d38f-177c-4cd4-985d-a2532eaa040f",
        "cursor": {
          "ref": "b1cce421-4c1c-48ab-964c-57f462231142",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4c647970-c301-4ea0-8e93-ade34695ed15"
        },
        "item": {
          "id": "ca11d38f-177c-4cd4-985d-a2532eaa040f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6d836012-ad15-4500-b6ea-819a5f89be6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05319098-096b-417a-8b07-303d5aa699d8",
        "cursor": {
          "ref": "9bdfe7a5-8178-4ea2-a9eb-8a2a1f43912b",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cf6598a5-94da-4c0f-8f6e-25acdcd85381"
        },
        "item": {
          "id": "05319098-096b-417a-8b07-303d5aa699d8",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "29e852ab-bc03-495b-85a7-1ef980e750b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb5151e-75fc-499e-a396-5c2afb82616c",
        "cursor": {
          "ref": "7d75abf6-036e-4f36-89aa-d091c06b2af6",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1045b8f1-0bd8-412f-b916-9e869c4091ab"
        },
        "item": {
          "id": "cfb5151e-75fc-499e-a396-5c2afb82616c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "17e08b20-69bf-46f7-bec5-041a2bc572fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c278ef77-143c-4525-baaa-80d994f3bb93",
        "cursor": {
          "ref": "46fd42c6-8670-45a8-9632-c2d2a2b771dc",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "939b51e6-a418-42e0-a2aa-f9d67c0a20ef"
        },
        "item": {
          "id": "c278ef77-143c-4525-baaa-80d994f3bb93",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "9d8804e9-8f60-49b1-bb70-b47fe2144537",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 611,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bd82a4-00c7-4d69-aa04-1f07fbceafc4",
        "cursor": {
          "ref": "89f7a800-dd3c-4239-bd07-8ca52582fa5b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7a8d04ad-5fcb-4ccd-9259-9c7ef364d58c"
        },
        "item": {
          "id": "f1bd82a4-00c7-4d69-aa04-1f07fbceafc4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "497f972c-e011-4d8a-ae39-e4601076dcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bd82a4-00c7-4d69-aa04-1f07fbceafc4",
        "cursor": {
          "ref": "89f7a800-dd3c-4239-bd07-8ca52582fa5b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7a8d04ad-5fcb-4ccd-9259-9c7ef364d58c"
        },
        "item": {
          "id": "f1bd82a4-00c7-4d69-aa04-1f07fbceafc4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "497f972c-e011-4d8a-ae39-e4601076dcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3ded8b-3719-4fad-b0b4-d3608a92f34e",
        "cursor": {
          "ref": "1b6f99ff-035d-4f3f-a8ab-0f6f87927840",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "061d7c7e-5557-43e6-8061-490e4b46b42b"
        },
        "item": {
          "id": "fe3ded8b-3719-4fad-b0b4-d3608a92f34e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6dfc7551-eaaf-4d7f-a67c-9b7f3736adcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f55950-e179-4b6b-aea0-c51d60310baa",
        "cursor": {
          "ref": "14e7f65a-8574-454a-b44b-e38f60d0385a",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c91c9c4b-57fa-4ef9-802f-ae81ad7534ea"
        },
        "item": {
          "id": "29f55950-e179-4b6b-aea0-c51d60310baa",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b02e8de9-4a2d-476c-8379-53796fd4c4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162634db-0774-4855-ad21-bed2a11f264c",
        "cursor": {
          "ref": "6698401a-02fc-41cc-a0f4-cc6a5a95927e",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7c5a4162-e99f-45d8-9302-cf808e31a23a"
        },
        "item": {
          "id": "162634db-0774-4855-ad21-bed2a11f264c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a9bf1c98-504b-467c-9f39-4f85911e38f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d8825e-5ea7-4ac4-b962-36b1f267a77c",
        "cursor": {
          "ref": "4dce5c43-e81e-4e16-8792-1527958518ff",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ec9365a8-2d3b-4642-b8df-71ad87d574e9"
        },
        "item": {
          "id": "00d8825e-5ea7-4ac4-b962-36b1f267a77c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8b34d541-16d2-4b24-b757-b2b752062977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccd1473-ad97-4846-84a6-9d0db102572b",
        "cursor": {
          "ref": "176a6ddd-697e-4018-b11a-82b0631c38fc",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "20d11d36-0786-414f-9b00-73e8daf69625"
        },
        "item": {
          "id": "1ccd1473-ad97-4846-84a6-9d0db102572b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "870220c3-f5a9-4c96-9a4c-e4736fd57ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad04f7fb-40c2-4c3a-b044-9a920790368d",
        "cursor": {
          "ref": "8eca97ef-e435-45f7-a9eb-e068769893e8",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5676e312-a60d-4e6e-8f10-6f489a479722"
        },
        "item": {
          "id": "ad04f7fb-40c2-4c3a-b044-9a920790368d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "46090166-932c-4443-8dd7-4fcd4a73baa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd64cc2d-ae47-46db-bd83-0ea138014afe",
        "cursor": {
          "ref": "c8f50353-9bbb-4585-8c43-b8cfa737e8b5",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "23838329-cf33-4f1a-a989-39a380105589"
        },
        "item": {
          "id": "fd64cc2d-ae47-46db-bd83-0ea138014afe",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "858ba4cb-66b0-47cc-a93b-b2da7f42deee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096c4b3b-7ec4-45ca-986c-7805d364e941",
        "cursor": {
          "ref": "6fbc7576-f48a-455c-b18e-927624a36299",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9644387a-b166-4e81-b513-cc1c38104be0"
        },
        "item": {
          "id": "096c4b3b-7ec4-45ca-986c-7805d364e941",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "324528d8-f176-4b22-bb44-dd314c9a177f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21882595-9abb-4c97-b679-570c8f25edb4",
        "cursor": {
          "ref": "ac2866d9-e4ee-4b6f-8efb-d9aa39ee25b4",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "43fe25e6-5cff-4ad7-8ad8-02d0786bca29"
        },
        "item": {
          "id": "21882595-9abb-4c97-b679-570c8f25edb4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5d87c82a-95e9-4949-b717-e9f5c966b3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426e54a4-4b7f-413f-b73a-c8ed14305fd4",
        "cursor": {
          "ref": "90868bb3-9bc2-445a-9cc7-5ce1f09110ec",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "70a8f989-163b-4561-9a0f-8dd29e8d31cf"
        },
        "item": {
          "id": "426e54a4-4b7f-413f-b73a-c8ed14305fd4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "51bfc264-16b9-40c0-a1cc-1cb6cd25bbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943f7fc3-159f-4c0b-a78e-7377ca62900d",
        "cursor": {
          "ref": "2ddad0f6-a34f-4190-8f68-21bca0e60157",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6f37a7b2-8648-49d0-b0ca-e98c856e54e8"
        },
        "item": {
          "id": "943f7fc3-159f-4c0b-a78e-7377ca62900d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b3d19b64-7d20-4259-a4b5-fcf249a3aa8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce3daaa-c60b-49ad-b836-c0974262ad2a",
        "cursor": {
          "ref": "ac127225-5ee3-4d69-9bc7-86dbd5a0a316",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "02ad8128-2387-435d-8964-ed5fad1c6fe0"
        },
        "item": {
          "id": "1ce3daaa-c60b-49ad-b836-c0974262ad2a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3cbe8cb4-51bd-4094-90cb-a4f94970118d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d3800b-a753-4d16-b9f3-53e477f18f44",
        "cursor": {
          "ref": "0f13ebec-976c-4919-a31e-9afdc95123f7",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "27ac1d97-3eef-49ee-a33a-9e7c7309e67c"
        },
        "item": {
          "id": "f8d3800b-a753-4d16-b9f3-53e477f18f44",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d9ad5e3f-e0fa-4832-9694-853c94f80047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e64176-d7c8-4221-bc51-570aaaba3b93",
        "cursor": {
          "ref": "bc22009a-f5f3-4d4e-ae8d-3a646b95f88f",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2248bbd7-70ad-4edf-83f8-ac45fe35a4e3"
        },
        "item": {
          "id": "16e64176-d7c8-4221-bc51-570aaaba3b93",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2da3c518-5e8d-48da-9357-04faecb4a7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2207f8a6-b065-4f10-ad25-c09455a2dc63",
        "cursor": {
          "ref": "f3fb8a2d-ef2c-42ef-b8f3-21114b045e3e",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c908d2d3-9498-4504-a5b1-2306ff99cde4"
        },
        "item": {
          "id": "2207f8a6-b065-4f10-ad25-c09455a2dc63",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4aba269f-6c00-420b-9f62-3261c15b43cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6874ec00-fe5b-40c1-9cf0-104dbfeb0df4",
        "cursor": {
          "ref": "0355f466-eec7-40ee-aae1-9fc192fca920",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7c71d8e1-f881-47be-8b3e-022e1eddecfe"
        },
        "item": {
          "id": "6874ec00-fe5b-40c1-9cf0-104dbfeb0df4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "11bea290-c122-4701-b36e-1020a71bccac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255d4be9-61b0-4a41-b50f-0ec0853a6935",
        "cursor": {
          "ref": "914e004d-f8b7-4825-890a-6ba0227fc30a",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8870f242-ee85-4ae3-bf63-63b636205745"
        },
        "item": {
          "id": "255d4be9-61b0-4a41-b50f-0ec0853a6935",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3e7f797d-16f7-4950-8256-6273d9cd72bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e035860a-5b15-460a-818f-5d54f7a5cdd6",
        "cursor": {
          "ref": "5062b0bb-57d8-4c05-89d1-5d49a3ff3eb0",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "23e84367-ccb9-4b0a-af7d-c9071e67a361"
        },
        "item": {
          "id": "e035860a-5b15-460a-818f-5d54f7a5cdd6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5a5a7c4a-08cc-4385-9ed4-7c101032802c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91be7a2-67c7-4ece-b09f-319ee08cefa4",
        "cursor": {
          "ref": "37eaf9eb-a056-42b0-a372-db711fd4f9e9",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7b9179aa-6270-4e2e-8e98-05575300e514"
        },
        "item": {
          "id": "f91be7a2-67c7-4ece-b09f-319ee08cefa4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cc00e254-8d55-4dff-89f4-e2225a9444f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5567a3b3-c74f-4ab3-9b13-c97042af2ec7",
        "cursor": {
          "ref": "2fa75521-e15c-45d4-97db-7c16bbc2846e",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b67de7e3-d056-4a62-bd5a-3588c9f0945b"
        },
        "item": {
          "id": "5567a3b3-c74f-4ab3-9b13-c97042af2ec7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f34f2dae-d314-49fd-b6e0-da36e28b6733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac8334d-2a52-4107-a69d-6697c4428d09",
        "cursor": {
          "ref": "a51ad012-00c9-4e53-b7d2-8778a1c05c54",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6bf1d010-15c8-4d4b-b2ed-c18478843b7f"
        },
        "item": {
          "id": "9ac8334d-2a52-4107-a69d-6697c4428d09",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c4a2e6ea-9dd9-400d-9055-2e5631d03551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b35f34-7c24-4f00-8259-d123abf948ce",
        "cursor": {
          "ref": "0096ef90-d4cb-4e93-88d0-cdb402f22b0c",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6ec1c544-725a-429b-968a-d34041ca0c56"
        },
        "item": {
          "id": "68b35f34-7c24-4f00-8259-d123abf948ce",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "308bc049-6242-4526-ab13-8d2883a236d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e270e035-2ef4-4504-a672-3f1006dc5573",
        "cursor": {
          "ref": "5068f56c-5f40-4de9-bf66-cfc94ece2593",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e4dc98bb-73df-4bb5-9f57-6528404c75f2"
        },
        "item": {
          "id": "e270e035-2ef4-4504-a672-3f1006dc5573",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d2eab9df-2501-4145-af53-c0475200b322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd256f1-f13f-4067-9d89-5ce745be0889",
        "cursor": {
          "ref": "363cae84-2cda-47f9-af74-41d870ddb6e1",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "11dc918c-ba8e-456b-ba79-198bbaf372d7"
        },
        "item": {
          "id": "7dd256f1-f13f-4067-9d89-5ce745be0889",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0caff519-492d-4c8a-b715-cfa540ea3ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6be459f-3ba1-4207-97de-aed8821c21aa",
        "cursor": {
          "ref": "bf60bb66-e199-4c69-82db-6a2d746e8c03",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1447879d-18ca-46c4-953e-2c76b8446601"
        },
        "item": {
          "id": "d6be459f-3ba1-4207-97de-aed8821c21aa",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "68289392-a076-4756-beae-7f4fb7f09ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fff9e4d-5c45-4ddc-b07b-b3bbbfd6f1e6",
        "cursor": {
          "ref": "af3be0d4-dbe0-4fb1-a9ec-bc1b9be7ebd4",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "60a26eac-6781-482e-a13b-4193c37435af"
        },
        "item": {
          "id": "0fff9e4d-5c45-4ddc-b07b-b3bbbfd6f1e6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c839d372-2d61-435a-90bc-c967dd4040da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97df51bb-54e4-41db-9bb0-a06a41641c97",
        "cursor": {
          "ref": "aeddbaf0-13d5-4269-8854-970f6526a63e",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3a3bab43-a808-4721-9666-431f0876f42b"
        },
        "item": {
          "id": "97df51bb-54e4-41db-9bb0-a06a41641c97",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2864db35-5ebf-4c24-87a4-6c01982afd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fd8e56-d837-4cb6-bf4c-a698352453ae",
        "cursor": {
          "ref": "cd698e37-f2f4-4f73-9e46-ed999b51edcc",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6739a6e2-5a00-4400-81a4-42c55f883e28"
        },
        "item": {
          "id": "30fd8e56-d837-4cb6-bf4c-a698352453ae",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0df17530-527a-4935-a089-b34fcab17fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5682d110-ffac-4ed9-8509-378d09924331",
        "cursor": {
          "ref": "6d58aaa3-b4b2-4cdc-89dd-eff7a4413bc0",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fef35069-856d-4ec8-b481-87f14fedc200"
        },
        "item": {
          "id": "5682d110-ffac-4ed9-8509-378d09924331",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b7df0479-5ee1-451e-8b51-c679a1e54636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a155b903-e1d7-4711-b1b2-70df69a22193",
        "cursor": {
          "ref": "ece6e1f9-e32c-4061-911a-37de06231821",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "21a66829-b500-4541-a8c1-c3ab929fc98c"
        },
        "item": {
          "id": "a155b903-e1d7-4711-b1b2-70df69a22193",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e26e517d-84c1-4e17-8105-b91daaacc800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074dae32-1f78-4ab6-823e-4ca3e13e3f09",
        "cursor": {
          "ref": "6f06c266-7683-41aa-906d-261fa31adf91",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9d9b8095-bf88-4753-827d-3e2839054397"
        },
        "item": {
          "id": "074dae32-1f78-4ab6-823e-4ca3e13e3f09",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d93d54a4-9118-404e-811e-2c13100c9932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39106838-6282-4747-af29-d20525a45bbb",
        "cursor": {
          "ref": "baa9eb63-3616-47d4-a87a-4ec77ce09a12",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "96cfde5e-e1fe-4add-85fb-39e202df1e4c"
        },
        "item": {
          "id": "39106838-6282-4747-af29-d20525a45bbb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e412318f-4002-46bd-b597-7a05dc0e1078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52c2965-6c7f-44c6-822d-1cb52dc971f7",
        "cursor": {
          "ref": "34044cce-0e4e-47f2-b52d-d5185161b3ef",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b09e4805-d6c6-444b-94d6-238a698249c3"
        },
        "item": {
          "id": "b52c2965-6c7f-44c6-822d-1cb52dc971f7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a4d41eef-6c96-46b2-8404-aa8554893587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d323b6-4f71-47d6-8dff-36fc6e7d1549",
        "cursor": {
          "ref": "dea705f3-cc18-49f4-8993-11c60cdcd414",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8135ea7c-251c-48e8-ad7e-3c657d2fa36d"
        },
        "item": {
          "id": "93d323b6-4f71-47d6-8dff-36fc6e7d1549",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e5212d1c-2efa-4125-8df0-d085a0b0682d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06aa219-1bbd-4164-8579-2ff5a88355ae",
        "cursor": {
          "ref": "79e4dbaa-c383-4011-bd95-0f2fa844c593",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "16645b02-81b4-47d4-88ff-d0a8d9b10e87"
        },
        "item": {
          "id": "b06aa219-1bbd-4164-8579-2ff5a88355ae",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "16223c83-525b-43de-88c7-eaab1af264f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8c6cc4-c073-4de4-b313-87b3b77ba7f7",
        "cursor": {
          "ref": "90225d5b-3dbe-4853-b9c7-ad7dd6f9a782",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f0f5a35b-5323-4362-bfc5-00e8f7481950"
        },
        "item": {
          "id": "4b8c6cc4-c073-4de4-b313-87b3b77ba7f7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f53cd05e-73e5-4c37-8df1-b50c8fe25b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70218f3b-99c7-4494-8318-413add51071a",
        "cursor": {
          "ref": "250d23a0-9927-4577-896e-0d24bb9c7577",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1317bf66-2893-4799-9eac-2540bba2b380"
        },
        "item": {
          "id": "70218f3b-99c7-4494-8318-413add51071a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "59bdd613-325a-4bd6-9b64-d6d765044d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be78f5ee-d0ee-4144-af59-d0160c143ee9",
        "cursor": {
          "ref": "75fe910d-f00d-484e-8ecb-c940b2cb495e",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5f261f77-de8c-47d8-991c-03ad4d76be43"
        },
        "item": {
          "id": "be78f5ee-d0ee-4144-af59-d0160c143ee9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "eb645c92-3cc3-4b67-8710-2b956f5531bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ffb0fc-8989-4e87-b1cc-df464a091142",
        "cursor": {
          "ref": "bd82d545-3beb-4679-b073-9daf3c7010f7",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ec201a28-3d4e-41ca-9601-46f7493f87d4"
        },
        "item": {
          "id": "40ffb0fc-8989-4e87-b1cc-df464a091142",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3fbe2a1a-08e3-4ef5-b6b5-7176f772fd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f846d52b-ceca-4eb1-8084-ca996f006c97",
        "cursor": {
          "ref": "f7bf1fa9-af94-4984-8d1d-f4bb3f658709",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "295178a0-2a84-4244-9cb0-0a76786e155c"
        },
        "item": {
          "id": "f846d52b-ceca-4eb1-8084-ca996f006c97",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "23b5e477-aaa3-4474-8e19-1c7975b2cba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0baa7262-0646-44cd-a0c7-72894ac39f13",
        "cursor": {
          "ref": "ee5fc26b-caf9-48c2-99ba-f97b8c12b08a",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e44d5474-97d0-4bfd-b0b4-4345d831ac9b"
        },
        "item": {
          "id": "0baa7262-0646-44cd-a0c7-72894ac39f13",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "af5b4a4b-e874-4a88-96d4-9861e473bcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40d13a5-e4c0-4bf7-9e30-b60bfce4a317",
        "cursor": {
          "ref": "403018f9-b744-400d-8dd9-8ce932d0248a",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "307426f4-213e-41eb-a6d3-d384e2dcc458"
        },
        "item": {
          "id": "d40d13a5-e4c0-4bf7-9e30-b60bfce4a317",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d02f6695-5ec7-4585-9226-374fe04f05a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009c7d3b-1ba5-439b-ba49-5b13ed8ec67f",
        "cursor": {
          "ref": "f1b38d18-db8a-4c55-a3d4-a453a5f5a09b",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6e0d7e40-f0cc-4cce-b3d2-1fbcd16f0746"
        },
        "item": {
          "id": "009c7d3b-1ba5-439b-ba49-5b13ed8ec67f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2763a86d-eaa1-444d-b89b-81b6082b37c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d77a62-69fa-43c6-821b-863cc115675e",
        "cursor": {
          "ref": "e0707931-ec20-41b4-aee0-629c403db524",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "998ba924-a20e-4f21-893a-a9d084f3c605"
        },
        "item": {
          "id": "15d77a62-69fa-43c6-821b-863cc115675e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5db903e6-d733-4e61-8c01-95135804895a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae8c51b-53af-4a36-8d3f-a0fd14df32bd",
        "cursor": {
          "ref": "7fed01dd-3f72-4803-a099-27f1c5508fb5",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b3ab052a-8e8a-46d9-a2ed-212f766af7b5"
        },
        "item": {
          "id": "fae8c51b-53af-4a36-8d3f-a0fd14df32bd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "789f5cfd-05d1-457c-9e68-6519b57445eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c2d050-058b-4baf-b4d9-bf3304e5e16c",
        "cursor": {
          "ref": "494f9378-97fd-4f36-8407-2998b50cdb23",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4ef04390-5056-4144-841a-4505c349208e"
        },
        "item": {
          "id": "16c2d050-058b-4baf-b4d9-bf3304e5e16c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b05d0465-143f-4f44-b33c-e0040475e224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fc6236-e48e-4367-a0aa-0bfc4b3f850c",
        "cursor": {
          "ref": "b91afcf0-01bb-4cb8-9848-530b89c8ed75",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ca67c20f-d5f4-42ea-9d96-1bc29b32e2a3"
        },
        "item": {
          "id": "24fc6236-e48e-4367-a0aa-0bfc4b3f850c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f59780d9-9aa9-4802-8f58-39c56c4563ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcc32b7-027d-467f-9296-a2c7daf3259d",
        "cursor": {
          "ref": "b87a817c-252b-480b-b2a4-91e1544f2c1a",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "eeb26345-08de-403c-a12f-0374b8fd650c"
        },
        "item": {
          "id": "7dcc32b7-027d-467f-9296-a2c7daf3259d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e24c99c2-ff5b-48c3-bcbc-85209ac01183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01063ee-ed11-4d80-b672-1715c39cfeaa",
        "cursor": {
          "ref": "f2c6237a-a4ba-424b-8f68-10853b6d9c66",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "864e4c77-f87d-4604-bfbd-9118c1536d19"
        },
        "item": {
          "id": "c01063ee-ed11-4d80-b672-1715c39cfeaa",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a38fb8ca-b859-42ad-8bdb-3f09eacaed1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae58f86-0ead-4e40-8f84-fc46182f62a1",
        "cursor": {
          "ref": "4f85f93a-f7ad-4e7c-8d4b-cf07c013ddaf",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bf000596-af28-4423-bd7e-114285dcc05c"
        },
        "item": {
          "id": "cae58f86-0ead-4e40-8f84-fc46182f62a1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "db0782de-5a5b-4893-a2db-37802d8a4ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0472bc24-540a-43df-8907-97e21a1a89ce",
        "cursor": {
          "ref": "d6e83edf-5d55-4b15-9a94-ce426b17a7a0",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "faa0bfad-9b4c-4456-a0d7-878498cd41f4"
        },
        "item": {
          "id": "0472bc24-540a-43df-8907-97e21a1a89ce",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fed51b3c-b7dc-4290-a6e4-f1dc129a2c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96240d26-80b4-48e1-a650-e52178d13184",
        "cursor": {
          "ref": "8e74444f-c0ff-4146-a6b2-007f4f2dd224",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "310edb40-25d4-4df4-93c3-35c281712c9a"
        },
        "item": {
          "id": "96240d26-80b4-48e1-a650-e52178d13184",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "57f9e3c3-71c2-4b73-a104-96b9e03f2e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ddeda1-a341-4d25-a152-fa94a4c6cdb3",
        "cursor": {
          "ref": "8bb971f2-f5c3-46ed-9214-fd8a53e0af27",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "24a6e444-259d-43af-9ab0-13c36fc67406"
        },
        "item": {
          "id": "81ddeda1-a341-4d25-a152-fa94a4c6cdb3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e8f3127a-ab93-4258-b07a-ebd28761c7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6493d533-c164-4e01-9a28-1bad0e973010",
        "cursor": {
          "ref": "d407a88c-958c-48a7-9f45-da72513ec1b3",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dc49ed89-9175-4562-b893-ad849d14853a"
        },
        "item": {
          "id": "6493d533-c164-4e01-9a28-1bad0e973010",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "87507a11-0998-40ad-a406-0c78b5a34047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d4c6a7-78db-473e-80a3-7461555ad64c",
        "cursor": {
          "ref": "5d2dd74a-2a83-4aed-96c4-034e29cb0ea3",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e9b7cd06-656c-4eb5-ac07-5470a9208846"
        },
        "item": {
          "id": "f3d4c6a7-78db-473e-80a3-7461555ad64c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c58498a2-7793-4089-a49f-047c05b14ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8577e7eb-4300-4289-b6c4-cee169da707a",
        "cursor": {
          "ref": "7ed29c21-a2ae-4be6-9e4c-b546fb7b4d73",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fbbb76eb-b158-449e-a948-005b7295f7b5"
        },
        "item": {
          "id": "8577e7eb-4300-4289-b6c4-cee169da707a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "efe01ec9-9ab1-4bb3-8a3e-a07962e2800b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428c8122-e13c-49b9-8b24-afead5e46591",
        "cursor": {
          "ref": "1fea260e-0db4-4a14-a528-556a95304aa3",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1eadfed8-e00b-47c6-842f-37b5873f24f9"
        },
        "item": {
          "id": "428c8122-e13c-49b9-8b24-afead5e46591",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3da0e0df-562b-44dc-8c10-990f1f2f71c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1677a1a4-db83-4f5f-a59b-a28ab60b93db",
        "cursor": {
          "ref": "20f9f75e-89af-49b4-9c1a-ac9481e9ced8",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d59001ee-7e4b-4be5-8b46-37eb756178e4"
        },
        "item": {
          "id": "1677a1a4-db83-4f5f-a59b-a28ab60b93db",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "73e70ffb-6ba9-4f32-a8f5-4491ec9f31aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000922b1-bcc2-4a85-8612-b7b634a62302",
        "cursor": {
          "ref": "396e24ec-3be0-4590-9f16-764846d0be14",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "79c0a127-ddd5-499f-8d75-08f036aad908"
        },
        "item": {
          "id": "000922b1-bcc2-4a85-8612-b7b634a62302",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "097fe912-c3ba-41d7-b4dc-3c44cef485ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101f5cea-7b0b-4e16-9278-8cf054585d96",
        "cursor": {
          "ref": "cd60b0bb-4aca-43c3-a26f-319da326927d",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e1af6928-d73f-46b2-95a4-ee9972448d0e"
        },
        "item": {
          "id": "101f5cea-7b0b-4e16-9278-8cf054585d96",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8dbcfcfc-e033-4592-8679-e051c0ce266e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be38d747-1c96-4911-88c8-e114527e31e3",
        "cursor": {
          "ref": "c7872b15-c692-45e4-aac2-49e1a60d44bd",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6b2ce6e6-25e7-4afa-97ac-e84a55c0a89b"
        },
        "item": {
          "id": "be38d747-1c96-4911-88c8-e114527e31e3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "07b4c113-a1a6-442d-ba1e-eb02e89670f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c733df-c06c-45aa-ac75-0b3e5c327209",
        "cursor": {
          "ref": "36a06ac3-3b42-4f86-b37f-4e249af549d3",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d3490510-8db5-486a-a94a-78d541ab4c66"
        },
        "item": {
          "id": "20c733df-c06c-45aa-ac75-0b3e5c327209",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "85561ff9-5a16-4187-9fbb-b32f92dc1374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5692c278-52df-4a2f-a2f7-6aa34684072c",
        "cursor": {
          "ref": "0fa740d8-deff-48bd-8fa7-e77324b9c3c7",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "069de5c5-b291-412d-999a-c27408798230"
        },
        "item": {
          "id": "5692c278-52df-4a2f-a2f7-6aa34684072c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "10054b06-5ee4-449f-b3fe-6bb6a98d4cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c603ca-bc7c-4e85-b889-e7a5e7863978",
        "cursor": {
          "ref": "87e70c66-c855-4ea1-bcd3-cc1ffa601c80",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "58109790-1e64-4dec-9b73-1377a7dec8c8"
        },
        "item": {
          "id": "c9c603ca-bc7c-4e85-b889-e7a5e7863978",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "721419af-7b1f-4f1b-b77b-fd27b01e1743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954cdd24-998a-46d6-9912-d4f5c89f5dcc",
        "cursor": {
          "ref": "85be8f91-2c91-41b1-a1c4-eca4649a2226",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "69aaede8-5c4f-449a-b59f-50dcb926b21c"
        },
        "item": {
          "id": "954cdd24-998a-46d6-9912-d4f5c89f5dcc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ba62785b-b817-43d9-8cd0-4497011b7aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190100ab-c0fe-44bb-9401-df590f8bea3b",
        "cursor": {
          "ref": "d3248bea-a0bd-4dd2-99f4-1fbbe34c7891",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6ae248cd-2ca9-4a99-92cc-0b6abeca6a1c"
        },
        "item": {
          "id": "190100ab-c0fe-44bb-9401-df590f8bea3b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "98674d41-f7ac-4147-a8fd-c80285f25a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793a4905-71e2-4a05-bc4d-b1289269061b",
        "cursor": {
          "ref": "0a5a9f1e-2acf-480c-bd34-3649fe37343d",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d8495b66-6f24-41c5-a283-59527c420477"
        },
        "item": {
          "id": "793a4905-71e2-4a05-bc4d-b1289269061b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b2c2a65e-7777-45df-8859-3abfe4e8a980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bd76b0-54b4-4395-bd2f-d37dfdaa81cd",
        "cursor": {
          "ref": "9d747911-e4cd-4055-82d4-37c706923fc1",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1c66b424-e3a6-4b26-b8cd-81aa6a7ff3b2"
        },
        "item": {
          "id": "38bd76b0-54b4-4395-bd2f-d37dfdaa81cd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "14d38c2d-b802-47c6-9e2e-15bd95ca1523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4c203e-6b43-4592-ad91-73b72f252c7f",
        "cursor": {
          "ref": "76a7f531-2f01-4213-9625-26fad53c3aa3",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e7360551-a613-463e-994e-dfc9211de547"
        },
        "item": {
          "id": "fb4c203e-6b43-4592-ad91-73b72f252c7f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cb13b5f4-401b-4c37-ad9a-15344407be0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd21e30-c88d-48a3-a25c-bffb8a6d146b",
        "cursor": {
          "ref": "ffea71a6-2a1a-40c7-ab7d-7232c846690b",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fef85279-8f60-44be-963e-04f37c6ca940"
        },
        "item": {
          "id": "fbd21e30-c88d-48a3-a25c-bffb8a6d146b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4ce19ab9-adba-4924-8eb0-a825b838fd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3102470-ad41-4074-a72a-a9bbea0b700f",
        "cursor": {
          "ref": "6eb2e54c-6336-415b-bd93-f346ebc0f1f4",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "90a8c619-0e64-473a-853c-238c31e2d3ac"
        },
        "item": {
          "id": "b3102470-ad41-4074-a72a-a9bbea0b700f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "36bfa496-0ee4-4a9b-b2a9-8c3afc76d6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef3393d-5ba2-456b-a8ab-165bdc3097ca",
        "cursor": {
          "ref": "d6c36159-b11e-4d4d-8e4c-81d7a665cf19",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5f4aede0-d48e-4a12-8b84-d4f01d77d1f3"
        },
        "item": {
          "id": "fef3393d-5ba2-456b-a8ab-165bdc3097ca",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "25651f4e-7aa9-42c3-9e75-31cb3fa301d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 895,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cd046f-60eb-47d5-816f-3780ddd05e73",
        "cursor": {
          "ref": "04d36c11-6616-40ed-8235-432017ba7d44",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4e6b9221-6d82-4a26-967f-e2c48c1ea225"
        },
        "item": {
          "id": "c2cd046f-60eb-47d5-816f-3780ddd05e73",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cf5a5eae-9a85-4725-a55a-7bfdb89d3dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bac50d6-393d-4f1e-bae5-815a79b5d970",
        "cursor": {
          "ref": "6b75baf2-8983-4740-a691-755df284aa34",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b3d3a2d2-17bc-4997-b44d-963c463716b1"
        },
        "item": {
          "id": "5bac50d6-393d-4f1e-bae5-815a79b5d970",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2850b13c-71c8-4414-b901-9d4f11035870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 899,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52015fd7-14e2-40bb-8535-9601a3efbd6b",
        "cursor": {
          "ref": "fe42745b-c52a-44da-8901-9d7c6cbfa1ab",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "de088d28-21b6-4193-bd16-d396ff601393"
        },
        "item": {
          "id": "52015fd7-14e2-40bb-8535-9601a3efbd6b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d6826871-86f7-4c2e-b09a-2c53c5ba6a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93edf77-520d-4e48-aa85-3273b3703850",
        "cursor": {
          "ref": "19dc82df-148a-4da2-8f51-96b1ea792440",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cfe77b7a-31a9-464f-8476-800ccecee21a"
        },
        "item": {
          "id": "c93edf77-520d-4e48-aa85-3273b3703850",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4657cb92-d7fe-4969-8160-d6a56321f10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23f1670-cda0-4e26-bd15-43efd075c198",
        "cursor": {
          "ref": "be995681-1e7f-4687-9d20-a9f1ee037208",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ddf96a80-9310-44b0-9b8a-966ddadc2fbb"
        },
        "item": {
          "id": "f23f1670-cda0-4e26-bd15-43efd075c198",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "665247ec-2ea1-4fb2-9388-0ebd53992997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370a67d1-7077-4cdb-8694-852aaba12625",
        "cursor": {
          "ref": "ea06ffc5-61ba-4e88-9b44-d499edf4630c",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4b572100-da2d-4ff9-8474-afe8c0aa9e38"
        },
        "item": {
          "id": "370a67d1-7077-4cdb-8694-852aaba12625",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "db08bf32-821f-45e8-9249-f63369d0d3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3bdd9b-8fef-4a53-9a0f-b513602783ed",
        "cursor": {
          "ref": "e35b9081-e4b7-4d90-b40f-ecb67b421bd7",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c82b69b6-1921-4360-a0e7-00e91deae305"
        },
        "item": {
          "id": "8b3bdd9b-8fef-4a53-9a0f-b513602783ed",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9bd5f2e3-8446-4440-8728-35c8f962ec5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f991be1-bc55-405c-b5c9-7e6ee9f53dff",
        "cursor": {
          "ref": "1527dcee-b85d-434d-b7b9-dfbb1abb55b2",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2b67d269-4e76-4cf8-92c0-a51328d97be3"
        },
        "item": {
          "id": "7f991be1-bc55-405c-b5c9-7e6ee9f53dff",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "56645c1e-cade-4377-a1d2-c71c92c805e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368315c6-b74f-4a01-aa21-9f7e0f34945e",
        "cursor": {
          "ref": "68a21d7c-a2a5-43de-9f16-f21952d350e5",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f67bd244-6458-4fa1-bc8f-9926f72ce33e"
        },
        "item": {
          "id": "368315c6-b74f-4a01-aa21-9f7e0f34945e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "80eb3912-7519-4124-bd2d-33da32e8a631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a95af99-4669-416f-969c-bab28d9c389f",
        "cursor": {
          "ref": "6aea1d07-9c89-45a8-8efc-d91944800ca5",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7baba259-d124-459c-b3a8-86c36fe1d4cf"
        },
        "item": {
          "id": "7a95af99-4669-416f-969c-bab28d9c389f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1407d139-be2a-4ed2-b0c1-e30c5501ad06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9877809c-9949-4447-ae07-a38de74f0c06",
        "cursor": {
          "ref": "7c5fcd61-f88c-4a42-8285-4cacb0603860",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b4d891a9-17a3-4418-802e-a8a2a85cbf72"
        },
        "item": {
          "id": "9877809c-9949-4447-ae07-a38de74f0c06",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2bfe6352-5515-4013-83f7-d7b2e1211732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d7c201-14d3-4bcf-9e08-3a40015a77be",
        "cursor": {
          "ref": "170e2d08-ff25-465a-87ea-c00aa075584c",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "13abf347-ed1f-42c1-8156-6f7102b8505f"
        },
        "item": {
          "id": "60d7c201-14d3-4bcf-9e08-3a40015a77be",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9202c120-366a-46a5-a599-bf24a1533f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9bfcb1-7e17-4721-a7b4-460c64c41715",
        "cursor": {
          "ref": "d554cb21-4456-4d67-b27a-667e34571c17",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0afedb14-8159-46cd-a7e2-50cb2120b6e5"
        },
        "item": {
          "id": "ad9bfcb1-7e17-4721-a7b4-460c64c41715",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2eea40fa-c2e6-4bb8-8e4c-90c032a027be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08414376-8c3b-4c27-9d4e-8a1d5af5a41e",
        "cursor": {
          "ref": "0a8e5986-abad-4bfe-b7a8-e27e25d84e99",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b65e0771-817c-4d92-bf1b-43efaa207938"
        },
        "item": {
          "id": "08414376-8c3b-4c27-9d4e-8a1d5af5a41e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b771a230-3475-4060-946b-cdb2e52ba1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bddb7cf-930a-424d-911f-2b87b15ab6d7",
        "cursor": {
          "ref": "04f5f9f0-288f-4ce0-bccc-bc01d126736c",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "29175e53-ab94-491c-af01-468f9534dacd"
        },
        "item": {
          "id": "6bddb7cf-930a-424d-911f-2b87b15ab6d7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e9112cdb-e6a9-4fb2-a6c1-7c886a6a3d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b897412-3d7f-4db2-a5f2-ea4c93958cb5",
        "cursor": {
          "ref": "0c506dca-9d16-459b-bbdf-df6045f05bb6",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9942c0a5-3856-4611-bf20-16104c33c463"
        },
        "item": {
          "id": "7b897412-3d7f-4db2-a5f2-ea4c93958cb5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "32a0c143-fc52-458a-8dbb-9f512be97f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603070a5-7512-4007-b323-2c10fc1bf44a",
        "cursor": {
          "ref": "ff2c2461-4af3-42af-ab60-2a4a1a5a3316",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a91ac05b-4710-47b8-844b-e945fd79bb76"
        },
        "item": {
          "id": "603070a5-7512-4007-b323-2c10fc1bf44a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "350500b7-9d94-4ae2-ad87-1a50733ce69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9de26d-a470-4903-bd78-548fb185a3da",
        "cursor": {
          "ref": "cfa242ac-f5f3-4d39-9c4d-8a721706fe78",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "385a5914-63a2-4398-89fe-ede1cecaadb4"
        },
        "item": {
          "id": "db9de26d-a470-4903-bd78-548fb185a3da",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "84bd7877-c352-4ed1-8c5d-e6ab8fed43fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b819ca3-5292-43e0-ab09-d802d82de265",
        "cursor": {
          "ref": "b08c0b58-9e31-4596-8df3-edfd74d115d0",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a7e9b77e-b4da-42b5-a74e-1eec89fab830"
        },
        "item": {
          "id": "3b819ca3-5292-43e0-ab09-d802d82de265",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8bd3ede7-4ee4-49bf-b962-f4d4c6ae3f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac293aa0-cb7c-403b-ae04-db89e2d4fbd1",
        "cursor": {
          "ref": "307bd2de-657b-4e86-a7d6-05cbdfc7ea71",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a2100b66-90d1-4808-a70b-3a6a805009dc"
        },
        "item": {
          "id": "ac293aa0-cb7c-403b-ae04-db89e2d4fbd1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "58d8eac1-38f3-436d-9ccc-d7a08ee5fff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4baf2b-e67c-41cb-a622-5faf32db7389",
        "cursor": {
          "ref": "523fb339-4a6a-4515-aa83-d70afcbf1a3c",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "210f3e49-f27f-4f28-9a74-898a06a257cb"
        },
        "item": {
          "id": "5e4baf2b-e67c-41cb-a622-5faf32db7389",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "db652bbe-307f-4c91-ba27-179078dacb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d96777-4f81-4d67-b20e-9921367b512b",
        "cursor": {
          "ref": "c662502a-fa17-4b73-957d-28d64ecc7244",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b0598ba0-5561-4728-bedd-68feff962a0a"
        },
        "item": {
          "id": "b5d96777-4f81-4d67-b20e-9921367b512b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "64f837d8-dac1-4935-a969-8fadd2f35aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b848695-7741-44d9-a669-05718f330885",
        "cursor": {
          "ref": "62fa7ce1-0d27-4e9f-91c5-42d2de32c27f",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "86a2a7e1-31d1-41bd-ae47-c833f7faa160"
        },
        "item": {
          "id": "6b848695-7741-44d9-a669-05718f330885",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "59afd024-172d-4731-9d87-265014aff5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f947b3-0e2e-41e7-88df-98fede184fb0",
        "cursor": {
          "ref": "3ec3df7f-bb09-476d-8c6f-78402c0abfd0",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "61e463d3-5abc-4fb5-8f38-c54cc4f886b2"
        },
        "item": {
          "id": "14f947b3-0e2e-41e7-88df-98fede184fb0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "49e19ef6-927d-4839-8295-8be7cd4f5656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909f597f-b4ae-4ce3-865e-60c61df43de5",
        "cursor": {
          "ref": "bebcf658-0f92-4b36-b08f-f4f4b2f34f89",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b6a32ab6-5e20-4abb-827b-bea7640372a9"
        },
        "item": {
          "id": "909f597f-b4ae-4ce3-865e-60c61df43de5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8b26095b-0613-49ff-afb3-8b9a7bff3658",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cc8f19-ac64-4852-b7f8-c28d9bc5098a",
        "cursor": {
          "ref": "9ee367b5-0ec4-41b0-a2ea-e8124af1ab04",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0f24202b-7d9b-4405-9aa7-5f515e1b5cc4"
        },
        "item": {
          "id": "72cc8f19-ac64-4852-b7f8-c28d9bc5098a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "556908ae-43e0-4f90-8557-26148cdffa89",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 396,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1d5384-18d2-49c6-8ea3-7843f85e0894",
        "cursor": {
          "ref": "a004af01-356f-44b3-bfe2-c2776d5c8cc2",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c64da3c1-786f-4199-9070-3f6555acaa89"
        },
        "item": {
          "id": "0b1d5384-18d2-49c6-8ea3-7843f85e0894",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "17a839d0-dee6-4734-9ef0-cf8103dba3c3",
          "status": "OK",
          "code": 200,
          "responseTime": 517,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2403777a-513a-481b-af1b-a69d483c2852",
        "cursor": {
          "ref": "9c300051-a47f-41e5-bb6a-126cb6d2b309",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c0632407-4410-42de-8df6-1654f8a66c5d"
        },
        "item": {
          "id": "2403777a-513a-481b-af1b-a69d483c2852",
          "name": "credentials_verify"
        },
        "response": {
          "id": "baec021f-eb35-4f00-9a37-b72c73895e62",
          "status": "OK",
          "code": 200,
          "responseTime": 2455,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "581ae421-82c5-4ea6-902f-180afb471dff",
        "cursor": {
          "ref": "bbfc3ab6-8a42-4924-8ee6-deb83362ff77",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6fe6bc26-5d5f-4328-8ca4-0cc516915529"
        },
        "item": {
          "id": "581ae421-82c5-4ea6-902f-180afb471dff",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9ae38bd6-090e-419c-8362-d53ab4d8cfb9",
          "status": "OK",
          "code": 200,
          "responseTime": 2500,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6abcef-46e3-415b-82fb-93574ca23726",
        "cursor": {
          "ref": "02db0049-42ab-4bdb-b87c-28ca32b44707",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "523b2fa4-ffa6-412b-b3b7-07a2f93c5704"
        },
        "item": {
          "id": "5f6abcef-46e3-415b-82fb-93574ca23726",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dee3c227-039c-4a7c-b8ec-38782981a271",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6abcef-46e3-415b-82fb-93574ca23726",
        "cursor": {
          "ref": "02db0049-42ab-4bdb-b87c-28ca32b44707",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "523b2fa4-ffa6-412b-b3b7-07a2f93c5704"
        },
        "item": {
          "id": "5f6abcef-46e3-415b-82fb-93574ca23726",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dee3c227-039c-4a7c-b8ec-38782981a271",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6abcef-46e3-415b-82fb-93574ca23726",
        "cursor": {
          "ref": "02db0049-42ab-4bdb-b87c-28ca32b44707",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "523b2fa4-ffa6-412b-b3b7-07a2f93c5704"
        },
        "item": {
          "id": "5f6abcef-46e3-415b-82fb-93574ca23726",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dee3c227-039c-4a7c-b8ec-38782981a271",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260e10ff-56b2-4208-96e8-1c46795076fa",
        "cursor": {
          "ref": "dee5aa64-4496-4455-9e55-3af3d865e27f",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "424c13fb-2e35-4fbc-903b-0ee01e91532e"
        },
        "item": {
          "id": "260e10ff-56b2-4208-96e8-1c46795076fa",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "6ae9d24c-e5d7-4077-b273-6d6e9f425928",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 458,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ad9fea-e2a5-4894-b32a-5016bb1e0448",
        "cursor": {
          "ref": "1a009f34-3cab-4119-a73c-e9ed857a62a8",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f7493b5e-f2cd-4650-b7f3-037d948454ff"
        },
        "item": {
          "id": "c4ad9fea-e2a5-4894-b32a-5016bb1e0448",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6a984ace-7ee5-49b2-95a4-48fa16c0cab3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ad9fea-e2a5-4894-b32a-5016bb1e0448",
        "cursor": {
          "ref": "1a009f34-3cab-4119-a73c-e9ed857a62a8",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f7493b5e-f2cd-4650-b7f3-037d948454ff"
        },
        "item": {
          "id": "c4ad9fea-e2a5-4894-b32a-5016bb1e0448",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6a984ace-7ee5-49b2-95a4-48fa16c0cab3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07208500-1940-4b45-b207-14d2cacf8beb",
        "cursor": {
          "ref": "fa49ad5a-9689-44fc-9a9c-27e2b0875d09",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e5f4b637-6f42-4003-a901-4dfdc14d18f0"
        },
        "item": {
          "id": "07208500-1940-4b45-b207-14d2cacf8beb",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "7a53ee66-0091-4d42-90cf-bbac7386c8ae",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 694,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b6a009-520b-40ee-baf1-060e0e87abf7",
        "cursor": {
          "ref": "9bb98ec2-c690-433a-8510-09643316d80b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7de090b2-16ba-40d9-bb56-3b7a62e9e7a7"
        },
        "item": {
          "id": "26b6a009-520b-40ee-baf1-060e0e87abf7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f4199e80-aabe-421d-9d06-dda949438bef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b6a009-520b-40ee-baf1-060e0e87abf7",
        "cursor": {
          "ref": "9bb98ec2-c690-433a-8510-09643316d80b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7de090b2-16ba-40d9-bb56-3b7a62e9e7a7"
        },
        "item": {
          "id": "26b6a009-520b-40ee-baf1-060e0e87abf7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f4199e80-aabe-421d-9d06-dda949438bef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67d6daf-6df8-4cf8-8058-7d87850af9b9",
        "cursor": {
          "ref": "1b293de1-55c5-4801-b29d-ff6ebe6ff580",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f7cdaac8-3647-4888-a0ce-6f5c09f221c4"
        },
        "item": {
          "id": "a67d6daf-6df8-4cf8-8058-7d87850af9b9",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "da711660-3a84-43eb-a5d3-c6d511a7a7b6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 876,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}