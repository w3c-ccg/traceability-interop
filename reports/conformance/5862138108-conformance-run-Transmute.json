{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1ec26637-099d-4eb7-bdc8-654416d270fd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b5aabb26-5aeb-4f3e-bb8f-dfc8777444f6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d2bf3391-ff33-4367-acac-d7da12f69d6d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "32149312-178c-4c0d-ae09-169e423c06b4"
                }
              }
            ]
          },
          {
            "id": "a872a94c-a1de-44a4-b0dc-6586367d13d0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c50e910c-df22-473d-851b-ba18dca5701b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b3fd4283-eaff-4fbb-aa42-e619ff4c02fd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3930389e-9baa-4ee9-9c9d-f67396dc06f6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "94fa8696-b21f-4295-948a-8df30829e50d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9d45f343-1f24-40d4-985b-afd1dbdac093",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e894a54d-4b82-461a-ac54-c8917e055cae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "141c4087-df17-4a49-943d-c4e13700672b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19e16b95-0da8-4d6c-9222-955e6d578c82",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0d47fa7-183e-48bc-ac94-6913a3d23915"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d48b0af7-577c-4fd5-ba87-80f492928712",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24684046-84bf-40ec-bfd2-e1738394a976"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84700a07-5834-4a28-be80-a323d791990c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3f8c8181-0bc7-4010-8f7e-46b0c40b051f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af8cd0b7-b63b-4fc0-a0da-f4502bc8b82a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54b652d2-dc1e-4128-bdf6-2e5ac3df691e"
            }
          }
        ]
      },
      {
        "id": "26b05be5-28cf-407b-b144-d3ad56682220",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "57ac68b4-f0d2-406f-96f9-ae319251839f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4408b0e4-6c28-48b2-93d8-57327ad1493a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "411511b9-d77b-4619-b116-2acb1b55d704",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7917c172-c408-4237-95cb-211520738032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f38cc82f-7cc2-43a6-803b-7511e373239c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbf2aa4-a81c-4686-bacb-b20c1fd8f1e7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c925dd40-4797-45d9-a38c-a10c9d77cb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12ed2ea5-f0d4-46b8-b2b3-5702a4e0aaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7186657d-2d71-49a0-82e3-87b4811fcca3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cd7047-8edd-41c1-bc8f-c2d4f5a7fed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db683937-f6b3-4183-b749-de772d049e14"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eb8014f1-003e-4ddf-a596-b888e7750de7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c0a9d3a-b07a-4390-899d-1475aa4004d4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b91a75b-7d75-421e-83a2-532e24ba46d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a122ef2b-abe5-40d8-b8e8-70c2d3dde0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3905581b-2875-4f40-9478-fabaa342f9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe6b95c-8ad8-444f-a87a-d6ceb94e4361"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "79513fc3-f308-4bbd-a248-8731ce3f8628",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a504701-a85e-4c57-8f2c-9011b729b8ca",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23d91d94-22e3-40d2-b158-967234f33608",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "24cf82c2-2c9f-43d3-bf2e-07f0b7cb7ee5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3924e93b-491f-4039-b7c3-99b67ed59801",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "782c13ce-6af8-422d-8e29-6aab579dacf9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d42f654-0b8d-46a3-90cd-c87694111518",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4f24996-0c8d-4075-8409-623a8c01611c"
            }
          }
        ]
      },
      {
        "id": "64cb46ab-7178-4562-b20e-807a17cf0d7b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fe4422a4-c7d5-4a9c-a6ca-57692a048b86",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0a5a923-8bc9-431a-8d9d-2d3d38e71a78",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f36ecfd8-487c-4883-949b-854223458f4e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a114751-cd7e-4703-9c49-38be83fa0428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ce0913-b36a-4bc0-8f8b-b2e490336232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268540f1-4b3f-4413-93f2-1a861a0da8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "894ee615-e9d2-4b48-a035-23c076677204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29075496-f7ac-4a98-93c0-ca989ccc0d7e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48db7e29-1191-4ead-a942-e19daf2c983e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a77249-96a9-43d9-8b6f-628a88e2d301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4078a8b-5463-4411-aea6-afbb6d8ca437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1278f9de-a8df-4b13-94a0-ae0ac110e727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f2635e-e848-417f-a452-0cb48436580c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d16897b-6c62-423c-a116-631462b56f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888e93b0-bd94-4996-a766-6bcd2f296f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcefaa4-babc-4bb3-bdd5-4bffca79fd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d44b72b-d3a1-42a7-9e2c-a7b1d01da365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ee2796-e9fb-4bb4-b53b-669e9b3278ad",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327b5928-4d1d-4d01-a69d-bbaba494b9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1da8988-4739-494b-99e4-1c28e4e39002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4699adb9-330a-4bd4-9fab-bc8bc5a50a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6065f1ed-c4d0-4d7d-99d0-88906cd31def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae851da-5dec-4310-9bbe-29ad5f540c40",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b003de58-4608-4eaa-9474-66b5f19dd47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2140e8a-4535-4330-a5c2-f7141e232628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f2b658-2ccf-4b41-9846-4a8781075311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ac5f414-b7db-4d92-a304-c5b3600dc40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49defdc-3cb6-4bdf-8715-1b170609df4d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36637a29-1cae-4b63-9b79-4324c2f6d008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aecc73f8-330b-4448-8964-e353c4444f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79794179-ec18-457b-8cf6-59eee883c049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51cd401b-b712-4ecd-8122-fbf25c022f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015f43e4-dc40-4e8c-8cc6-06bf84a1bc69",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff3b546-1058-4298-b0fa-96fa4fc2e799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b0077e-2597-48bd-a31c-30866a449f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2682d711-f577-4006-b15e-07172f09cb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a6fa5ee-9768-4917-a7b6-de6999e8478e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c1eec0-4981-45ee-8dbc-19d3073167a0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159bfa2d-7c54-4921-8858-41d47e967b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a76eab4-4b4d-4264-ab9f-38fdb552863a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7117cda-e7af-4229-b4c7-76256f739376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f26c40b3-4f79-4fd4-9cb8-0fbd94754b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bb9260-76a6-4388-bcc4-083d32320237",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e902da34-3b46-48cd-947f-19c1d5b18e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ef593a-e052-4b3f-9c78-66b7ac404308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237d6473-4fb8-498f-bdf5-d900b80601cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da95cde4-5737-42d0-8763-79ecf3068afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f45be75-5d9f-4739-9ed9-4e5ceeddbe28",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552fc6d1-7860-44bc-b158-afcafd1a5cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17087cdb-25ab-4b61-9be1-00338cc054a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93e7028-e24c-4173-b8b2-8df802b56c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03625a22-9faa-46a8-b488-1d1556f620e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d564155b-d112-481f-bef4-249abdd60e2f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cf6e58-9b9b-4830-9289-2abeeb1f9636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060f627c-3f68-40ac-ab84-7ca9810c7bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19113bef-21f0-436d-a9a8-5620f97c3cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc3c8550-228d-4bde-93f9-50e2bd1ac6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2e2d39-7e64-4e33-bdd5-4cb0f8ede3dc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5740892d-2908-429f-add0-503c3c517b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1162838b-f55f-4e4f-923f-01d679711c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a27696-758f-402f-a496-c01344e17e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9fda8f0-2030-477d-b1c3-abda4b38ab38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc28f114-5dd5-49bf-a2d4-cf26395ebf9f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffacf53b-c3ed-45b4-8c8a-e4fd03983b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2ff95a-746d-4369-8f76-4a0cd269ea18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4230f69-0eba-4e4a-a862-0027a85df432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11da44c0-0103-4b43-8bd2-dbd5e76c60d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2383eb8f-7487-4a74-bd79-ffa524ec3ee4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37413f35-575a-4c94-a660-38a635f453fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc80332-9f32-476a-b91e-2f849f37b4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929a0a3f-efdf-4c87-964a-0fca606bce1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "704a2551-615b-40f7-8b66-4e48df8ad1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00303520-5cf7-4577-887a-baa92395bf4c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2210bcf8-ab75-4bf3-ac7d-9113129a4f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2faf774d-7cb5-474f-a36b-462830ce224e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f895fcd-86b9-45ab-9966-fa4a79f3272f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efd39ea3-ba02-4a0c-86af-49e39b896dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c577e69c-58c3-455c-beaa-98b18cfc1d44",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6211689-e599-4a8c-a082-b9eb7ab17db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b923c5-4cc2-4c9d-a48c-6057c595dd41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ce8b72-ac7c-4893-9c58-84162c0be471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9c9a90e-9a4a-4d56-bcb2-1b119c1899a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ca2b4f-b665-4102-b9c7-25005dec8ba0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c9c1af-76ad-40f7-a471-c3ba87eec22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476a1add-3615-4e9a-9c56-8c3ac758b39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c14a70-1419-42f0-b18f-bb14c893c5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "103a6a75-c482-4db7-bdab-cba0a575cf69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b86fb5-1bf8-4830-8c01-06cb17458ff6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00120d09-c864-4b1e-bfbc-7f3b42cd2406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00b0fcd-e38c-40cc-b081-57d4a58e13c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039be65d-d209-488c-9ae6-80db563c7cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "efe93f99-eb14-4123-8e57-571ef3652854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f1b821-c97e-4de3-921f-78294fc6c6c5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842d25df-cdbb-4030-aeb0-e29ff9b53fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2cedb6-910a-42ea-987e-b22198ca790d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5fa0b0-ddb9-4e76-9308-f7a6e96c230e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37295d1d-edbe-4334-abfc-67d97c948b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a10b80b-e900-4ca6-95ba-7167dbc447be",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330843ca-b7ba-4421-9c92-39ab71f8acec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4520b5c0-1921-49d1-9044-e7a9777a4fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fd35cd-df34-461d-a8ca-e48009df2f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e76a53e2-7be8-4c7b-aafc-a7b19826a4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4b8626-82ac-42b7-aac5-f3510d94c79d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b4c99e-db00-4eb4-8900-10e3c8b2908d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef790236-04bd-44c7-9c25-d43a69e7e963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e0e209-6956-49b7-b854-da1ef56a92c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f82f9c-fabc-4cb1-af05-37088639635c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce978a09-387d-4c7a-9a83-52b5596ee70c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a718dff8-7c29-4f89-a4aa-67e965f6a548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b7a6ba-2bdc-42bc-8b60-e779a66b1318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33664ede-f7a9-4f1a-b598-e99d05e180b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9de5093-3a31-408d-844f-5eb48bd567d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93abff6c-f463-4c3d-bd24-3849fa691d1b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661bafef-edf1-4554-9d0d-285ce6e6668a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de9b6a8-688d-4545-b482-de6c14f55a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5293840-9b5f-40a0-a094-53ae8da1751f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "298adc7b-690a-45ff-873f-aa5517beeda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e543cba6-02f9-42df-aa97-5e8f96820663",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4351a3-bffb-44e1-9ea2-4622075bb8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20be7a8-7fc9-4f25-8da1-3910022474c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aee29cd-f8fb-44fe-9258-7c3cfda952f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce2fe1b-bbe1-4862-ab8c-ac7e3d739672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88af8af5-fd92-4e4a-980b-29c839c337d5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6f3614-5019-4edd-8993-032760e1ece0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcbbd49-6508-4cd7-a4bd-c44f6535fb3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4703ff36-7942-43e5-b04c-3e12ad06df87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe18b34b-b737-4a4d-8703-60ce71d284d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3e54e0-b975-43ef-903e-45d49a19ca63",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76e4ce9-3401-4ac8-9aa7-2b843d99944f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5130bd8a-bda6-48d6-bdfa-e46f18e11178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c04f67-0751-4d4a-8e1f-5c7e14904fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20b33484-049f-455c-872b-3962c9cea4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2ef28d-7124-4b08-80f1-fddeae44cc9f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae4208f-e05b-488e-92fd-5b31239c44c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee477d1d-d95f-47b3-8e4b-f8c3091a28f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13620d90-cb94-4e5f-9cb9-5ac7baad7311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88aee37c-fc97-4516-abdf-837ddcd8f6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf49bb2b-be70-41a1-9279-396422fd1608",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe1f829-55e3-44f8-870f-5ba8706a5bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbedcee2-052c-4c24-b85e-1bb9a6d885f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c74e599-cb15-40a6-8712-548e5cf97bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "313792a7-c85a-4960-bce3-79cfff6a8f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b9a25c-ee0e-49c6-834a-96f3d0e09329",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f21b205-6787-4786-b403-f75ac125368b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1c5d63-118d-49cd-8cfe-7589a582864f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655a0cf1-e115-4354-af1c-f8135b2a4496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "da856a5c-7ac1-4084-8082-64dc163c76f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec140c1-923e-42a5-8c31-718c3ee2cb33",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b216e885-591d-4338-aa96-1e036595203f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1e9830-5797-41b9-8cdd-49b38c5dd20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f534aa-1e93-418f-b92c-d4db52c3c2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff357fdf-f7f5-4c38-8d90-44227ea0a752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033abdf5-c947-4c72-a3b3-2eff31eedafe",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8dea781-bc5b-4b97-89b6-23ede3db8c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1c8263-aac2-4adf-9dd4-34c830f5bd5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f96473-526c-4596-aeff-24c0a55f2241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51aa4855-46c4-4230-a9cb-73b90baae638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae012166-18b1-4c47-bcee-a2447017915e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89136bfd-639f-4515-86c6-95470dab02ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268daa62-c47a-4ef0-ba6f-38315432e088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ac03ed-a302-427b-89d2-c397527ffd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fab47468-e806-4ecd-b3de-b8da0f57d7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f4a7d1-79a8-4c04-9725-6d09b7e2711e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2792abeb-e8b6-4a38-a46c-d221fa449530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c363d811-176c-42a1-be4e-f516a50ef38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaf5ada-f5f6-4f09-ae12-cd25b1b25afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9baf739c-4b47-4017-ab31-3fb9800181a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11e26db-d66e-4426-9064-109e853b1551",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3791071-3283-4e33-9fbd-d7e5c828120f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d441eb-7f0c-49a1-b407-45186939058b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9565ad7-c459-473c-a5b1-5ca9330927aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08ba06d4-2a9d-4973-91d4-10506a306c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1370992b-741c-430d-b3c2-25a99375d3ef",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af342a8c-8fa6-4e08-90c2-4f9b82fedc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fb6e1a-d220-4f15-b7fe-45806372c6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d252bba-3a0e-46d4-ab8c-08dc4924ac08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9ceacb45-95f6-4419-9a22-a9d4eb18fb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0a3fd8-d632-43c1-9f47-d63388f4406b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85836f68-be6d-4671-a571-7af4d4d57b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "740e2f69-8ab8-4c95-b0ad-8334ab2608d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684dc14d-0272-48d9-a0f6-5948f4559aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ae9f27-9c76-48ba-b11c-58bf91bda3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7291058b-6f39-45c1-bfe0-2a5ebbb8515e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610ed17b-1725-4a2b-9a4d-c71d277e3f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aebf782-d179-48ae-bf07-64078f53630a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57674498-dd2a-4df3-b68d-6944253403ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "805bb729-df2b-4659-b60f-bad5fb06f447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a692e7-e084-4c07-a516-7466904a8724",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87293d5-9695-4cfe-9c4d-785f9d8fa5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc953e2-4df8-4441-acd3-b7b89ffead42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad693d84-06f5-4d97-983a-3093d147616e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "21bda0b6-ab11-4f29-905b-da9d1ebb633f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bbf99b-3cb2-4abd-aa71-0e2e3f9f70ab",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e421622c-992f-4718-a6df-fddf6daf7404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dca5e44-dd20-4958-9f06-fdf59aed6cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57105f4-4c95-4748-a31c-06264db66ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1c29a1-7238-47c2-8c75-d49efa265546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751df721-2b82-47ba-a6c9-c2ffec65f475",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c4a08d-68ca-4667-911b-3f98ff41353a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3e20fd-2910-4921-a6a2-69776d6fe744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac761d6-2d1a-4c1c-bb13-67361e6d71be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c742a235-4b4c-4bcb-8962-826273556130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da886670-3802-4289-aefb-d85ade608fdb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c8c5e7-1a3a-4aa8-ba3f-b731d0432d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13a92e2-6713-49f9-bb7b-0d9a6c57106f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a09ee1-7878-4e9d-99e0-14a95eb55072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a044d8f0-2d76-416f-bd09-aeba896782b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074e368c-5fa5-4735-9a6d-d6cb5c754eaa",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8adddd-8ba9-4dbb-b68f-a7294887a5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fc607a-adbf-45f7-9efd-b24f5d3d67aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93938929-2cdd-496e-8a5a-8f674df50f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9627cca5-0e14-4f7f-bc25-d6fa9200dd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc73041-57d4-447c-a9fb-482e6aa790a4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9534f566-fb75-4b8a-ad9f-fb1951743ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5346678a-0063-4a4f-aade-5155f1921830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2e0dcf-9b27-4607-98b6-68959c028736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0482eed2-7667-4547-a0cd-dd7996568182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a94649-8684-4b59-9828-1d4e49851a99",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610e76d0-07e0-4391-9dbe-d11ac5e6987f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7ab244-05c8-4579-8c59-42687f635f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45199b3e-a88b-4ac5-a84d-5888b28c5645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5779a507-69e4-4392-99df-654424f64a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc9ef5e-8240-4b50-ad09-a45df47ded30",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2c4e0c-d15b-4704-9d89-5fe9d2a9c0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b0d09b-6e39-486d-ad20-f3183d44a160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda92dce-9093-443c-a3c0-30df7a8462e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e69acefd-2892-45aa-9f39-cc70488c0269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babf4adc-8932-4987-9698-a4874b5b23df",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d97a2e-ef90-4a55-8b49-ab4efcc2df01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466d22e7-7b8d-4081-b5f6-b8177aa07b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e903b55-f0df-4906-9d26-60f8a13548b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "996ebb2b-596e-442d-8e23-289e7cbce32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1081f5a9-432f-4596-9cd6-10575c8b163e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1eb631a-e55c-4f70-a635-b9ac9ab171fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e0d0a7-e8ea-4de9-b982-0208e7f527a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfd06bc-231f-4434-815f-8b1875436f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f460c5d-3743-4d08-9c72-1242e300a1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bdb44b-edd7-442a-a068-f8b557febd6a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f28ef5-0cd3-4c3a-87b2-89dd6a0943a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156241a3-716e-486c-8c07-bd537dc74953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5b612d-6889-4dae-9aa4-63a28facd81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9af5e5b7-2a28-4b0b-a74e-5fb0580d9764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37e0d8e-2b9a-4447-ac65-da724ecc6db1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef37c78a-555d-4ea1-b461-0a85d7dd4e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e64ce08-21fc-48dd-b35c-6dae1850b053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1399e86-c7ca-4ed7-94fd-f900a2df230d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efe69a72-35c6-4f6c-883a-b9c55791083c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ae8f10-8412-453e-ad7d-8c5ade09de5d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3ca132-0fc2-444f-81ef-1c6d6a7ff266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b1a538-586c-424c-8883-e0aaa4546668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdab085-f710-4d7a-9951-02c9c7b43b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1816a2d-0609-4e10-a7ac-5ea8786dbb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24544ec7-eb19-4c49-b44c-c1777488dd62",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1dc668-8470-43f4-999c-f811d28d3a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36a7937-77f4-4c2a-b345-a067f933f49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c17f203-b2fc-49d1-baa4-859ac24419f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "08b6a54c-0c1e-47f2-b308-8c2e82f638c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a35ce29-3262-4f39-a402-8f63cfea7cd5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b31683-6433-4360-a3de-5018ef58dae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cf4330-3a96-4f5b-bd22-40212367190e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5887ee57-11f3-4f01-9f66-ad57c437a193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71575752-c738-40f6-a8e3-ed882af8ddf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15306b3a-b5e5-4c95-935b-881f972a77e9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890e8dc9-8517-4d79-bbaa-cf6376f4ee2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3702585-d824-4346-9b0e-0f54af589c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486283c8-be74-4a3e-a7ef-085c4a746fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "345481d2-8339-432c-a036-675122181ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032a47ee-9810-4224-90d5-b5304899bb04",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d37004-96f6-4f2e-a992-f670c818b801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d2d21f-15d6-4df3-870e-4d19cad2f883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a967e88-059b-45eb-b46c-a51c2dc8a9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2b2270-cb0c-4c82-aa68-ea66bc0f21b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2e963e-51e1-4770-b775-268965c7df43",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdf9faa-b29f-494c-8150-80914815612e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fb6de7-a592-4eee-92d5-0eda236eb06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badc3137-801d-4136-b7ef-a5bc640dd34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3129dec5-d952-483f-a980-124ea640e14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9922038d-08a4-40bf-a279-a05b2aedf6b5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d840ef-9114-45bf-abbc-b4d85c5918a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e661c8f-9416-49f5-ac1c-7e3b0febb9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575e31f1-bd22-4273-a4e1-df540f972ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c011faf6-4bd6-4e9c-9779-50f15a8e4674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6485535-834e-449e-aaa3-ea0b928467ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0809873-9070-4a4e-bffa-5f61b043e70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4e6998-d4da-4344-a714-fd004e261cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f370667-c93e-4203-87ee-1f8e32974635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "86b18d66-8460-4747-b4ba-131e9b9ba3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd4c8e5-bebb-47c6-8a8f-a01ea252a66f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d65537-3e7a-4eed-a84c-984723e6f237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49db766f-8d09-4687-befd-7e730cd49e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73480390-a00b-4f62-89f4-22c39dc503b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9ab93d-39fc-46a7-a979-8ab7a9943332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49a3be7-61ce-4cb7-8673-6589b434cd99",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f81c0d-b275-4300-bfe1-47e49f5c9c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cec2a36-e485-4862-98cb-1eab6a8cb930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3b10cd-cac0-4e65-8630-47afd5573640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c001859b-33aa-4683-b055-13c3e7160f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1340a4d-e127-456a-9433-e3478cb6dc51",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6758e3dd-b97d-4705-b2d4-955646e98c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9d1596-a3fe-42d5-8d2e-73281065214b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696e9b2d-c156-4221-bbfd-5341ba0411c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6523eea4-7c17-4f8e-b519-b9557354a9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadfb502-0f44-4764-b8cc-31ebe6d49931",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc1b630-1d4a-428f-856c-32f512642f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30abbe2-c375-4f8a-a719-6dc3633c694e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966817c2-1d23-401a-b1fc-1fc9177c33a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b86ef802-5d62-475f-8830-9ae3f1dd2ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e30e95d-acc4-40c0-9690-eae31f8ce5b8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd302848-7054-4b56-a18c-e230cd12d829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96a62a7-5e12-4c66-99c7-6190da851924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce0c20c-c734-4a85-808e-589d25be919a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa9a4bd-c1bd-4f2f-9323-dfa3e50d575e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5be429-7447-4d12-82f9-705c3978557e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebabcf5a-a788-4cb0-9a68-070283e2157d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ff3fd3-5b02-4cc8-bf35-e2df0cd04425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef9f1b2-b3ae-4d2c-85bd-e24b5514a11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "97667c0e-67c8-42b7-a739-c03807eea7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748f5008-8636-4c9f-a6a3-e349b8e66726",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961ae828-f556-4463-a871-a6628fbf2a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7993bf17-2e3d-48e2-a025-325c1c476d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f075f56-bce7-43eb-8743-6def621cf5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b201c6-d85d-4811-a7df-11ee343f7793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7a910d-c4e9-48f1-ac33-3406c8ba077c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dffdce1-39fb-463f-ba05-4f69db146662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c396db8d-7ec6-4146-a7b9-b9a7a88a0841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6caf32fe-f228-4179-acb9-82c225157560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ade9c1-b907-41d2-9ffb-cd0bc4bce658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a32c994-c82d-4b7f-911b-b337e93c62e9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baa0a30-d1cd-4173-be41-8750ca0c6237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923d7177-f6e7-4eae-afea-0757baf2df9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4f4d80-53c2-4d70-a983-f5374bfd8d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b22555a-b444-4519-8950-1899a6b5b69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad98aec-9ec5-446c-bf3f-e9fd03010d32",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6e3a50-a56c-4a53-8032-f89a88b153eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae7da51-121e-4d74-bf52-99f419e03e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f11089c-bd5f-4583-973f-25f99d8fa237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b5e2fa-fe92-498c-a713-ca932dfbc93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d2b5a7-195f-4253-8440-ff1119585a73",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c4872d-d32f-45a3-accf-7526dd54859f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04406d48-16ca-4d53-98e5-9bb31c3e2704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9801c7e9-ad4b-46a1-9f38-b9f25fc366c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d700a25c-a60b-4801-bd8b-9359dcfe13a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba5868b-3e91-419e-82e9-1f6ac57aaa7d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cfa19b-73f2-4b12-883f-4101d9bf1331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1dbc6e-3a50-4ba7-bd12-eb912270dac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba13e69-3c03-4e1b-aea0-69ac2e16f753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "72dc14b8-1ce6-4d00-aa53-8065cd8e15d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c863408e-9b3b-4910-b48c-90610c463931",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b282fb12-5f73-4ed7-a391-6e8742e371f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245c9e81-7366-4914-ba16-6424b6b45f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9217651-6e02-413b-8d1d-b06b141c1381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd67f9af-07e7-48c4-8f71-6784c8de4c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e92dc6f-19f9-4da1-b4cc-b3c4f4053dd9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e88602d-efdc-4164-be58-ca3cbca1306d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aae3b42-119e-4c62-85c4-e73d93e6dba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687c4bcc-6bd4-4170-8439-631a13e70cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bed56e5-d6a3-4da0-8f1b-4f3934924067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15351307-640b-4542-baa4-6134df28ba3a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69fc88e-f729-4c7c-9aa9-b184d6b9e02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873e93cb-3c98-4081-9f75-df58ebd69ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16510479-0eb9-4a44-9110-38a110cccd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb135b82-a8a6-485f-925b-e5e75ea17607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f62ce7e-7549-4222-be21-95a487d13ea0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bbe187-f276-4195-8a45-1eaaf335918d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0359459-47f7-4271-aa46-47621082a739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee95fe2-a6a4-47ec-845b-93d7efbf90de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff942c1e-2535-498c-85fb-f36ed373b5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde9819f-c5f4-4fc2-b08a-5dcaf85f2eea",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a00b056-cbf1-482c-80c9-fc94d9139d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3152d5-34f7-458c-a11c-a5f4c6b4d2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252109b9-98c5-4066-8fef-22e20f0059e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2477c2-ea42-445e-9af4-c0e89d8b1b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfdbab1-5edc-4f31-860a-4cf31a8d20de",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efe331a-b372-479d-9c32-13c9b70a2257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c2fd49-ae00-41ba-b3f8-43ccf7f2c36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4a6c0c-cb50-4c92-b8b1-371a31a0fbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a75bb23-9060-45dd-9a34-4cb5351fe623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032108ab-2c55-4784-9e55-9e5dbeaea11b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5157a2-2165-4773-8a0b-a5d29ef6516c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c521d1d-1b3b-4561-892c-f86851ca4b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fafce99-0fa8-491c-964f-f1693aab2f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db3448a8-fa1d-4fa9-9336-da8b9c70c862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26b264e-1a2a-4569-8eea-c8baa90033ec",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35e7671-3cf7-4496-95bf-3f176b35b3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588c2f6a-af26-4332-9c0a-74f892b1b865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e03ffb-0a6c-435e-afa9-19174db1e58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbaecb7f-0075-4b22-9498-e7c9f5e65ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eea402b-f14e-4505-a0f6-7e8b7f6dbf78",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87da66b3-a8ec-4b19-a233-f7980efa8bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2e4c3f-3ea9-4b3d-a242-8a1c681c255a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296d2af2-7bf9-4197-bc10-f45cb9e3814a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b172242d-2e09-4520-b35d-7fbcfb17e8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2826d2-46a0-4c05-b3c0-0b1b9d69dea7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d67f61-fdae-459d-a72b-a1724ac0975c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c70292-5d59-4309-81b4-ed3e2cbb43e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb1b835-808d-4ca1-909b-1b19669f6244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6d45c6-62d8-43a7-a340-979ebd52fb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d406f9a7-fa77-49fd-987a-66bef912a0de",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b5c66c-e6c6-492e-8d87-dc78174b942d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028a447b-159b-4d3a-8192-7f5016c36c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8820fa05-d409-483d-b3fd-7e39dae75c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "145ad39c-6850-4713-a6a6-312da30eec42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed276cbb-259b-48a1-848b-0b8c87e16acf",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6573bf5c-3c2a-42b6-88c2-8515cc013bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d446c4df-3580-4fec-9a96-b46f6dc0d701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb17ad5-15cd-41e6-9916-aea801801c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb38cd6-35da-4420-bd66-f07a2c5189bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ba1406-4af2-4108-ba92-99f927888a04",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248a3c45-5b2c-4994-901a-4ce9cd87eff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b78772d-e184-4c27-ab8c-ca2b7075b6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361e4096-21eb-4b3f-aa24-4093b7a75a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e964258-b2c2-4cc9-8c4b-a9a367fd6848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f73ffbb-6607-4b31-97d7-6d7e9b246448",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b9a825-cd72-4255-8f2d-01bd5e1f1650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ad7121-ef44-417c-b791-dd34a5d6e356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cdf554-fdcd-4159-83dc-2da57c22979c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3e91f4-e980-499f-b0c1-caed7692d2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ce596d-e08f-4e7d-afbe-a76cb9669301",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbb02a3-3ae5-4baf-8ded-c0afb664eec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f0dba3-978b-4a6d-9901-548dedf66f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb77b6f-a3b3-4d6d-9d89-ff51a1e55f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad38229-8905-42a8-8001-3241ff45e0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3112c791-eab5-46f3-af74-8aac9bf65a4f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ae6523-5ffc-4a53-b09c-8a3ae4f6e41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571ed102-cdfb-4e62-a560-b49edc13530e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bf1a43-9539-467d-813f-de5afed66af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9af312c-750f-406b-a630-f2740db06d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9259b5ca-0d0c-4414-b18b-c5655ab18ab6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c07440-d15d-4512-b827-067945df2932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b25c22-b93c-4d83-8db5-04c16429771b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8599a5c1-31a6-4454-9f9c-9c232eaf5df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6101297-e57e-4cf4-877a-0e8ce03d9445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b74710-7e6f-45e6-8f55-e77c871cb774",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac7aeb9-5004-45d2-a715-2a4c922919ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1dfa61-9cf7-4afb-845d-ae47eccf0cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3039e69e-43c0-4dec-9e97-79889b53918e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "df2092fa-8eff-404c-9e3e-90d4bd4e9c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3959a56-5c2d-4655-b65e-468422bdfd1d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39414bcc-3bb7-44a8-8b44-e6ef6433ed72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbf6afb-7fbd-4306-a08d-515f8729704e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbe77b6-6cc4-4f13-9375-92978eadb466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "96b07b77-57f2-4d9f-8893-cb759b67267f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a39abd0-0ecc-4a6c-8185-0afafd273e89",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fdf19f-b081-4ee3-9c21-0555e4cd9a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4c13df-57ac-4d99-b157-6d03feb10f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae8b0ff-c595-4298-a7cf-23c2413ee3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c586fea0-7f34-45c9-857a-3351dbc4e66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4afa8a-f1eb-4286-8608-cf7c463d75de",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f38dfdd-4e95-4abb-897a-e901542811a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8777eb-9251-49f5-b4cd-ad147bbb30c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354576e8-5c53-488e-92b5-519c0836b3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9abe163-61b7-4904-b88c-0695d4d5622c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d329c9ab-4348-4668-9091-f6812738a9c0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3e2b79-35e4-4977-b614-cb8e052e1b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2683f321-0f42-403a-9342-ac8a28934f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b916ee2-76f6-4451-9938-57c2f24dae7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd4e1fe-c11b-4b18-ad19-715c9cde8ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fccc60-f2f7-4de3-ae98-fb68b3dfbb06",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b12ee9-2c29-4026-9954-d45bc8f33cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "29cca313-2cae-4377-b045-540d525cf307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce519ca2-6aff-4e6f-9392-9b988d49dcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb384c1-8c04-4f1e-a063-26de8f249bad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d489533-ab67-45e3-a497-a6953da76d1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe7a8b46-92e5-4e72-9fc2-0fc545b05fe8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c3f967-cd82-4e52-a24a-681d82e74ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9468e6e6-995b-418b-adc9-80d57943aa52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64acc1b4-2d90-48ac-880e-515b2c6d8cb0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e2436c2-7664-40d4-b31b-300df0dcfd06"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54a80199-dad5-4f13-b0ce-40f9d5023205",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8a594ea-188c-4d8e-82ff-8b4d6ffd58e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0840f902-e2ef-481a-9cb0-79bff46950c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "895c8573-9e4e-4cb5-9bfc-f01b418fa0d6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "68322259-f130-4e69-baf6-4b112d2dc930",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "895f6471-070a-4d72-987b-c7e08a86a5ad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c80ad585-a914-473d-bd7a-cae53a4debf3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97c5a526-a11e-4a1f-af57-773105591bc3"
                }
              }
            ]
          },
          {
            "id": "7021cc0c-83b7-487c-b946-758f80591e39",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1de904bb-1373-4c13-ac80-45a11e226d83",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ee93f00-1eb7-41cd-acc5-b7d49e480d83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c18c073-ec46-4d21-99b3-0a3aaafb84b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "040ed3eb-0229-4a18-bd85-95d093cefd33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8745dfbb-364a-4766-b32d-854e0f1df852"
                    }
                  }
                ]
              },
              {
                "id": "7b688c11-aa30-453c-9dad-094453195cc8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47c88f27-3336-4702-b0c2-c6808d24a456",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ded2bdb-326a-46ec-b0e8-83f93c572df5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "648e70cb-5839-439b-84f4-db44a8e77e05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7c17fd1b-e157-48e3-81b3-05ca39af19b8"
                    }
                  }
                ]
              },
              {
                "id": "e626ba78-ddfd-4b06-970c-4ab99c124ed2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "669da172-82f1-47ce-8913-50925ec30857",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4a3253b-15ee-4c5b-98fa-75b90a39b251"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c77ff96-439e-4eaf-afad-4abbcc3b34e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "13962fa6-de96-46bd-aa9b-ca905b17d1bb"
                    }
                  }
                ]
              },
              {
                "id": "000e2e96-30a2-48f0-869c-2445e8d358b6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f043e1f-7169-49d6-90d8-781fd1ea7419",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8836f93c-2bfa-4dea-b2d8-58b073a73c58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94b4e1b7-77a0-47ec-a0a2-30332a4e524d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "47eb58ca-4817-4c00-bee2-4af40e9cad40"
                    }
                  }
                ]
              },
              {
                "id": "05485610-f3fa-4082-965c-57549535b70f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0f543cb-66af-4ede-9d88-26d507aa69ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff0e6d79-db4d-437e-b089-f27371d96f9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "669fc9d8-17f0-4e14-9208-aab465896200",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "98e09b25-685c-4c86-8aa1-b348d1faeb43"
                    }
                  }
                ]
              },
              {
                "id": "9b526dc0-f596-4100-9202-65d5bef2b35e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a326adfc-7e3b-4e3e-8519-66cb541b3f95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6e3981e-1380-4cbe-a6df-a3f38cdb43c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68631bea-6fe6-4d46-aef9-31fb1e4092e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "311d2f81-706d-47ea-adca-c075635d852e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6cbe2c7e-9279-4be9-99fd-561552abd8ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "357a49d7-d9a7-4e1c-8872-22577237af5f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e4e4088c-4cc9-4af6-843d-0b81a3eef21c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7cd54014-fef5-4707-a22b-de0f6767bd54"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34699b8e-9533-452f-b47e-95173bf11e25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bad7b364-870d-4e24-a101-ee4030dd6a65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4bcb838-f511-4153-a9e1-b0b49d6ea090",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf0cf1a6-b659-473e-9bb3-35fac5298fab"
            }
          }
        ]
      },
      {
        "id": "e0db9b7f-eb77-43d0-91af-366c23cc894f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "86651a03-852b-4b20-a141-008fb00f5fc4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a444339f-bd3e-48b3-9d1f-798ce64f041f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f357bfb-d660-4fe7-9d86-cf4268c01f0d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177efa7e-642f-4100-8c6e-15c596697a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d0b640-3485-435f-b23d-a515abd575dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50677716-59cc-450d-bf6f-a4fad31c453b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c11d7be-fe4b-4715-ae94-9cf20378a1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f15e96-7cf1-403d-a2fe-9507bd6e52b7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e64ab19-35b5-403d-ab3c-b76492748707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5eacfe7-ea1d-4027-988e-2edeea180844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b1c5be-b4df-4816-917e-f5ee26c08571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b492c1f1-ecef-418c-ae27-05d7a25673a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4506ecbf-d1f2-4029-b4ba-10f0ac3208a0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4b7cd3-5369-4ae8-b137-263fbe7f606c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044ed049-5da9-4188-8d61-eb914998fe64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576b7320-163a-402b-880a-2277e37f290a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36bc1ea7-88c5-4ceb-bc49-302d8d106705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d60255-95b1-4573-bfcd-4b623c08e711",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0769b788-ed41-4235-b7cd-543ea92e413b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c720cc6c-a175-467d-aff5-9ed71cce92a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d217d2-3853-4e9b-bd53-1a047b1d5e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "665f7633-c249-4afc-b214-9236ac31a558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5741ee9-e2ba-48d5-bd7b-5198367c871c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e04d0d-07bf-4573-bb0c-dc817a9816ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4ad109-6e0a-4bd4-8b71-08bee0be6a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd50afc-e5c6-4115-9ab1-ec398eb8ae85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "133f2cff-b2f4-4176-b33c-596d3350d6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b4e9f2-a09e-4e21-b310-62353bb03dc5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d748dce-1111-45a6-801c-541341d1e94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3640d79b-dd05-4549-a13c-03ee620a3f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01913d85-f931-40e2-88a0-f9c070e74013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "835feb52-b2e1-4f1a-bb4d-c15a77106093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb224096-734e-452a-b462-43b3a640dd96",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c715ef44-9307-4990-9cc8-f5930a647b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31be5dbd-76fd-446c-a5de-114721b6ae28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9285ed-15de-411d-9cd2-ba64ca179f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ae221d-ed04-49fb-be80-0213b0ba2a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb2dcd6-7e58-408f-966f-9b8af76c2c7d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ee3b85-8504-4721-b31d-3fe7ad36332c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a16463b-95e3-4baa-bc0f-7664b5ee57a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0ef685-b900-49e6-92fc-c380f7701fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a92b6ca-ef78-401f-b96f-834443d74cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86989081-beba-4339-9a00-db7633180fdd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943f0bf0-314b-4518-ac0d-a624be87f995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b71967b-1d4c-43f4-bb29-fda49e199668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10da4d84-5b64-457d-909c-6ee091f96535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4bdb26-76dc-4ce4-911d-1ceac1d4b15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3a8c27-66e2-41fe-b37f-a7839b3d215d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b564f7a9-de81-4783-990b-81ba35d4223c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c7962f-63ed-49b2-bdce-6487118e0d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9df7de-cc01-4d43-a847-c388aedf1537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9606a53-5707-42fa-a90d-a119b2937d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6dd27d-24e8-46a6-a79f-7e82e447f248",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cbc2a1-1cc0-4d9c-8213-f94b046e31b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786aff5b-ac0e-463a-a258-39679851714b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e33e71-9b22-4485-80b7-ab632f2ab003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1487972b-dc42-491b-97b3-6d04703b1388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813094bd-2bb6-4e87-81c4-87aa9352b159",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9ec316-c5c5-4500-a9eb-0b0aa2ba9e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80993be3-b03c-4f2e-9108-c6c9eb6197af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42d849b-030a-4b46-86e3-d40de095debd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b345cfea-fd6b-4f1d-b5db-0e78c3dbb083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c98a45-8bf2-484a-a6be-16408bffd831",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda9f738-f5e0-47a6-8f7f-36b166cae3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd25c17-b251-45f3-94e4-3d956ca142d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ac29f0-b37a-4a66-8134-225e7b3ed117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e58f5c7-4d98-48bd-8004-fd10b1be0641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7785ea0-cec4-49c4-915e-98d46b86e080",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6947a299-812f-4d15-b66e-1a131e262351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8838018e-35b2-4a9d-9f71-51cd0992a676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b47995-ae97-49be-962a-e837df4020d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "da819b68-9753-4df5-8183-78726409fad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da25f137-d2a2-4674-a530-955dba921752",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e060c0-5123-4a4f-a87f-08ca9e433184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadb83e5-c0f4-4c57-a222-7fbd6cb0cd6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e774af3f-537c-4d9c-a512-d4bd3adbd8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "88acced3-0628-44a5-973e-1e44c162cc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb6438d-bc10-41ec-9a36-00b25e17e9b2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b89bc37-0a6b-40cf-bec3-dd27e5c8b9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4882bd4c-d934-4304-9910-9a1948e85a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d80fd55-b4cf-4b90-96f4-3f95a53f2218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eca125b0-8107-409d-990f-dcee6409f92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcce4a19-437a-4b33-a12d-1c7cc6658198",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3660473-1789-404d-ae16-5787a26ab78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795de60b-5c6f-410f-ad99-362306a4acf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959c9686-65ba-4c71-ba00-aa2d639f6c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d80f9c15-c4a9-43ab-8500-1f15b0611043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b875a5ba-dbc5-4d10-9b7c-dafc56b136ab",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443e54b1-5f60-4928-a157-370498df163b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b9c4a4-940d-4425-97fb-2ed3a4f96206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c052ec8d-fe0d-4fe8-ba77-0eecb336bbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cac1f28c-c82c-48aa-934a-51ddee407da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e912bc83-61a8-49ad-b4a1-252d48033695",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4e7120-b3cb-4a19-acc0-563b19977c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4eb9ad-f609-4909-afb0-6815054dc0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ffb83e0-d5f7-443d-a1ba-33ba8d1f35a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbff569d-0d0c-4f39-b6bc-423d9c75b47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea868d9-064e-4718-b531-8d77403a4e6b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616a39f0-b277-43bb-8d02-d54fe52ac9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a214710-e718-4cdb-9067-cd63f0c73485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97bc54b-b166-4e01-9b57-d57bf3e8a140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e05e7a5-26bf-47d3-b268-e48f61e94f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcec5bda-6f49-4edd-8dbc-d7875949c788",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a0d24a-8efd-412d-89d2-22326494f94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dbe05e6-3748-4350-ae0e-f07b73a4c319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecedec0-81fe-4bae-8bd9-7eec400fc827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a9d950-5376-4fe4-993f-1d4dfc137acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266e42da-c5b7-4d3c-b66a-83d3f0576842",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5948cea7-0a12-418a-b1bc-3cde17e06d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92c1559-8b91-4617-bbec-833b8cef8687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1801e7f1-c6ad-4e3a-9b5e-7168e6d02cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "765a0a60-b9e2-4729-90d2-8d579a6bedfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc77dff8-db49-4b2c-9bf5-a458aec8505f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fb0114-e83f-4e0a-9b7a-37d7d4adf460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63bd4cea-3176-4114-9f0f-3717e3cdd548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745e0c3b-61f4-4401-a269-104bdda7c78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff12f85a-df59-4571-a565-b8ad96882756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65ba5b4-9d09-4d3b-9dc2-c4aec4c08883",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388e5ad9-2dc1-4346-990b-ac7763ac6944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921e62ae-a13a-4369-819f-e4e2dd239567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588d0a2a-11cd-48ed-8b9e-b34900ba5842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2062f0-e254-4519-8a03-b31e44552d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450196a7-c5e1-47c0-ba9d-992787650b8a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a67023-7cbc-4e9d-ad0e-34f21284df69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34074b1-5299-4a44-b99a-a6cd98bb57d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ae811b-82c3-421d-82a3-0b020185a07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae3ccb5-9dad-4b90-9d40-5b3bd0d9f6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc36610b-5d88-4ab5-b53b-29258a9a91ab",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3884777d-c65e-4378-9715-8ccf2c9836cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653d88c3-779f-4d91-9ca9-ed08b3c864c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6c767a-3ceb-4641-890a-02bbb6acd010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63b2e3d3-38d8-4a76-a498-40e33467dbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a9a543-f693-46e7-af7a-9ecf3a41201c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83490531-3493-4a10-a8c9-8a24bff82dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1348d889-6607-4ada-8d11-4f355dda7d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44aca20a-a894-4375-a872-58b342d66c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa7c123-9a4c-4a1d-bcba-006c8fd10380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd8d831-8924-494b-a8c6-c21b45af0370",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95f1d68-3951-43b0-9bc7-50c3f6c4a34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5709ebdc-4683-4c32-880b-fbf947dcf458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54015e04-538c-4006-9232-fb11b736eb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "249c90eb-9039-4cf3-9639-0ee3e8dd6bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca925f0f-46df-449b-bab9-e4421432c1d5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f9abe0-9302-4a4d-9b75-e2dc9c146ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8297a7-5872-4269-b7c1-f1567e744b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e561518-9aed-4ddf-b89a-08f475e1df42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0af0a4-4031-4936-8fc9-2d783b06039d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3306a593-9d53-454d-bb55-ec87c3ed8bf6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bb224d-cffb-4574-96ad-9a52ed1ec44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d00dcfb-3b74-4b05-ae93-1138e8b7afa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a17dd5-3cd6-4af8-8053-378971c5100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe48f4dd-7f09-44d1-9758-332912a17cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a982e0-fa6b-403a-9040-f902c1c328dc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3fdb01-9614-406c-a97a-e573e0c36bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e8390b-9917-4f42-ae99-4ca06420eb5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b03520-3a39-494d-907c-d6424719dbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa70b614-542d-4b8d-aaae-791fb7550780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8d91ff-30ec-4946-94a6-cfe716cbabf4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea88b987-1c5c-4bcc-bc98-13f0ed57727d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfe5d5e-e85e-4e3f-974f-ff09aeb0d117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6deb3f1-78b4-4ae1-9e30-c59b4071730a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "915a1a41-bd46-427f-82d2-55182814802f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2d2fc833-5484-499b-b7fd-a91ee908a8b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfe5209a-71a5-4b70-838a-2e7f11fee9ba",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e273c81-e8d2-4bf6-830c-d08f26f99d7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "01186774-09b7-43f1-ae39-e3e9ea18d11b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e09175b-926f-4e7e-9508-d3cb13cfea01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fa515fb-215a-4aeb-be90-995dc3ea3b4d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "626f7ea7-0ff5-495a-9dc5-72efac1179df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f99916cc-d70d-4217-961c-3243783f4450"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77c560c2-d207-4c56-a366-0264c677b0a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e87dbb9-87a7-4f34-b5dd-e2689c5ec15b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64d8ac7a-74d8-48a1-92c3-0ec8cce776ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "06ed2bbc-e770-469e-8000-e5d6159457ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "896de4dc-fa38-4c8f-a204-73c506e92ab6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da16211f-29e0-4ea8-ad11-fea711c863ba"
            }
          }
        ]
      },
      {
        "id": "23144e37-146b-432e-9e2c-ce9cfdf7ac14",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "71b8c179-c4fb-486b-aee7-23d324bb34ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57b7ff6e-fa01-44d2-bd40-6ef40b079d62",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2cc6c1fe-3242-4ebf-a89d-3b624acea5d6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7bdcc4-e3bf-484b-a529-894ff500fb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d6eba4-0910-415b-b112-a6353e39b609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab8231f-3edd-4ba5-be72-3495c6dbcb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "08272c17-ce14-492c-ac3d-8a50e20edec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496d665e-3739-4296-a23e-ca5dadb51096",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc426aa-c6bf-422b-9348-70d1b065e88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb00ef19-2ccf-4114-8b74-bbcb84fb6def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f39965-934d-481f-9f25-57102ee2c5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "46d4a7f0-7520-490c-8789-f432e6ef7e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f701799-fa3c-4c59-b04e-963fe736772a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f40946a-01f9-4e71-93a4-f5df914b1638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a5a08b-8e2d-4045-bf78-39e169c2cef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a291e772-0171-455a-9a0d-08e9735fdb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e787425d-735f-40ba-8c56-dcf8df383dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44f0b61-c807-4a65-b537-bb8d22d55491",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cd0beb-0ff7-4b35-b28a-14a9e252bcd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeac9a23-5e00-4b52-82d9-0a575c289600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6edcdc-ddc3-4ab6-ba2c-9df59d27b0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f59a744a-b80f-41d2-b4c8-4b8b6867a99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ce4d4d-4795-4a97-891d-b64df3e0fc65",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22bf92d-7603-4925-9162-61b1a0206f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6dc4ca-6bd1-4dba-9668-9f80f7f06f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f0b227-fe27-407b-8816-39d32c41fa40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ee1260-417a-4db4-be69-3a0a8b8ecd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f16b3da-7647-45a0-822c-5c4b324883d6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8660f289-53d8-4911-abe9-19a1da61cae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9658f9ab-be40-4cec-bd9b-64c6711620f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f39073d-6f61-42fe-8668-e30fd6f758b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b04dd8a3-b9ae-4f14-95c3-62c9e7727d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ecdf92-ac6b-4b85-a742-1e9668db01e7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13b87c4-a6b0-4e1a-9a38-6a60a45ece2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8e691d-86e5-46e3-9f8a-cae202ac3b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c578f7-d0fa-440a-940e-3aa3f3335af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc7a1ed-4ebb-4909-be4c-19b4c14c4419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82897c92-b858-4961-bb6b-b3850243ab58",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e89dc0-996c-4371-97b4-af10532b8736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2443ad-ff09-4afc-9bc0-daea70190a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f8eebf-13a9-4acc-8f19-4ce6404a0acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f22172-34f1-4716-b675-77346cbe7788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdfa97f-889b-4376-98ae-8feedde4cb2f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5983b6b7-7a40-43de-b71d-6c2e9f5fc3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd687ca0-cc84-4e00-bf08-32ca7b6536e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c072a0a-26a9-4f2e-b13a-cb391ec18ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "218e840f-771f-4d4a-a7d3-611e87702762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f119e64-7492-4e9c-8d70-53da97bd51d5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e26671-4497-47c0-af86-ed8a369a7275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba12122-d49e-4e1e-8829-f6586ae56e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b12dcd-ded5-48ac-a165-1ea740af46c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c04d7693-ed21-4205-a29e-77385d30600f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a59980-0151-4421-9a70-a1e3819c56e7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c54371-1039-4da0-8e4f-c4f3648aca09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d850fe4c-e606-4509-838e-93dfa25af3fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc0217d-34f7-44e6-8898-67dba2c8c022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1956aa20-dde3-49ad-b275-9633b3572a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b91a200-0a45-4ca5-9780-dc6055a2ef9e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5900bfd2-281b-45d8-9ce2-068232e77f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1b3b7f-a521-4b82-a83f-0d14850c2af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36d88e4-9988-4ed3-92df-bc01f16d2ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2000e43e-8f21-4448-837d-1ee3e4bed971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f054cd-c609-4daa-a525-959c6d76eb7a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f499a239-a50e-45bb-9574-172b6edc8d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4082d67f-4b05-4f44-9d74-ee09adfcb5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe3e52a-ffb6-41bd-9ef0-c2a640506c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a1b352-f8b0-4d53-a8a1-873044ff5f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fae21bb-c880-4262-aaa0-36c298de585a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb70d88-32a2-4d57-812d-38d73b517a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c7b0aa-8901-4596-9304-5e627639194c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b99453-e1f2-4e7e-9355-aeb90e254963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a12a107-5fbb-46d4-9318-2a1e6fd4f220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3489272f-c363-4427-abe4-3a4c909c6e2c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4656fe3-9562-418d-9f1f-7dfbd0d40e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa488fe0-aef0-4cb6-beba-cd783c365318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc77368-3943-4b5a-8361-ec365d930e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5acc378-e4c4-4754-965b-2b20a424b9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1613acdd-9de6-4af9-b152-611f5880a87a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d694c16-d858-4ba1-8979-64cc123a1b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc343af-85fa-48c0-88b2-100c42d74965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42f49fd-15ac-4733-9ca6-e254f801fe7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "042b5b5f-39c0-478e-a437-1598d103d09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab2bd5f-8f64-405c-be29-207e79fa3eff",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9c9ed3-8e49-4321-a5fc-fed31e3d85e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddd5c1c-b3ef-4fec-ba38-cf1963fdeb4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210f7af0-3602-4747-8ddb-7db5af49555f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "61962039-2577-43c9-ab05-de23f9f2d5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05950003-4068-4960-a909-244f1330f9d0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2ea190-b2d5-45ea-b537-6ba0d755a0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99480702-c69f-429b-b539-4ab83ac8c0c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ac081f-9a35-4d8c-bbb8-d7ad24af8030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c80c05-16f8-496b-bf62-72bca38f5c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbff59b0-98ed-4892-81ce-1b94646854d8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d55e23e-7cae-429c-8e76-34fff84e3727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d014e4aa-475f-4e59-a996-cc71c458125a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05a90a2-a841-4264-bf57-f46c3d85790c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f801392-6529-4282-bc9e-25fc35e86262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03fa70b-f2eb-4c8c-9285-12a93e891de7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d620d40a-fda3-463d-ac75-a78f6100524d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8e9d3d-58f0-4f91-aae1-f887d090ee0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374c6e58-e410-45d0-b0ee-23772d0437d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd327d86-5420-44f5-a11f-d974d14da74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568af3cf-cb85-4d7d-a16a-0fcd97e6b49f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5adf48-1927-411e-9d30-25cb3c681b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94eb633e-4e92-42d8-b16d-90eb25e9cd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f3ad90-f83b-44f7-8533-41489472ef56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5889d6-a8e3-4453-b484-ec9f4d297374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e390d894-d0f3-44f7-8cfd-99b029a0214f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b31c68-1a13-4cc1-959d-a3ca1a9e84f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafaafc6-873a-4916-9174-dc26bd27c613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3446e2e-4887-42ef-8eac-46f9e1131c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "951709ea-2560-4afb-a3a4-fe9172860832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d147e4-b965-4cf1-8b99-abb087bff206",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811cbf08-ef0c-4191-aa95-f6d47a5b1763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c295b51a-0037-4cd0-9388-8da167a52142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b336a0-e1e8-4932-98ff-deb2535d11a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7448c7aa-4892-40d1-856d-dcc151531548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41413324-3502-4625-bf0e-f2b0cc5c1166",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6753f8e1-18b1-47e5-9e64-2b2adb0560a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a423524-84b6-42cb-9667-3a7ca5d6533e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c4aa21-cc24-4cac-b849-18900b46b976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23e4caad-2673-49d1-b84a-c9fb255cd028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557a23d5-d7a0-4159-9dc2-548d44243636",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f5285e-5c36-4d11-b707-23bab521acb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a776b1-79a4-49e5-9359-bb6c500b5edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c8a00e-075e-489b-ba9a-44c02827084a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3261e33c-57dd-4366-9218-0beffc7b8304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5251d6e2-ae29-4c65-a401-8c6f866fd9f7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2236505-dd79-4fd5-b5dd-bdffc52eec88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b31155c-57ab-4f2e-a223-2b7a1a233e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76844cb7-373d-43b0-b32e-d65150128a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f62537be-41a1-4817-826d-12b1920f9627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893298e1-4290-4372-b192-8756c5c076d0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0319f2d-2550-4a56-9e22-bdee92ddbb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3d6746-c9d8-4426-9ca4-92b3c1b6a163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d3142a-2077-429d-ac5b-9ef8015eba44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9958e0-12e8-463c-b3ee-4461ae23fdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff53a0a-fe02-4b44-bbf3-8392d6eda52f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2074086d-4d50-45cc-9d1a-4fa9db8c603a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf23da53-59ef-464d-99b3-caa69f951703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55df6bc-0b00-421d-bae6-1f6e83d746a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc17903f-625b-4255-b8db-d1d2f068dec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5786a1-c24e-4797-bb62-f2e4ead72c51",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b25e4a-86c5-4690-8df1-23976735b29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190fc812-b34f-4c1c-8b48-3524386b55e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a01c9fb-0b04-4050-92fc-14b54e32be76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "179dd58a-562a-4220-b7d4-d665ece8ca54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad50832-7d73-4967-8233-38d8e9692e10",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431ab121-2973-46f1-adc4-797a3e7d9606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6364d55-2ec7-46bd-a2f1-33d2f7c088cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c79c35-ba74-4d9e-bb84-a36a9af688a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30854253-2357-4b5a-9af3-7b9179831dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7551373f-6b99-461d-9c20-cf6692ef909f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad1632b-a2b0-4716-bbcf-4ea59473f143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf3a5ee-81da-4bda-b992-0749c24b0ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd94704-41da-4ffe-8c34-16f3bcd25a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6414e40-f1f0-4c23-8b24-83f0c86b5e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bed7e4e-6ddd-4e5f-aa67-0dd5057307d0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da46c70-471c-4e97-83e7-a2ffb851ca7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8633fd-8c80-4155-be8a-22983ea12e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed85c00-8d9b-4bbd-8157-3ee0f02c0893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76947811-68cb-4358-8704-ea3a7202b57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6b73a4-3931-48ea-929a-c5be8f1ad2eb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2052821d-6fc9-4ae8-8cde-e6ebf36f5d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666c16ce-493f-483d-b205-66e5678875fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a76129-63df-40e1-b9bf-2a782c727e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf21758f-1bc2-4011-830e-a47b4b824efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b605c9-acde-4fbd-bf97-7015003633f3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafe4742-75aa-421c-9581-b79ce1d8a5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7c2f81-d9c8-4a84-acf3-0b089d80c2a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a2343d-cf57-4ce8-9e58-4d6b5685586d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1445ee6-ab45-47fa-8602-237ef285e5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a263900-7da8-4aa5-9db2-09f7caa43cb0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1d91e1-8e4b-44bf-a104-8327153252d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffde3d26-c3a2-4143-9b32-57acc5509d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb95baf-269a-41b9-bb98-c6e32c5ceb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9deb8a32-b268-4866-9a21-de89292a24b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f8eeea-18ff-493d-a4a5-e4c72bceeff9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47268aba-ab94-4211-9ada-90848cfd2418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae69ba04-cb54-41dd-891b-c82f971143dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33372437-113b-4804-b265-55c1ed315407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a05e91-4dab-443b-8378-4f59b854b7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ef41bf-953b-4f6a-accb-2334a206c8a1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b61f78-2b7d-4d87-b0f6-5a36dfbb6936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a717d881-b2fc-4f09-b0ea-d9f65785b618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea68399-467e-440d-b2cd-a6c610ddae7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b64933eb-3bcf-4bfb-ba17-bbb651a844c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dfbdf76a-a8ca-4d32-9ffb-d2c990ace7d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "965cb265-3d82-4e5e-9b21-de65c12a4d44",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ac0d12-3b8f-4fb9-8722-cc3645940c40",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ad387f75-858d-4aca-9dfa-ffed57ba83be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9977c94-d874-4f7a-a918-3bba5d6cee03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "898122e9-d4a7-4dc3-9143-6a7ce56f5660"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "311b43ea-c9df-419e-96b4-05bfbbded0b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d591245e-215c-4bb1-927a-024570ac8136"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ae3e3df-718e-49f8-9de1-34df1a11f4c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a986918-2ff3-45d3-8e07-c957bed60826"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0871b612-0e3a-41dc-93ab-b2cd1d7893a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7118ad18-200a-42f6-9e86-5edae3c4d5ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c30085a5-e973-41e9-a585-484498975758",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a80cd5a9-304c-434d-9613-4b4b558073dd"
            }
          }
        ]
      },
      {
        "id": "2c415278-80cb-45d1-9415-e00c7a556b15",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "65ff30dd-9cf8-4a0a-8739-ecfa8e5e1a83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52e3da59-3dee-468a-87cd-cf46548547ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b255f586-1d47-425d-b855-36a0b90c379c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eaffbf1-1de9-4edb-9baf-896b3e106e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5033472-3d8f-47a8-b99b-c667807d0ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc72a2a1-fe92-4641-b8ff-5e6967de8b34",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7a53a3-36a4-4519-89f3-1d4de9cf33b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9523ebc8-7662-4252-a49f-c2712436a953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0df143-4205-4c3c-bb9e-2e72de306cc9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753824d3-c863-43d8-accf-62f9282950a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6445f969-ea60-4ec8-9155-797cae8455c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9150d2a3-0a70-44ab-8664-51d13698ef0e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5cd1aa-e408-486d-ad0f-53e8c2761780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c47414-e86e-4961-9e4a-9133301db9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08a70fd-53a8-4e97-a5e9-5c20d98604ef",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115093d3-7073-454b-8251-546ffe344638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d91e21d-4132-4e02-8d7b-a2bc8aeb7ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef2f7ce-c591-4dab-bfc8-4e8c3774a930",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ded5e8e-6a4a-4c1b-b650-686099dd5bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb992eb7-0711-4f66-8133-e8db544c00d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcc67b3-47d8-4414-8a7a-16d8de3ee26f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0b3ca2-cdf2-4aee-a065-748abe4a5933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489d60b3-a719-48ad-a4c6-d79296ef6d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ef6789-46d4-42fb-8cf3-7dd6d770b4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204cdb1e-db26-4354-b3a8-39bed97c0bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829ce19d-f6c8-4b04-a668-eaacfa007925",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffd2448-1718-42d1-a9f7-a7ea6dbef19a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0685345d-4317-4d26-b5b1-54dc569834cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ba64f3-c61c-4bc8-8a05-89e9d67bcf3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9021c82-f460-4888-9528-793239046ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48aeb9fd-6fd5-40ce-b2cc-d998307cf886",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9813b853-1bfd-4042-9994-28c1eafdebbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3feb575e-f67f-4ebb-846c-4a7752575423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1e1e85-841e-493a-8c61-550f7e32cf0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b18bb53-942e-46b0-a285-76e599fb2765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f71566-2a58-4e49-a063-2541ae4f6bdd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dca7e3-25d1-4d51-911d-bed9a02ec4cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "842bd153-f762-4e81-8a91-e72a0b2b0d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590f9baa-286a-4658-b09d-b634cf91c006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c56047-f11a-4b11-9f5d-e1f2e850f7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f82fc0-89da-47ee-9017-4b646433c862",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ec963e-cd44-4b8f-b10c-d9c74b0a0162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f5275c-a660-42f7-a5f8-b306f896d593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26ef1af-7c7d-4fa5-baf2-13224dac5baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b7805e-37d9-4496-82cc-35da39ec5754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8574b5ac-4d5e-4cea-aef2-921bb61896b8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02679a2b-e986-45a7-a9ac-feea0dc23173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1adb3d-1577-49cf-b7fa-4b58b64e50a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b98471-86dd-4afe-a1da-32977b2d7c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9a1377-b699-406b-86e2-5dd024a66d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf81761-6e98-453c-b9e8-b77595f73d6c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a56ae0-0968-4341-869e-aff12d3bf8c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fc3fc38-d141-470d-a484-f91ac6526d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fef94bb-f613-4def-8fd5-e427f7e19d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85aefd2f-7548-41e4-a140-8458308c8e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28e4a37-9fd8-453f-a247-64092db3b87f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970f17e7-78bd-4eaf-b7b9-705ad4ef2bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f4c5550-0d34-454e-8208-11180c4c80f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dee74ee-8046-4fcd-99e6-dbbe4d212065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2173210c-fa31-4ec5-a14b-c2b3f6aca3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691f642f-1ded-4128-996d-571843000f5e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85fc068-b638-4e30-8309-65a9e987d04a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25f0925e-9c02-4866-8875-0c63953a9928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea50f63f-142b-40be-82f9-18f876150e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82acd349-eb98-4d7e-9283-018549cae908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a79ba0f-e864-49cf-a799-d11ef0f3e093",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fd0021-b356-4a52-9675-27f17a9d4001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a759343-dc77-46b0-8430-b5eb6dbb3648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b328d7-0d92-4ce0-af8d-38fbaafd3bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29399e24-12aa-4d65-8de2-2f7e42cb8201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b14b7b2-14c1-405a-906c-b985731a55b3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85706264-c687-4f38-bb42-6bb5beaab5f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7280378c-8aee-4e10-b9fe-1dac1c5e3455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08040416-92dd-421c-98a4-e8e7d57ddbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72effeea-68d0-4d9c-92f7-f96578cc0eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81a50bb-be0b-4637-a817-6f57ad46b9d0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddec25c-f225-4886-ae7d-d04fba24f72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbcb10f-5637-4520-b6b3-a1b313c2de94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d73e47-2ea1-4998-9c3c-e359e7b40ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82158391-9686-4c4e-b107-ae1e8dc7d86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa470b1e-956e-4426-8e62-6d84a20f1a90",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e610f3a-961e-49bb-8ebb-1a8cf286667c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4cb2ab-574a-4616-8c90-412438e26923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d73b3a1-9bae-4c92-849d-7c8707308493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b16d9cc-a881-478b-9622-effaf88cc7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1eb9c6e-3e21-4106-a5f9-4bc036decf47",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddaf306c-bf14-4cc1-9364-780ef416db7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8a1466-002e-44f4-8abe-89d9c0b1423c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbf55e0-5d8e-4ab8-880b-ff3a860f03e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d803ad0a-d144-4698-afb1-b8c6ac464fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c53ed35-39f5-456f-9eb9-5a4504269bb4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0903b7f0-6197-46ca-b79e-be945cfa44ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f447aa-0ac0-4616-aa44-014106a1b84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87580ea6-0710-4076-b22d-780874db442c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11418ec8-c797-4560-8e64-93ba6f03c77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb660a6b-88dd-4059-b36f-00a6655fca6a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edda81ac-6783-4438-9813-b0d0970aac07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5519e4bb-545f-429f-86ea-c7314d6d9439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8489ae98-41d7-4642-a1fd-f08a29d8799b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4123cc-07bd-4e4a-bf3e-c0550f7f0f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bb6b97-b216-4ebb-9b9c-5be043549f6c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed07b971-7594-48c8-a448-45e91274d5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9eb7cd-2a6b-4671-ab1e-3a91dc50e0d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a87a9fc-b1e6-4c7c-b69d-348305009d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134b8c2d-f432-46d9-8768-5c075cd5896f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530b1350-ef8d-4272-86dd-db1aec78db40",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2695972f-df2e-48d6-b468-f7945f8ec225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9061ff38-6508-4738-b951-e625ab0dfe50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd10b06-91ae-4c37-a317-4d6fd5a32cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc6904c-a0d5-4b6b-863c-822df317776b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19fb39f-ab00-4e91-9bf5-11d2e55d1bab",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10776983-8f65-4c17-94a7-6eb28a749732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "091badba-b52a-42e1-9339-ecf8e83bed90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "300b03ca-52a7-4e02-b5cd-fb0e6074f5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94afddf4-77fb-4b49-b940-280c39c9e73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355ed4f7-528e-48b0-ae99-b04c4aafa14e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2292cae6-a90c-42e4-818c-acc72a8f0c44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fd2ffe1-3faf-430f-8eda-99ef9d478279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656bc3fa-04a4-46cf-81c4-c58b67061506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ced3c9-13ee-453f-bf62-3992ee4b7a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94da6db-af46-4f19-b345-e2208f345a6c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf2d79d-0164-4dbc-9101-7da000b90611",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80daf7a4-ed03-49d4-a269-2676613fe928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b33c96-ea02-4997-b6ed-aa347381f452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085ff584-26a6-4c73-bef9-d7cb12943553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85f8289-d859-4d1c-a1f5-f97057b0d11f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb750de-352e-4cdd-87d8-19dc9e66ea68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44345bb5-ecf2-4427-932b-16e339ae3fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c756611-3e5c-4968-a668-377593b9c3d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e23de55-1474-4aca-bd09-c7a1424387b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed0db12-2509-4d66-b090-501244cbdc14",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0f4a81-92a8-471b-ba10-015bda49a14e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "798ff49c-fbd2-42ea-8614-96008f618956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c48deb-2682-4cd3-a171-cd189e48e0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40d2cad-795f-4345-9fa1-2d9bed4868bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd686332-2e45-43b6-ae3e-aa29141b3133",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662e9bee-8a39-4924-8430-0ddcd75ab005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bddc927e-42c2-4bea-873e-10c8b9045850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b743747-672e-4619-9775-c42a4932bf46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00fbea95-3ba1-449d-8ca8-a8f752f56dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd8d6bb-2fc4-4426-ad06-2d2bfcfdd4e5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f52f8a-6736-4e8a-8550-03965a7b47cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ec3dfb-e030-450e-a1cd-9ac117861b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9ede6d-f8e7-4611-8eb1-68274a1d479f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325cbbe9-bab4-4674-b8d8-41ba1dd64e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e52c2a5-edbf-4e74-b80a-507d744273bc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c12e3be-a856-4a49-983e-9afd6baa1d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7acd312d-51e5-4c50-b81c-4d31725e32b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc3237f-994b-47ed-81cf-18015512ef8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55bf3ef2-e044-4a90-a9fd-8197cdaa7ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbcf602-42ca-4e22-b6d1-ed169cef3ed1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43296353-391f-4bab-b26f-23e84cd31a53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7abd8537-1777-42af-97ab-820258f9780c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a404b80e-a462-4e7c-bd78-ce48c2abf8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039c6181-f758-40ed-98eb-cd38e4c5254f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39edbc40-0f8d-45f5-8bfc-46f9ad61f35e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18c4a9c-a5cb-4605-a480-ca5095786475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb7d6c34-4f3f-473e-b7eb-66d91201ad46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de43ecf-07ad-43d5-a334-dc82986b7605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381b4a06-4982-4e30-892f-5320e367e667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2637629-c5d7-453c-87f0-4fd703167e21",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1554ea94-d9bc-4fd3-b2df-cba62c5cd340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3d66d8-725c-47df-9fa7-86616a4e3c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112e0353-5538-4bc8-ba4f-1cbcf96f0b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eeba505-28f1-41e1-82c8-39c28a78b4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b284d4-25c3-4486-8cf7-3afe158aefb0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849ef705-84d7-4090-842e-3e1fe6e7f8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36302d7b-b86c-4fea-8c81-c3dd0159c778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8f9e1b-806b-4993-bb6e-cfd5601bbba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d47439c-bfd5-4f86-9985-aa77d32c7aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2931096c-d032-437e-b35e-68be0c6a7022",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cf09ad-7bae-41a7-ba93-6524eaa6f5f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c990b6-739c-45a1-97c3-fbc17babd0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44dd270-63d1-4581-92d5-966ad35019ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed39a794-73f1-4713-a2cf-a1746c7a5c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e0444e-d134-4c15-a4ee-d5c3303f4c89",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9030cda6-fa2e-4230-85a7-afdda28d5144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41a3ab9-492f-4340-9acf-839219ffcb9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978a1807-919b-4126-b966-101454c4e984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f78b51f-339a-4889-8cb5-7c9fb8eeb602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536d9fe1-e7b2-4c7c-a2f8-45de02920cf1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57dd8c41-aac1-4c34-8c04-80ecc212d081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a504de-4232-447d-9e19-4b2d0f7ee273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87cc8a1-47d3-4594-9467-77c30e1f3e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78820de1-5042-45a8-9dc6-8e8c07f0cf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9ed286-b089-4025-95ac-5a1084ffb43e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf21da75-acf9-41f3-a75f-7e27cdc9f389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad7dfc6-9b36-4263-9c3e-d582875b52c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa75156-c706-4d07-8ea9-70f44f26883e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ec3665-2ca5-465a-acad-cd6855785455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf042f3-817d-4385-8d7a-27e56c783f8d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef218704-06a0-4028-a882-8e3f995bfd3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac70a8f-31c7-4975-9d24-93580fc30ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc597e95-7a54-4bee-89b3-1ac4c495d481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe505c0-18b1-4419-883b-83ace1958f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd314c9-4154-426d-8a5b-b82419462240",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3bab60-e817-45ae-b621-be1f4965ab80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7d4fc6-ab20-48ee-9667-6d124fb19bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6831eb-5807-4d2c-8fbb-1dc0f82a5f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed77559f-c701-4f3d-9ef9-82cd6cccdba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c925b7-b91e-4ccb-93f1-631b366f4b3d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d918e4d0-ae14-4445-99ec-fa62d5b531ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198d9925-e349-4766-95e5-a32b677e7977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef4c54e-0a41-4b4b-a5ef-88e53520e4a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efd3fbd-0bc2-4984-b64b-c5ec79dc3662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db47b0f-3aa2-4171-9f1a-d146b3d2b13b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef0cddc-b10a-4a7a-8d18-0a44169373d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81150455-13ef-4784-b144-efade1510e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2464e226-3643-4a7e-85b3-c85982f93a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0d4ef0-affd-4fa9-9901-f23630ead728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d569b7-ea83-4709-bebb-aad702a8846c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a827ea-3f37-4488-9688-490ebd9bf2e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d18720-7f10-4021-8ada-c289b35a56ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccb5d46-d2ea-4630-b87c-a4247929d5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4c0249-96eb-4cdf-9d94-3101dd56a5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88109987-2d63-484d-8b21-53e6c621d90b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c10cf2-4637-4ec0-96be-fd0e3b2f9d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180c0df8-a101-4629-8950-8d814d969e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbce19a-55be-4438-b61e-7e4506431225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c6abf7-4966-49d9-8980-9acf160bfbd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ff09b2-25a3-4b7c-b998-93bb1f075ca8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957af388-4e4e-44e2-b1d2-3ad41d00b888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94cad2db-b1c7-43f9-9d19-1beb78bddc23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f02ab2-ca51-4590-9e35-de0206926f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b94301-1ee5-4ced-85e7-0222fd0ac947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1febe52f-a113-4335-8112-9cce9cebe4b2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e406508-782f-4a92-981e-6fe3dc9e15b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69503524-3f5c-4922-929e-8bf2325f4916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449f6130-e6e1-4fb1-8140-860540cb5203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b226cd17-4ec9-49ec-aa0b-f2d4931ae4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ee84c3-2e87-4949-9061-b1e419de2638",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0593d1-39e1-4d0e-bc87-c49114c02f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96508be1-0c3a-4533-bee5-42220c28bba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a8c839-038a-442d-a639-a713c20c2fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ffbe49-36d0-4c48-b960-27b2509a9cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d3cfa3-ea47-4b9e-8c07-41c21f5d7701",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89de98fd-4f8a-4a50-a310-4746a30e8613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35048e79-df11-4ddb-bbff-761b3ae184be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b41d73-3e2a-4bff-9d75-9f3002abbf40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f874ae3-f576-4af1-ac19-441fff025ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce378018-88de-4d3c-897b-5aebe3c306a2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76332f5-8c7e-4e51-8404-02ced93a673a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a40814-aaa5-4d96-b84c-3dfd94ed818f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1378a8c-207a-4b82-9b1b-437a35fc449f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dd9bc4-cc05-4a88-aeb7-20fa42ab1dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d234326-003e-4027-9d10-ffd0dcbf9015",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeca72b4-5de0-4549-bc98-4c1e75d21f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2d69fe-9abd-43a5-a919-c10c70a6cc72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2c494b-cf09-4121-975e-16a89416a58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2d929f-d359-48ce-a9e7-8a0937226954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687bd92f-0410-41ae-8705-90aece98a5c8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa704100-076c-4ec3-b9e8-f365c94558c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ad8d84-af40-400e-b574-e15ea14a09b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba829ead-d4fc-4ade-a586-23362b1dd8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cf6c68-a7c9-46ac-b84c-07a6fae99482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a216a75-b4e2-4280-a3a1-fb5c5d0f89a1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79baf5c3-68c7-4b25-94ae-d85b5a77546b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b3a22e-d6b5-488e-80d9-8322f9a6b383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b96d68-537c-4b80-810c-f0514e3ddbe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8992ee0-406b-4a82-aa53-936354aa56cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f240d3-885f-4281-aa52-0d87f2e2a612",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11665c7-eb05-4960-9f13-40ac652629e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa029fc-1214-4fc4-919f-c9d228b09a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94118280-f46f-4b48-bf43-6db4bd0f1485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b0613a-7857-4086-bf64-0d172b73989f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6b7f3a-19dc-4863-8890-2b2c0eceac7d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68fe1b9-2840-48ad-86d5-b4be292ba7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff8e841-0fcb-4743-9bd8-fc406d94d5c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28d0f91-d51c-46ff-a77f-815c472a4fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2bbca08-a476-46ef-884d-a70020dcf79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d10f82-cbdb-4f7b-87ea-a08bd404ed95",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b1a85d-79cf-4a53-b4d1-9af7e70aa626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea74cb9c-bd2e-461b-9524-0fa153defed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f546c7f5-2b91-47b3-a208-a0f3dfd14e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6de0ced-ac22-4851-808f-47fa0259c295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c380de8-52ac-47c5-9a36-f1d852dcf227",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078fc2d3-3d29-43d7-881e-e850e922f3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149aae74-35fc-4f67-b817-b32e4a49e0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7770630c-51d8-403a-88c6-1c257f07b1b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcefdaf3-0dee-47fc-9207-4dd45851405d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28a9e2a-980a-42ab-a7b2-8d62181b93bb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2062be3-2e7a-4807-910b-f48fbf61b9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34c522c-ac40-49f8-a291-eb2dacc2590a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57671bd3-3e60-43e7-951a-3442a7aea049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604139ee-2c55-4355-bfad-99d6070bb69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11315ce-6f85-4a2c-83dc-7b72f0121a19",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f26cad-c28b-4998-a2f1-d90544a54fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da588af-f274-418d-afbc-b1f8f7da8026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c2a377-bacf-4371-a0dd-4412615ccffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b51032-ce75-44c1-ba6e-a3d47a438a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e0b82a-901b-4bfb-9fb5-f7e6ed9f9fa8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9a3af7-f213-4cfa-8ebd-630e85a30b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d99799-4349-47c8-837d-6e2e6a65d355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1815eaff-302a-4c5d-af43-59982ae381e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984559d9-8d75-40a2-a128-9c73120fbc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715eab71-d952-417b-a0c2-3f6975a61e68",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919ee42c-3bb9-4f7c-8b01-2fd74c018c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86dcb26f-8143-41eb-9300-d731cf34d1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446b8ad5-40dd-4dea-9859-0e6bb76a0795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6e4b82-5a21-450c-8d03-9e95aeaa405f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9f727c-472b-4621-9f51-afc285c0bc9a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6894fb3f-37ff-470c-a546-26aba81d62e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a329f1e-3105-4350-a7ca-210a04c69e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e25c9fb-55d6-48ed-ac6d-40ac4440903d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b187ec-d615-4c83-962b-c4d7839e43f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4dfea9-5aa9-4cd1-99dd-de6206b9b9f6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88991739-f747-4b54-8920-51ffdc5eecab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bdb3bf9-b64e-4b92-8d7f-b54c20ca5406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b39b381-4483-4e5d-9d8b-7b8b6d3473c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1eaf83e-8913-4853-9e44-268412f52f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d242d08b-c49d-46b9-9f3a-6026e3e6db19",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f1eef4-6cba-48d4-9a06-aba310c2381a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7aa86c1-3d9e-479d-8348-d78408d44a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc714715-d22f-4eb1-9ea8-78d5933f8b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c10b69b-7216-4ce8-b00e-1ee156a3687f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc855a0-feb6-4f7f-880f-9f980286f7b5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fa0298-a83f-46ed-91bb-29066f133a94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5af2ef53-69ba-4c45-8f91-198ec073981f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a406ec-fbaa-49dd-bf06-756bafe461e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5126a6a7-b181-4139-bb9d-e191204d8e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f35fee8-3dd3-46ae-9680-65ccfda39d6b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1513c224-911d-4d76-b9ac-c59cfd47535c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "425b6737-c6d2-47db-8ab1-d19e2eae6f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd1b9e3-3dee-4fa1-b57b-64a2076d3a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec765a2b-0e0b-480c-81ca-57510eb85401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898b45d0-6eda-47bb-952c-f19f7949ca8c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f355c836-9b9c-4756-822a-5343a78b1d00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b047372-8a4a-4dfc-b6ee-74360304e7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51f860a-80cc-461f-8432-7d9190d65031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1085b4b1-1a5f-4318-8a04-ca1b334459db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da557b2-e988-488f-a521-65f489ff15e8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76763be-8cf2-4e86-93e6-9030d09185d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf966408-709b-40c1-b646-7161ae50f141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdf757e-20a0-43aa-ac5f-c69d467755cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25633c3d-3e6d-4492-a1c6-b0364523cf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbc92d0-d217-4fe7-8ebb-385c8ee145a9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1b9ccc-bdf4-4825-8a9b-4e698eb7358a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "428ce89a-1403-41c6-9a16-92ddaca7e6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cf2420-8f02-42dd-b639-80d3dffe99e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95b31b4-de81-4982-bb8a-69ca533dbf63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60676bb-e4f4-4756-945e-47c900a0bed4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16efaa91-4593-4133-95d3-490bf6739c0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9145bec-b119-40fe-b11c-df2947dd7edb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5f1db0-160b-4bb8-ace0-9b19066a3447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6238b7ef-e9f7-43fd-a770-dc424ac369ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c7c323-8f41-41d1-a0ef-17f44a6f34d9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491c6479-1c72-4b7a-9cf1-d0edcb33adc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bb6a830-a1dc-4536-a920-6e3d5f452e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e3ed3c-c55f-416e-816c-fd7db26bd673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2dec68c-1d3a-4ee2-b2b8-fe4e9b85dbd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817e0d4c-6d9c-4f47-bf35-14b2a20433b4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac5e95c-7670-4650-814f-a5413de2b6fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "963be425-0b13-443a-9318-45e9613e1144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975beae4-cfb2-4c74-a1fb-29c94c5e85e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5666a819-5858-4bcf-a4cb-021b9a952350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac9f4b5-a4d3-4d3e-af93-da6b76679256",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3440facf-b63b-4eda-8405-9cfb3782998a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "782fe7f1-e486-48e4-a51b-3cf8952bf88d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3147b588-9919-4437-8486-e274f93af3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0ff187-e1ca-4285-8e54-09e9c89df7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e827fcd-2958-4f88-9dff-1f8d2d07a2ab",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1331ccd-17a8-49c4-ada3-c871d319b9c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf8c4564-3f00-490c-a443-161e50bc3cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0dbc9f-c9cf-40f6-ac30-3ed0609c1f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6304bccc-408d-4548-b8af-00c1a99e0127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6510cdce-8037-464a-abf3-42059fed2341",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83e46f1-79d6-4a30-9fe2-d74e4b2fbd03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81303a88-a012-4ca9-85bb-b846fc8aad3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc558753-7f64-4942-abad-120d816f39d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b0fcf1-72aa-4669-ae6c-0d1f10b5c5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67d1985-0318-4db5-9626-51d7ed0a842e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0de0805-3c3f-45bd-b1d5-ddb2d8ac1571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c860d17-af84-40a7-9652-e03b65b0bba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f753f8-53ba-48cd-b0ce-137f02d8d7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3553759-5121-4195-b214-c93a483dd17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beed6965-43e3-4dd2-a93a-ebe7fa7ea8fb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0824af-d593-4cf7-9586-76b6f10480c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ead8dc9-ab9e-4971-9604-ebd4c05b073f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b26fdd-3f86-47c9-b5ac-292846bf7005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a0e73d-b1d6-4b71-bbd8-578e6ba1c5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86436c4-db5e-46bb-b8b2-91da426256ae",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5100ff-b8b1-41ce-819c-b60f04a9c88b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b94ec29-3926-49e9-b581-3ca710e0af39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51b22be-25ad-4334-9334-cf48502d6c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05d579c-4997-489f-8c6f-b1f855adb3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82b89fd-46d6-4c81-9b78-29b97fa10c01",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6721720-b249-479d-9d89-86c4b0eca3bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc66b41f-00af-4fef-95c5-db6307a6b590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c9f1ae-058a-46c9-828c-2e8a2838b0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d27cbbb-c4c6-4c2c-9eb6-5d7a3ea2bcfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30a66d4-ea6f-44fc-b943-57928aab61b3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741899d2-abfd-4f6f-a8ae-054000bf69c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d5eb328-0571-4c08-bc3c-4f41270c6350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3058c1c1-1461-44e7-8852-745763f3240f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de57f208-5a15-4da6-829c-daedc46dceb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7aca40-cd43-4ac7-9936-87f5f8c9133b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec3d31d-e7f5-4d65-8031-8012b05ca09d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da320382-e192-45bd-a754-d137e88385b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaad6691-59ef-492b-9bd7-557947611b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e70a5c2-43fb-43bc-b48c-63899b955d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fc7e7b-ed3f-47f5-8a36-50243c8a282c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741c2cd4-c3c6-4df9-b81a-f1b66ffb3cfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "011e4fc1-5eef-4003-9015-abf8c9ac8f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6624a7da-bc79-4b0e-9d0c-9408621596cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1948db79-b797-4d10-bb1e-fa6d9551b402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123256da-f5e2-4836-89b7-2ba5116e1283",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9de8281-86f2-4628-a546-0c75b32c9aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf4956d3-4fd7-4aae-9649-ca80af1a8a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840cc266-dfb1-4d72-bae2-b9b0ec50262f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304f0b19-bff3-4d87-bc5f-45f212bb3098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777218ea-860d-4f44-9939-b3389f616ea2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efee7cda-815b-41b3-92a7-8e5339545ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0af8ded-4f37-4553-947a-adf51605033c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b44c92-1109-4b28-90f8-c48647390400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2fa4b82-e05c-4d17-8907-3a4c8aadb5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaee27c0-4b00-4478-bd1f-91bcc29721ad",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a142b5a-1fcf-4eaa-b2f7-4a76b78563bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9286fba3-4cff-461e-bccd-ff9ddb601c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c43338-3770-4896-9792-e78706cbd4a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bba3b1-07cb-451f-ab6e-9713c77cce43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9dc7ac2-b93d-4be6-81ae-3fd1ec2bbb47",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8b06be-82e3-4ed0-b131-89d8a91ddc7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8632cf6-d2c0-4241-8e27-dfe68d202da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7791ba-6c5b-46e7-bab9-e71419827f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432b582e-6db8-4065-9e78-b6c9ef757491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d90329-a1b6-483f-9d75-4c718279cc0b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f255a80d-d197-430a-b456-bfc233a9469e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65fbba6b-e8be-400b-affd-0d35ce0b3fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8d8c88-8bf4-48bf-a9ef-d9676db785c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64db066d-776b-4ece-8f6d-a1e9c81d3e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5dcf5f-5bf5-4b29-818d-d299c9bc5472",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd9da71-304c-4e26-a7ae-1b1aa0281e0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "293d632e-6d96-4e95-92a3-1f9614e47a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c12cac-8fa5-4be0-bc6f-31e0045bf48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14237d64-4e67-4249-9729-02d39995a66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c506be4d-77d0-456f-9eab-b530230036f4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc46c548-fce7-4275-9169-5008cf692ed0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46c0d00a-35f8-4c26-9ccc-400140c4cf4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b314b0-d52c-4059-82b9-71fd1da09153",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9cf704-d814-4801-8c9a-818d6f2ddae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ea81f5-7e52-4c4f-9e6a-0c8bd70bd3bc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c41b499-0058-48d0-a713-63201470a09b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d65a6573-3c99-4a62-987a-7476c120a65c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bb42ed-d5b5-44c8-a390-a8c10406c35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0fccca9-e572-4fa8-94a6-0fed2c810874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20341b57-5346-4a2f-bee4-025630e453b2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89839ee9-e808-485e-95fe-10921b142e54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e24b266-7d80-41b7-a39c-c995034f9642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26548fa-16e9-4ae9-a596-82ec0e0c0ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201f10ce-530c-40b6-8c02-4210dd0651e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea8a856-c379-4db3-b793-13f9cf040c6c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4575062c-3387-4634-b036-80980ff919d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d69018-a7bf-414d-b020-b6d78c0947f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d3314a-ddf5-442e-b108-68ee1d727438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38140a9e-e04e-4cca-b8b2-fa4c7146197a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2494e1fc-d3a9-46ef-8063-ac331a9a2e1b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04eb9ce-3f50-4386-a33e-b1131e7bebfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0617e42b-9e26-4aeb-889a-3e962db1fe1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec0829b-f3ba-4dee-9de3-1fd1068e3f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705bb472-3159-44c7-9470-4095b3d04651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032bc6cb-9c4c-4fb2-9fa2-99b17ac99f93",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e2de01-0f6d-44a2-bc36-a48275814ff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a2d039-e455-4cbe-af3f-de55e86ad065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f5a57b-2f19-425a-9ecd-86231839cc67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe77a35-3dd9-445a-a828-ae7590b2f3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88819ffd-49ec-4b56-90cd-c1b30ab2355a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1659635-71ef-47f3-9702-4672cb7a07b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9137f2c-d0bb-4e65-80e2-bef3b76203c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0808a40-4cbd-4ae6-91d4-183a0014cc6f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799b8203-a4a0-4344-8462-57b3d29dfc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed07e5a6-a3a5-4838-8c0f-24fa2618b3a2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06005a78-a46c-46c6-ba3c-224368b01b80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e1a1c46-086e-4057-87b7-efb115ffb3cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2568c87-12bd-4b7e-876e-dfd91c6beebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d29465b-5007-4249-be9e-11bda6197658"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b29c2731-4b04-4a0d-aa2d-2a478775203e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e4601b4-99fc-4c3e-b503-4c64dcbbc380"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b30b18e-29a1-4980-b824-aac869ca49bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0a2ea49-d192-47dd-9d73-76b49120d0a0"
                    }
                  }
                ]
              },
              {
                "id": "52ba8dd3-ea5d-4d09-891b-7237837d3900",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e4e9d15-5be9-43e8-be9e-d5a63be29c99",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a32c718-69bd-4273-a93c-828afcf2219d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "81041a9a-7209-4620-8b50-a3cbaf5b3a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b95663-0bfe-40e3-becd-0cb9fa5b60ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c466d32b-6a4e-4541-b59f-00d4184b9904"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e173708e-3938-40e2-825c-70cdd4b6fcea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e2c34b6-4668-42fd-a404-687a359f9536"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f896d2f-9cab-4cc2-9afc-75524c19e336",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04a9ad00-a9cb-4c69-b1db-f6566dc79544"
                    }
                  }
                ]
              },
              {
                "id": "83ea8f2c-29ea-4501-b4f8-52279b626c86",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "12f3b950-873f-4119-803b-36cdd7ffb6e8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26263cf-82f7-4f48-b202-89411e29bc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "29d0593a-22a5-4939-9a03-450dfb2dc29d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ef71ac-9297-4122-9399-9e30bc6a1321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c15908-c554-45af-b081-3861702c1159"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "07795e79-e9cf-44e2-8cf9-5f06e6697465",
            "name": "Positive Testing",
            "item": [
              {
                "id": "717407be-d543-4293-8f61-9a2d39fad1e7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "342f6b13-3c4a-433a-803d-2542ff406664",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "78d1a30b-2c2c-4c00-86c4-d5306bde5c7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df1b4d89-0a6b-4539-8192-b906e99bccfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9247dfd-40d1-4892-86f8-2f0820f76a59"
                    }
                  }
                ]
              },
              {
                "id": "8a2ce7b0-4a5e-4e01-a9c8-aa7e6434abde",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20b491af-ccc2-4a79-a122-b53a83c6e980",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "101b27c1-327e-4674-a606-abb8d3bcc82b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f188495e-c13c-4fd2-b802-a93426110284",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c590482-ac86-48c8-9488-5561f42d6439"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0711a2b-f387-4b60-9a1d-ca334cb0e883",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8440f09d-ed10-46a3-aa01-b70d8c98d644"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49f660c4-a5c7-49fb-8029-f42d692f8cb6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f072b68-ac6e-476d-9bba-022a2ee8dfbe"
            }
          }
        ]
      },
      {
        "id": "6677bb16-c9e7-43b2-bceb-85d45b826d71",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d81b4625-a704-40b0-8216-13586dee5e89",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb198acf-665d-45e6-aeef-9525d4da62cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42cadee5-cd49-41c4-8be6-869da3fdf950",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32efe0e0-e4dd-4c14-9b32-2e553e220e7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ec0354f7-bd28-4ef1-9863-291816037863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90528643-589c-4631-9eb6-47fb73977f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa01f840-ea83-4076-868c-64b016862bff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae631c15-cff7-47f3-82b9-7cfec625f52a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14a2592b-3714-4fc4-b40b-393836a7cbfe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfff17e4-597c-4e18-932a-2c63f00ffb44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f342bcb5-f358-4a67-acae-2413edf1f686"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7ae572f-7c78-4af2-a44a-2b55f6a2ea62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "66acad0b-6847-48f3-9bf7-f716fa0b1dce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df8c7796-7902-4c68-8dd2-c35637b70927",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e4e299c-ae00-431b-b821-aa35dc2109fc"
            }
          }
        ]
      },
      {
        "id": "04c0f62a-1b72-4619-8e09-686accb1bbd6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ae6abd54-2469-46ed-9511-8599191d68ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1510ae9f-97c8-4e14-8cb4-25b81b0932ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e4d1c4b-6d91-4cb8-9b8a-3ef12ae79730",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78007a5-e625-429f-9d66-6f1e32e4021b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de24d728-041c-4742-8c26-0bd336e6b64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e35756e-c2fe-4d34-b9ce-87964a5279ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53935cf4-882f-448c-b898-ea8dfc206219"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b71c7118-a7b7-4bbb-a6e5-c2788bf729d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b40185b-584c-449c-8c36-0234003d3831"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c9df94c-8f77-4d97-a7ee-310dbd31c35e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3025967-eb94-4a3b-88f9-9bddb002c054"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9d141c7-9393-46d1-a8b6-4e47e20ada17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a0c9134b-439e-4ce9-a521-8a06352bbc7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5072e28a-3a36-4f4b-b4f3-50779f3f41bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3d4f8db-2fe9-4fd3-9dc1-ef5ef551c4fd"
            }
          }
        ]
      },
      {
        "id": "e7c3c149-9dfd-4ac9-ae4d-9f4aecf0482e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3b2f659e-9da4-4273-a153-948e157d4be3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f3539b3-328a-4331-926b-44bb80e52d14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3daba52f-e066-4980-94e9-679b4254e7b0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f705bc-8210-45f3-a528-a0acc012f730",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0889621-52c5-4eef-bdfb-108cc8e77f5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8219762-32f5-448c-84a2-ee5797d4ec29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0888a33-8e24-4d07-8ecd-51029e8fd5ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1b38fea-45bf-44b7-bd5e-571a3e38b379",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "824a702a-5ee0-4233-aa8b-658cd9e94a55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60e231b0-badc-423a-87e2-2d38d6664fbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00fad032-931c-4772-b75f-375cfd9e7876"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c102bf96-e05f-4f9a-b759-9b60c5ab3ec5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "64fef309-2ff3-42a2-bc66-1a4d8bab0a97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba06ba73-6d5b-495a-af38-874e507d90fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d0f43a4-74e2-466f-8618-a990a34a8056"
            }
          }
        ]
      },
      {
        "id": "b3450e6b-b09a-462d-95b1-683f908d5ab7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58e02bbe-e883-4e73-96ef-ea8ca1217c48",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5273b745-bdc5-4b2b-b2bd-12bb7e37f6ef",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2bfc10ce-e361-4aa4-9a71-dc5d8d14d0b5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbc917f7-21f3-4a5e-979e-5652116adc10",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c97c8acb-c5de-4dbd-9e52-ca6f040fadac",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 350.6408450704227,
      "responseMin": 8,
      "responseMax": 7160,
      "responseSd": 888.0977641078537,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692059530545,
      "completed": 1692059645826
    },
    "executions": [
      {
        "id": "b5aabb26-5aeb-4f3e-bb8f-dfc8777444f6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b89ff4d3-09c0-49be-ad5d-412503479ad8",
          "httpRequestId": "e91c068a-6d15-41d0-bd12-33c23af06e94"
        },
        "item": {
          "id": "b5aabb26-5aeb-4f3e-bb8f-dfc8777444f6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1eac5d92-0cef-409a-85f5-cd3a1d56ed40",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "a872a94c-a1de-44a4-b0dc-6586367d13d0",
        "cursor": {
          "ref": "1aed8780-7f03-4da1-9a70-a194314a1020",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "72fddd70-8295-42c9-9fae-27d728c6f9d8"
        },
        "item": {
          "id": "a872a94c-a1de-44a4-b0dc-6586367d13d0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8dc76eb3-12e8-4d21-9970-14a5609e239c",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "9d45f343-1f24-40d4-985b-afd1dbdac093",
        "cursor": {
          "ref": "ab8b48d0-941f-4ea6-aba3-07f1e1afce93",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "52589b7e-41a2-4e93-bce6-e6cf6ebf40ee"
        },
        "item": {
          "id": "9d45f343-1f24-40d4-985b-afd1dbdac093",
          "name": "did_json"
        },
        "response": {
          "id": "88f5a9fa-310b-41bb-885f-3f0372c122a8",
          "status": "OK",
          "code": 200,
          "responseTime": 1695,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411511b9-d77b-4619-b116-2acb1b55d704",
        "cursor": {
          "ref": "ac0db6ba-4fc6-448f-b109-d4bd2475e9fb",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "12731410-f78d-4a63-987a-7c6e635b280e"
        },
        "item": {
          "id": "411511b9-d77b-4619-b116-2acb1b55d704",
          "name": "did:invalid"
        },
        "response": {
          "id": "17b7315e-e4a4-478d-9463-be4104ccf96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411511b9-d77b-4619-b116-2acb1b55d704",
        "cursor": {
          "ref": "ac0db6ba-4fc6-448f-b109-d4bd2475e9fb",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "12731410-f78d-4a63-987a-7c6e635b280e"
        },
        "item": {
          "id": "411511b9-d77b-4619-b116-2acb1b55d704",
          "name": "did:invalid"
        },
        "response": {
          "id": "17b7315e-e4a4-478d-9463-be4104ccf96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbf2aa4-a81c-4686-bacb-b20c1fd8f1e7",
        "cursor": {
          "ref": "b3ee2fc0-3f8e-47a0-8dcc-37ced82731b1",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "231fdb4f-fcab-41a1-ac47-11c5814b138b"
        },
        "item": {
          "id": "edbf2aa4-a81c-4686-bacb-b20c1fd8f1e7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a1ee2320-af5b-4dca-a654-f503700deb39",
          "status": "Not Found",
          "code": 404,
          "responseTime": 509,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7186657d-2d71-49a0-82e3-87b4811fcca3",
        "cursor": {
          "ref": "501822d4-d18d-439b-9d5e-9f95d2efa7ef",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3a79d29c-4d2c-452e-ae68-378810f38199"
        },
        "item": {
          "id": "7186657d-2d71-49a0-82e3-87b4811fcca3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "79f71a54-2fb0-4f84-ad69-ffeba810ab83",
          "status": "Not Found",
          "code": 404,
          "responseTime": 370,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0a9d3a-b07a-4390-899d-1475aa4004d4",
        "cursor": {
          "ref": "0456d026-d349-4f08-b5aa-d6d6361cfad3",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7efeb2e3-c33b-42ab-b709-c32d47778feb"
        },
        "item": {
          "id": "7c0a9d3a-b07a-4390-899d-1475aa4004d4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0262a31c-5aad-4bd1-a736-63e445c7d7b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 86,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a504701-a85e-4c57-8f2c-9011b729b8ca",
        "cursor": {
          "ref": "7c5230f1-3d40-45db-9699-8af110297975",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "179579e3-388a-4b8c-b967-b838cea57d34"
        },
        "item": {
          "id": "3a504701-a85e-4c57-8f2c-9011b729b8ca",
          "name": "identifiers"
        },
        "response": {
          "id": "f2e38d3a-4e24-4e62-92ac-948edb4b7463",
          "status": "OK",
          "code": 200,
          "responseTime": 1373,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36ecfd8-487c-4883-949b-854223458f4e",
        "cursor": {
          "ref": "5005602d-2937-4054-9394-48f0ac5963cf",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "25d2779c-33c4-4257-b419-8936330a2775"
        },
        "item": {
          "id": "f36ecfd8-487c-4883-949b-854223458f4e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3f713b6d-bc81-481e-9271-466508a02e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29075496-f7ac-4a98-93c0-ca989ccc0d7e",
        "cursor": {
          "ref": "ea1fd671-fe0d-41e9-bdc4-6af50ca04aee",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dce19663-6f05-4cc6-a569-9daee052ecf8"
        },
        "item": {
          "id": "29075496-f7ac-4a98-93c0-ca989ccc0d7e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d4f8094f-72e9-470c-a04d-c2a78931e8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f2635e-e848-417f-a452-0cb48436580c",
        "cursor": {
          "ref": "4ccd13d0-9f1f-403f-a413-96ffa746d34d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ea7004f4-da45-405f-827e-66aa5be8a40b"
        },
        "item": {
          "id": "35f2635e-e848-417f-a452-0cb48436580c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d8f12cfa-107d-4be1-ae7d-585003d189df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ee2796-e9fb-4bb4-b53b-669e9b3278ad",
        "cursor": {
          "ref": "61b5563e-cfe6-42ae-ac0d-db6287d06931",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c8d8207a-8e09-43d3-9ffc-a7830861d05d"
        },
        "item": {
          "id": "66ee2796-e9fb-4bb4-b53b-669e9b3278ad",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2cebeff0-c6ed-40fa-98e9-ff5aec53a94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae851da-5dec-4310-9bbe-29ad5f540c40",
        "cursor": {
          "ref": "fb43e9c0-6d8c-4fef-9216-daf19bd8983f",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "afa0c972-2eb4-41ca-938a-80c06393dcf7"
        },
        "item": {
          "id": "0ae851da-5dec-4310-9bbe-29ad5f540c40",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "09ea0114-b532-476b-aee9-e36cb38ffb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49defdc-3cb6-4bdf-8715-1b170609df4d",
        "cursor": {
          "ref": "fe6274d6-60d2-4d64-a39a-2e8af87a24e4",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "573dc0ad-d282-41e3-b078-e907b040164e"
        },
        "item": {
          "id": "c49defdc-3cb6-4bdf-8715-1b170609df4d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3b4e20b5-a7ae-40e6-8d19-0c2cbd34a966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015f43e4-dc40-4e8c-8cc6-06bf84a1bc69",
        "cursor": {
          "ref": "bfa606cd-2ca6-47f1-9e3a-63adc4b4862d",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d4587939-666c-4430-9855-bc89f2a162bd"
        },
        "item": {
          "id": "015f43e4-dc40-4e8c-8cc6-06bf84a1bc69",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a5af612b-168b-490d-93c2-7371bb6af51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c1eec0-4981-45ee-8dbc-19d3073167a0",
        "cursor": {
          "ref": "58c6a707-33ee-4342-8840-aeee8cdc70fd",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fad8d733-7638-42c9-9a07-68414cb5f2fe"
        },
        "item": {
          "id": "70c1eec0-4981-45ee-8dbc-19d3073167a0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "eb7f304c-f15f-4e7b-a02c-5207a70abd61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bb9260-76a6-4388-bcc4-083d32320237",
        "cursor": {
          "ref": "6de165e9-24dd-459b-ac32-a8ae3c08581d",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d926308b-440a-4fc2-9c05-f9bd8446c0cc"
        },
        "item": {
          "id": "69bb9260-76a6-4388-bcc4-083d32320237",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6c43ba37-3901-4147-b10f-3d89f1adde51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f45be75-5d9f-4739-9ed9-4e5ceeddbe28",
        "cursor": {
          "ref": "1a336d7d-d409-43ed-8805-0253c2e1a6b4",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "54fcab43-c31b-4f0e-9b8d-d247f053c891"
        },
        "item": {
          "id": "9f45be75-5d9f-4739-9ed9-4e5ceeddbe28",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "48c978b4-bcad-4b67-91c9-162b8de72433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d564155b-d112-481f-bef4-249abdd60e2f",
        "cursor": {
          "ref": "9acaab7e-2862-4094-878d-4f3a6967b211",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "205bfd43-adc2-4737-ad6e-fd5b5a206be7"
        },
        "item": {
          "id": "d564155b-d112-481f-bef4-249abdd60e2f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ea59158f-1bd2-4c01-8a6e-04d5f7033d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2e2d39-7e64-4e33-bdd5-4cb0f8ede3dc",
        "cursor": {
          "ref": "379d09d0-e504-4013-8618-4ebb2661a8b9",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "65ffebdc-8d8c-42a9-961b-1dc509b4b2fc"
        },
        "item": {
          "id": "5a2e2d39-7e64-4e33-bdd5-4cb0f8ede3dc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ffa5a07e-3fae-445c-9434-17f55d6b42ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc28f114-5dd5-49bf-a2d4-cf26395ebf9f",
        "cursor": {
          "ref": "c4b4a37a-fbb9-456f-af4a-52cc514a3112",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4d3222a0-cfd2-45ca-9829-1264d654b9db"
        },
        "item": {
          "id": "dc28f114-5dd5-49bf-a2d4-cf26395ebf9f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "48b6b108-b905-4313-b4a7-9c03cc9e217d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2383eb8f-7487-4a74-bd79-ffa524ec3ee4",
        "cursor": {
          "ref": "cbe8ea83-48e9-4416-8a3b-0c97826fd39c",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "74ec805b-35ec-4ea4-ba9d-a113ac1a5652"
        },
        "item": {
          "id": "2383eb8f-7487-4a74-bd79-ffa524ec3ee4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f2b71422-2d1c-4496-ae97-75e3e7215b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00303520-5cf7-4577-887a-baa92395bf4c",
        "cursor": {
          "ref": "97bff2fd-e8ad-44f2-b05e-7c09eaf245ab",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8543184e-01cc-4504-adf4-7fadd30f02dc"
        },
        "item": {
          "id": "00303520-5cf7-4577-887a-baa92395bf4c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2d462407-2401-4bc0-ba9e-44240a453fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c577e69c-58c3-455c-beaa-98b18cfc1d44",
        "cursor": {
          "ref": "e7880f47-b6be-4d04-89c7-420d7072482c",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "28f6eb7c-a762-462a-afd3-70ce1605c3e5"
        },
        "item": {
          "id": "c577e69c-58c3-455c-beaa-98b18cfc1d44",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "290ca013-b5a8-4da3-b702-c719d0ecffcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ca2b4f-b665-4102-b9c7-25005dec8ba0",
        "cursor": {
          "ref": "25b63b0a-08cc-415a-bf74-f3f2319bebe3",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a15691cc-b25d-4328-8f27-ed80f65a78bb"
        },
        "item": {
          "id": "76ca2b4f-b665-4102-b9c7-25005dec8ba0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c5abad5d-a3fc-418a-a839-119d0e2868df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b86fb5-1bf8-4830-8c01-06cb17458ff6",
        "cursor": {
          "ref": "5709c8c8-2992-447e-99c4-ce4cc5edbb23",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "327f8735-cad6-4493-9592-3bfc3d3b7424"
        },
        "item": {
          "id": "64b86fb5-1bf8-4830-8c01-06cb17458ff6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "65a3e0ab-ce98-4051-b075-56db71179aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f1b821-c97e-4de3-921f-78294fc6c6c5",
        "cursor": {
          "ref": "216fe722-3e64-4d2c-88ef-a61eb78d269e",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d08cfe39-85be-4756-908d-4995f99eb124"
        },
        "item": {
          "id": "57f1b821-c97e-4de3-921f-78294fc6c6c5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0ccc9b1f-2105-42e4-9245-d07bc4b3e042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a10b80b-e900-4ca6-95ba-7167dbc447be",
        "cursor": {
          "ref": "874a4acb-76a0-4d04-b2c5-d97c42f8d41a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1d456b00-8085-4e9a-b375-3a4441ff8205"
        },
        "item": {
          "id": "5a10b80b-e900-4ca6-95ba-7167dbc447be",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9c8c6d79-4b3d-468e-ba11-e75d674bd455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4b8626-82ac-42b7-aac5-f3510d94c79d",
        "cursor": {
          "ref": "c31db4c3-bf23-4a0d-b8e5-060387d3da2f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9f1f743e-c9a0-4e74-ab9f-356ffb6f8821"
        },
        "item": {
          "id": "1d4b8626-82ac-42b7-aac5-f3510d94c79d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1149b485-a386-4db7-aa45-edb4f4c068c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce978a09-387d-4c7a-9a83-52b5596ee70c",
        "cursor": {
          "ref": "c2066f64-ceac-46fe-9894-e3553fbebdf5",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8c19f5f6-2167-4928-a5ac-a1fb87ddc881"
        },
        "item": {
          "id": "ce978a09-387d-4c7a-9a83-52b5596ee70c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ece7ac7b-8446-47f8-8eea-47901d3ed38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93abff6c-f463-4c3d-bd24-3849fa691d1b",
        "cursor": {
          "ref": "1dbecd21-73d5-4809-9060-5abae14a0050",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "570137ee-fb06-4a78-8fc4-a143622a3e16"
        },
        "item": {
          "id": "93abff6c-f463-4c3d-bd24-3849fa691d1b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5cd9c43c-0d50-4343-8679-4cec43c434c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e543cba6-02f9-42df-aa97-5e8f96820663",
        "cursor": {
          "ref": "e2362ea7-8d1c-4f01-b1c0-b8dc0cc2a6f6",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f1663bdf-a152-4dc6-a029-54ea98f01f5f"
        },
        "item": {
          "id": "e543cba6-02f9-42df-aa97-5e8f96820663",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0b8d30fe-9bee-49db-ae13-1c0d4daf5c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88af8af5-fd92-4e4a-980b-29c839c337d5",
        "cursor": {
          "ref": "51c0ad61-d9cf-4c8d-93cf-c73a2d322f03",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8dcb9807-46a4-4138-b809-3910289e6286"
        },
        "item": {
          "id": "88af8af5-fd92-4e4a-980b-29c839c337d5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "118663cf-e74d-46fa-8a42-9ac797d90e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3e54e0-b975-43ef-903e-45d49a19ca63",
        "cursor": {
          "ref": "11e8a6d6-b3d2-4c7b-8034-fe831c55c369",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f7f881a8-85d7-48a3-b589-8e9ec12592f2"
        },
        "item": {
          "id": "0c3e54e0-b975-43ef-903e-45d49a19ca63",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "af989219-2a2a-4941-9336-5dd1a854f3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2ef28d-7124-4b08-80f1-fddeae44cc9f",
        "cursor": {
          "ref": "27beaf30-e78d-4aa9-a5a8-2335af030288",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3e3cd72f-3e33-41b2-84cc-621e5ae9a3e9"
        },
        "item": {
          "id": "7f2ef28d-7124-4b08-80f1-fddeae44cc9f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "40bf20ac-9345-4c97-a541-b72b5e72ac4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf49bb2b-be70-41a1-9279-396422fd1608",
        "cursor": {
          "ref": "0cea6603-a3a6-4d56-bd89-cd186e12776d",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3b990349-7b68-4404-a744-5a439b4babb5"
        },
        "item": {
          "id": "bf49bb2b-be70-41a1-9279-396422fd1608",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3a71aff5-0b61-4f00-a42c-b68ea716aae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b9a25c-ee0e-49c6-834a-96f3d0e09329",
        "cursor": {
          "ref": "e49e6d3c-a403-4250-a598-cab9ec9f46c3",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "05265d9a-bd7a-4fa7-97e4-ad9806353dc5"
        },
        "item": {
          "id": "82b9a25c-ee0e-49c6-834a-96f3d0e09329",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4c2fa1c3-b337-4e06-8a5c-786922741768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec140c1-923e-42a5-8c31-718c3ee2cb33",
        "cursor": {
          "ref": "b2084953-9a86-4a57-91ae-9147135c1d76",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fb5cf936-238e-426e-ab7c-a2165944c75d"
        },
        "item": {
          "id": "0ec140c1-923e-42a5-8c31-718c3ee2cb33",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "923a66cb-b41d-4c17-8718-fbc48dc7ccc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033abdf5-c947-4c72-a3b3-2eff31eedafe",
        "cursor": {
          "ref": "5f3911d5-786d-450f-8bab-b5562e9b8c85",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "24daf505-7f2d-4f13-90b6-13c1b9ebacf9"
        },
        "item": {
          "id": "033abdf5-c947-4c72-a3b3-2eff31eedafe",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "34c7494b-9876-4fed-b536-01fba30e050a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae012166-18b1-4c47-bcee-a2447017915e",
        "cursor": {
          "ref": "eb10f9ff-f959-4670-9b88-57fdf024d6b3",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3d86e072-ebe6-4324-9617-3172ccdc74c1"
        },
        "item": {
          "id": "ae012166-18b1-4c47-bcee-a2447017915e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a50f3b61-ca60-4ce7-b37b-74adfa55f6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f4a7d1-79a8-4c04-9725-6d09b7e2711e",
        "cursor": {
          "ref": "b95c930c-df12-4fcb-840e-8cb46548a1c3",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "eb3def19-9bc9-4460-8834-42503648cea2"
        },
        "item": {
          "id": "18f4a7d1-79a8-4c04-9725-6d09b7e2711e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "71a47c82-c8a2-4a8e-abf2-b199e49ccc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11e26db-d66e-4426-9064-109e853b1551",
        "cursor": {
          "ref": "a089979f-4d91-4bfa-bbe3-d4b11c63ffc2",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "88662f36-325c-4bcf-8c3f-e5bfe683204b"
        },
        "item": {
          "id": "b11e26db-d66e-4426-9064-109e853b1551",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "98f5fb06-ac67-4525-89bf-f3da956e4174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1370992b-741c-430d-b3c2-25a99375d3ef",
        "cursor": {
          "ref": "2cc20997-61fe-4a12-a5a0-90d3702d9786",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ef1ed6f2-8886-4931-a713-4eb931b1e590"
        },
        "item": {
          "id": "1370992b-741c-430d-b3c2-25a99375d3ef",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6b002b47-8f80-4791-96e6-7964cc81d493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0a3fd8-d632-43c1-9f47-d63388f4406b",
        "cursor": {
          "ref": "5ed48e93-ebe2-49ff-9890-4dd32ae2e013",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "342e6820-9c7a-4fa1-9259-bd76a8e83afc"
        },
        "item": {
          "id": "4b0a3fd8-d632-43c1-9f47-d63388f4406b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5a187c62-2b9b-41cc-8108-efa666df6d0e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 602,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7291058b-6f39-45c1-bfe0-2a5ebbb8515e",
        "cursor": {
          "ref": "017cfcc3-ac25-4ef2-be2d-bd63b511ea83",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4eede06b-2f2d-46cc-a0f6-85343116dc7d"
        },
        "item": {
          "id": "7291058b-6f39-45c1-bfe0-2a5ebbb8515e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cfb06dac-8782-4f59-a8ef-8f88e4d20618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a692e7-e084-4c07-a516-7466904a8724",
        "cursor": {
          "ref": "6d482b76-701e-4120-9825-6c9950dffc63",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6565c6ae-3164-4854-bfdf-b9cfa0e11448"
        },
        "item": {
          "id": "95a692e7-e084-4c07-a516-7466904a8724",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ff80cfd1-52b1-495e-bfff-cf9c45ace433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bbf99b-3cb2-4abd-aa71-0e2e3f9f70ab",
        "cursor": {
          "ref": "d42417ad-1727-4ea9-99f9-3d9b60824988",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a64a688b-1545-424f-a1a1-3116741001a0"
        },
        "item": {
          "id": "46bbf99b-3cb2-4abd-aa71-0e2e3f9f70ab",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5ec2e430-c4a4-4d70-b7e0-c1aa9c2246c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751df721-2b82-47ba-a6c9-c2ffec65f475",
        "cursor": {
          "ref": "729214f5-e55f-49c9-929f-72b1819ae717",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f5985661-9d47-45e7-bb6d-5b25cced911e"
        },
        "item": {
          "id": "751df721-2b82-47ba-a6c9-c2ffec65f475",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b8338f9e-36b1-4f71-94cf-377d31827e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da886670-3802-4289-aefb-d85ade608fdb",
        "cursor": {
          "ref": "7dbfc6ef-f144-48f1-81b8-651eb95a3e26",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f690ed5d-4047-4d0c-adbd-5487c7cff793"
        },
        "item": {
          "id": "da886670-3802-4289-aefb-d85ade608fdb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cca0b69a-c941-4c06-8b0c-a8ee778689c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074e368c-5fa5-4735-9a6d-d6cb5c754eaa",
        "cursor": {
          "ref": "9b1c6e58-0f9e-4569-b431-6c7c643eb199",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5bf45c2e-e406-45f5-b7c4-3fe1bafa54d9"
        },
        "item": {
          "id": "074e368c-5fa5-4735-9a6d-d6cb5c754eaa",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1085df2a-d88d-4f19-ac9e-3a048680351e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc73041-57d4-447c-a9fb-482e6aa790a4",
        "cursor": {
          "ref": "35574f47-c4ee-4132-9ed0-e39fc05ef171",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c4ce7972-45e4-4926-8942-dedd6426dccb"
        },
        "item": {
          "id": "1fc73041-57d4-447c-a9fb-482e6aa790a4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b113267b-aa9d-40b8-94c9-3f2381c7518e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 603,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a94649-8684-4b59-9828-1d4e49851a99",
        "cursor": {
          "ref": "f678187f-3fe0-416c-ba7b-21426faf4c44",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fad6818b-c107-488e-851f-d2f1aca236b4"
        },
        "item": {
          "id": "17a94649-8684-4b59-9828-1d4e49851a99",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "36f81d3b-29f6-4793-a215-f8ddf84248c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc9ef5e-8240-4b50-ad09-a45df47ded30",
        "cursor": {
          "ref": "ee120dd7-654c-495c-9ee3-7201997a9359",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4d552eef-21f6-48c4-a3cf-3e7781456a7f"
        },
        "item": {
          "id": "2dc9ef5e-8240-4b50-ad09-a45df47ded30",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "153cd234-6275-4a06-9b2a-b9bf1af9e197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babf4adc-8932-4987-9698-a4874b5b23df",
        "cursor": {
          "ref": "e647fff4-6842-45b5-b80d-f768d6d02435",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "efe1c3bd-ca74-4eb7-94f2-478a752b0277"
        },
        "item": {
          "id": "babf4adc-8932-4987-9698-a4874b5b23df",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7762dc58-1212-4b87-89ea-667b07113994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1081f5a9-432f-4596-9cd6-10575c8b163e",
        "cursor": {
          "ref": "5a2a92dc-f2f6-445a-a9a9-43fd8122390c",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e583468f-36a0-4b95-8db8-1aba6f896238"
        },
        "item": {
          "id": "1081f5a9-432f-4596-9cd6-10575c8b163e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "364e27bb-c5ac-481d-8c97-758972971dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bdb44b-edd7-442a-a068-f8b557febd6a",
        "cursor": {
          "ref": "cd14c441-365f-4f96-bad2-7e2cbd6634d9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ff72587d-5f5f-4e9e-a910-08a0093ad3fe"
        },
        "item": {
          "id": "27bdb44b-edd7-442a-a068-f8b557febd6a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "89ddf152-449f-48b9-b19f-94af678e0a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37e0d8e-2b9a-4447-ac65-da724ecc6db1",
        "cursor": {
          "ref": "4f2d0a1f-4fd6-49bf-a81b-344ece05747f",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "caea0f00-6dcd-47b4-9d86-a6fc105a4ada"
        },
        "item": {
          "id": "c37e0d8e-2b9a-4447-ac65-da724ecc6db1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9e2f1231-09f1-4882-a6d0-6a62de036b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ae8f10-8412-453e-ad7d-8c5ade09de5d",
        "cursor": {
          "ref": "48b65ef1-e357-4db9-85c5-8716ac65c72b",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0aed28ce-33b9-49ce-bd7c-f7e9a636549b"
        },
        "item": {
          "id": "11ae8f10-8412-453e-ad7d-8c5ade09de5d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "65dfe956-c4cf-411a-b7d0-6b34e4507847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24544ec7-eb19-4c49-b44c-c1777488dd62",
        "cursor": {
          "ref": "25552671-c43e-460d-959e-3b22601fd4d3",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f4ef515b-cfa9-4fd0-bc12-1473fb2a4c81"
        },
        "item": {
          "id": "24544ec7-eb19-4c49-b44c-c1777488dd62",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9e751b44-fbcc-416d-a778-0469f28026d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a35ce29-3262-4f39-a402-8f63cfea7cd5",
        "cursor": {
          "ref": "f7003b1e-7431-4665-815c-36b3eefeee37",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "697b0bd7-424d-4fa4-886c-5123790a7754"
        },
        "item": {
          "id": "4a35ce29-3262-4f39-a402-8f63cfea7cd5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3e00c450-abcf-44fd-aea6-04e0486b8141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15306b3a-b5e5-4c95-935b-881f972a77e9",
        "cursor": {
          "ref": "c97140be-a034-4231-97b3-e9535c15bba0",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6fe94e1c-f967-4317-bf76-0a6ea0b9fc12"
        },
        "item": {
          "id": "15306b3a-b5e5-4c95-935b-881f972a77e9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "48f968fe-30d0-46ea-b309-8829dda290fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032a47ee-9810-4224-90d5-b5304899bb04",
        "cursor": {
          "ref": "ec96d85a-fe8b-4b06-861d-bf153f905e7c",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8311828b-629f-4529-823d-150ba224dfab"
        },
        "item": {
          "id": "032a47ee-9810-4224-90d5-b5304899bb04",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0e7a5b8b-30bb-46db-91db-96234cb1e7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2e963e-51e1-4770-b775-268965c7df43",
        "cursor": {
          "ref": "3f8f86ac-1d65-4bb1-9f60-305ec73edb0b",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "391989d1-d1ab-4aea-bdfd-ad13b4729759"
        },
        "item": {
          "id": "6e2e963e-51e1-4770-b775-268965c7df43",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0d27974b-50ba-4b8f-b327-a98f2fb636d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9922038d-08a4-40bf-a279-a05b2aedf6b5",
        "cursor": {
          "ref": "2b61aaa3-f227-422d-b1a2-acfafda25add",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5f3cef38-58f1-4943-ba07-cb79872e1205"
        },
        "item": {
          "id": "9922038d-08a4-40bf-a279-a05b2aedf6b5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "913b35a8-e85a-4abb-b08f-0de32b273e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6485535-834e-449e-aaa3-ea0b928467ab",
        "cursor": {
          "ref": "4af723b3-23c7-4c0e-b0bb-ba82af22754f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d8eb6328-e8a4-4f0a-af67-ad26bd5488eb"
        },
        "item": {
          "id": "e6485535-834e-449e-aaa3-ea0b928467ab",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "02c52584-51a7-446f-9fe9-8dee97736996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd4c8e5-bebb-47c6-8a8f-a01ea252a66f",
        "cursor": {
          "ref": "5b4b0bd5-511d-4001-87a5-0f4e47d8f45f",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "862381b0-b0b2-49f9-b10c-32ae694f2dad"
        },
        "item": {
          "id": "4fd4c8e5-bebb-47c6-8a8f-a01ea252a66f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a052f705-7baf-4bb1-96df-10224f546a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49a3be7-61ce-4cb7-8673-6589b434cd99",
        "cursor": {
          "ref": "9c57becd-758d-4ad5-86e9-ae71298881c9",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dc8d6c9d-6965-4f2e-bafa-443da06d2577"
        },
        "item": {
          "id": "a49a3be7-61ce-4cb7-8673-6589b434cd99",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3366d818-ca1b-4e3c-b4d8-b0da9c610540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1340a4d-e127-456a-9433-e3478cb6dc51",
        "cursor": {
          "ref": "00c17776-3fc3-46a7-94f0-3066660130d5",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "269ee985-63cc-4929-bed1-026165083223"
        },
        "item": {
          "id": "a1340a4d-e127-456a-9433-e3478cb6dc51",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cd6546ae-5431-4d8b-bec4-e016f2a4310e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadfb502-0f44-4764-b8cc-31ebe6d49931",
        "cursor": {
          "ref": "fbff2cb0-8211-4c19-9892-f8c5bad7815a",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "15271bbf-1edc-4244-8d96-f1342270854b"
        },
        "item": {
          "id": "dadfb502-0f44-4764-b8cc-31ebe6d49931",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3251faeb-ba99-4c5b-bd14-7813f2cf1a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e30e95d-acc4-40c0-9690-eae31f8ce5b8",
        "cursor": {
          "ref": "5f323de4-a3ac-41ea-831e-5cbc0f92a070",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c86b84b1-a7eb-49c1-81d8-d775fc753605"
        },
        "item": {
          "id": "7e30e95d-acc4-40c0-9690-eae31f8ce5b8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3dda5c78-3e44-471c-b6f8-8351a03f59e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5be429-7447-4d12-82f9-705c3978557e",
        "cursor": {
          "ref": "12b457d1-b60c-40d3-9aa8-10875bd8c7f3",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "618390ae-e652-488d-8f3e-1b5130f97e5b"
        },
        "item": {
          "id": "7a5be429-7447-4d12-82f9-705c3978557e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d791886f-9bda-4d18-b5ae-ea229027666a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748f5008-8636-4c9f-a6a3-e349b8e66726",
        "cursor": {
          "ref": "7a7703ff-cad1-4663-90ff-6fa4bcb1663c",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0b635cf4-fc76-4871-b934-546fe0b7bd0f"
        },
        "item": {
          "id": "748f5008-8636-4c9f-a6a3-e349b8e66726",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "98c39b99-5c3f-443f-bd44-56a11dba6f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7a910d-c4e9-48f1-ac33-3406c8ba077c",
        "cursor": {
          "ref": "215c7e02-9ae5-478b-9968-06131cfcc13e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "88690cfa-874d-4c55-9702-cc3e8bb9077a"
        },
        "item": {
          "id": "6b7a910d-c4e9-48f1-ac33-3406c8ba077c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4b5244fa-3a1a-4557-a9bd-9c377d6b1f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a32c994-c82d-4b7f-911b-b337e93c62e9",
        "cursor": {
          "ref": "2c939c42-60bc-43c0-9c0b-00dcd7c4d4d7",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e7341718-1fed-459c-ba28-5e687e732562"
        },
        "item": {
          "id": "0a32c994-c82d-4b7f-911b-b337e93c62e9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e1a9b4dc-53ef-4da6-a663-a61c942b8723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad98aec-9ec5-446c-bf3f-e9fd03010d32",
        "cursor": {
          "ref": "1c3ed090-84bd-49c7-b472-23d1434caa59",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "90c2f4d8-372c-4f44-8678-24d1f9bcb5c5"
        },
        "item": {
          "id": "2ad98aec-9ec5-446c-bf3f-e9fd03010d32",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b26d4945-b26d-4392-86ae-68a35d3a90d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d2b5a7-195f-4253-8440-ff1119585a73",
        "cursor": {
          "ref": "a43bc600-e6fe-487e-8560-9a18e1f49b92",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "45e4753f-8469-40e6-8deb-cc8abf8f41ef"
        },
        "item": {
          "id": "b0d2b5a7-195f-4253-8440-ff1119585a73",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fda7faae-49e7-4c46-87a6-05141fbfd60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba5868b-3e91-419e-82e9-1f6ac57aaa7d",
        "cursor": {
          "ref": "72e30eb0-4fce-4b55-a506-449a610b4bde",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d21a394f-757f-44df-8e41-d4d18943d844"
        },
        "item": {
          "id": "6ba5868b-3e91-419e-82e9-1f6ac57aaa7d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c89fba2f-4f36-4f82-ae0c-c327b9459827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c863408e-9b3b-4910-b48c-90610c463931",
        "cursor": {
          "ref": "aee26dae-4b8f-47fb-b03e-1e4a4d34a94f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cad98fa3-81e9-4732-b601-29d2e191a1e5"
        },
        "item": {
          "id": "c863408e-9b3b-4910-b48c-90610c463931",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9f52b2aa-efd4-4d6a-961f-935a45d09881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e92dc6f-19f9-4da1-b4cc-b3c4f4053dd9",
        "cursor": {
          "ref": "b6a306ad-c04e-4c12-8615-3cf7108d816b",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6d89dcef-92e2-463b-b2b7-d915a81ffaa5"
        },
        "item": {
          "id": "4e92dc6f-19f9-4da1-b4cc-b3c4f4053dd9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "43327a0a-a727-4b19-b503-04ea2d4633a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15351307-640b-4542-baa4-6134df28ba3a",
        "cursor": {
          "ref": "158d6577-8a97-45b8-a1e5-0afd4903c609",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "04630b71-cc76-4731-925a-f9c2745d1da2"
        },
        "item": {
          "id": "15351307-640b-4542-baa4-6134df28ba3a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "26e08ca6-84cf-429f-9cad-68757b0c3630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f62ce7e-7549-4222-be21-95a487d13ea0",
        "cursor": {
          "ref": "6da3a71b-b933-4f60-aa2b-2841ac2241f2",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "97542676-803a-46ed-a0bc-be54a2e25b8d"
        },
        "item": {
          "id": "4f62ce7e-7549-4222-be21-95a487d13ea0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9e577d7b-d460-4bbe-b8af-5fab6c54a34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde9819f-c5f4-4fc2-b08a-5dcaf85f2eea",
        "cursor": {
          "ref": "67e2c297-ae51-4419-8b95-b1b7b18e48fb",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f17af623-544d-4eb5-b8ef-c13e9399e1f9"
        },
        "item": {
          "id": "fde9819f-c5f4-4fc2-b08a-5dcaf85f2eea",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "27f64477-e9d5-41ae-a532-84600dfbc78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfdbab1-5edc-4f31-860a-4cf31a8d20de",
        "cursor": {
          "ref": "726a231e-f9cb-496c-ba6c-a497be97f665",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f3362d4a-42b2-4cd4-9862-8b5a7fab449f"
        },
        "item": {
          "id": "6dfdbab1-5edc-4f31-860a-4cf31a8d20de",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8bb32101-bd13-4757-8194-130e139f57d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032108ab-2c55-4784-9e55-9e5dbeaea11b",
        "cursor": {
          "ref": "1ec190b3-424d-4768-8498-67e1121abb0f",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b9581fec-4be4-4f37-8f48-9c2c5bb456fe"
        },
        "item": {
          "id": "032108ab-2c55-4784-9e55-9e5dbeaea11b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4d926715-92bc-47cc-960e-5dcd732179e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26b264e-1a2a-4569-8eea-c8baa90033ec",
        "cursor": {
          "ref": "486e6da9-9f95-4037-b4ae-91485e26af1b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9d6a00ba-c7fb-4764-adcc-e50d9afe3ff1"
        },
        "item": {
          "id": "a26b264e-1a2a-4569-8eea-c8baa90033ec",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7ff5794d-94a2-4003-821a-0125b4857fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eea402b-f14e-4505-a0f6-7e8b7f6dbf78",
        "cursor": {
          "ref": "2613a9b8-e5e0-4f8c-aa39-b8eef93f0e59",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "93138d42-db7e-41fe-b347-f1a1d308cc0b"
        },
        "item": {
          "id": "0eea402b-f14e-4505-a0f6-7e8b7f6dbf78",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b773f0b9-2dd8-4465-b730-a4f3443ef73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2826d2-46a0-4c05-b3c0-0b1b9d69dea7",
        "cursor": {
          "ref": "030fdb9f-7b20-4021-a337-316ed5762161",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fe01591b-fe84-4303-ac6b-1041a082dedf"
        },
        "item": {
          "id": "ff2826d2-46a0-4c05-b3c0-0b1b9d69dea7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4bc58274-aa0c-4aab-8c2b-d14f31e366f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d406f9a7-fa77-49fd-987a-66bef912a0de",
        "cursor": {
          "ref": "24d8b5c4-def5-48eb-bdd5-ef86934da5a1",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "abed9aa8-ee9c-45b5-bc1a-64992bee523c"
        },
        "item": {
          "id": "d406f9a7-fa77-49fd-987a-66bef912a0de",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e5cfa02b-0570-4938-87a5-322891e911c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed276cbb-259b-48a1-848b-0b8c87e16acf",
        "cursor": {
          "ref": "c8a939ce-d284-42b5-af60-35783a0f7c03",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ca7f0f10-8100-4e83-b8a4-d5549185ec8d"
        },
        "item": {
          "id": "ed276cbb-259b-48a1-848b-0b8c87e16acf",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "26a1b1e0-b7df-465f-9ac5-38fd5b69d591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ba1406-4af2-4108-ba92-99f927888a04",
        "cursor": {
          "ref": "28feb3d4-90a1-48a2-86e5-6c0aafc81903",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "da7aafc8-e617-41af-bf68-88dd96079375"
        },
        "item": {
          "id": "88ba1406-4af2-4108-ba92-99f927888a04",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c5b85501-042b-48c6-9b5b-ce34b07f0799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f73ffbb-6607-4b31-97d7-6d7e9b246448",
        "cursor": {
          "ref": "07adeb23-1396-4657-aa86-505456c43a2c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c5781d77-7153-4ed6-bf30-7465ad670b4f"
        },
        "item": {
          "id": "8f73ffbb-6607-4b31-97d7-6d7e9b246448",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0b7ed8b6-43b0-4258-99db-d449eef36088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ce596d-e08f-4e7d-afbe-a76cb9669301",
        "cursor": {
          "ref": "4c3cd91b-88bb-4901-92a8-65103144b5da",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b528416d-eda3-4641-96ac-0198499389b6"
        },
        "item": {
          "id": "56ce596d-e08f-4e7d-afbe-a76cb9669301",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "238c4d98-ff1b-4696-ad90-69a3a8b7ce68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3112c791-eab5-46f3-af74-8aac9bf65a4f",
        "cursor": {
          "ref": "4e5d3ce4-6543-49b4-87f5-e6f98dffcb03",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "69403d33-1b13-46b2-b92f-c6ca6c7cbbd8"
        },
        "item": {
          "id": "3112c791-eab5-46f3-af74-8aac9bf65a4f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "46a9b2c2-9dfa-4f83-87dd-3c6cc24d2244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9259b5ca-0d0c-4414-b18b-c5655ab18ab6",
        "cursor": {
          "ref": "ef248b1d-6ee8-494c-8c26-b1f2e15d3481",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2e66e9d9-4bcc-498c-9bf0-f99bc338a8fd"
        },
        "item": {
          "id": "9259b5ca-0d0c-4414-b18b-c5655ab18ab6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e1543393-7925-451b-8cb2-9170bc53a17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b74710-7e6f-45e6-8f55-e77c871cb774",
        "cursor": {
          "ref": "f814f18f-d6df-4e9b-b785-6fa2e2880d84",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c868762e-c652-42d1-9672-4253b5d4a16f"
        },
        "item": {
          "id": "20b74710-7e6f-45e6-8f55-e77c871cb774",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a1c3bb87-7c60-4c3a-87a2-26e484c7f69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3959a56-5c2d-4655-b65e-468422bdfd1d",
        "cursor": {
          "ref": "e1008ad0-1de9-423f-bfe5-972b39dc69c1",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7bc56e70-1c61-4bce-98d0-bb6407e3ef45"
        },
        "item": {
          "id": "b3959a56-5c2d-4655-b65e-468422bdfd1d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "64c29587-9051-4f72-96ee-74b31b854d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a39abd0-0ecc-4a6c-8185-0afafd273e89",
        "cursor": {
          "ref": "07d03f5e-6371-428e-a2cc-e89c40d2b2fc",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "48579ec8-cf3b-484c-8250-1c24f0c5979c"
        },
        "item": {
          "id": "9a39abd0-0ecc-4a6c-8185-0afafd273e89",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1b978500-e1a5-4060-99a4-b38f0a0746e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4afa8a-f1eb-4286-8608-cf7c463d75de",
        "cursor": {
          "ref": "1d4e1b53-9c26-4a4c-85a4-5c7f471821ac",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b23091b0-b1a9-41ba-b6a3-b0d9901ed44a"
        },
        "item": {
          "id": "6a4afa8a-f1eb-4286-8608-cf7c463d75de",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f5d995fb-c6fc-45c6-aebe-1ffe599819e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d329c9ab-4348-4668-9091-f6812738a9c0",
        "cursor": {
          "ref": "45f23c3d-e051-49ae-a9fa-7d733156f067",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d3969afc-0f92-4457-98f1-59c2ef740a31"
        },
        "item": {
          "id": "d329c9ab-4348-4668-9091-f6812738a9c0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "69bf6b12-ca4f-4d36-830c-a343479095cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fccc60-f2f7-4de3-ae98-fb68b3dfbb06",
        "cursor": {
          "ref": "1ce20d32-7843-4946-8538-5cf27e6f6e1c",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "219b561f-fa23-498a-824a-3d05cbad81e3"
        },
        "item": {
          "id": "31fccc60-f2f7-4de3-ae98-fb68b3dfbb06",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8ed72249-41f2-4573-bd41-0845a0060dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7a8b46-92e5-4e72-9fc2-0fc545b05fe8",
        "cursor": {
          "ref": "46bb95c1-a624-4c58-953c-d97d5843b3dc",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "06fdf49b-5511-4c28-b109-a29500c05b53"
        },
        "item": {
          "id": "fe7a8b46-92e5-4e72-9fc2-0fc545b05fe8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "01038efd-ed13-415b-bc00-a68dd555079e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de904bb-1373-4c13-ac80-45a11e226d83",
        "cursor": {
          "ref": "32937da8-e34a-4478-918a-d699d6ccdb8c",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8c365496-601b-4c0e-96d7-dbf76a292240"
        },
        "item": {
          "id": "1de904bb-1373-4c13-ac80-45a11e226d83",
          "name": "credentials_issue"
        },
        "response": {
          "id": "72d77d9b-ffdd-46dd-90f5-4555a5f3ed3e",
          "status": "Created",
          "code": 201,
          "responseTime": 7148,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b688c11-aa30-453c-9dad-094453195cc8",
        "cursor": {
          "ref": "b0d31dc3-dbea-4332-95a6-fce3dd7a67fc",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "65488e2b-2d51-4bba-a2c7-4f8d3332b44a"
        },
        "item": {
          "id": "7b688c11-aa30-453c-9dad-094453195cc8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "782b971b-5564-442e-841e-6f5a44035456",
          "status": "Created",
          "code": 201,
          "responseTime": 6974,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e626ba78-ddfd-4b06-970c-4ab99c124ed2",
        "cursor": {
          "ref": "fcdf802c-8865-4bb4-a714-0750f9c628a8",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "618888e4-ba78-4610-811d-8be1ab8b7c96"
        },
        "item": {
          "id": "e626ba78-ddfd-4b06-970c-4ab99c124ed2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "492ba399-93a5-43d1-8e4f-6a6010b5ad8b",
          "status": "Created",
          "code": 201,
          "responseTime": 6575,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "000e2e96-30a2-48f0-869c-2445e8d358b6",
        "cursor": {
          "ref": "c5275ad4-0804-476f-9491-a888aa555cd0",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1b426d47-cc68-47d0-9ac2-47907adc853c"
        },
        "item": {
          "id": "000e2e96-30a2-48f0-869c-2445e8d358b6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f8894904-a341-459e-93cc-d1b4c899ddcf",
          "status": "Created",
          "code": 201,
          "responseTime": 6148,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "05485610-f3fa-4082-965c-57549535b70f",
        "cursor": {
          "ref": "f76bdcd4-cfb6-4d19-9642-8a3dedef5794",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6422a134-e145-4a01-8e31-5d3658c8f323"
        },
        "item": {
          "id": "05485610-f3fa-4082-965c-57549535b70f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bbde3d57-375c-45c6-86c6-a47a7be21541",
          "status": "Created",
          "code": 201,
          "responseTime": 7160,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b526dc0-f596-4100-9202-65d5bef2b35e",
        "cursor": {
          "ref": "9c148da0-8ced-4bd7-b826-1dc6f64dc0de",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "69ac3e05-9df4-4558-a747-7f01344ff553"
        },
        "item": {
          "id": "9b526dc0-f596-4100-9202-65d5bef2b35e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "be2a5347-189e-41eb-88d4-9c5e629acbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "0f357bfb-d660-4fe7-9d86-cf4268c01f0d",
        "cursor": {
          "ref": "c845af4d-2a0c-4216-944f-6831436d5dcf",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "703ef1e4-6622-4635-a538-585af8bb0fb9"
        },
        "item": {
          "id": "0f357bfb-d660-4fe7-9d86-cf4268c01f0d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2d9a8d31-e40e-4e4b-b420-518533b06054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f15e96-7cf1-403d-a2fe-9507bd6e52b7",
        "cursor": {
          "ref": "29bf2941-f786-4057-84c9-3cd0efbef38f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "987f8f91-4c1a-43fe-a8d0-bfceb0577500"
        },
        "item": {
          "id": "25f15e96-7cf1-403d-a2fe-9507bd6e52b7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "86f1e404-3225-43dc-b9d4-eaf933214845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4506ecbf-d1f2-4029-b4ba-10f0ac3208a0",
        "cursor": {
          "ref": "808e6016-3357-41aa-9158-508dcc851d56",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d2e74c0f-28c4-4356-a7d8-c656492166e6"
        },
        "item": {
          "id": "4506ecbf-d1f2-4029-b4ba-10f0ac3208a0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "49270296-0ef6-415b-bf1b-eba7b03d9bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d60255-95b1-4573-bfcd-4b623c08e711",
        "cursor": {
          "ref": "17d9237b-1927-4121-bdec-0dfe9075263f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "97bf91bb-0484-402c-a545-dd29bb97ad7a"
        },
        "item": {
          "id": "07d60255-95b1-4573-bfcd-4b623c08e711",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "28b2d375-857d-468a-93dd-a6fe5f4b8431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5741ee9-e2ba-48d5-bd7b-5198367c871c",
        "cursor": {
          "ref": "39dfb1f3-8c59-4f0f-a02a-405a0f2e2cd3",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1e57b259-2c85-4c84-808a-0c4172d7cd50"
        },
        "item": {
          "id": "e5741ee9-e2ba-48d5-bd7b-5198367c871c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "08a24f6b-6329-464f-a64e-ad56c6d6975b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b4e9f2-a09e-4e21-b310-62353bb03dc5",
        "cursor": {
          "ref": "481e6e84-7cba-4a31-a5f5-51490ea4d80d",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6f5fd5d0-9a9b-4671-b983-9f0684a0325b"
        },
        "item": {
          "id": "56b4e9f2-a09e-4e21-b310-62353bb03dc5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "41591af0-dd51-4023-b10d-1ad961ef4b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb224096-734e-452a-b462-43b3a640dd96",
        "cursor": {
          "ref": "b6f12579-e15a-4cc2-b986-934ad1b68617",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "651c749c-627a-4f5a-a095-3cf0f88c5da0"
        },
        "item": {
          "id": "bb224096-734e-452a-b462-43b3a640dd96",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ef0ed0dc-1f87-4404-bc12-9a4bab439dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb2dcd6-7e58-408f-966f-9b8af76c2c7d",
        "cursor": {
          "ref": "5569cc5b-ed17-4bbf-8caf-1d0ab08fa080",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cfdceef0-b625-4993-a6da-724f5508bbc0"
        },
        "item": {
          "id": "ceb2dcd6-7e58-408f-966f-9b8af76c2c7d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c4c6b4de-d863-4348-912c-9789ee7d6e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86989081-beba-4339-9a00-db7633180fdd",
        "cursor": {
          "ref": "79703f00-b5b2-4202-b6c2-407ec0e8ab3c",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e368795a-c8f7-467f-979c-91d58aff9d05"
        },
        "item": {
          "id": "86989081-beba-4339-9a00-db7633180fdd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dad2a617-9190-4eb8-ab97-1d0ba485cdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3a8c27-66e2-41fe-b37f-a7839b3d215d",
        "cursor": {
          "ref": "01383aec-b9ef-4ca2-a821-fe51e71d0a3b",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "816eed37-e967-46d8-94f1-31ad521c4719"
        },
        "item": {
          "id": "2c3a8c27-66e2-41fe-b37f-a7839b3d215d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d2ab7d9a-6ab3-4446-991f-8ac86c36a26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6dd27d-24e8-46a6-a79f-7e82e447f248",
        "cursor": {
          "ref": "f1470675-d772-4704-a75b-4057e9750f84",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "90658980-3f4e-4844-8cd0-e11e125d2bee"
        },
        "item": {
          "id": "8d6dd27d-24e8-46a6-a79f-7e82e447f248",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "62fbedab-d702-43cd-9cb4-821b8a83b2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813094bd-2bb6-4e87-81c4-87aa9352b159",
        "cursor": {
          "ref": "07fcc52e-179c-40ae-9326-e613aa2899d0",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2be70bc7-74c5-4ccc-8fe7-f2a7048d542b"
        },
        "item": {
          "id": "813094bd-2bb6-4e87-81c4-87aa9352b159",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1c55b986-78a5-4adf-ae2f-c446143a27d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c98a45-8bf2-484a-a6be-16408bffd831",
        "cursor": {
          "ref": "758c019f-f15b-4f75-8cab-8734f8b270cf",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2a2d1fed-213b-4af6-a04a-116281a855ee"
        },
        "item": {
          "id": "63c98a45-8bf2-484a-a6be-16408bffd831",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2ee2f3f5-388e-4ee5-9d63-5d65935b25a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7785ea0-cec4-49c4-915e-98d46b86e080",
        "cursor": {
          "ref": "d0d417cf-4b1f-4ffc-be42-f4ad02ad7a9b",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2e4dc059-5bdb-4334-b90b-3f4467b6c591"
        },
        "item": {
          "id": "b7785ea0-cec4-49c4-915e-98d46b86e080",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f7a9bab0-534a-40d6-9def-44dda744f8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da25f137-d2a2-4674-a530-955dba921752",
        "cursor": {
          "ref": "7e3a7e19-7042-4edc-8291-5159ac7ca69a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7b990f79-b93a-4652-b2a1-50965471c5e1"
        },
        "item": {
          "id": "da25f137-d2a2-4674-a530-955dba921752",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "86034939-6232-43ef-8bf7-1e2dadf838c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb6438d-bc10-41ec-9a36-00b25e17e9b2",
        "cursor": {
          "ref": "f94abb31-661a-43a8-a6bc-08ed0dc6dc42",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3f11d34b-ac53-45ff-b45d-4259fac6134d"
        },
        "item": {
          "id": "1cb6438d-bc10-41ec-9a36-00b25e17e9b2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "604765a2-f84b-4624-b813-255467cf9de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcce4a19-437a-4b33-a12d-1c7cc6658198",
        "cursor": {
          "ref": "27f4977d-a6e8-4439-a42b-d96debd2df21",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "44acbe8c-6e29-44e7-9e6c-dcec1f2c5b4e"
        },
        "item": {
          "id": "dcce4a19-437a-4b33-a12d-1c7cc6658198",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b4706518-5837-461f-bb13-98cbd22a8783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b875a5ba-dbc5-4d10-9b7c-dafc56b136ab",
        "cursor": {
          "ref": "f49761b4-49e0-4504-b712-5ceb21060d96",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b1f02299-b887-428c-b88d-9663cf4ba8e2"
        },
        "item": {
          "id": "b875a5ba-dbc5-4d10-9b7c-dafc56b136ab",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f181a72b-795a-4337-ac6a-21b2c33b52ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e912bc83-61a8-49ad-b4a1-252d48033695",
        "cursor": {
          "ref": "058b9c67-635d-4b25-bce1-16951c383f4e",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cdbbf21b-71de-4f2c-a216-9a65f4553d91"
        },
        "item": {
          "id": "e912bc83-61a8-49ad-b4a1-252d48033695",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "071948f0-0316-476a-9b21-80faf91d10f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea868d9-064e-4718-b531-8d77403a4e6b",
        "cursor": {
          "ref": "f49e1cd4-d9ea-41ff-b6e2-b0943df842b6",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f1594b5a-043d-4801-af15-7a6beeca6c8e"
        },
        "item": {
          "id": "bea868d9-064e-4718-b531-8d77403a4e6b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4d938042-3409-4c46-a454-202110a60a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcec5bda-6f49-4edd-8dbc-d7875949c788",
        "cursor": {
          "ref": "9933d86e-7bc1-4462-806b-2b3bf95fc284",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8dbf440c-e991-4d66-a37c-1c29a3f31606"
        },
        "item": {
          "id": "fcec5bda-6f49-4edd-8dbc-d7875949c788",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "395769ca-9168-48c8-9a86-88b6a05ce027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266e42da-c5b7-4d3c-b66a-83d3f0576842",
        "cursor": {
          "ref": "08a0ab86-762d-4462-b2d4-602d32609d17",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5db1e6ec-a27b-47f5-8aff-775c735c6ca9"
        },
        "item": {
          "id": "266e42da-c5b7-4d3c-b66a-83d3f0576842",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ec779384-6382-418b-be57-a9bf5c2acf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc77dff8-db49-4b2c-9bf5-a458aec8505f",
        "cursor": {
          "ref": "392800ce-fcf3-404d-bfec-1bd272cdd9f4",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "26ca2ddb-2099-419d-b881-9b30e631cd4e"
        },
        "item": {
          "id": "dc77dff8-db49-4b2c-9bf5-a458aec8505f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ffec047e-1d7e-4711-a949-9361a57ec9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65ba5b4-9d09-4d3b-9dc2-c4aec4c08883",
        "cursor": {
          "ref": "f3328bc2-57e3-440b-9c8a-3bb856f766c0",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "582abdbd-59c1-4ace-bf41-fbebbda997b6"
        },
        "item": {
          "id": "b65ba5b4-9d09-4d3b-9dc2-c4aec4c08883",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c7508dd5-07da-45a0-95b3-1608487b9a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450196a7-c5e1-47c0-ba9d-992787650b8a",
        "cursor": {
          "ref": "fba36d28-24a3-47cc-9175-82229b1cc5b9",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8e097c4d-58ee-44fc-b579-3a88c20e8eea"
        },
        "item": {
          "id": "450196a7-c5e1-47c0-ba9d-992787650b8a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d4bd401e-7ad8-4ceb-9a52-ec35755bfeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc36610b-5d88-4ab5-b53b-29258a9a91ab",
        "cursor": {
          "ref": "34c08f57-d6df-4aee-ad1a-382db92dec99",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6728f794-6fa1-46f6-8fbf-b65f517a69b5"
        },
        "item": {
          "id": "fc36610b-5d88-4ab5-b53b-29258a9a91ab",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bd7c08d4-4fc1-44eb-8781-0b4c38ee4bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a9a543-f693-46e7-af7a-9ecf3a41201c",
        "cursor": {
          "ref": "aca130bf-738c-4765-8cf4-f105f0c5522a",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b498fdaa-57be-4bd3-9f88-56a483f27fd5"
        },
        "item": {
          "id": "a8a9a543-f693-46e7-af7a-9ecf3a41201c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8d178065-24b3-40ec-92fa-086d045355a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd8d831-8924-494b-a8c6-c21b45af0370",
        "cursor": {
          "ref": "a926e33e-47fb-4559-a89b-a28fd95783ab",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "df372a82-1aa9-48ce-aa2e-cf3a6fc961be"
        },
        "item": {
          "id": "6fd8d831-8924-494b-a8c6-c21b45af0370",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6c103a1e-d2d6-474f-a07b-4534da7986ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca925f0f-46df-449b-bab9-e4421432c1d5",
        "cursor": {
          "ref": "18536268-0b99-449a-8f42-a8a9a4ebddb3",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9e121009-6685-4faf-9329-c7a17096d53e"
        },
        "item": {
          "id": "ca925f0f-46df-449b-bab9-e4421432c1d5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "789cdca9-eddb-427e-a489-d2dfbc6b9aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3306a593-9d53-454d-bb55-ec87c3ed8bf6",
        "cursor": {
          "ref": "bb3d3cef-52e0-4166-9266-7ede59831f5f",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a84fd6f6-f65c-4d3c-b461-34d00d1bf3f5"
        },
        "item": {
          "id": "3306a593-9d53-454d-bb55-ec87c3ed8bf6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d3da7b4d-d16a-4137-94ab-c0089567a97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a982e0-fa6b-403a-9040-f902c1c328dc",
        "cursor": {
          "ref": "2550ad1a-7199-4c3e-ba9a-7251027a9835",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "110224ce-bdd4-4cb0-90a2-e82c40962eda"
        },
        "item": {
          "id": "33a982e0-fa6b-403a-9040-f902c1c328dc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e84c0c8d-1064-42d3-8c6d-9b715ff48eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8d91ff-30ec-4946-94a6-cfe716cbabf4",
        "cursor": {
          "ref": "df6c1ec8-b682-445d-8e6f-e0b365753897",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bf8656a6-1d57-461e-a2ab-76fc1493718b"
        },
        "item": {
          "id": "0c8d91ff-30ec-4946-94a6-cfe716cbabf4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4b8c0c6e-d2a4-4f31-b69e-7255128ed219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe5209a-71a5-4b70-838a-2e7f11fee9ba",
        "cursor": {
          "ref": "62854c1f-7c73-4391-932c-3b1f8d6ddaf4",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3d3cd11b-5683-456c-9fc5-aaae4eb80e4f"
        },
        "item": {
          "id": "cfe5209a-71a5-4b70-838a-2e7f11fee9ba",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "659ffb9a-09f0-4b13-9f8c-1a7aa45b1b99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 91,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc6c1fe-3242-4ebf-a89d-3b624acea5d6",
        "cursor": {
          "ref": "24c8f14c-fcf0-4cac-b942-9ee95b6f5066",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4c1a0393-a28c-4b10-a36b-4bb20a06ebb6"
        },
        "item": {
          "id": "2cc6c1fe-3242-4ebf-a89d-3b624acea5d6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cacf69cd-665d-4156-8082-9c8ed87b420b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496d665e-3739-4296-a23e-ca5dadb51096",
        "cursor": {
          "ref": "754a3e6c-1821-44b6-84c2-f4ed73c4a910",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8f400ca9-2892-46ef-bbde-ac6e1aac4f34"
        },
        "item": {
          "id": "496d665e-3739-4296-a23e-ca5dadb51096",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a5512324-c1d8-4612-b765-0f8c5814b503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f701799-fa3c-4c59-b04e-963fe736772a",
        "cursor": {
          "ref": "966ef3cb-8dc2-4b79-868c-952d306f42e8",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3d3464d5-50bc-4cc9-8453-4353d4e60149"
        },
        "item": {
          "id": "3f701799-fa3c-4c59-b04e-963fe736772a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0f7a9081-53b1-4141-b06e-d27aab8edcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44f0b61-c807-4a65-b537-bb8d22d55491",
        "cursor": {
          "ref": "570f8958-97f8-443e-a71c-b47a2bd5c6f8",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1d7dad84-472a-4086-96a9-db0ec733e679"
        },
        "item": {
          "id": "f44f0b61-c807-4a65-b537-bb8d22d55491",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "092303f6-c1eb-4657-b503-d84f561b0956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ce4d4d-4795-4a97-891d-b64df3e0fc65",
        "cursor": {
          "ref": "ea14a6f5-4436-417f-98e4-2c1e9b393044",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a81034a8-a437-42b1-ae01-bb6d44e2ee18"
        },
        "item": {
          "id": "84ce4d4d-4795-4a97-891d-b64df3e0fc65",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "34fb875a-f7b2-4d9d-bfda-aa5dc26d69c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f16b3da-7647-45a0-822c-5c4b324883d6",
        "cursor": {
          "ref": "37df6b6e-eac6-4f98-8bc0-c38359f5e3b2",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "908079f8-bb6f-475f-af03-adfe11db3dc5"
        },
        "item": {
          "id": "9f16b3da-7647-45a0-822c-5c4b324883d6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "826b6147-1993-45f6-9ae9-981a9224504d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ecdf92-ac6b-4b85-a742-1e9668db01e7",
        "cursor": {
          "ref": "fedf6ece-3d0a-4a6d-9f8c-31b5ff35a09a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "009badc9-a7f8-4cb8-94ab-b73dc265a70d"
        },
        "item": {
          "id": "07ecdf92-ac6b-4b85-a742-1e9668db01e7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0424d58f-dc1c-4315-bd21-10c4c42b3145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82897c92-b858-4961-bb6b-b3850243ab58",
        "cursor": {
          "ref": "25f09d3d-d2db-47a5-993a-5cfefee007a4",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7bf538d5-d8e2-4938-a8cf-50019b5b9aea"
        },
        "item": {
          "id": "82897c92-b858-4961-bb6b-b3850243ab58",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5267871a-9acb-4515-b202-7de867b16a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdfa97f-889b-4376-98ae-8feedde4cb2f",
        "cursor": {
          "ref": "658ba4a2-27b8-447c-81ef-68ec8cb41875",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8e02f5f8-ec59-4dfb-9a45-f535e2748f92"
        },
        "item": {
          "id": "bfdfa97f-889b-4376-98ae-8feedde4cb2f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3ae95ff1-81bb-491d-a793-283577b0194e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f119e64-7492-4e9c-8d70-53da97bd51d5",
        "cursor": {
          "ref": "608bf4b6-2eb4-48cf-8393-e6879794a3d6",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b051063c-a3fa-49a6-93b5-65750ce628dd"
        },
        "item": {
          "id": "1f119e64-7492-4e9c-8d70-53da97bd51d5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3460168c-af8b-4d8a-8ca8-7a5d308dc573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a59980-0151-4421-9a70-a1e3819c56e7",
        "cursor": {
          "ref": "c26e5e3a-3b1d-47c8-acca-3744cbde7e55",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "939be85f-5e25-4d0e-9eea-577c31eb1160"
        },
        "item": {
          "id": "85a59980-0151-4421-9a70-a1e3819c56e7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b697b4c3-caaa-445c-abf5-5a5ea30f0ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b91a200-0a45-4ca5-9780-dc6055a2ef9e",
        "cursor": {
          "ref": "e87290e4-c4c7-4673-95ca-de8bf822fcf3",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e39ff614-ca01-4d2b-9f6c-784d9fcf6248"
        },
        "item": {
          "id": "5b91a200-0a45-4ca5-9780-dc6055a2ef9e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a2bfacd8-31b5-4918-8016-88bacdb62c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f054cd-c609-4daa-a525-959c6d76eb7a",
        "cursor": {
          "ref": "6fbbbe13-0d86-498a-8933-75d3eaa505f1",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2e89f063-b369-42c2-b2ab-84110ca2a857"
        },
        "item": {
          "id": "40f054cd-c609-4daa-a525-959c6d76eb7a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cd55ad04-c1a8-4dee-ab73-31e1550e6545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fae21bb-c880-4262-aaa0-36c298de585a",
        "cursor": {
          "ref": "6ace2ea0-77d2-44c1-8269-000af7d31ef8",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3009a214-9037-4440-a3e9-18b4f0216cec"
        },
        "item": {
          "id": "8fae21bb-c880-4262-aaa0-36c298de585a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8f5bd164-b0d6-4c44-b3dd-0f97473f336a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3489272f-c363-4427-abe4-3a4c909c6e2c",
        "cursor": {
          "ref": "8b8c0378-2815-4c3c-8f48-60db571c208e",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "00b50a22-e58e-4789-b6c4-abffcbc9ecb2"
        },
        "item": {
          "id": "3489272f-c363-4427-abe4-3a4c909c6e2c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d79718a0-5b54-4a65-9a9d-a656902fb206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1613acdd-9de6-4af9-b152-611f5880a87a",
        "cursor": {
          "ref": "f3a5f75c-ff01-40d8-94c7-3582c505c4ee",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b13db2a6-4bbd-44af-ae50-6663da1f593a"
        },
        "item": {
          "id": "1613acdd-9de6-4af9-b152-611f5880a87a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "10358c81-1987-4a5a-8d32-e9e0d8022cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab2bd5f-8f64-405c-be29-207e79fa3eff",
        "cursor": {
          "ref": "4f2cbc11-8703-4ee1-a48b-7919ee743def",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e8d7229a-2724-4c70-be67-4014bf866520"
        },
        "item": {
          "id": "6ab2bd5f-8f64-405c-be29-207e79fa3eff",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "59a903a0-1366-4fe0-9f41-32845a5c3d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05950003-4068-4960-a909-244f1330f9d0",
        "cursor": {
          "ref": "c69255dd-8d1d-4150-b6f9-7a233f4b0e40",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8891bc39-40ca-45ce-9254-231debd3b585"
        },
        "item": {
          "id": "05950003-4068-4960-a909-244f1330f9d0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "209e497d-c54d-41be-821f-0a66708e0e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbff59b0-98ed-4892-81ce-1b94646854d8",
        "cursor": {
          "ref": "ca4eb7da-f3c2-4322-a30e-54b68980291d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "42e7cdbf-4bb3-41fd-8140-f003598e67cc"
        },
        "item": {
          "id": "cbff59b0-98ed-4892-81ce-1b94646854d8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bd1255a5-7247-400e-8956-8e99951b01a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03fa70b-f2eb-4c8c-9285-12a93e891de7",
        "cursor": {
          "ref": "5450e798-12ab-4f98-91e2-38c799dc67c5",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "934b82d7-67dd-44e8-9c95-a6b7dee47680"
        },
        "item": {
          "id": "f03fa70b-f2eb-4c8c-9285-12a93e891de7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f16d67a0-dc6a-46f5-9d82-b539dcad8738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568af3cf-cb85-4d7d-a16a-0fcd97e6b49f",
        "cursor": {
          "ref": "be0af343-1a5e-4305-8616-05bd6cac8962",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "47701549-e99e-4e26-bd37-2600ec2226c0"
        },
        "item": {
          "id": "568af3cf-cb85-4d7d-a16a-0fcd97e6b49f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ea03ead7-9dd6-4e0b-8dd5-c6f5cb29e518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e390d894-d0f3-44f7-8cfd-99b029a0214f",
        "cursor": {
          "ref": "67977110-6bba-446a-8db4-bf660053d278",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "816ce34e-bb13-4c8b-bb83-7a7b96bf7505"
        },
        "item": {
          "id": "e390d894-d0f3-44f7-8cfd-99b029a0214f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1fc5777f-4159-4d25-9d5f-8eed84900feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d147e4-b965-4cf1-8b99-abb087bff206",
        "cursor": {
          "ref": "ef8c8498-bfa6-456f-8c66-8898dafe4a23",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4622ef75-0d2e-4682-bb72-213fb6251a90"
        },
        "item": {
          "id": "07d147e4-b965-4cf1-8b99-abb087bff206",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1ec13b8f-db3a-4c4a-a1b9-a65887bf61b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41413324-3502-4625-bf0e-f2b0cc5c1166",
        "cursor": {
          "ref": "816e0de5-5f80-4bb6-9226-3bd953f4da7c",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6a6e3340-f236-4d6d-a40f-93aad9aefdfd"
        },
        "item": {
          "id": "41413324-3502-4625-bf0e-f2b0cc5c1166",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "364c2285-9fe7-4bee-b1b7-2e7680c57de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557a23d5-d7a0-4159-9dc2-548d44243636",
        "cursor": {
          "ref": "ce53e2e5-1d8c-47f3-8031-f4b4cfd54f74",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9fe8f580-61a5-4fb6-b125-261d24f31336"
        },
        "item": {
          "id": "557a23d5-d7a0-4159-9dc2-548d44243636",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "41ec4ec3-6548-4b73-97de-a923029c2444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5251d6e2-ae29-4c65-a401-8c6f866fd9f7",
        "cursor": {
          "ref": "f8d6bf15-c895-461c-acee-0fe1a061237e",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2275ab2b-bdb8-4a1e-baf8-750ce107627a"
        },
        "item": {
          "id": "5251d6e2-ae29-4c65-a401-8c6f866fd9f7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "38be011c-015d-4c59-8cd1-a87132634c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893298e1-4290-4372-b192-8756c5c076d0",
        "cursor": {
          "ref": "3b0381f5-7813-4ad9-b66d-4f950674be96",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a56bb5cf-d588-48ef-89f1-72f1a6252e46"
        },
        "item": {
          "id": "893298e1-4290-4372-b192-8756c5c076d0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7bc38514-abf5-4a2c-925f-088c214f5544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff53a0a-fe02-4b44-bbf3-8392d6eda52f",
        "cursor": {
          "ref": "21984ed8-9e48-42cd-b309-33aa5bf04b0f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b48039d9-1700-4922-bb27-f62446709f38"
        },
        "item": {
          "id": "2ff53a0a-fe02-4b44-bbf3-8392d6eda52f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d17369dd-f5cb-4495-b7e1-0985857c936f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5786a1-c24e-4797-bb62-f2e4ead72c51",
        "cursor": {
          "ref": "724d05f2-afd5-46f0-8f46-af9373ab4070",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1a5bba34-98f0-4cb8-9ae0-32f7aa06d0a5"
        },
        "item": {
          "id": "1f5786a1-c24e-4797-bb62-f2e4ead72c51",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "39279ac0-2392-4ac0-a9b7-ffdbc48d8e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad50832-7d73-4967-8233-38d8e9692e10",
        "cursor": {
          "ref": "51884a40-885c-4b54-8dce-484a7de74da6",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "695833f4-327b-4d44-bd2d-7f4501c34928"
        },
        "item": {
          "id": "fad50832-7d73-4967-8233-38d8e9692e10",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9719539c-a6e3-4361-8663-ffe6947b165b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7551373f-6b99-461d-9c20-cf6692ef909f",
        "cursor": {
          "ref": "b4c39d16-fd41-4cb3-b101-fcc443f4723d",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "114ea309-48b1-48ce-8e60-1f39cb2099be"
        },
        "item": {
          "id": "7551373f-6b99-461d-9c20-cf6692ef909f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "00687630-c4c6-4f5f-9ce2-2f855bd17871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bed7e4e-6ddd-4e5f-aa67-0dd5057307d0",
        "cursor": {
          "ref": "9f4b7fd8-cae2-42ea-9384-cfb66de2e6be",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "80a96145-f583-4d3f-940f-81b49deae1be"
        },
        "item": {
          "id": "4bed7e4e-6ddd-4e5f-aa67-0dd5057307d0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d334b458-59ab-4323-9f5b-0b6502468246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6b73a4-3931-48ea-929a-c5be8f1ad2eb",
        "cursor": {
          "ref": "caddb015-942e-4214-ac68-9d5d6e80875b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "33eb4292-0d0d-4369-a67f-3a10f2ec034c"
        },
        "item": {
          "id": "ee6b73a4-3931-48ea-929a-c5be8f1ad2eb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "38783b9f-8542-407d-8608-525ff4da5145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b605c9-acde-4fbd-bf97-7015003633f3",
        "cursor": {
          "ref": "1045066d-cb2b-42a1-939b-407da40298c1",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6ac3f898-7fa4-4318-882d-67d91d7f9e4c"
        },
        "item": {
          "id": "90b605c9-acde-4fbd-bf97-7015003633f3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3658b2d2-329f-4ebe-b884-520b3ab448f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a263900-7da8-4aa5-9db2-09f7caa43cb0",
        "cursor": {
          "ref": "3df64470-f4f3-4ab4-a663-d220ea51c4cf",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ce9778c3-8800-4fed-ba73-42380ad60816"
        },
        "item": {
          "id": "8a263900-7da8-4aa5-9db2-09f7caa43cb0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f14d11eb-d0db-49a2-92f7-d310a4ad4403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f8eeea-18ff-493d-a4a5-e4c72bceeff9",
        "cursor": {
          "ref": "c3ebc05d-ef67-4074-876f-ecab45fa70a1",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "65f22df5-749e-4a39-a77a-e1bb8f2ffbad"
        },
        "item": {
          "id": "83f8eeea-18ff-493d-a4a5-e4c72bceeff9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "88a865f2-982a-4ceb-a48e-050be49c2c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ef41bf-953b-4f6a-accb-2334a206c8a1",
        "cursor": {
          "ref": "8f5dcacb-a880-4656-a269-24e889cd3d7e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "754e04a4-3e45-4574-8c0c-196d45d67da2"
        },
        "item": {
          "id": "c9ef41bf-953b-4f6a-accb-2334a206c8a1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "029af033-4c83-4604-a994-3af4e98aed2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965cb265-3d82-4e5e-9b21-de65c12a4d44",
        "cursor": {
          "ref": "c0d9db71-733f-4716-b64e-920485e946c9",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "720a4dbc-21ea-4c9e-a3e8-81298186e6ae"
        },
        "item": {
          "id": "965cb265-3d82-4e5e-9b21-de65c12a4d44",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f2c0134a-9444-4cb8-8151-2afba68710f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b255f586-1d47-425d-b855-36a0b90c379c",
        "cursor": {
          "ref": "2fd0717d-64fd-4b0a-9dda-4c944b41ffbb",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9a1b84f5-3420-4392-a423-90395efcd718"
        },
        "item": {
          "id": "b255f586-1d47-425d-b855-36a0b90c379c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6fbb2b69-2bd8-4e91-8d3d-c2bdf3841834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc72a2a1-fe92-4641-b8ff-5e6967de8b34",
        "cursor": {
          "ref": "4e8ee7c2-b901-4569-ab3e-34a314715268",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9e8e485e-99a3-47b2-b198-2a774fe19fe2"
        },
        "item": {
          "id": "fc72a2a1-fe92-4641-b8ff-5e6967de8b34",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e640d482-08fe-4568-bd08-b45331b6036c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0df143-4205-4c3c-bb9e-2e72de306cc9",
        "cursor": {
          "ref": "f138d5b1-c66b-4d60-acf7-fb1bdb9ceea1",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d74c019c-c17a-4436-a9d4-44b8b80c85c9"
        },
        "item": {
          "id": "bc0df143-4205-4c3c-bb9e-2e72de306cc9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6a473cb8-3d6d-4a37-bcf9-efd9eb79b210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9150d2a3-0a70-44ab-8664-51d13698ef0e",
        "cursor": {
          "ref": "bb59f3c4-35f9-4f4f-a226-9f2e3c16b9c0",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0f60837b-bb6d-4ded-892c-0634b1a4461e"
        },
        "item": {
          "id": "9150d2a3-0a70-44ab-8664-51d13698ef0e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e4326521-b2b6-4882-a2aa-20a3fd0f1b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08a70fd-53a8-4e97-a5e9-5c20d98604ef",
        "cursor": {
          "ref": "ca1e9221-c57b-49f0-93e0-9666b0b276b7",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a4f421fc-a53b-416b-a20a-0c63760df5ab"
        },
        "item": {
          "id": "d08a70fd-53a8-4e97-a5e9-5c20d98604ef",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "78f45a46-6dc7-4f3c-97cd-b64b6619cda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef2f7ce-c591-4dab-bfc8-4e8c3774a930",
        "cursor": {
          "ref": "cce58adc-d041-45ef-9b46-481b6501e3a7",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4b818ed6-f756-4958-a83f-4f9d40353521"
        },
        "item": {
          "id": "4ef2f7ce-c591-4dab-bfc8-4e8c3774a930",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "15cd549d-6861-4e82-9646-ab3fcad84504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcc67b3-47d8-4414-8a7a-16d8de3ee26f",
        "cursor": {
          "ref": "883c3c70-5e48-41c5-99d1-a77c01e206d9",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5c748704-665e-4e9b-8a3a-b89e70af6a20"
        },
        "item": {
          "id": "ffcc67b3-47d8-4414-8a7a-16d8de3ee26f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "09c70df0-6d3c-4a86-a58e-169207c231b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829ce19d-f6c8-4b04-a668-eaacfa007925",
        "cursor": {
          "ref": "e3d417a9-cf11-46ff-b0aa-b046aed02add",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0a7842dc-7797-47af-b5c2-dd2554694ade"
        },
        "item": {
          "id": "829ce19d-f6c8-4b04-a668-eaacfa007925",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ce7e7dce-672f-4487-84fa-93c8e31079f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48aeb9fd-6fd5-40ce-b2cc-d998307cf886",
        "cursor": {
          "ref": "dacd8056-097c-416e-98cc-7614e8105e68",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2e098bd6-a801-4cd7-9107-1512cde8be62"
        },
        "item": {
          "id": "48aeb9fd-6fd5-40ce-b2cc-d998307cf886",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d7c7275a-411b-453d-adad-8691824d831d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f71566-2a58-4e49-a063-2541ae4f6bdd",
        "cursor": {
          "ref": "d53e0abb-70ea-45aa-ac04-13a1e681e239",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c5b4a7a4-1665-4dbd-ac98-1c2ae8bf96df"
        },
        "item": {
          "id": "d7f71566-2a58-4e49-a063-2541ae4f6bdd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fd9d224d-8496-4ce5-a2a1-7194cf8fb1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f82fc0-89da-47ee-9017-4b646433c862",
        "cursor": {
          "ref": "bea5e2cf-e7a0-4964-8253-f7263330eed3",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0199dfa6-c022-45d0-a31f-f136d6f529b4"
        },
        "item": {
          "id": "e4f82fc0-89da-47ee-9017-4b646433c862",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "80b09ccb-0f03-457c-862f-3d32c87d3001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8574b5ac-4d5e-4cea-aef2-921bb61896b8",
        "cursor": {
          "ref": "a38a268f-d7db-4210-9804-ca5a4a13ea19",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "413b227b-bb51-468b-b881-59ac48b27e9b"
        },
        "item": {
          "id": "8574b5ac-4d5e-4cea-aef2-921bb61896b8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "47f90673-e04e-4299-8175-1a05d9868961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf81761-6e98-453c-b9e8-b77595f73d6c",
        "cursor": {
          "ref": "997b0ef4-288a-48d4-8ba3-e21346b53271",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "73c3c0cc-82ed-440b-9e3d-d0782739cb0f"
        },
        "item": {
          "id": "5cf81761-6e98-453c-b9e8-b77595f73d6c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "23a71395-3994-4f07-aa84-59da42cbd444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28e4a37-9fd8-453f-a247-64092db3b87f",
        "cursor": {
          "ref": "abf7721d-4b9b-4268-b0d2-9b0f30d88d85",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "417dea0a-2485-4e5b-8650-95ca96fe89d0"
        },
        "item": {
          "id": "f28e4a37-9fd8-453f-a247-64092db3b87f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1998e0de-f10f-477c-9f3d-f354988061db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691f642f-1ded-4128-996d-571843000f5e",
        "cursor": {
          "ref": "987925e6-95e8-44da-a36e-5715fbb43d87",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8ac59092-2489-4cd9-8e08-7e43bd83f35c"
        },
        "item": {
          "id": "691f642f-1ded-4128-996d-571843000f5e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3b91fb24-01c4-405e-a461-17b3e1a62cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a79ba0f-e864-49cf-a799-d11ef0f3e093",
        "cursor": {
          "ref": "b181a1b4-9225-4cdf-8176-79f9bb054263",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "99b816d9-96e0-4bf2-a549-18aa907b74e3"
        },
        "item": {
          "id": "6a79ba0f-e864-49cf-a799-d11ef0f3e093",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "682b9556-9558-4044-91be-064f6196bc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b14b7b2-14c1-405a-906c-b985731a55b3",
        "cursor": {
          "ref": "d2cc9e34-1953-450a-8a8e-5ce45a0cf09c",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f09da8fa-6303-4cb5-81a9-d1c41b708879"
        },
        "item": {
          "id": "8b14b7b2-14c1-405a-906c-b985731a55b3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c1558534-a650-465a-8ae6-1a4fbd0eeb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81a50bb-be0b-4637-a817-6f57ad46b9d0",
        "cursor": {
          "ref": "65e5c1dc-7636-443e-9d6d-9d6e7b264f40",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dd24bfd0-6680-4a4c-a326-33ac8499c541"
        },
        "item": {
          "id": "a81a50bb-be0b-4637-a817-6f57ad46b9d0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "89550c70-2044-45a4-acd3-1dbb076f4979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa470b1e-956e-4426-8e62-6d84a20f1a90",
        "cursor": {
          "ref": "05a2cfc7-a181-4d6d-a219-70a8e2844891",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "37f959b2-e87b-4806-9bc2-16d94a92fabf"
        },
        "item": {
          "id": "fa470b1e-956e-4426-8e62-6d84a20f1a90",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cbebc6ca-d570-4c07-b37d-21eccd2f9693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1eb9c6e-3e21-4106-a5f9-4bc036decf47",
        "cursor": {
          "ref": "46e08ffa-98a5-471b-b988-89e5525cd6b5",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a86660e4-8cb7-4caf-b60d-e8283da82743"
        },
        "item": {
          "id": "a1eb9c6e-3e21-4106-a5f9-4bc036decf47",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1ae0eafa-c1c2-4119-a77e-0960c7339a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c53ed35-39f5-456f-9eb9-5a4504269bb4",
        "cursor": {
          "ref": "9a3a19b5-8d98-494a-b0a3-0ff92c9adbff",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d80d736d-1542-4ae3-9c8b-af1046a855af"
        },
        "item": {
          "id": "6c53ed35-39f5-456f-9eb9-5a4504269bb4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6f383fec-8c10-4182-8c6f-95587cf05e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb660a6b-88dd-4059-b36f-00a6655fca6a",
        "cursor": {
          "ref": "e2662edd-9690-4eb7-9f31-7d95dd5b8002",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b8d1502f-2c10-4f72-b08e-35519f728e8a"
        },
        "item": {
          "id": "bb660a6b-88dd-4059-b36f-00a6655fca6a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0d8e6214-1d5e-497c-bc6a-5f2b1f6353c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bb6b97-b216-4ebb-9b9c-5be043549f6c",
        "cursor": {
          "ref": "5199623c-f38f-4142-9248-ece9c206edc2",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c1ff1400-78c6-455f-848a-8e07ba07ca3f"
        },
        "item": {
          "id": "57bb6b97-b216-4ebb-9b9c-5be043549f6c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fcc02450-dae3-4a09-aef7-56c9361827e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530b1350-ef8d-4272-86dd-db1aec78db40",
        "cursor": {
          "ref": "12086cb7-55d0-4de9-b688-d3d2d1155ac9",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "98640944-e814-4306-be59-00855bdbf47b"
        },
        "item": {
          "id": "530b1350-ef8d-4272-86dd-db1aec78db40",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fb5ee25e-34c2-46b6-9e87-64ca3e272d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19fb39f-ab00-4e91-9bf5-11d2e55d1bab",
        "cursor": {
          "ref": "30de2932-b3b0-4564-97d5-11e96d04bef6",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "78798bfd-d9fb-4f12-972d-bb1543a0bf69"
        },
        "item": {
          "id": "d19fb39f-ab00-4e91-9bf5-11d2e55d1bab",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8ec6a406-e827-4a47-bf93-91f1765be4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355ed4f7-528e-48b0-ae99-b04c4aafa14e",
        "cursor": {
          "ref": "65c8233b-8b9d-437b-abf2-397b6976afaf",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9417fad5-92ed-4e57-beb3-559f2d184811"
        },
        "item": {
          "id": "355ed4f7-528e-48b0-ae99-b04c4aafa14e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "de693ba8-8cfa-4be9-b864-14cabae23d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94da6db-af46-4f19-b345-e2208f345a6c",
        "cursor": {
          "ref": "9f4bb554-265b-4f70-af9a-76f674330ce8",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fba60925-1133-4465-9ad9-5076039697d3"
        },
        "item": {
          "id": "d94da6db-af46-4f19-b345-e2208f345a6c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0e6bb774-0691-495e-87f7-9664399af706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85f8289-d859-4d1c-a1f5-f97057b0d11f",
        "cursor": {
          "ref": "4d64e351-fba0-4758-9026-660025d45d7b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "daf59709-3df6-492e-9f9d-54b67ba40c2f"
        },
        "item": {
          "id": "b85f8289-d859-4d1c-a1f5-f97057b0d11f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b7c9c143-e52b-450f-932d-16eaa6a553b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed0db12-2509-4d66-b090-501244cbdc14",
        "cursor": {
          "ref": "989266d1-d86d-4316-bb83-5592323226ea",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c5157197-372a-40bd-9d2c-12287c2645e1"
        },
        "item": {
          "id": "6ed0db12-2509-4d66-b090-501244cbdc14",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "260ff35e-af3c-4fe7-bafb-100371483f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd686332-2e45-43b6-ae3e-aa29141b3133",
        "cursor": {
          "ref": "67bdce90-4b60-42e7-83a4-f498aa28d2eb",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f51238c4-f2e9-45ee-a9fe-ba7a773ff3e6"
        },
        "item": {
          "id": "fd686332-2e45-43b6-ae3e-aa29141b3133",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "be58c5fa-7f78-4850-9703-fba328a71229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd8d6bb-2fc4-4426-ad06-2d2bfcfdd4e5",
        "cursor": {
          "ref": "37edc791-67c8-4099-8bad-dce2d790951d",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "306de90f-d26e-4d03-b1e2-214abde5e207"
        },
        "item": {
          "id": "7bd8d6bb-2fc4-4426-ad06-2d2bfcfdd4e5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fa8c7b1f-0fa5-4143-8032-3ca55bc32377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e52c2a5-edbf-4e74-b80a-507d744273bc",
        "cursor": {
          "ref": "aee10900-4d49-42d2-a739-1ad76adb65f0",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "45a9dacd-e041-48c1-b2a8-c6067e67a7f8"
        },
        "item": {
          "id": "5e52c2a5-edbf-4e74-b80a-507d744273bc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "501e90bc-ba69-4aa0-834a-9681d6d386ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbcf602-42ca-4e22-b6d1-ed169cef3ed1",
        "cursor": {
          "ref": "f52ebaf2-e7b1-4c96-a2c2-85aa17364bb4",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fea862d7-4880-4032-af9e-8417bc8fca81"
        },
        "item": {
          "id": "9dbcf602-42ca-4e22-b6d1-ed169cef3ed1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "42f14ea6-a9a1-4c97-907b-5643beaf04c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39edbc40-0f8d-45f5-8bfc-46f9ad61f35e",
        "cursor": {
          "ref": "9741f259-4754-471b-9600-93f77525986a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cc5b441d-6657-48b8-83a9-f70901aae58d"
        },
        "item": {
          "id": "39edbc40-0f8d-45f5-8bfc-46f9ad61f35e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c346ea1a-fca2-4d37-9897-2619ce6a1bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2637629-c5d7-453c-87f0-4fd703167e21",
        "cursor": {
          "ref": "5a22c3e0-6d11-4969-81d2-49e9bf0d5217",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bac33b94-4965-4a00-8298-e5c08ebe9831"
        },
        "item": {
          "id": "c2637629-c5d7-453c-87f0-4fd703167e21",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "71d10ce0-4117-463b-a1dd-2fbd0b05f53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b284d4-25c3-4486-8cf7-3afe158aefb0",
        "cursor": {
          "ref": "bab1e9c3-9907-4052-991e-84f753282886",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d7476f8a-f627-4e87-88ee-190d9d0b50be"
        },
        "item": {
          "id": "03b284d4-25c3-4486-8cf7-3afe158aefb0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "625c1676-0ab7-40a0-a475-4edd9b31493c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2931096c-d032-437e-b35e-68be0c6a7022",
        "cursor": {
          "ref": "35b4087e-08dc-4b60-8ef4-15dcb948a781",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "58ba3c6c-a81c-4e99-bff5-14147d0eafd4"
        },
        "item": {
          "id": "2931096c-d032-437e-b35e-68be0c6a7022",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a62a49cf-06e2-4b36-9c49-1cff8f727fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e0444e-d134-4c15-a4ee-d5c3303f4c89",
        "cursor": {
          "ref": "d6334ec2-1759-45d0-8be0-8769e87df8f3",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "437e37b7-5c18-4c76-9879-f5b2f5391827"
        },
        "item": {
          "id": "a2e0444e-d134-4c15-a4ee-d5c3303f4c89",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "40d0b729-875c-49f0-9f3e-3e248bbae2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536d9fe1-e7b2-4c7c-a2f8-45de02920cf1",
        "cursor": {
          "ref": "cb12ed90-c195-482b-b524-1f02e31b71e3",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "284f2dd2-3663-418a-a2fd-481660c768f9"
        },
        "item": {
          "id": "536d9fe1-e7b2-4c7c-a2f8-45de02920cf1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e4f4e077-6283-4cd9-b590-e1aa4629ba1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9ed286-b089-4025-95ac-5a1084ffb43e",
        "cursor": {
          "ref": "581a2265-abff-4066-b275-49ccc7c423f0",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a52efdfc-05fa-4f14-914b-d1f2b4ea235b"
        },
        "item": {
          "id": "5c9ed286-b089-4025-95ac-5a1084ffb43e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6a910bf0-4536-4442-ac9a-8b4bb03fa694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf042f3-817d-4385-8d7a-27e56c783f8d",
        "cursor": {
          "ref": "7ebe3901-5154-45de-8ea1-7c58b9bbdba8",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "855468a5-4627-4d98-947c-04865fa5ea93"
        },
        "item": {
          "id": "abf042f3-817d-4385-8d7a-27e56c783f8d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "faca0dc9-29fe-4b25-ac42-5b405ab5fe7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd314c9-4154-426d-8a5b-b82419462240",
        "cursor": {
          "ref": "687b6c21-ccae-4e60-9f61-5427427e91d7",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "736c3d00-727f-4929-b7db-a8c3e051c5ae"
        },
        "item": {
          "id": "fdd314c9-4154-426d-8a5b-b82419462240",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "329527ea-9d5a-4024-b3bf-9300770973e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c925b7-b91e-4ccb-93f1-631b366f4b3d",
        "cursor": {
          "ref": "a8d2bad5-b028-4ea8-a061-e91ac61ae363",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "181876af-9afd-44b2-a57f-32d3c68d5bf7"
        },
        "item": {
          "id": "95c925b7-b91e-4ccb-93f1-631b366f4b3d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "184acf95-f12e-4215-af13-4fa05b7e0582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db47b0f-3aa2-4171-9f1a-d146b3d2b13b",
        "cursor": {
          "ref": "09d49e58-ad52-4344-b029-462b52d9f289",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fe257199-679e-442c-9c3f-c0bbb4f52956"
        },
        "item": {
          "id": "7db47b0f-3aa2-4171-9f1a-d146b3d2b13b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "50aafe1f-3dd4-46f7-87be-813eac29139e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d569b7-ea83-4709-bebb-aad702a8846c",
        "cursor": {
          "ref": "a677c251-e917-4345-8bb6-a09b5a4262d9",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "230e85b6-e223-468f-8711-f5b932525c3b"
        },
        "item": {
          "id": "84d569b7-ea83-4709-bebb-aad702a8846c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5032111f-40cb-44e5-9a2a-f0b071d01753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88109987-2d63-484d-8b21-53e6c621d90b",
        "cursor": {
          "ref": "f57928ee-78a5-4c36-a5fa-61e2149ca4ca",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9fa19e2d-22f8-4e79-a289-6e5511c3d214"
        },
        "item": {
          "id": "88109987-2d63-484d-8b21-53e6c621d90b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4ad22e15-a0d9-4ea6-9fa5-ec2e2d580139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ff09b2-25a3-4b7c-b998-93bb1f075ca8",
        "cursor": {
          "ref": "21b90893-f8c1-453a-a450-18b57535970f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ce151e4b-d92b-485f-8dba-f59b8ef6495b"
        },
        "item": {
          "id": "69ff09b2-25a3-4b7c-b998-93bb1f075ca8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3cb278c8-352e-48ab-a457-36735c8e68c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1febe52f-a113-4335-8112-9cce9cebe4b2",
        "cursor": {
          "ref": "1ece2ab8-8da7-413a-bf3e-43c1194d3851",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "861a67a4-3b9c-4752-afc4-d9122120e110"
        },
        "item": {
          "id": "1febe52f-a113-4335-8112-9cce9cebe4b2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1ea09c6b-9530-4274-8d16-38af2dda561c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ee84c3-2e87-4949-9061-b1e419de2638",
        "cursor": {
          "ref": "0b074568-9020-4642-a655-9bfa68a2ecfc",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "65163829-3be7-4803-ba69-9b7b849ded7d"
        },
        "item": {
          "id": "37ee84c3-2e87-4949-9061-b1e419de2638",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "59e7aee6-c416-47de-b2e9-1d402fa0faad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d3cfa3-ea47-4b9e-8c07-41c21f5d7701",
        "cursor": {
          "ref": "1e9b6cb6-b19e-4284-b85e-4d83b6724a2e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "90945591-ff87-46d2-817b-b054c83fdc77"
        },
        "item": {
          "id": "b3d3cfa3-ea47-4b9e-8c07-41c21f5d7701",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f28326d8-9f5e-4eda-8558-37480f5fa162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce378018-88de-4d3c-897b-5aebe3c306a2",
        "cursor": {
          "ref": "63d50ba7-5430-4b3a-9884-f4df597e6e9e",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3c89a096-2e11-4ce2-b736-965d3aaab08c"
        },
        "item": {
          "id": "ce378018-88de-4d3c-897b-5aebe3c306a2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "99e3f696-744e-41e0-8a1b-5942a82dbd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d234326-003e-4027-9d10-ffd0dcbf9015",
        "cursor": {
          "ref": "d31ccc39-3da7-4403-994a-ac288a2b6a50",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b8443577-a0b9-4ed5-b604-68d7c4eccc0e"
        },
        "item": {
          "id": "2d234326-003e-4027-9d10-ffd0dcbf9015",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9b2339c9-899e-46df-86f3-34170c70a483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687bd92f-0410-41ae-8705-90aece98a5c8",
        "cursor": {
          "ref": "084b048b-f276-4058-be1f-35030bb7aa96",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "952435da-b1fe-4978-ac83-a7077af4488f"
        },
        "item": {
          "id": "687bd92f-0410-41ae-8705-90aece98a5c8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "595e4432-d134-4c3a-86ed-70e67f91afd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a216a75-b4e2-4280-a3a1-fb5c5d0f89a1",
        "cursor": {
          "ref": "f11d1184-10f4-497e-837a-ed92c646d4e4",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3d2ccc61-842d-4dcd-a86f-3c74886d03df"
        },
        "item": {
          "id": "0a216a75-b4e2-4280-a3a1-fb5c5d0f89a1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d2b4de54-54cd-49a8-8289-64281f1a4a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f240d3-885f-4281-aa52-0d87f2e2a612",
        "cursor": {
          "ref": "8b985aad-277f-46f0-bdbc-12caafa618f1",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ef0ddd15-2122-43c6-9ac1-9a51228753c7"
        },
        "item": {
          "id": "55f240d3-885f-4281-aa52-0d87f2e2a612",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b0a07da6-97d8-4746-a9e1-43086571c5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6b7f3a-19dc-4863-8890-2b2c0eceac7d",
        "cursor": {
          "ref": "ffe31ccd-6a18-49ab-b1fc-2693816d4c04",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b3d8922f-b52b-4002-8bba-615b4c3493f3"
        },
        "item": {
          "id": "db6b7f3a-19dc-4863-8890-2b2c0eceac7d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e69111ec-9be9-4df5-a32c-5e1a998a1ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d10f82-cbdb-4f7b-87ea-a08bd404ed95",
        "cursor": {
          "ref": "dc0a4ead-e217-42ab-8a7c-3d06e61ed8ac",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "82373909-b76d-46ea-8206-696dbd368d2a"
        },
        "item": {
          "id": "e9d10f82-cbdb-4f7b-87ea-a08bd404ed95",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e732adce-3265-4336-bf6e-24928d386d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c380de8-52ac-47c5-9a36-f1d852dcf227",
        "cursor": {
          "ref": "d94492ef-e966-4c41-a2a5-407f820c376d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3ba60dd6-2d5b-4acc-b6b6-0988a5660176"
        },
        "item": {
          "id": "9c380de8-52ac-47c5-9a36-f1d852dcf227",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "623c035c-ca8d-4821-b1e8-f2663204a88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28a9e2a-980a-42ab-a7b2-8d62181b93bb",
        "cursor": {
          "ref": "59d549f3-9923-41f1-979d-ba21d6823932",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "149c57ea-a6e0-4cf9-9df1-03eef026700a"
        },
        "item": {
          "id": "b28a9e2a-980a-42ab-a7b2-8d62181b93bb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "58fb5e27-69e6-4078-b4f4-296240a9b102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11315ce-6f85-4a2c-83dc-7b72f0121a19",
        "cursor": {
          "ref": "de6cc42d-ca14-4dab-9e8c-c8939f75015d",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "53e03cb1-c3af-42f2-a91b-66bedb491ec0"
        },
        "item": {
          "id": "d11315ce-6f85-4a2c-83dc-7b72f0121a19",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "11678c34-01d7-4d04-b737-37c898000db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e0b82a-901b-4bfb-9fb5-f7e6ed9f9fa8",
        "cursor": {
          "ref": "1963861a-9d64-4211-bfd9-72b35725811c",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "80ffb621-6440-46db-b4f7-b54ac436d097"
        },
        "item": {
          "id": "e5e0b82a-901b-4bfb-9fb5-f7e6ed9f9fa8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "79c28d09-06bc-40a6-817e-1a674da7ce14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715eab71-d952-417b-a0c2-3f6975a61e68",
        "cursor": {
          "ref": "ca245b06-ac70-43f2-8f9c-7dd7e10e947d",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "11e66e72-286b-4264-b170-c80894fb5880"
        },
        "item": {
          "id": "715eab71-d952-417b-a0c2-3f6975a61e68",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "20ce1f37-814d-4833-bfd9-764f7d8419f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9f727c-472b-4621-9f51-afc285c0bc9a",
        "cursor": {
          "ref": "e70eaa75-d54b-473e-b72b-8b738a022c20",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fdf5854e-d39f-438e-993d-71dbf0c73408"
        },
        "item": {
          "id": "ad9f727c-472b-4621-9f51-afc285c0bc9a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3c8dca2e-bc2b-45c4-ac53-d234bc4c7a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4dfea9-5aa9-4cd1-99dd-de6206b9b9f6",
        "cursor": {
          "ref": "c29f5c4b-c170-4513-bbba-467ad39c1cb1",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0d18fb50-0750-45c5-bd21-e86a558a501d"
        },
        "item": {
          "id": "5e4dfea9-5aa9-4cd1-99dd-de6206b9b9f6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b3f7bc5d-0d9b-49ed-9f09-67373056d9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d242d08b-c49d-46b9-9f3a-6026e3e6db19",
        "cursor": {
          "ref": "aa289772-8496-451a-a4f0-e047b133ea4b",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cf3870e5-7ba3-48fd-af05-12cb21b63ee1"
        },
        "item": {
          "id": "d242d08b-c49d-46b9-9f3a-6026e3e6db19",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "749a43c6-e7c4-4d67-b48b-b3d33aa95619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc855a0-feb6-4f7f-880f-9f980286f7b5",
        "cursor": {
          "ref": "b36650f1-e653-42bc-8208-6b70cbf82d7e",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5d88ff09-fed5-4098-b692-c86825469c0d"
        },
        "item": {
          "id": "7dc855a0-feb6-4f7f-880f-9f980286f7b5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bec1e18a-7404-43d3-b224-ac8da4b53449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f35fee8-3dd3-46ae-9680-65ccfda39d6b",
        "cursor": {
          "ref": "20bb0993-414f-4053-a96c-ebce3ca83bd3",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4e599840-5d63-408c-9d49-735ad8197796"
        },
        "item": {
          "id": "7f35fee8-3dd3-46ae-9680-65ccfda39d6b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "48bc0a9a-77e6-44ae-9590-981abb78d6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898b45d0-6eda-47bb-952c-f19f7949ca8c",
        "cursor": {
          "ref": "30231d5b-5ecf-49a6-920e-e81549b98d1b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9d3de8aa-5233-428d-bcc2-18a864507cd2"
        },
        "item": {
          "id": "898b45d0-6eda-47bb-952c-f19f7949ca8c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "afb970da-0387-41b1-89b9-0eb63e35c7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da557b2-e988-488f-a521-65f489ff15e8",
        "cursor": {
          "ref": "9cd3bda5-3c3b-4118-9b41-ab7e21d4dea9",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ffeb4a91-9890-402f-8065-7b9b535b9c86"
        },
        "item": {
          "id": "0da557b2-e988-488f-a521-65f489ff15e8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cae25ec7-01c5-40e1-93d3-9113d5a61ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbc92d0-d217-4fe7-8ebb-385c8ee145a9",
        "cursor": {
          "ref": "e8fbe88a-4313-4fc8-b6d5-bca440d58eac",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c2319468-5ded-4505-b11b-eeeab806ad33"
        },
        "item": {
          "id": "7bbc92d0-d217-4fe7-8ebb-385c8ee145a9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5d08cf91-9fb5-4d07-8f94-9fb517e316c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60676bb-e4f4-4756-945e-47c900a0bed4",
        "cursor": {
          "ref": "4346d094-f4e9-4bd0-9f18-d12011133704",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "32ea5ec4-26c3-49c8-86ac-d1d7f45982c9"
        },
        "item": {
          "id": "e60676bb-e4f4-4756-945e-47c900a0bed4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "49c1f2f9-4c5b-4ff3-986f-7ffd3a58efca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c7c323-8f41-41d1-a0ef-17f44a6f34d9",
        "cursor": {
          "ref": "0ddb28cd-8377-4898-80cf-ca06e3cbdbb0",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4904deec-131b-4d8d-b8e1-3d67d5f4e867"
        },
        "item": {
          "id": "f7c7c323-8f41-41d1-a0ef-17f44a6f34d9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "df0446b4-46dd-4943-b5b2-8287060be4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817e0d4c-6d9c-4f47-bf35-14b2a20433b4",
        "cursor": {
          "ref": "b2bf0e1c-e429-4d2a-9531-55605c1e127f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7c8d152d-c99a-47d7-bad6-f2c6eeb6286e"
        },
        "item": {
          "id": "817e0d4c-6d9c-4f47-bf35-14b2a20433b4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ef05f6d5-235f-40f1-9d2f-ed578be59021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac9f4b5-a4d3-4d3e-af93-da6b76679256",
        "cursor": {
          "ref": "3d4d141d-ef49-473b-870e-c1ccc3aed32e",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b35a15b0-5220-46d3-9394-a23d08cdb00b"
        },
        "item": {
          "id": "dac9f4b5-a4d3-4d3e-af93-da6b76679256",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "775157a8-622d-4c80-aa48-ea889e17afe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e827fcd-2958-4f88-9dff-1f8d2d07a2ab",
        "cursor": {
          "ref": "8ef7d390-2e74-4a1c-bd43-ae5fd4bcdf2e",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2955052f-5587-4fd6-8c30-62a9b74169ad"
        },
        "item": {
          "id": "5e827fcd-2958-4f88-9dff-1f8d2d07a2ab",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0375c2c8-76fd-4fe4-8421-9af42fb8d417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6510cdce-8037-464a-abf3-42059fed2341",
        "cursor": {
          "ref": "dd811a77-ed35-49bc-8d8e-3a25deb09d99",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5da306c5-f21e-4de0-bc32-225007d17cb3"
        },
        "item": {
          "id": "6510cdce-8037-464a-abf3-42059fed2341",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7ac784df-cd0f-444c-b065-d11fe9133615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67d1985-0318-4db5-9626-51d7ed0a842e",
        "cursor": {
          "ref": "58b667f4-67ea-4d95-a3c9-83d7a3f9d3c3",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c5260e02-dd4f-4b6f-9c54-985ad0d11150"
        },
        "item": {
          "id": "f67d1985-0318-4db5-9626-51d7ed0a842e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3b314fd3-db04-4a31-825c-11b852616cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beed6965-43e3-4dd2-a93a-ebe7fa7ea8fb",
        "cursor": {
          "ref": "0d39a968-2c1c-47dd-b946-fcd409276e3f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "08ec92e5-946f-4a00-93b1-4459535cf356"
        },
        "item": {
          "id": "beed6965-43e3-4dd2-a93a-ebe7fa7ea8fb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bce28f2a-4353-43e0-99e6-6b7518dbe5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86436c4-db5e-46bb-b8b2-91da426256ae",
        "cursor": {
          "ref": "2a9a8133-744c-4556-a885-7f5306c26bdb",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5d0f8cd7-ea09-443f-ac38-6a3bd0f626b0"
        },
        "item": {
          "id": "e86436c4-db5e-46bb-b8b2-91da426256ae",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c96862cb-7722-4b33-a85a-f04fbb00df5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82b89fd-46d6-4c81-9b78-29b97fa10c01",
        "cursor": {
          "ref": "397ab639-4a3f-41d3-92de-4501308e85f6",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f68c7cfc-8450-481b-8809-805c04cccfa3"
        },
        "item": {
          "id": "a82b89fd-46d6-4c81-9b78-29b97fa10c01",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "90e634c4-7ff7-4699-a2f4-a9aa16bdb3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30a66d4-ea6f-44fc-b943-57928aab61b3",
        "cursor": {
          "ref": "804af995-f83d-4f74-b1ec-80d8ddd8eacb",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5537b10f-d9dd-45c9-8012-60c795246f4f"
        },
        "item": {
          "id": "e30a66d4-ea6f-44fc-b943-57928aab61b3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b0ddb081-0aab-45a4-935c-df81ee76de35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7aca40-cd43-4ac7-9936-87f5f8c9133b",
        "cursor": {
          "ref": "33401b88-6637-4f14-bc20-53dc974eb80c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b5f7a384-3edd-4a91-a4f1-8875743324bb"
        },
        "item": {
          "id": "7e7aca40-cd43-4ac7-9936-87f5f8c9133b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c599e48e-72c5-4e87-9f36-b6269c3d7c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fc7e7b-ed3f-47f5-8a36-50243c8a282c",
        "cursor": {
          "ref": "10d820c0-f6cb-4eed-8e4d-a0666249e32e",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "649333f0-9def-4226-9d0b-ffbf5116326c"
        },
        "item": {
          "id": "02fc7e7b-ed3f-47f5-8a36-50243c8a282c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fbe8a744-d303-486c-8bb0-0c394abcadfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123256da-f5e2-4836-89b7-2ba5116e1283",
        "cursor": {
          "ref": "0bc54259-1916-4bd9-a107-13b4049e2118",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c290a635-d051-41f8-8e26-1538cd5e16f1"
        },
        "item": {
          "id": "123256da-f5e2-4836-89b7-2ba5116e1283",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d4a8b92a-022b-4654-b919-5ac465f0271f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777218ea-860d-4f44-9939-b3389f616ea2",
        "cursor": {
          "ref": "63b7c575-b1b3-45d9-b107-f9a92322863f",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a774aa44-571f-4002-990e-8d668734ae41"
        },
        "item": {
          "id": "777218ea-860d-4f44-9939-b3389f616ea2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "80eeff63-ed1d-49a4-9cc5-d79c5a1c8816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaee27c0-4b00-4478-bd1f-91bcc29721ad",
        "cursor": {
          "ref": "aa053722-0f43-4bd4-965a-e5bdded9ddb4",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c2f48438-461d-46ee-bfa2-cb76a095db5a"
        },
        "item": {
          "id": "aaee27c0-4b00-4478-bd1f-91bcc29721ad",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a71f73ff-4911-4576-a153-fad1abb8be54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9dc7ac2-b93d-4be6-81ae-3fd1ec2bbb47",
        "cursor": {
          "ref": "b62e2565-2e02-4245-a7c0-d1d768a0267c",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "112374b9-0746-4a04-80b5-7011ceedf4d2"
        },
        "item": {
          "id": "d9dc7ac2-b93d-4be6-81ae-3fd1ec2bbb47",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "383094e7-d91a-4d63-adc3-fb60c942c62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d90329-a1b6-483f-9d75-4c718279cc0b",
        "cursor": {
          "ref": "554a3357-bd71-4d21-a158-e53206a4ab72",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5c55a07f-2427-40a0-9264-3ee7ea4c58dd"
        },
        "item": {
          "id": "94d90329-a1b6-483f-9d75-4c718279cc0b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5ad0c766-3bbc-478a-957f-c868fd603d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5dcf5f-5bf5-4b29-818d-d299c9bc5472",
        "cursor": {
          "ref": "5e11593d-18e1-445e-b572-2316fbfb9919",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6e881329-9862-4b09-94f0-de4e3e721174"
        },
        "item": {
          "id": "6b5dcf5f-5bf5-4b29-818d-d299c9bc5472",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "dc0a87c5-5a5a-4981-98d3-095b062bb4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c506be4d-77d0-456f-9eab-b530230036f4",
        "cursor": {
          "ref": "017b4cee-c7ab-4ac2-b83a-bc679f9c69da",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0cb54258-482f-465e-90a6-4adb67b0ff77"
        },
        "item": {
          "id": "c506be4d-77d0-456f-9eab-b530230036f4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7560562d-32ef-4b0e-a9cf-53741a076ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ea81f5-7e52-4c4f-9e6a-0c8bd70bd3bc",
        "cursor": {
          "ref": "b518f7b0-f826-40b4-a9c8-5afedcb1ecec",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "67e6d766-03aa-432c-a3e6-db79a9f7195f"
        },
        "item": {
          "id": "20ea81f5-7e52-4c4f-9e6a-0c8bd70bd3bc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8a16a8e3-aec5-44bf-85b8-65487b67039e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20341b57-5346-4a2f-bee4-025630e453b2",
        "cursor": {
          "ref": "be191edd-cd43-43f7-a66b-af847f6de195",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f4661e83-2506-4a88-944d-cc922ffcb542"
        },
        "item": {
          "id": "20341b57-5346-4a2f-bee4-025630e453b2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cc4ac868-3d10-4165-8286-358ef1a3614d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea8a856-c379-4db3-b793-13f9cf040c6c",
        "cursor": {
          "ref": "044ff7ce-98ac-4153-bec0-279d91c847cd",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0e30d2f1-98f7-4a3d-adc1-051f352b2642"
        },
        "item": {
          "id": "aea8a856-c379-4db3-b793-13f9cf040c6c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7861b192-ad14-4226-895e-b35b060c4d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2494e1fc-d3a9-46ef-8063-ac331a9a2e1b",
        "cursor": {
          "ref": "fb022451-3590-464f-b8da-2dea040dc606",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "37f10413-61be-42fa-a577-8811e291fa7f"
        },
        "item": {
          "id": "2494e1fc-d3a9-46ef-8063-ac331a9a2e1b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5f222cdc-bed9-413f-bcac-d1d6240d8719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032bc6cb-9c4c-4fb2-9fa2-99b17ac99f93",
        "cursor": {
          "ref": "db361d7f-4875-4091-adb1-fe0270fecf44",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a81bb670-dfae-4305-8154-8534807f2784"
        },
        "item": {
          "id": "032bc6cb-9c4c-4fb2-9fa2-99b17ac99f93",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f874e386-abbd-4f62-99cf-4a2518037169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88819ffd-49ec-4b56-90cd-c1b30ab2355a",
        "cursor": {
          "ref": "4e39cd95-320a-43e6-a746-4d61edcc6914",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a094bd51-dbd6-401e-b176-14ebe8e639da"
        },
        "item": {
          "id": "88819ffd-49ec-4b56-90cd-c1b30ab2355a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d3989f20-3565-4b54-a8c2-dfa4ef8bdb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed07e5a6-a3a5-4838-8c0f-24fa2618b3a2",
        "cursor": {
          "ref": "0a6bd02d-a042-48fb-b2fc-7b30fa9d328e",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "02df433b-f1bd-4814-904a-21328291a37d"
        },
        "item": {
          "id": "ed07e5a6-a3a5-4838-8c0f-24fa2618b3a2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b4919e03-149c-4bcc-8cd0-362d66dfcab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4e9d15-5be9-43e8-be9e-d5a63be29c99",
        "cursor": {
          "ref": "4d641589-ce39-40b9-8951-1c7749c53b56",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c20d0bae-23f0-4fcc-b55c-503345474d48"
        },
        "item": {
          "id": "3e4e9d15-5be9-43e8-be9e-d5a63be29c99",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a454c292-5bbd-4bba-91be-b0cd262be5e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f3b950-873f-4119-803b-36cdd7ffb6e8",
        "cursor": {
          "ref": "d2c0dd66-8120-48a5-bdc8-52250854fff5",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9960d1a8-78d6-4577-8201-7d1f21369569"
        },
        "item": {
          "id": "12f3b950-873f-4119-803b-36cdd7ffb6e8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f3393417-2032-4610-85c2-5d724cd4bb9d",
          "status": "OK",
          "code": 200,
          "responseTime": 161,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "717407be-d543-4293-8f61-9a2d39fad1e7",
        "cursor": {
          "ref": "432aaa33-af5a-4ea7-96c1-90e0cb789455",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5f87b7d5-b1c7-4943-9c42-6f7ddf6e4e7b"
        },
        "item": {
          "id": "717407be-d543-4293-8f61-9a2d39fad1e7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "84ab8003-7f19-435a-a864-cdf9de680285",
          "status": "OK",
          "code": 200,
          "responseTime": 1730,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2ce7b0-4a5e-4e01-a9c8-aa7e6434abde",
        "cursor": {
          "ref": "fcb76120-0dbb-43e0-adc5-2d99a6520892",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2206e4ce-74ea-4b7f-9ad8-0876495b968d"
        },
        "item": {
          "id": "8a2ce7b0-4a5e-4e01-a9c8-aa7e6434abde",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "30b2eade-b9c0-4cd3-aa79-7596872dc757",
          "status": "OK",
          "code": 200,
          "responseTime": 1575,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cadee5-cd49-41c4-8be6-869da3fdf950",
        "cursor": {
          "ref": "7c503264-0021-4680-b59a-7398821dbbd7",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2d44fd97-6549-479c-bae8-8f445fdae87e"
        },
        "item": {
          "id": "42cadee5-cd49-41c4-8be6-869da3fdf950",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "29dc085b-9bfe-43a7-bbd7-daea0342b601",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cadee5-cd49-41c4-8be6-869da3fdf950",
        "cursor": {
          "ref": "7c503264-0021-4680-b59a-7398821dbbd7",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2d44fd97-6549-479c-bae8-8f445fdae87e"
        },
        "item": {
          "id": "42cadee5-cd49-41c4-8be6-869da3fdf950",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "29dc085b-9bfe-43a7-bbd7-daea0342b601",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4d1c4b-6d91-4cb8-9b8a-3ef12ae79730",
        "cursor": {
          "ref": "c4713f24-7ebd-4890-b461-03c23c0b7b33",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "222c2425-9bed-42aa-8874-52823d63845a"
        },
        "item": {
          "id": "9e4d1c4b-6d91-4cb8-9b8a-3ef12ae79730",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "53e9368f-7325-4260-8549-1d06cd46a3fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3daba52f-e066-4980-94e9-679b4254e7b0",
        "cursor": {
          "ref": "0b9cc506-6cdb-4566-926d-2a3220115487",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1b7b5144-44f9-44b9-8058-df1307400ad5"
        },
        "item": {
          "id": "3daba52f-e066-4980-94e9-679b4254e7b0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "408f5f89-5408-4ef3-ba41-0cb2727ef189",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}